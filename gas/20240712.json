{
    "nethermind": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "343.19",
            "p50": "306.01",
            "p95": "157.23",
            "p99": "98.11",
            "min": "90.97",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "977.90",
            "p50": "749.06",
            "p95": "575.87",
            "p99": "561.24",
            "min": "560.05",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "455.06",
            "p50": "396.33",
            "p95": "297.53",
            "p99": "280.23",
            "min": "279.81",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.53",
            "p50": "236.37",
            "p95": "201.40",
            "p99": "191.10",
            "min": "189.62",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "10224.21",
            "p50": "4351.92",
            "p95": "1328.35",
            "p99": "1079.11",
            "min": "1063.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "979.35",
            "p50": "735.39",
            "p95": "482.08",
            "p99": "467.06",
            "min": "464.94",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14591.43",
            "p50": "4408.48",
            "p95": "1178.76",
            "p99": "610.00",
            "min": "304.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21248.43",
            "p50": "4477.84",
            "p95": "1163.91",
            "p99": "954.04",
            "min": "788.38",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1068.13",
            "p50": "798.85",
            "p95": "510.48",
            "p99": "454.04",
            "min": "413.39",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "427.21",
            "p50": "363.47",
            "p95": "273.37",
            "p99": "252.43",
            "min": "251.02",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "240.22",
            "p50": "224.96",
            "p95": "194.80",
            "p99": "178.35",
            "min": "178.12",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.30",
            "p50": "69.37",
            "p95": "65.94",
            "p99": "63.59",
            "min": "63.58",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.53",
            "p50": "76.75",
            "p95": "72.47",
            "p99": "69.73",
            "min": "69.66",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2330.24",
            "p50": "1487.50",
            "p95": "1005.43",
            "p99": "819.81",
            "min": "751.97",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.59",
            "p50": "68.52",
            "p95": "63.73",
            "p99": "62.55",
            "min": "62.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "70.29",
            "p50": "68.47",
            "p95": "64.45",
            "p99": "62.86",
            "min": "62.72",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1457.04",
            "p50": "1124.28",
            "p95": "680.36",
            "p99": "620.69",
            "min": "617.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3592.83",
            "p50": "2197.84",
            "p95": "1130.85",
            "p99": "1096.07",
            "min": "1090.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1503.91",
            "p50": "1120.90",
            "p95": "686.08",
            "p99": "614.74",
            "min": "562.60",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.16",
            "p50": "126.78",
            "p95": "117.83",
            "p99": "123.33",
            "min": "114.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.72",
            "p50": "128.85",
            "p95": "115.82",
            "p99": "121.94",
            "min": "113.44",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "193.40",
            "p50": "172.89",
            "p95": "153.57",
            "p99": "155.41",
            "min": "146.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "194.65",
            "p50": "149.75",
            "p95": "140.60",
            "p99": "163.11",
            "min": "139.31",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "134.86",
            "p50": "122.89",
            "p95": "110.78",
            "p99": "107.85",
            "min": "107.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "155.16",
            "p50": "143.37",
            "p95": "131.12",
            "p99": "122.19",
            "min": "120.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "134.35",
            "p50": "124.24",
            "p95": "116.58",
            "p99": "96.33",
            "min": "93.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "131.58",
            "p50": "124.48",
            "p95": "112.01",
            "p99": "65.46",
            "min": "54.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "826.54",
            "p50": "680.22",
            "p95": "461.29",
            "p99": "372.52",
            "min": "367.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "776.40",
            "p50": "698.26",
            "p95": "461.56",
            "p99": "393.99",
            "min": "367.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "849.67",
            "p50": "711.22",
            "p95": "479.19",
            "p99": "349.33",
            "min": "292.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "771.14",
            "p50": "674.00",
            "p95": "440.74",
            "p99": "310.38",
            "min": "247.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "754.06",
            "p50": "654.97",
            "p95": "427.77",
            "p99": "355.91",
            "min": "355.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "838.70",
            "p50": "701.97",
            "p95": "451.29",
            "p99": "383.56",
            "min": "381.10",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "242.84",
            "p50": "216.69",
            "p95": "168.39",
            "p99": "159.68",
            "min": "159.65",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "243.86",
            "p50": "214.19",
            "p95": "168.93",
            "p99": "70.72",
            "min": "62.22",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "251.82",
            "p50": "220.55",
            "p95": "186.23",
            "p99": "176.39",
            "min": "176.22",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "240.88",
            "p50": "215.97",
            "p95": "179.72",
            "p99": "43.58",
            "min": "34.58",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "238.08",
            "p50": "225.93",
            "p95": "195.82",
            "p99": "180.53",
            "min": "178.83",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "295.76",
            "p50": "267.50",
            "p95": "225.47",
            "p99": "201.91",
            "min": "201.25",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "318.08",
            "p50": "293.97",
            "p95": "238.42",
            "p99": "217.90",
            "min": "217.43",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "452.46",
            "p50": "383.03",
            "p95": "287.58",
            "p99": "260.42",
            "min": "259.68",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "628.00",
            "p50": "591.47",
            "p95": "452.16",
            "p99": "355.87",
            "min": "337.66",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "273.45",
            "p50": "262.12",
            "p95": "213.05",
            "p99": "198.80",
            "min": "198.70",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "254.18",
            "p50": "244.46",
            "p95": "208.16",
            "p99": "83.52",
            "min": "41.76",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "271.97",
            "p50": "253.62",
            "p95": "214.68",
            "p99": "194.64",
            "min": "194.07",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "379.88",
            "p50": "355.90",
            "p95": "285.28",
            "p99": "246.32",
            "min": "245.84",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "238.42",
            "p50": "226.48",
            "p95": "192.46",
            "p99": "139.97",
            "min": "130.58",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "286.48",
            "p50": "266.52",
            "p95": "220.47",
            "p99": "202.17",
            "min": "202.10",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "277.41",
            "p50": "260.00",
            "p95": "221.28",
            "p99": "198.02",
            "min": "197.94",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "223.17",
            "p50": "209.58",
            "p95": "185.32",
            "p99": "169.44",
            "min": "169.34",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "278.41",
            "p50": "260.84",
            "p95": "222.13",
            "p99": "194.45",
            "min": "193.63",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "126.14",
            "p50": "118.89",
            "p95": "107.82",
            "p99": "101.48",
            "min": "100.75",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "126.47",
            "p50": "120.53",
            "p95": "107.61",
            "p99": "103.21",
            "min": "102.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "125.71",
            "p50": "119.61",
            "p95": "108.11",
            "p99": "101.36",
            "min": "100.56",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "390.07",
            "p50": "361.07",
            "p95": "284.64",
            "p99": "247.72",
            "min": "247.54",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "262.14",
            "p50": "244.88",
            "p95": "208.43",
            "p99": "193.67",
            "min": "190.20",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "423.89",
            "p50": "390.12",
            "p95": "301.14",
            "p99": "269.31",
            "min": "268.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "190.86",
            "p50": "170.88",
            "p95": "142.54",
            "p99": "131.24",
            "min": "130.59",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "833.63",
            "p50": "590.46",
            "p95": "438.66",
            "p99": "378.34",
            "min": "362.75",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "245.99",
            "p50": "221.71",
            "p95": "174.36",
            "p99": "154.16",
            "min": "152.64",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "158.72",
            "p50": "145.90",
            "p95": "127.72",
            "p99": "114.75",
            "min": "113.40",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2458.00",
            "p50": "1512.99",
            "p95": "1133.81",
            "p99": "1009.98",
            "min": "963.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "333.98",
            "p50": "291.94",
            "p95": "215.49",
            "p99": "197.33",
            "min": "183.22",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4246.45",
            "p50": "2487.22",
            "p95": "1130.21",
            "p99": "1102.59",
            "min": "1101.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "8638.94",
            "p50": "4461.69",
            "p95": "1168.88",
            "p99": "1120.88",
            "min": "1118.18",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "365.93",
            "p50": "312.87",
            "p95": "224.69",
            "p99": "187.96",
            "min": "183.35",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "167.10",
            "p50": "148.03",
            "p95": "125.37",
            "p99": "113.49",
            "min": "113.05",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "148.01",
            "p50": "135.92",
            "p95": "118.35",
            "p99": "110.87",
            "min": "109.74",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "237.77",
            "p50": "215.94",
            "p95": "172.29",
            "p99": "168.47",
            "min": "168.30",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.38",
            "p50": "48.74",
            "p95": "45.80",
            "p99": "44.88",
            "min": "44.81",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "209.55",
            "p50": "190.10",
            "p95": "156.99",
            "p99": "145.08",
            "min": "140.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "87.09",
            "p50": "83.05",
            "p95": "74.84",
            "p99": "71.06",
            "min": "70.39",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "87.12",
            "p50": "83.01",
            "p95": "75.08",
            "p99": "67.76",
            "min": "67.42",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.69",
            "p50": "89.62",
            "p95": "80.76",
            "p99": "77.33",
            "min": "77.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "217.83",
            "p50": "195.31",
            "p95": "157.18",
            "p99": "150.27",
            "min": "150.05",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.62",
            "p50": "89.21",
            "p95": "80.71",
            "p99": "75.35",
            "min": "75.03",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.43",
            "p50": "102.72",
            "p95": "94.95",
            "p99": "94.67",
            "min": "84.29",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "113.25",
            "p50": "107.53",
            "p95": "97.93",
            "p99": "100.27",
            "min": "93.29",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "272.66",
            "p50": "230.95",
            "p95": "176.44",
            "p99": "171.37",
            "min": "147.61",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "133.21",
            "p50": "119.14",
            "p95": "114.59",
            "p99": "114.98",
            "min": "101.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "483.88",
            "p50": "370.27",
            "p95": "290.27",
            "p99": "250.29",
            "min": "248.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "501.10",
            "p50": "395.97",
            "p95": "275.87",
            "p99": "247.58",
            "min": "245.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "463.55",
            "p50": "375.84",
            "p95": "261.72",
            "p99": "215.50",
            "min": "214.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "443.72",
            "p50": "370.79",
            "p95": "267.40",
            "p99": "203.30",
            "min": "199.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1003.93",
            "p50": "711.85",
            "p95": "516.41",
            "p99": "453.25",
            "min": "449.58",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "805.04",
            "p50": "606.47",
            "p95": "400.82",
            "p99": "387.05",
            "min": "386.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "962.31",
            "p50": "700.80",
            "p95": "483.21",
            "p99": "456.85",
            "min": "446.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "829.97",
            "p50": "612.57",
            "p95": "411.30",
            "p99": "381.60",
            "min": "372.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "871.96",
            "p50": "644.54",
            "p95": "428.60",
            "p99": "375.28",
            "min": "366.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "946.28",
            "p50": "672.16",
            "p95": "483.08",
            "p99": "438.05",
            "min": "431.40",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "401.46",
            "p50": "341.90",
            "p95": "251.07",
            "p99": "231.73",
            "min": "230.92",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "414.77",
            "p50": "330.52",
            "p95": "245.51",
            "p99": "234.13",
            "min": "231.92",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "408.31",
            "p50": "326.62",
            "p95": "240.58",
            "p99": "226.78",
            "min": "225.71",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "447.12",
            "p50": "343.31",
            "p95": "258.82",
            "p99": "218.16",
            "min": "216.69",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "68.38",
            "p50": "66.13",
            "p95": "60.93",
            "p99": "59.73",
            "min": "59.39",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "156.47",
            "p50": "146.72",
            "p95": "124.17",
            "p99": "106.64",
            "min": "102.40",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "153.27",
            "p50": "141.51",
            "p95": "122.88",
            "p99": "118.68",
            "min": "118.27",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "165.19",
            "p50": "153.72",
            "p95": "131.17",
            "p99": "122.90",
            "min": "121.23",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "228.62",
            "p50": "206.37",
            "p95": "168.93",
            "p99": "159.40",
            "min": "158.27",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "144.25",
            "p50": "134.14",
            "p95": "116.59",
            "p99": "112.39",
            "min": "112.25",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "201.85",
            "p50": "182.70",
            "p95": "150.45",
            "p99": "125.89",
            "min": "117.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "162.20",
            "p50": "148.43",
            "p95": "125.76",
            "p99": "112.89",
            "min": "110.67",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.69",
            "p50": "203.63",
            "p95": "165.37",
            "p99": "152.32",
            "min": "149.71",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "108.26",
            "p50": "103.11",
            "p95": "91.44",
            "p99": "81.33",
            "min": "80.08",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "188.63",
            "p50": "176.20",
            "p95": "147.08",
            "p99": "125.35",
            "min": "120.45",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "158.70",
            "p50": "147.98",
            "p95": "124.94",
            "p99": "108.18",
            "min": "106.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "147.86",
            "p50": "136.78",
            "p95": "113.67",
            "p99": "109.93",
            "min": "109.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "189.45",
            "p50": "176.47",
            "p95": "147.12",
            "p99": "131.95",
            "min": "130.88",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "70.14",
            "p50": "68.02",
            "p95": "63.40",
            "p99": "62.31",
            "min": "62.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "71.82",
            "p50": "69.26",
            "p95": "63.43",
            "p99": "61.88",
            "min": "61.70",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "75.82",
            "p50": "73.23",
            "p95": "67.34",
            "p99": "61.40",
            "min": "61.19",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "170.78",
            "p50": "157.46",
            "p95": "131.56",
            "p99": "125.79",
            "min": "125.61",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "195.23",
            "p50": "177.97",
            "p95": "149.01",
            "p99": "123.07",
            "min": "122.82",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.92",
            "p50": "182.34",
            "p95": "148.74",
            "p99": "124.61",
            "min": "121.71",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "719.29",
            "p50": "584.08",
            "p95": "376.27",
            "p99": "370.66",
            "min": "370.53",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1565.11",
            "p50": "1016.84",
            "p95": "961.46",
            "p99": "894.45",
            "min": "881.70",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "851.53",
            "p50": "674.36",
            "p95": "437.67",
            "p99": "435.30",
            "min": "435.16",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "715.96",
            "p50": "576.79",
            "p95": "375.17",
            "p99": "358.19",
            "min": "355.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11368.39",
            "p50": "4933.22",
            "p95": "1209.47",
            "p99": "1171.88",
            "min": "1168.01",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "811.58",
            "p50": "657.19",
            "p95": "431.76",
            "p99": "405.04",
            "min": "405.03",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14177.06",
            "p50": "4912.15",
            "p95": "1407.86",
            "p99": "1203.53",
            "min": "1194.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27393.28",
            "p50": "4928.55",
            "p95": "1234.51",
            "p99": "1214.33",
            "min": "1207.93",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "821.05",
            "p50": "654.87",
            "p95": "417.51",
            "p99": "366.25",
            "min": "358.12",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "439.58",
            "p50": "372.79",
            "p95": "281.20",
            "p99": "267.21",
            "min": "267.16",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "238.09",
            "p50": "219.34",
            "p95": "181.11",
            "p99": "177.07",
            "min": "176.52",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "72.32",
            "p50": "69.83",
            "p95": "65.34",
            "p99": "64.60",
            "min": "64.60",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.84",
            "p50": "76.36",
            "p95": "70.57",
            "p99": "69.42",
            "min": "69.23",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "168.27",
            "p50": "159.22",
            "p95": "141.83",
            "p99": "135.75",
            "min": "135.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.57",
            "p50": "51.21",
            "p95": "49.11",
            "p99": "47.78",
            "min": "47.70",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.15",
            "p50": "51.04",
            "p95": "48.78",
            "p99": "48.20",
            "min": "48.19",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1197.52",
            "p50": "880.27",
            "p95": "589.48",
            "p99": "559.53",
            "min": "557.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5768.10",
            "p50": "2849.84",
            "p95": "1381.65",
            "p99": "1193.33",
            "min": "1188.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1033.68",
            "p50": "788.91",
            "p95": "515.88",
            "p99": "459.87",
            "min": "438.87",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "65.43",
            "p50": "62.03",
            "p95": "60.07",
            "p99": "62.36",
            "min": "60.05",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "70.01",
            "p50": "66.62",
            "p95": "63.54",
            "p99": "65.15",
            "min": "62.52",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "311.78",
            "p50": "269.65",
            "p95": "224.18",
            "p99": "230.42",
            "min": "211.33",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "87.17",
            "p50": "72.77",
            "p95": "68.68",
            "p99": "76.05",
            "min": "67.67",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "466.55",
            "p50": "397.03",
            "p95": "289.72",
            "p99": "280.10",
            "min": "279.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "482.21",
            "p50": "409.39",
            "p95": "298.99",
            "p99": "279.27",
            "min": "277.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "466.17",
            "p50": "397.55",
            "p95": "292.58",
            "p99": "278.70",
            "min": "276.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "462.17",
            "p50": "397.70",
            "p95": "291.57",
            "p99": "275.84",
            "min": "275.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1535.50",
            "p50": "1071.61",
            "p95": "743.44",
            "p99": "670.35",
            "min": "639.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1352.57",
            "p50": "975.96",
            "p95": "654.61",
            "p99": "619.70",
            "min": "619.51",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1524.73",
            "p50": "1060.94",
            "p95": "732.42",
            "p99": "692.80",
            "min": "683.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1341.83",
            "p50": "942.51",
            "p95": "653.44",
            "p99": "597.40",
            "min": "567.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1327.20",
            "p50": "946.30",
            "p95": "650.77",
            "p99": "587.39",
            "min": "561.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1499.10",
            "p50": "1026.23",
            "p95": "740.25",
            "p99": "717.07",
            "min": "711.06",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "398.81",
            "p50": "345.95",
            "p95": "264.17",
            "p99": "260.81",
            "min": "260.69",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "404.10",
            "p50": "351.44",
            "p95": "280.25",
            "p99": "256.78",
            "min": "255.45",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "425.30",
            "p50": "365.41",
            "p95": "275.75",
            "p99": "266.52",
            "min": "265.77",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "403.92",
            "p50": "348.19",
            "p95": "262.57",
            "p99": "258.13",
            "min": "257.90",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "272.89",
            "p50": "246.86",
            "p95": "205.85",
            "p99": "197.04",
            "min": "196.17",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "741.95",
            "p50": "586.99",
            "p95": "385.30",
            "p99": "333.64",
            "min": "327.43",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "795.23",
            "p50": "620.58",
            "p95": "438.38",
            "p99": "386.32",
            "min": "384.28",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.43",
            "p50": "449.10",
            "p95": "343.72",
            "p99": "306.35",
            "min": "306.18",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "916.38",
            "p50": "708.09",
            "p95": "465.30",
            "p99": "412.97",
            "min": "379.69",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "505.54",
            "p50": "426.87",
            "p95": "305.55",
            "p99": "294.62",
            "min": "294.40",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "583.14",
            "p50": "482.94",
            "p95": "334.21",
            "p99": "289.39",
            "min": "286.12",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "724.66",
            "p50": "576.35",
            "p95": "376.49",
            "p99": "362.63",
            "min": "360.64",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "924.94",
            "p50": "716.32",
            "p95": "475.11",
            "p99": "449.64",
            "min": "449.63",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "269.93",
            "p50": "246.23",
            "p95": "209.30",
            "p99": "195.25",
            "min": "194.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "673.46",
            "p50": "553.58",
            "p95": "370.65",
            "p99": "356.65",
            "min": "356.54",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "713.05",
            "p50": "579.70",
            "p95": "397.01",
            "p99": "369.00",
            "min": "368.84",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "240.33",
            "p50": "219.95",
            "p95": "191.45",
            "p99": "178.81",
            "min": "178.70",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "719.43",
            "p50": "582.47",
            "p95": "381.72",
            "p99": "371.19",
            "min": "371.00",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "148.49",
            "p50": "139.46",
            "p95": "124.53",
            "p99": "120.68",
            "min": "120.25",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "151.59",
            "p50": "143.20",
            "p95": "126.33",
            "p99": "125.11",
            "min": "125.10",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "150.85",
            "p50": "143.11",
            "p95": "126.91",
            "p99": "125.45",
            "min": "125.43",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "452.71",
            "p50": "399.92",
            "p95": "311.56",
            "p99": "279.26",
            "min": "277.65",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "710.19",
            "p50": "571.27",
            "p95": "410.38",
            "p99": "368.16",
            "min": "367.53",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "713.72",
            "p50": "580.51",
            "p95": "403.87",
            "p99": "357.77",
            "min": "353.78",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "158.69",
            "p50": "152.51",
            "p95": "136.10",
            "p99": "123.64",
            "min": "123.29",
            "n": "112",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "209.59",
            "p50": "177.97",
            "p95": "145.83",
            "p99": "160.85",
            "min": "141.89",
            "n": "71",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "200.90",
            "p50": "192.97",
            "p95": "168.59",
            "p99": "152.99",
            "min": "152.72",
            "n": "103",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "158.81",
            "p50": "151.38",
            "p95": "140.78",
            "p99": "131.52",
            "min": "131.04",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2192.60",
            "p50": "1451.37",
            "p95": "755.18",
            "p99": "542.38",
            "min": "528.44",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "341.79",
            "p50": "316.04",
            "p95": "267.84",
            "p99": "224.63",
            "min": "220.09",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4204.03",
            "p50": "2142.21",
            "p95": "822.80",
            "p99": "614.60",
            "min": "524.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11530.92",
            "p50": "4035.11",
            "p95": "1108.86",
            "p99": "855.91",
            "min": "711.19",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "334.72",
            "p50": "313.44",
            "p95": "266.77",
            "p99": "210.80",
            "min": "194.47",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "164.23",
            "p50": "155.71",
            "p95": "141.06",
            "p99": "131.23",
            "min": "129.51",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "118.17",
            "p50": "115.25",
            "p95": "106.79",
            "p99": "97.63",
            "min": "95.82",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "238.30",
            "p50": "224.63",
            "p95": "192.15",
            "p99": "172.43",
            "min": "170.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.67",
            "p50": "49.59",
            "p95": "48.11",
            "p99": "46.66",
            "min": "46.64",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "204.40",
            "p50": "195.33",
            "p95": "173.65",
            "p99": "159.42",
            "min": "154.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.22",
            "p50": "84.16",
            "p95": "79.29",
            "p99": "76.91",
            "min": "76.51",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "85.94",
            "p50": "83.87",
            "p95": "79.87",
            "p99": "77.10",
            "min": "76.63",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.63",
            "p50": "90.08",
            "p95": "85.74",
            "p99": "83.36",
            "min": "83.35",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "211.29",
            "p50": "200.46",
            "p95": "174.30",
            "p99": "157.02",
            "min": "155.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.66",
            "p50": "90.00",
            "p95": "85.45",
            "p99": "81.37",
            "min": "80.69",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.17",
            "p50": "104.81",
            "p95": "96.46",
            "p99": "100.29",
            "min": "94.35",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "110.88",
            "p50": "106.88",
            "p95": "101.78",
            "p99": "100.48",
            "min": "94.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "158.78",
            "p50": "151.14",
            "p95": "139.64",
            "p99": "128.42",
            "min": "121.30",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "148.85",
            "p50": "123.95",
            "p95": "117.40",
            "p99": "130.62",
            "min": "116.87",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "240.70",
            "p50": "222.86",
            "p95": "183.79",
            "p99": "174.36",
            "min": "173.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "272.50",
            "p50": "243.42",
            "p95": "209.75",
            "p99": "171.12",
            "min": "170.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "243.08",
            "p50": "224.49",
            "p95": "189.95",
            "p99": "162.79",
            "min": "161.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "245.29",
            "p50": "222.01",
            "p95": "184.48",
            "p99": "167.32",
            "min": "166.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "856.96",
            "p50": "711.84",
            "p95": "502.51",
            "p99": "410.86",
            "min": "394.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.77",
            "p50": "688.03",
            "p95": "531.81",
            "p99": "348.00",
            "min": "322.14",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "815.57",
            "p50": "692.72",
            "p95": "529.06",
            "p99": "464.79",
            "min": "425.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "796.50",
            "p50": "679.26",
            "p95": "515.66",
            "p99": "382.14",
            "min": "376.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "779.76",
            "p50": "661.02",
            "p95": "481.54",
            "p99": "405.79",
            "min": "402.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "796.28",
            "p50": "675.97",
            "p95": "464.95",
            "p99": "383.07",
            "min": "381.12",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "217.19",
            "p50": "199.75",
            "p95": "183.63",
            "p99": "156.07",
            "min": "154.15",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "211.42",
            "p50": "199.78",
            "p95": "166.77",
            "p99": "148.27",
            "min": "147.01",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "221.04",
            "p50": "203.55",
            "p95": "180.17",
            "p99": "171.19",
            "min": "170.10",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "215.99",
            "p50": "204.70",
            "p95": "182.63",
            "p99": "159.58",
            "min": "155.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "89.77",
            "p50": "86.84",
            "p95": "81.60",
            "p99": "78.39",
            "min": "77.58",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "82.61",
            "p50": "80.55",
            "p95": "76.71",
            "p99": "73.86",
            "min": "73.69",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "76.73",
            "p50": "74.87",
            "p95": "71.12",
            "p99": "66.41",
            "min": "65.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "120.03",
            "p50": "116.14",
            "p95": "107.34",
            "p99": "103.71",
            "min": "102.44",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "177.87",
            "p50": "169.02",
            "p95": "151.31",
            "p99": "139.74",
            "min": "138.62",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "120.35",
            "p50": "116.98",
            "p95": "107.12",
            "p99": "102.97",
            "min": "102.60",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "175.79",
            "p50": "167.08",
            "p95": "146.68",
            "p99": "134.31",
            "min": "131.88",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "158.56",
            "p50": "152.75",
            "p95": "137.34",
            "p99": "130.55",
            "min": "130.19",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "176.97",
            "p50": "168.92",
            "p95": "153.25",
            "p99": "148.80",
            "min": "148.68",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "89.55",
            "p50": "86.92",
            "p95": "81.46",
            "p99": "76.89",
            "min": "76.59",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "157.03",
            "p50": "151.77",
            "p95": "140.10",
            "p99": "132.62",
            "min": "132.57",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "134.26",
            "p50": "128.99",
            "p95": "118.22",
            "p99": "103.10",
            "min": "101.16",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "118.25",
            "p50": "114.76",
            "p95": "108.74",
            "p99": "101.20",
            "min": "101.15",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "156.63",
            "p50": "151.35",
            "p95": "136.90",
            "p99": "116.65",
            "min": "112.67",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "63.96",
            "p50": "62.64",
            "p95": "60.16",
            "p99": "58.63",
            "min": "58.60",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "65.28",
            "p50": "63.69",
            "p95": "60.23",
            "p99": "59.27",
            "min": "59.15",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "68.54",
            "p50": "66.88",
            "p95": "63.77",
            "p99": "61.26",
            "min": "61.25",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "144.81",
            "p50": "139.38",
            "p95": "126.82",
            "p99": "101.87",
            "min": "91.31",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "158.13",
            "p50": "151.95",
            "p95": "138.74",
            "p99": "123.35",
            "min": "123.09",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "160.42",
            "p50": "155.08",
            "p95": "140.26",
            "p99": "129.00",
            "min": "128.29",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "84.05",
            "p50": "78.92",
            "p95": "61.82",
            "p99": "58.46",
            "min": "58.19",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "598.70",
            "p50": "411.77",
            "p95": "205.31",
            "p99": "196.04",
            "min": "195.13",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "137.94",
            "p50": "132.32",
            "p95": "121.16",
            "p99": "116.04",
            "min": "115.52",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "87.79",
            "p50": "69.49",
            "p95": "66.01",
            "p99": "63.13",
            "min": "62.98",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3116.90",
            "p50": "2021.67",
            "p95": "1059.12",
            "p99": "721.07",
            "min": "680.64",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "289.67",
            "p50": "247.53",
            "p95": "184.06",
            "p99": "154.68",
            "min": "150.92",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4372.98",
            "p50": "1358.38",
            "p95": "691.24",
            "p99": "624.38",
            "min": "603.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14910.23",
            "p50": "4458.13",
            "p95": "1132.47",
            "p99": "794.36",
            "min": "493.09",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "292.40",
            "p50": "239.51",
            "p95": "200.46",
            "p99": "174.35",
            "min": "166.01",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "230.32",
            "p50": "198.63",
            "p95": "158.09",
            "p99": "137.59",
            "min": "134.12",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "98.03",
            "p50": "91.20",
            "p95": "71.86",
            "p99": "58.27",
            "min": "57.36",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "70.69",
            "p50": "68.89",
            "p95": "64.74",
            "p99": "62.34",
            "min": "61.35",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "54.90",
            "p50": "52.28",
            "p95": "49.33",
            "p99": "45.41",
            "min": "43.53",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1158.54",
            "p50": "803.82",
            "p95": "476.58",
            "p99": "331.13",
            "min": "293.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "67.69",
            "p50": "64.99",
            "p95": "60.59",
            "p99": "56.61",
            "min": "56.01",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.42",
            "p50": "64.47",
            "p95": "60.51",
            "p99": "57.86",
            "min": "57.71",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "868.70",
            "p50": "648.23",
            "p95": "425.45",
            "p99": "365.54",
            "min": "341.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1410.22",
            "p50": "890.15",
            "p95": "526.81",
            "p99": "300.71",
            "min": "298.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "874.73",
            "p50": "673.50",
            "p95": "451.05",
            "p99": "390.13",
            "min": "348.57",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "77.52",
            "p50": "73.42",
            "p95": "70.92",
            "p99": "72.62",
            "min": "68.92",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "69.22",
            "p50": "66.01",
            "p95": "63.03",
            "p99": "64.69",
            "min": "62.25",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "39.99",
            "p50": "38.21",
            "p95": "35.01",
            "p99": "35.39",
            "min": "34.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "99.90",
            "p50": "85.95",
            "p95": "81.92",
            "p99": "89.48",
            "min": "81.61",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "67.20",
            "p50": "64.36",
            "p95": "58.81",
            "p99": "56.62",
            "min": "56.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "64.37",
            "p50": "62.02",
            "p95": "57.64",
            "p99": "55.69",
            "min": "55.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "66.80",
            "p50": "64.17",
            "p95": "58.41",
            "p99": "56.44",
            "min": "56.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "67.17",
            "p50": "64.37",
            "p95": "58.36",
            "p99": "56.74",
            "min": "56.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "247.28",
            "p50": "224.21",
            "p95": "191.58",
            "p99": "177.05",
            "min": "175.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "299.75",
            "p50": "273.09",
            "p95": "229.90",
            "p99": "214.65",
            "min": "211.88",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "248.26",
            "p50": "225.69",
            "p95": "187.01",
            "p99": "175.59",
            "min": "171.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "283.49",
            "p50": "256.61",
            "p95": "215.40",
            "p99": "197.77",
            "min": "194.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "238.53",
            "p50": "219.30",
            "p95": "187.23",
            "p99": "176.24",
            "min": "174.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "245.80",
            "p50": "225.14",
            "p95": "189.12",
            "p99": "178.57",
            "min": "176.97",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "57.07",
            "p50": "55.29",
            "p95": "49.89",
            "p99": "48.16",
            "min": "48.11",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "56.92",
            "p50": "55.00",
            "p95": "49.41",
            "p99": "47.94",
            "min": "47.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "60.43",
            "p50": "57.67",
            "p95": "52.33",
            "p99": "50.45",
            "min": "50.24",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "56.68",
            "p50": "55.28",
            "p95": "49.87",
            "p99": "48.27",
            "min": "48.21",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "100.69",
            "p50": "95.88",
            "p95": "89.76",
            "p99": "87.88",
            "min": "87.59",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "73.19",
            "p50": "68.26",
            "p95": "64.00",
            "p99": "61.58",
            "min": "61.52",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "86.22",
            "p50": "80.55",
            "p95": "75.07",
            "p99": "72.62",
            "min": "72.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "173.29",
            "p50": "163.93",
            "p95": "146.47",
            "p99": "140.95",
            "min": "140.44",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "165.97",
            "p50": "156.62",
            "p95": "138.21",
            "p99": "129.89",
            "min": "125.47",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "98.36",
            "p50": "94.16",
            "p95": "88.30",
            "p99": "86.60",
            "min": "86.58",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "91.76",
            "p50": "80.33",
            "p95": "75.51",
            "p99": "73.81",
            "min": "73.81",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "88.77",
            "p50": "85.88",
            "p95": "79.99",
            "p99": "78.26",
            "min": "78.22",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "127.96",
            "p50": "122.10",
            "p95": "111.64",
            "p99": "108.58",
            "min": "108.55",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "98.41",
            "p50": "94.96",
            "p95": "88.13",
            "p99": "84.78",
            "min": "84.19",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "74.98",
            "p50": "72.20",
            "p95": "68.20",
            "p99": "65.11",
            "min": "64.66",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "99.36",
            "p50": "94.84",
            "p95": "88.70",
            "p99": "86.43",
            "min": "86.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "98.59",
            "p50": "94.43",
            "p95": "87.92",
            "p99": "86.93",
            "min": "86.82",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "81.14",
            "p50": "77.91",
            "p95": "73.96",
            "p99": "70.67",
            "min": "70.32",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "62.00",
            "p50": "59.93",
            "p95": "57.36",
            "p99": "56.52",
            "min": "56.40",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "61.71",
            "p50": "59.72",
            "p95": "57.01",
            "p99": "54.80",
            "min": "54.63",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "60.98",
            "p50": "59.21",
            "p95": "56.57",
            "p99": "55.39",
            "min": "55.36",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "168.15",
            "p50": "158.69",
            "p95": "139.49",
            "p99": "129.53",
            "min": "125.65",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "75.36",
            "p50": "72.27",
            "p95": "68.36",
            "p99": "67.09",
            "min": "67.09",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "103.35",
            "p50": "98.92",
            "p95": "91.27",
            "p99": "89.71",
            "min": "89.57",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    }
}