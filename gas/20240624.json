{
    "nethermind": [
        {
            "title": "GasLimit",
            "max": "347.12",
            "p50": "297.97",
            "p95": "168.36",
            "p99": "145.57",
            "min": "142.83",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "832.69",
            "p50": "653.79",
            "p95": "514.93",
            "p99": "501.89",
            "min": "500.47",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "454.53",
            "p50": "389.36",
            "p95": "310.84",
            "p99": "265.21",
            "min": "258.21",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "278.18",
            "p50": "253.67",
            "p95": "203.06",
            "p99": "186.11",
            "min": "183.86",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8001.61",
            "p50": "4361.73",
            "p95": "1116.82",
            "p99": "913.42",
            "min": "711.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1163.93",
            "p50": "860.06",
            "p95": "550.98",
            "p99": "473.73",
            "min": "404.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14771.03",
            "p50": "4444.22",
            "p95": "1284.14",
            "p99": "824.74",
            "min": "517.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22770.30",
            "p50": "4423.50",
            "p95": "1118.18",
            "p99": "943.75",
            "min": "831.26",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1292.56",
            "p50": "925.59",
            "p95": "621.19",
            "p99": "578.42",
            "min": "576.79",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "470.52",
            "p50": "390.34",
            "p95": "293.07",
            "p99": "266.42",
            "min": "266.00",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "241.68",
            "p50": "227.23",
            "p95": "200.45",
            "p99": "176.05",
            "min": "174.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "71.24",
            "p50": "69.50",
            "p95": "66.07",
            "p99": "64.01",
            "min": "63.91",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "80.43",
            "p50": "76.46",
            "p95": "71.74",
            "p99": "69.19",
            "min": "69.06",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2180.09",
            "p50": "1437.63",
            "p95": "1025.57",
            "p99": "958.16",
            "min": "929.40",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.98",
            "p50": "68.64",
            "p95": "63.48",
            "p99": "62.49",
            "min": "62.32",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "70.60",
            "p50": "68.68",
            "p95": "65.69",
            "p99": "63.25",
            "min": "63.22",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1413.97",
            "p50": "1063.61",
            "p95": "659.54",
            "p99": "637.74",
            "min": "630.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3374.64",
            "p50": "1999.21",
            "p95": "1267.37",
            "p99": "1112.46",
            "min": "1110.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1442.42",
            "p50": "1065.79",
            "p95": "667.80",
            "p99": "640.41",
            "min": "626.44",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "135.52",
            "p50": "125.72",
            "p95": "115.61",
            "p99": "123.67",
            "min": "114.72",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "136.43",
            "p50": "130.45",
            "p95": "116.52",
            "p99": "121.30",
            "min": "113.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "171.47",
            "p50": "157.78",
            "p95": "140.58",
            "p99": "144.04",
            "min": "137.61",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "196.79",
            "p50": "151.52",
            "p95": "140.46",
            "p99": "164.36",
            "min": "139.89",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "129.67",
            "p50": "122.15",
            "p95": "110.46",
            "p99": "106.53",
            "min": "106.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "150.05",
            "p50": "141.16",
            "p95": "126.34",
            "p99": "121.04",
            "min": "120.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "129.94",
            "p50": "123.06",
            "p95": "111.54",
            "p99": "105.80",
            "min": "105.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "130.98",
            "p50": "123.05",
            "p95": "113.60",
            "p99": "106.61",
            "min": "106.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "760.75",
            "p50": "623.71",
            "p95": "456.77",
            "p99": "349.77",
            "min": "337.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "789.46",
            "p50": "649.38",
            "p95": "459.69",
            "p99": "371.86",
            "min": "371.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "697.77",
            "p50": "604.59",
            "p95": "397.84",
            "p99": "348.50",
            "min": "346.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "770.06",
            "p50": "663.79",
            "p95": "466.85",
            "p99": "362.99",
            "min": "355.21",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "229.05",
            "p50": "208.94",
            "p95": "166.62",
            "p99": "111.46",
            "min": "97.38",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "226.50",
            "p50": "211.55",
            "p95": "178.58",
            "p99": "166.65",
            "min": "166.56",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "237.69",
            "p50": "212.53",
            "p95": "182.97",
            "p99": "65.07",
            "min": "36.89",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "224.85",
            "p50": "209.21",
            "p95": "178.38",
            "p99": "57.69",
            "min": "54.13",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "237.77",
            "p50": "224.65",
            "p95": "193.44",
            "p99": "178.14",
            "min": "177.96",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "299.32",
            "p50": "270.74",
            "p95": "221.61",
            "p99": "205.60",
            "min": "203.20",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "325.18",
            "p50": "291.96",
            "p95": "237.66",
            "p99": "205.99",
            "min": "202.57",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "405.85",
            "p50": "380.51",
            "p95": "291.88",
            "p99": "258.99",
            "min": "256.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "641.76",
            "p50": "557.98",
            "p95": "385.47",
            "p99": "336.39",
            "min": "335.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "293.15",
            "p50": "262.38",
            "p95": "173.38",
            "p99": "98.04",
            "min": "82.07",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "255.55",
            "p50": "238.73",
            "p95": "204.55",
            "p99": "100.83",
            "min": "65.50",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "269.72",
            "p50": "246.58",
            "p95": "205.50",
            "p99": "196.73",
            "min": "195.60",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "392.36",
            "p50": "352.81",
            "p95": "266.25",
            "p99": "95.03",
            "min": "80.38",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "237.09",
            "p50": "222.75",
            "p95": "193.16",
            "p99": "157.35",
            "min": "151.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "291.15",
            "p50": "266.42",
            "p95": "213.61",
            "p99": "187.68",
            "min": "186.12",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "276.53",
            "p50": "252.35",
            "p95": "207.83",
            "p99": "196.61",
            "min": "196.50",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "231.37",
            "p50": "209.22",
            "p95": "177.97",
            "p99": "142.82",
            "min": "137.52",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "288.91",
            "p50": "262.67",
            "p95": "217.76",
            "p99": "194.04",
            "min": "191.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "128.22",
            "p50": "120.24",
            "p95": "110.24",
            "p99": "104.38",
            "min": "104.04",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "128.28",
            "p50": "121.03",
            "p95": "112.53",
            "p99": "107.61",
            "min": "107.15",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "128.17",
            "p50": "120.89",
            "p95": "110.75",
            "p99": "105.61",
            "min": "105.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "389.81",
            "p50": "350.68",
            "p95": "271.62",
            "p99": "250.66",
            "min": "250.29",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "269.10",
            "p50": "245.15",
            "p95": "205.46",
            "p99": "193.40",
            "min": "193.31",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "419.63",
            "p50": "379.36",
            "p95": "293.31",
            "p99": "265.73",
            "min": "264.93",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "geth": [
        {
            "title": "GasLimit",
            "max": "189.06",
            "p50": "172.49",
            "p95": "148.26",
            "p99": "125.36",
            "min": "125.35",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "893.17",
            "p50": "607.02",
            "p95": "451.22",
            "p99": "389.21",
            "min": "381.82",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "254.69",
            "p50": "223.21",
            "p95": "178.93",
            "p99": "152.91",
            "min": "147.29",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "159.67",
            "p50": "149.36",
            "p95": "125.22",
            "p99": "116.16",
            "min": "115.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2758.87",
            "p50": "1574.21",
            "p95": "1113.34",
            "p99": "1045.82",
            "min": "1025.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "338.82",
            "p50": "298.35",
            "p95": "226.54",
            "p99": "191.74",
            "min": "165.25",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4546.45",
            "p50": "2584.71",
            "p95": "1129.04",
            "p99": "1088.73",
            "min": "1072.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "9154.00",
            "p50": "4482.06",
            "p95": "1127.94",
            "p99": "1113.07",
            "min": "1110.38",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "331.78",
            "p50": "286.47",
            "p95": "223.49",
            "p99": "205.55",
            "min": "198.65",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "177.27",
            "p50": "162.86",
            "p95": "138.68",
            "p99": "123.72",
            "min": "118.69",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "139.24",
            "p50": "131.37",
            "p95": "112.89",
            "p99": "109.83",
            "min": "109.58",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "237.80",
            "p50": "216.85",
            "p95": "171.40",
            "p99": "140.66",
            "min": "139.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "51.31",
            "p50": "48.90",
            "p95": "45.73",
            "p99": "43.72",
            "min": "43.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "209.71",
            "p50": "193.07",
            "p95": "154.91",
            "p99": "140.05",
            "min": "137.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "87.24",
            "p50": "83.34",
            "p95": "76.19",
            "p99": "73.56",
            "min": "73.28",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "88.24",
            "p50": "83.25",
            "p95": "76.16",
            "p99": "71.30",
            "min": "71.21",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "94.28",
            "p50": "89.72",
            "p95": "81.02",
            "p99": "79.41",
            "min": "79.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "217.41",
            "p50": "197.42",
            "p95": "161.28",
            "p99": "126.90",
            "min": "125.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.93",
            "p50": "89.09",
            "p95": "81.08",
            "p99": "75.06",
            "min": "71.58",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "110.48",
            "p50": "102.51",
            "p95": "95.10",
            "p99": "99.86",
            "min": "91.85",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "113.82",
            "p50": "107.82",
            "p95": "98.22",
            "p99": "95.97",
            "min": "86.35",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "269.14",
            "p50": "238.56",
            "p95": "159.33",
            "p99": "172.94",
            "min": "150.37",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "131.57",
            "p50": "118.05",
            "p95": "108.10",
            "p99": "112.52",
            "min": "98.14",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "464.01",
            "p50": "370.13",
            "p95": "287.21",
            "p99": "231.37",
            "min": "226.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "480.70",
            "p50": "390.08",
            "p95": "269.40",
            "p99": "235.30",
            "min": "235.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "457.96",
            "p50": "379.96",
            "p95": "276.09",
            "p99": "232.54",
            "min": "228.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "479.60",
            "p50": "376.07",
            "p95": "264.92",
            "p99": "221.50",
            "min": "219.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1010.72",
            "p50": "721.40",
            "p95": "508.52",
            "p99": "456.55",
            "min": "455.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "976.11",
            "p50": "700.92",
            "p95": "490.10",
            "p99": "468.57",
            "min": "456.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "883.68",
            "p50": "639.21",
            "p95": "435.77",
            "p99": "415.04",
            "min": "408.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "981.55",
            "p50": "669.76",
            "p95": "481.54",
            "p99": "422.73",
            "min": "412.24",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "404.63",
            "p50": "346.86",
            "p95": "260.58",
            "p99": "242.55",
            "min": "239.59",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "404.67",
            "p50": "335.12",
            "p95": "249.80",
            "p99": "204.69",
            "min": "204.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "458.59",
            "p50": "335.01",
            "p95": "234.09",
            "p99": "208.80",
            "min": "207.87",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "437.75",
            "p50": "353.05",
            "p95": "254.95",
            "p99": "234.78",
            "min": "233.41",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "83.11",
            "p50": "79.23",
            "p95": "72.87",
            "p99": "69.43",
            "min": "68.99",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "161.44",
            "p50": "148.85",
            "p95": "127.76",
            "p99": "108.12",
            "min": "103.75",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "153.87",
            "p50": "143.70",
            "p95": "123.39",
            "p99": "117.71",
            "min": "117.11",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "173.48",
            "p50": "159.11",
            "p95": "130.14",
            "p99": "123.21",
            "min": "121.02",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "236.83",
            "p50": "214.11",
            "p95": "171.84",
            "p99": "163.25",
            "min": "161.72",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "146.43",
            "p50": "134.23",
            "p95": "116.16",
            "p99": "108.70",
            "min": "107.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "205.07",
            "p50": "185.97",
            "p95": "153.57",
            "p99": "135.66",
            "min": "131.26",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "160.51",
            "p50": "148.48",
            "p95": "125.86",
            "p99": "122.12",
            "min": "122.03",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "230.62",
            "p50": "209.52",
            "p95": "167.24",
            "p99": "145.34",
            "min": "144.33",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "107.17",
            "p50": "101.14",
            "p95": "90.87",
            "p99": "85.95",
            "min": "85.37",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "191.97",
            "p50": "180.02",
            "p95": "146.95",
            "p99": "131.67",
            "min": "129.65",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "160.40",
            "p50": "148.73",
            "p95": "122.67",
            "p99": "114.30",
            "min": "113.40",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "140.31",
            "p50": "132.32",
            "p95": "115.65",
            "p99": "99.43",
            "min": "98.59",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "190.28",
            "p50": "178.33",
            "p95": "148.39",
            "p99": "120.90",
            "min": "116.31",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "70.34",
            "p50": "67.90",
            "p95": "62.70",
            "p99": "62.13",
            "min": "62.13",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "71.40",
            "p50": "69.06",
            "p95": "63.88",
            "p99": "62.80",
            "min": "62.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "75.93",
            "p50": "73.20",
            "p95": "67.62",
            "p99": "65.79",
            "min": "65.74",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "171.47",
            "p50": "158.49",
            "p95": "127.87",
            "p99": "118.80",
            "min": "117.34",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "195.69",
            "p50": "180.05",
            "p95": "150.49",
            "p99": "128.21",
            "min": "119.78",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "200.26",
            "p50": "183.89",
            "p95": "151.57",
            "p99": "127.40",
            "min": "120.23",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "reth": [
        {
            "title": "GasLimit",
            "max": "334.27",
            "p50": "293.35",
            "p95": "236.15",
            "p99": "222.36",
            "min": "221.64",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "1666.11",
            "p50": "1083.99",
            "p95": "970.54",
            "p99": "933.33",
            "min": "923.37",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "433.34",
            "p50": "347.67",
            "p95": "270.50",
            "p99": "244.87",
            "min": "244.68",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "337.03",
            "p50": "297.22",
            "p95": "236.52",
            "p99": "209.69",
            "min": "209.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12270.41",
            "p50": "4871.15",
            "p95": "1121.49",
            "p99": "1030.86",
            "min": "1029.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "854.48",
            "p50": "677.96",
            "p95": "452.25",
            "p99": "425.40",
            "min": "423.86",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "12514.20",
            "p50": "4926.54",
            "p95": "1241.76",
            "p99": "1208.63",
            "min": "1199.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22768.49",
            "p50": "4919.23",
            "p95": "1294.30",
            "p99": "1151.19",
            "min": "1129.86",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "846.55",
            "p50": "679.26",
            "p95": "459.08",
            "p99": "414.09",
            "min": "410.22",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "437.62",
            "p50": "370.37",
            "p95": "284.11",
            "p99": "263.28",
            "min": "261.01",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "175.20",
            "p50": "162.58",
            "p95": "141.92",
            "p99": "137.64",
            "min": "137.21",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "70.78",
            "p50": "69.03",
            "p95": "64.56",
            "p99": "63.50",
            "min": "63.41",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "80.71",
            "p50": "76.47",
            "p95": "71.57",
            "p99": "69.64",
            "min": "69.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "164.62",
            "p50": "156.35",
            "p95": "140.26",
            "p99": "132.80",
            "min": "132.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "53.07",
            "p50": "51.65",
            "p95": "49.71",
            "p99": "48.24",
            "min": "48.07",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.84",
            "p50": "51.74",
            "p95": "49.58",
            "p99": "48.46",
            "min": "48.33",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1138.50",
            "p50": "850.24",
            "p95": "564.01",
            "p99": "539.79",
            "min": "533.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "4604.37",
            "p50": "2311.49",
            "p95": "1235.63",
            "p99": "1124.22",
            "min": "1120.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "990.63",
            "p50": "760.95",
            "p95": "489.76",
            "p99": "468.59",
            "min": "462.51",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "65.49",
            "p50": "61.87",
            "p95": "59.99",
            "p99": "62.16",
            "min": "59.65",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "68.08",
            "p50": "65.47",
            "p95": "62.20",
            "p99": "63.81",
            "min": "61.51",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "165.09",
            "p50": "151.52",
            "p95": "133.42",
            "p99": "138.25",
            "min": "131.95",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "87.07",
            "p50": "72.96",
            "p95": "68.81",
            "p99": "76.10",
            "min": "67.82",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "271.44",
            "p50": "231.68",
            "p95": "197.06",
            "p99": "190.92",
            "min": "190.89",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "298.92",
            "p50": "258.20",
            "p95": "215.75",
            "p99": "205.50",
            "min": "205.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "274.97",
            "p50": "240.31",
            "p95": "201.34",
            "p99": "190.81",
            "min": "190.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "269.12",
            "p50": "237.19",
            "p95": "203.26",
            "p99": "191.43",
            "min": "190.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "988.62",
            "p50": "772.08",
            "p95": "503.26",
            "p99": "474.90",
            "min": "472.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "983.50",
            "p50": "749.16",
            "p95": "500.06",
            "p99": "468.77",
            "min": "464.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "996.83",
            "p50": "769.99",
            "p95": "504.70",
            "p99": "440.25",
            "min": "431.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "977.70",
            "p50": "742.11",
            "p95": "499.00",
            "p99": "460.37",
            "min": "450.55",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "218.41",
            "p50": "194.45",
            "p95": "172.42",
            "p99": "165.20",
            "min": "164.36",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "221.64",
            "p50": "194.88",
            "p95": "171.69",
            "p99": "157.23",
            "min": "156.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "236.24",
            "p50": "209.57",
            "p95": "180.32",
            "p99": "170.68",
            "min": "170.50",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "218.04",
            "p50": "192.28",
            "p95": "171.18",
            "p99": "169.93",
            "min": "169.85",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "191.07",
            "p50": "178.05",
            "p95": "155.78",
            "p99": "150.20",
            "min": "150.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "400.57",
            "p50": "326.33",
            "p95": "255.23",
            "p99": "232.61",
            "min": "231.83",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "425.43",
            "p50": "370.97",
            "p95": "277.37",
            "p99": "269.90",
            "min": "268.83",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "188.04",
            "p50": "176.66",
            "p95": "156.53",
            "p99": "148.70",
            "min": "148.65",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "373.86",
            "p50": "320.45",
            "p95": "246.09",
            "p99": "229.27",
            "min": "227.88",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "292.65",
            "p50": "266.30",
            "p95": "215.80",
            "p99": "207.18",
            "min": "206.55",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "507.22",
            "p50": "401.80",
            "p95": "303.58",
            "p99": "272.92",
            "min": "265.69",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "338.43",
            "p50": "296.47",
            "p95": "234.67",
            "p99": "212.02",
            "min": "210.04",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "372.01",
            "p50": "325.68",
            "p95": "261.79",
            "p99": "236.97",
            "min": "230.45",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "190.84",
            "p50": "177.20",
            "p95": "153.16",
            "p99": "149.95",
            "min": "149.72",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "337.47",
            "p50": "294.58",
            "p95": "233.02",
            "p99": "211.49",
            "min": "208.12",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "340.22",
            "p50": "298.96",
            "p95": "236.17",
            "p99": "232.68",
            "min": "232.48",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "177.69",
            "p50": "166.45",
            "p95": "146.47",
            "p99": "141.24",
            "min": "140.67",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "336.50",
            "p50": "297.23",
            "p95": "226.24",
            "p99": "206.43",
            "min": "205.94",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "143.78",
            "p50": "133.46",
            "p95": "120.64",
            "p99": "117.29",
            "min": "116.94",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "143.85",
            "p50": "134.82",
            "p95": "120.37",
            "p99": "118.37",
            "min": "117.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "144.93",
            "p50": "134.78",
            "p95": "119.86",
            "p99": "117.18",
            "min": "117.03",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "275.80",
            "p50": "247.54",
            "p95": "210.69",
            "p99": "196.14",
            "min": "195.34",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "337.09",
            "p50": "302.62",
            "p95": "241.23",
            "p99": "229.44",
            "min": "227.99",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "335.55",
            "p50": "299.17",
            "p95": "235.79",
            "p99": "213.58",
            "min": "207.24",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "besu": [
        {
            "title": "GasLimit",
            "max": "84.15",
            "p50": "80.04",
            "p95": "61.42",
            "p99": "60.69",
            "min": "60.69",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "610.47",
            "p50": "404.29",
            "p95": "202.55",
            "p99": "193.02",
            "min": "192.81",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "138.03",
            "p50": "131.54",
            "p95": "118.89",
            "p99": "114.83",
            "min": "114.71",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "88.86",
            "p50": "69.57",
            "p95": "65.54",
            "p99": "64.34",
            "min": "64.18",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2790.22",
            "p50": "1946.81",
            "p95": "991.26",
            "p99": "697.24",
            "min": "665.99",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "301.85",
            "p50": "247.48",
            "p95": "201.31",
            "p99": "166.32",
            "min": "159.45",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4200.21",
            "p50": "1443.14",
            "p95": "610.56",
            "p99": "541.98",
            "min": "533.40",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17528.59",
            "p50": "4421.20",
            "p95": "1366.95",
            "p99": "1109.45",
            "min": "1100.91",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "290.99",
            "p50": "235.57",
            "p95": "197.27",
            "p99": "170.32",
            "min": "169.79",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "229.37",
            "p50": "198.53",
            "p95": "154.01",
            "p99": "130.95",
            "min": "125.82",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "97.32",
            "p50": "92.02",
            "p95": "75.15",
            "p99": "57.73",
            "min": "54.33",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "71.29",
            "p50": "69.02",
            "p95": "65.23",
            "p99": "63.49",
            "min": "63.44",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "54.95",
            "p50": "52.70",
            "p95": "50.21",
            "p99": "44.00",
            "min": "40.77",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1137.78",
            "p50": "812.57",
            "p95": "525.72",
            "p99": "270.37",
            "min": "265.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "66.92",
            "p50": "64.20",
            "p95": "59.02",
            "p99": "57.06",
            "min": "57.03",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.79",
            "p50": "64.11",
            "p95": "58.38",
            "p99": "56.14",
            "min": "56.14",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "887.22",
            "p50": "642.43",
            "p95": "398.99",
            "p99": "301.75",
            "min": "281.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1356.30",
            "p50": "858.86",
            "p95": "578.78",
            "p99": "446.25",
            "min": "439.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "889.13",
            "p50": "678.99",
            "p95": "441.46",
            "p99": "276.96",
            "min": "240.94",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "77.73",
            "p50": "73.96",
            "p95": "71.14",
            "p99": "73.70",
            "min": "70.67",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "69.75",
            "p50": "66.75",
            "p95": "63.47",
            "p99": "65.13",
            "min": "62.65",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "41.33",
            "p50": "39.17",
            "p95": "35.25",
            "p99": "36.00",
            "min": "34.75",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "106.99",
            "p50": "87.33",
            "p95": "82.44",
            "p99": "92.30",
            "min": "81.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "69.27",
            "p50": "64.56",
            "p95": "58.68",
            "p99": "54.27",
            "min": "53.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "65.93",
            "p50": "62.09",
            "p95": "57.14",
            "p99": "55.98",
            "min": "55.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "69.29",
            "p50": "64.17",
            "p95": "58.83",
            "p99": "56.28",
            "min": "56.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "68.86",
            "p50": "64.76",
            "p95": "58.93",
            "p99": "56.12",
            "min": "55.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "253.08",
            "p50": "225.48",
            "p95": "193.21",
            "p99": "180.99",
            "min": "180.70",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "253.47",
            "p50": "228.60",
            "p95": "191.17",
            "p99": "171.35",
            "min": "162.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "243.84",
            "p50": "220.98",
            "p95": "187.85",
            "p99": "174.14",
            "min": "171.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "255.02",
            "p50": "227.44",
            "p95": "189.64",
            "p99": "179.68",
            "min": "177.77",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "59.38",
            "p50": "55.24",
            "p95": "49.48",
            "p99": "48.03",
            "min": "47.97",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "59.63",
            "p50": "55.29",
            "p95": "49.69",
            "p99": "47.75",
            "min": "47.75",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "63.15",
            "p50": "58.15",
            "p95": "52.01",
            "p99": "50.53",
            "min": "50.42",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "59.82",
            "p50": "55.44",
            "p95": "49.48",
            "p99": "48.55",
            "min": "48.52",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "100.69",
            "p50": "95.33",
            "p95": "89.11",
            "p99": "87.44",
            "min": "87.39",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "81.27",
            "p50": "74.66",
            "p95": "64.91",
            "p99": "61.62",
            "min": "61.09",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "81.58",
            "p50": "73.13",
            "p95": "67.61",
            "p99": "64.14",
            "min": "63.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "177.50",
            "p50": "164.01",
            "p95": "147.32",
            "p99": "140.29",
            "min": "139.92",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "168.53",
            "p50": "157.06",
            "p95": "139.16",
            "p99": "134.81",
            "min": "134.68",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "96.91",
            "p50": "92.80",
            "p95": "87.50",
            "p99": "84.52",
            "min": "84.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "85.09",
            "p50": "78.68",
            "p95": "73.67",
            "p99": "71.15",
            "min": "70.82",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "88.85",
            "p50": "85.37",
            "p95": "79.51",
            "p99": "77.49",
            "min": "77.12",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "128.71",
            "p50": "120.80",
            "p95": "110.76",
            "p99": "105.64",
            "min": "105.37",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "99.66",
            "p50": "94.43",
            "p95": "87.77",
            "p99": "85.82",
            "min": "85.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "75.30",
            "p50": "72.15",
            "p95": "68.18",
            "p99": "63.74",
            "min": "62.91",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "98.31",
            "p50": "94.46",
            "p95": "88.83",
            "p99": "86.00",
            "min": "85.99",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "98.44",
            "p50": "94.19",
            "p95": "88.60",
            "p99": "85.50",
            "min": "85.20",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "82.33",
            "p50": "77.86",
            "p95": "73.47",
            "p99": "71.93",
            "min": "71.87",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "63.09",
            "p50": "59.66",
            "p95": "57.05",
            "p99": "55.28",
            "min": "55.00",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "62.29",
            "p50": "59.22",
            "p95": "56.34",
            "p99": "55.10",
            "min": "54.93",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "62.69",
            "p50": "58.88",
            "p95": "56.13",
            "p99": "54.85",
            "min": "54.73",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "170.75",
            "p50": "159.65",
            "p95": "143.82",
            "p99": "135.45",
            "min": "135.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "75.10",
            "p50": "72.33",
            "p95": "68.42",
            "p99": "66.12",
            "min": "65.98",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "102.81",
            "p50": "99.39",
            "p95": "91.99",
            "p99": "89.72",
            "min": "89.55",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "erigon": [
        {
            "title": "GasLimit",
            "max": "158.01",
            "p50": "152.79",
            "p95": "139.03",
            "p99": "129.33",
            "min": "128.80",
            "n": "112",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "207.77",
            "p50": "178.73",
            "p95": "145.23",
            "p99": "160.24",
            "min": "141.76",
            "n": "71",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "201.44",
            "p50": "193.48",
            "p95": "168.59",
            "p99": "155.35",
            "min": "155.11",
            "n": "102",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "157.88",
            "p50": "151.92",
            "p95": "139.57",
            "p99": "128.27",
            "min": "127.40",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2407.51",
            "p50": "1467.99",
            "p95": "750.49",
            "p99": "607.86",
            "min": "606.01",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "339.93",
            "p50": "312.13",
            "p95": "269.21",
            "p99": "223.35",
            "min": "208.88",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4123.19",
            "p50": "2137.66",
            "p95": "836.74",
            "p99": "582.73",
            "min": "580.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11538.72",
            "p50": "3908.43",
            "p95": "1189.19",
            "p99": "1112.08",
            "min": "1104.19",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "332.95",
            "p50": "306.84",
            "p95": "250.10",
            "p99": "208.77",
            "min": "192.94",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "163.06",
            "p50": "153.76",
            "p95": "142.04",
            "p99": "129.24",
            "min": "128.42",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "120.93",
            "p50": "117.10",
            "p95": "108.42",
            "p99": "101.19",
            "min": "100.33",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "236.89",
            "p50": "226.58",
            "p95": "191.70",
            "p99": "171.01",
            "min": "170.09",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "51.57",
            "p50": "49.80",
            "p95": "48.00",
            "p99": "47.68",
            "min": "47.64",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "206.27",
            "p50": "196.94",
            "p95": "169.64",
            "p99": "151.44",
            "min": "150.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.49",
            "p50": "84.25",
            "p95": "78.59",
            "p99": "77.19",
            "min": "76.85",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.22",
            "p50": "84.08",
            "p95": "79.40",
            "p99": "77.54",
            "min": "77.33",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.86",
            "p50": "90.35",
            "p95": "85.58",
            "p99": "83.50",
            "min": "83.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "212.41",
            "p50": "202.46",
            "p95": "177.04",
            "p99": "167.83",
            "min": "165.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.89",
            "p50": "90.46",
            "p95": "84.54",
            "p99": "79.02",
            "min": "77.32",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "108.82",
            "p50": "106.02",
            "p95": "97.91",
            "p99": "99.36",
            "min": "92.22",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "111.64",
            "p50": "107.70",
            "p95": "99.79",
            "p99": "101.98",
            "min": "96.78",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "160.21",
            "p50": "151.68",
            "p95": "136.60",
            "p99": "140.30",
            "min": "135.62",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "150.23",
            "p50": "125.12",
            "p95": "118.41",
            "p99": "131.74",
            "min": "117.79",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "247.35",
            "p50": "223.29",
            "p95": "188.19",
            "p99": "163.56",
            "min": "161.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "277.18",
            "p50": "245.53",
            "p95": "204.41",
            "p99": "153.47",
            "min": "149.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "255.83",
            "p50": "224.43",
            "p95": "176.75",
            "p99": "170.90",
            "min": "170.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "251.26",
            "p50": "223.58",
            "p95": "187.05",
            "p99": "156.03",
            "min": "150.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "868.66",
            "p50": "728.19",
            "p95": "520.77",
            "p99": "397.24",
            "min": "336.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "828.56",
            "p50": "702.32",
            "p95": "541.42",
            "p99": "449.08",
            "min": "428.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "779.34",
            "p50": "661.78",
            "p95": "518.68",
            "p99": "460.54",
            "min": "451.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "807.80",
            "p50": "683.99",
            "p95": "521.34",
            "p99": "429.26",
            "min": "421.67",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "219.53",
            "p50": "200.67",
            "p95": "179.75",
            "p99": "159.81",
            "min": "159.25",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "211.36",
            "p50": "200.08",
            "p95": "171.63",
            "p99": "155.68",
            "min": "154.20",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "221.42",
            "p50": "204.75",
            "p95": "182.68",
            "p99": "160.24",
            "min": "158.35",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "220.74",
            "p50": "204.73",
            "p95": "184.73",
            "p99": "161.81",
            "min": "157.72",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "91.78",
            "p50": "89.08",
            "p95": "83.88",
            "p99": "79.67",
            "min": "79.34",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "83.50",
            "p50": "80.83",
            "p95": "77.30",
            "p99": "76.60",
            "min": "76.58",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "76.65",
            "p50": "74.51",
            "p95": "70.25",
            "p99": "66.69",
            "min": "65.90",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "120.11",
            "p50": "116.19",
            "p95": "107.53",
            "p99": "101.35",
            "min": "100.88",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "179.23",
            "p50": "170.61",
            "p95": "154.06",
            "p99": "143.56",
            "min": "142.52",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "121.61",
            "p50": "118.37",
            "p95": "110.46",
            "p99": "100.19",
            "min": "98.44",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "177.41",
            "p50": "169.51",
            "p95": "152.63",
            "p99": "135.65",
            "min": "133.16",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "159.31",
            "p50": "153.13",
            "p95": "139.24",
            "p99": "132.13",
            "min": "132.12",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "177.10",
            "p50": "169.06",
            "p95": "152.20",
            "p99": "135.26",
            "min": "132.87",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "91.72",
            "p50": "89.30",
            "p95": "84.97",
            "p99": "80.43",
            "min": "80.12",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "157.21",
            "p50": "151.14",
            "p95": "136.19",
            "p99": "126.74",
            "min": "125.84",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "131.27",
            "p50": "126.76",
            "p95": "117.20",
            "p99": "111.66",
            "min": "111.53",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "120.90",
            "p50": "117.28",
            "p95": "108.96",
            "p99": "99.97",
            "min": "97.97",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "157.78",
            "p50": "151.25",
            "p95": "138.55",
            "p99": "121.10",
            "min": "120.74",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "65.32",
            "p50": "63.75",
            "p95": "60.48",
            "p99": "58.85",
            "min": "58.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "66.56",
            "p50": "64.94",
            "p95": "62.43",
            "p99": "60.30",
            "min": "60.25",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "69.86",
            "p50": "68.26",
            "p95": "65.72",
            "p99": "64.94",
            "min": "64.81",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "141.88",
            "p50": "135.83",
            "p95": "121.20",
            "p99": "104.33",
            "min": "97.10",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "158.56",
            "p50": "152.38",
            "p95": "137.05",
            "p99": "121.50",
            "min": "119.38",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "161.33",
            "p50": "154.35",
            "p95": "139.81",
            "p99": "133.68",
            "min": "133.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ]
}