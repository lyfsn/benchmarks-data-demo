{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 770.1271069999999,
                    "min": 605.160771,
                    "p50": 676.788906,
                    "p95": 770.1271069999999,
                    "p99": 770.1271069999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 336.083059,
                    "min": 259.27367799999996,
                    "p50": 290.484384,
                    "p95": 336.083059,
                    "p99": 336.083059,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 523.848167,
                    "min": 447.983854,
                    "p50": 480.272005,
                    "p95": 523.848167,
                    "p99": 523.848167,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 468.905561,
                    "min": 392.00125499999996,
                    "p50": 422.817435,
                    "p95": 468.905561,
                    "p99": 468.905561,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 362.475083,
                    "min": 296.308275,
                    "p50": 330.012503,
                    "p95": 362.475083,
                    "p99": 362.475083,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 436.86925199999996,
                    "min": 376.287824,
                    "p50": 392.369865,
                    "p95": 436.86925199999996,
                    "p99": 436.86925199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 466.809307,
                    "min": 425.138776,
                    "p50": 444.95343499999996,
                    "p95": 466.809307,
                    "p99": 466.809307,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 140.635764,
                    "min": 111.12055,
                    "p50": 128.2411,
                    "p95": 140.635764,
                    "p99": 140.635764,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 172.611844,
                    "min": 141.119246,
                    "p50": 145.706727,
                    "p95": 172.611844,
                    "p99": 172.611844,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 206.411352,
                    "min": 175.908106,
                    "p50": 180.012287,
                    "p95": 206.411352,
                    "p99": 206.411352,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 726.399554,
                    "min": 632.959608,
                    "p50": 644.647474,
                    "p95": 726.399554,
                    "p99": 726.399554,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 228.291629,
                    "min": 208.55600099999998,
                    "p50": 222.598087,
                    "p95": 228.291629,
                    "p99": 228.291629,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 618.536405,
                    "min": 553.310333,
                    "p50": 561.070883,
                    "p95": 618.536405,
                    "p99": 618.536405,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 310.317068,
                    "min": 249.039661,
                    "p50": 275.351581,
                    "p95": 310.317068,
                    "p99": 310.317068,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 257.806311,
                    "min": 211.49931899999999,
                    "p50": 238.324683,
                    "p95": 257.806311,
                    "p99": 257.806311,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 158.61783699999998,
                    "min": 139.501754,
                    "p50": 146.570891,
                    "p95": 158.61783699999998,
                    "p99": 158.61783699999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 226.95897,
                    "min": 216.10834499999999,
                    "p50": 220.842919,
                    "p95": 226.95897,
                    "p99": 226.95897,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 283.795751,
                    "min": 270.986924,
                    "p50": 275.019095,
                    "p95": 283.795751,
                    "p99": 283.795751,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.797219,
                    "min": 75.711416,
                    "p50": 79.38355299999999,
                    "p95": 84.797219,
                    "p99": 84.797219,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 191.261566,
                    "min": 153.108824,
                    "p50": 175.27288,
                    "p95": 191.261566,
                    "p99": 191.261566,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.206617,
                    "min": 246.297665,
                    "p50": 280.58538799999997,
                    "p95": 286.206617,
                    "p99": 286.206617,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 72.2364,
                    "min": 56.669478999999995,
                    "p50": 63.670367999999996,
                    "p95": 72.2364,
                    "p99": 72.2364,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.86840899999999,
                    "min": 108.581926,
                    "p50": 136.002602,
                    "p95": 139.86840899999999,
                    "p99": 139.86840899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 155.426028,
                    "min": 119.237578,
                    "p50": 152.234339,
                    "p95": 155.426028,
                    "p99": 155.426028,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 421.45329999999996,
                    "min": 390.387548,
                    "p50": 416.82388599999996,
                    "p95": 421.45329999999996,
                    "p99": 421.45329999999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 546.043678,
                    "min": 502.16792699999996,
                    "p50": 537.399512,
                    "p95": 546.043678,
                    "p99": 546.043678,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 176.731757,
                    "min": 159.367951,
                    "p50": 165.617626,
                    "p95": 176.731757,
                    "p99": 176.731757,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1253.279,
                    "min": 1200.9214849999998,
                    "p50": 1235.226588,
                    "p95": 1253.279,
                    "p99": 1253.279,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 50.916058,
                    "min": 43.185441,
                    "p50": 48.211126,
                    "p95": 50.916058,
                    "p99": 50.916058,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 97.63230899999999,
                    "min": 91.851069,
                    "p50": 96.11697199999999,
                    "p95": 97.63230899999999,
                    "p99": 97.63230899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 649.1943309999999,
                    "min": 620.605812,
                    "p50": 641.9056959999999,
                    "p95": 649.1943309999999,
                    "p99": 649.1943309999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 311.839186,
                    "min": 276.787489,
                    "p50": 282.09828899999997,
                    "p95": 311.839186,
                    "p99": 311.839186,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 259.25808,
                    "min": 224.384706,
                    "p50": 233.951653,
                    "p95": 259.25808,
                    "p99": 259.25808,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 271.805257,
                    "min": 245.57647,
                    "p50": 260.344285,
                    "p95": 271.805257,
                    "p99": 271.805257,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.461773,
                    "min": 137.808752,
                    "p50": 149.003742,
                    "p95": 150.461773,
                    "p99": 150.461773,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 763.32407,
                    "min": 681.968408,
                    "p50": 707.61479,
                    "p95": 763.32407,
                    "p99": 763.32407,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 468.791499,
                    "min": 408.622707,
                    "p50": 422.649048,
                    "p95": 468.791499,
                    "p99": 468.791499,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 362.35932099999997,
                    "min": 287.290568,
                    "p50": 325.707559,
                    "p95": 362.35932099999997,
                    "p99": 362.35932099999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 319.043795,
                    "min": 265.931022,
                    "p50": 302.045478,
                    "p95": 319.043795,
                    "p99": 319.043795,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 196.071798,
                    "min": 154.691351,
                    "p50": 191.307816,
                    "p95": 196.071798,
                    "p99": 196.071798,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 531.3655259999999,
                    "min": 458.32430999999997,
                    "p50": 475.67391399999997,
                    "p95": 531.3655259999999,
                    "p99": 531.3655259999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.18417699999999,
                    "min": 87.484264,
                    "p50": 97.07387,
                    "p95": 116.18417699999999,
                    "p99": 116.18417699999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 393.437859,
                    "min": 330.009461,
                    "p50": 363.53315399999997,
                    "p95": 393.437859,
                    "p99": 393.437859,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 235.661339,
                    "min": 177.65369099999998,
                    "p50": 215.53529899999998,
                    "p95": 235.661339,
                    "p99": 235.661339,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 190.148178,
                    "min": 150.87436,
                    "p50": 172.987643,
                    "p95": 190.148178,
                    "p99": 190.148178,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 134.62805799999998,
                    "min": 109.265907,
                    "p50": 123.15977699999999,
                    "p95": 134.62805799999998,
                    "p99": 134.62805799999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 367.700453,
                    "min": 337.61839599999996,
                    "p50": 345.187999,
                    "p95": 367.700453,
                    "p99": 367.700453,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 737.489838,
                    "min": 647.5413669999999,
                    "p50": 665.221892,
                    "p95": 737.489838,
                    "p99": 737.489838,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 163.168351,
                    "min": 108.385132,
                    "p50": 148.58683299999998,
                    "p95": 163.168351,
                    "p99": 163.168351,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 524.185068,
                    "min": 453.543542,
                    "p50": 466.25424999999996,
                    "p95": 524.185068,
                    "p99": 524.185068,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 545.032653,
                    "min": 499.823666,
                    "p50": 504.53416699999997,
                    "p95": 545.032653,
                    "p99": 545.032653,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.40455,
                    "min": 161.15964499999998,
                    "p50": 182.349808,
                    "p95": 202.40455,
                    "p99": 202.40455,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 473.541475,
                    "min": 418.243819,
                    "p50": 431.513785,
                    "p95": 473.541475,
                    "p99": 473.541475,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 631.340243,
                    "min": 550.1310569999999,
                    "p50": 567.157754,
                    "p95": 631.340243,
                    "p99": 631.340243,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 281.893018,
                    "min": 236.84037999999998,
                    "p50": 253.551468,
                    "p95": 281.893018,
                    "p99": 281.893018,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 397.87684099999996,
                    "min": 323.60382999999996,
                    "p50": 353.393665,
                    "p95": 397.87684099999996,
                    "p99": 397.87684099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 350.509526,
                    "min": 287.584949,
                    "p50": 326.989044,
                    "p95": 350.509526,
                    "p99": 350.509526,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 847.445474,
                    "min": 736.929551,
                    "p50": 747.6348499999999,
                    "p95": 847.445474,
                    "p99": 847.445474,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 426.755542,
                    "min": 385.25661199999996,
                    "p50": 395.762406,
                    "p95": 426.755542,
                    "p99": 426.755542,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 320.24114,
                    "min": 268.742827,
                    "p50": 286.665818,
                    "p95": 320.24114,
                    "p99": 320.24114,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.332066,
                    "min": 205.97772899999998,
                    "p50": 218.995557,
                    "p95": 233.332066,
                    "p99": 233.332066,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 606.712531,
                    "min": 512.79811,
                    "p50": 541.743425,
                    "p95": 606.712531,
                    "p99": 606.712531,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 54.283502,
                    "min": 27.270018,
                    "p50": 45.007822,
                    "p95": 54.283502,
                    "p99": 54.283502,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.604314,
                    "min": 22.054872,
                    "p50": 27.396767,
                    "p95": 27.604314,
                    "p99": 27.604314,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 85.931786,
                    "min": 77.505715,
                    "p50": 82.477442,
                    "p95": 85.931786,
                    "p99": 85.931786,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 163.88056,
                    "min": 134.285008,
                    "p50": 155.095789,
                    "p95": 163.88056,
                    "p99": 163.88056,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.517585999999998,
                    "min": 26.003487,
                    "p50": 27.013869999999997,
                    "p95": 27.517585999999998,
                    "p99": 27.517585999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.378131,
                    "min": 19.94107,
                    "p50": 27.056872,
                    "p95": 27.378131,
                    "p99": 27.378131,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 54.816198,
                    "min": 49.989957999999994,
                    "p50": 52.816609,
                    "p95": 54.816198,
                    "p99": 54.816198,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 70.306879,
                    "min": 20.914611999999998,
                    "p50": 26.692608999999997,
                    "p95": 70.306879,
                    "p99": 70.306879,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.651470999999997,
                    "min": 25.217416,
                    "p50": 27.019067999999997,
                    "p95": 27.651470999999997,
                    "p99": 27.651470999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 33.994807,
                    "min": 26.774570999999998,
                    "p50": 27.396321999999998,
                    "p95": 33.994807,
                    "p99": 33.994807,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 49.511165,
                    "min": 44.150375,
                    "p50": 45.050737,
                    "p95": 49.511165,
                    "p99": 49.511165,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.452938999999997,
                    "min": 25.423799,
                    "p50": 27.224845,
                    "p95": 27.452938999999997,
                    "p99": 27.452938999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 28.16689,
                    "min": 26.996595,
                    "p50": 27.298282999999998,
                    "p95": 28.16689,
                    "p99": 28.16689,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 34.414621,
                    "min": 26.714406,
                    "p50": 26.999952,
                    "p95": 34.414621,
                    "p99": 34.414621,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.680694,
                    "min": 26.604058,
                    "p50": 27.048323999999997,
                    "p95": 27.680694,
                    "p99": 27.680694,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.160187999999998,
                    "min": 22.748559999999998,
                    "p50": 26.792502,
                    "p95": 27.160187999999998,
                    "p99": 27.160187999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.144365999999998,
                    "min": 24.990026,
                    "p50": 26.951601999999998,
                    "p95": 28.144365999999998,
                    "p99": 28.144365999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.485331,
                    "min": 22.563734,
                    "p50": 26.948019,
                    "p95": 27.485331,
                    "p99": 27.485331,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.650181999999997,
                    "min": 25.636739,
                    "p50": 27.274738,
                    "p95": 28.650181999999997,
                    "p99": 28.650181999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 222.512674,
                    "min": 133.230604,
                    "p50": 163.935404,
                    "p95": 222.512674,
                    "p99": 222.512674,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 86.436522,
                    "min": 45.866475,
                    "p50": 84.73056,
                    "p95": 86.436522,
                    "p99": 86.436522,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 171.19889899999998,
                    "min": 130.632601,
                    "p50": 155.651542,
                    "p95": 171.19889899999998,
                    "p99": 171.19889899999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 97.912848,
                    "min": 80.377083,
                    "p50": 89.45358999999999,
                    "p95": 97.912848,
                    "p99": 97.912848,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 136.506292,
                    "min": 101.097281,
                    "p50": 134.69994,
                    "p95": 136.506292,
                    "p99": 136.506292,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 501.955409,
                    "min": 456.070075,
                    "p50": 487.491625,
                    "p95": 501.955409,
                    "p99": 501.955409,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 134.22322499999999,
                    "min": 87.902727,
                    "p50": 132.021802,
                    "p95": 134.22322499999999,
                    "p99": 134.22322499999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 162.232404,
                    "min": 119.863593,
                    "p50": 157.86755,
                    "p95": 162.232404,
                    "p99": 162.232404,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 199.20959,
                    "min": 169.134445,
                    "p50": 191.916104,
                    "p95": 199.20959,
                    "p99": 199.20959,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 115.611001,
                    "min": 72.848927,
                    "p50": 111.17200199999999,
                    "p95": 115.611001,
                    "p99": 115.611001,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 411.05296799999996,
                    "min": 372.522872,
                    "p50": 402.76010099999996,
                    "p95": 411.05296799999996,
                    "p99": 411.05296799999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 105.83295,
                    "min": 62.358694,
                    "p50": 104.021384,
                    "p95": 105.83295,
                    "p99": 105.83295,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 150.807229,
                    "min": 103.76227399999999,
                    "p50": 147.018746,
                    "p95": 150.807229,
                    "p99": 150.807229,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 314.211937,
                    "min": 257.747082,
                    "p50": 292.135263,
                    "p95": 314.211937,
                    "p99": 314.211937,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.085366,
                    "min": 35.840326,
                    "p50": 56.863664,
                    "p95": 69.085366,
                    "p99": 69.085366,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 943.5647449999999,
                    "min": 861.002581,
                    "p50": 918.4810799999999,
                    "p95": 943.5647449999999,
                    "p99": 943.5647449999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 54.783722999999995,
                    "min": 28.183297999999997,
                    "p50": 53.453883,
                    "p95": 54.783722999999995,
                    "p99": 54.783722999999995,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 177.83957999999998,
                    "min": 153.757486,
                    "p50": 168.891868,
                    "p95": 177.83957999999998,
                    "p99": 177.83957999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 219.07862899999998,
                    "min": 179.854199,
                    "p50": 206.66711999999998,
                    "p95": 219.07862899999998,
                    "p99": 219.07862899999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.020856,
                    "min": 26.04381,
                    "p50": 27.317459,
                    "p95": 28.020856,
                    "p99": 28.020856,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.376427,
                    "min": 25.41164,
                    "p50": 26.577873,
                    "p95": 27.376427,
                    "p99": 27.376427,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 58.000485,
                    "min": 21.812656,
                    "p50": 27.109441999999998,
                    "p95": 58.000485,
                    "p99": 58.000485,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 35.862896,
                    "min": 26.833181999999997,
                    "p50": 27.350362,
                    "p95": 35.862896,
                    "p99": 35.862896,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.663845,
                    "min": 21.778243,
                    "p50": 26.92778,
                    "p95": 27.663845,
                    "p99": 27.663845,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 30.196215,
                    "min": 26.697581999999997,
                    "p50": 27.247173,
                    "p95": 30.196215,
                    "p99": 30.196215,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.257890999999997,
                    "min": 26.195883,
                    "p50": 26.929516999999997,
                    "p95": 27.257890999999997,
                    "p99": 27.257890999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 31.782579,
                    "min": 23.526373,
                    "p50": 27.018819999999998,
                    "p95": 31.782579,
                    "p99": 31.782579,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 51.699734,
                    "min": 48.869346,
                    "p50": 50.505533,
                    "p95": 51.699734,
                    "p99": 51.699734,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.424559,
                    "min": 24.117701,
                    "p50": 27.117753,
                    "p95": 27.424559,
                    "p99": 27.424559,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.086278,
                    "min": 24.108057,
                    "p50": 26.800628999999997,
                    "p95": 29.086278,
                    "p99": 29.086278,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.196223,
                    "min": 26.638675,
                    "p50": 27.075377,
                    "p95": 28.196223,
                    "p99": 28.196223,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.361808,
                    "min": 23.980497999999997,
                    "p50": 27.224669,
                    "p95": 27.361808,
                    "p99": 27.361808,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.576020999999997,
                    "min": 25.620487999999998,
                    "p50": 27.172527,
                    "p95": 27.576020999999997,
                    "p99": 27.576020999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 80.43144699999999,
                    "min": 74.226637,
                    "p50": 78.79727799999999,
                    "p95": 80.43144699999999,
                    "p99": 80.43144699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.983247,
                    "min": 20.275510999999998,
                    "p50": 27.186546999999997,
                    "p95": 31.983247,
                    "p99": 31.983247,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 43.956817,
                    "min": 27.080033,
                    "p50": 39.793231999999996,
                    "p95": 43.956817,
                    "p99": 43.956817,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.941986,
                    "min": 24.719987,
                    "p50": 27.209851999999998,
                    "p95": 27.941986,
                    "p99": 27.941986,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.618871,
                    "min": 26.427061,
                    "p50": 27.019785,
                    "p95": 27.618871,
                    "p99": 27.618871,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.707326,
                    "min": 26.288518,
                    "p50": 26.921052999999997,
                    "p95": 27.707326,
                    "p99": 27.707326,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 28.063885,
                    "min": 25.925451,
                    "p50": 26.955391,
                    "p95": 28.063885,
                    "p99": 28.063885,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.63722,
                    "min": 22.457380999999998,
                    "p50": 27.135375999999997,
                    "p95": 27.63722,
                    "p99": 27.63722,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.615147999999998,
                    "min": 21.061446999999998,
                    "p50": 26.85061,
                    "p95": 27.615147999999998,
                    "p99": 27.615147999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.276273,
                    "min": 21.669269,
                    "p50": 26.743053999999997,
                    "p95": 27.276273,
                    "p99": 27.276273,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 29.218169999999997,
                    "min": 26.409941999999997,
                    "p50": 27.051869999999997,
                    "p95": 29.218169999999997,
                    "p99": 29.218169999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.016475999999997,
                    "min": 20.670109,
                    "p50": 26.836903,
                    "p95": 27.016475999999997,
                    "p99": 27.016475999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.797082999999997,
                    "min": 24.770481999999998,
                    "p50": 26.982917,
                    "p95": 27.797082999999997,
                    "p99": 27.797082999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 28.199410999999998,
                    "min": 26.41033,
                    "p50": 27.600341,
                    "p95": 28.199410999999998,
                    "p99": 28.199410999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 30.342823,
                    "min": 20.728196999999998,
                    "p50": 27.053898999999998,
                    "p95": 30.342823,
                    "p99": 30.342823,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.469144,
                    "min": 25.760234,
                    "p50": 27.069540999999997,
                    "p95": 27.469144,
                    "p99": 27.469144,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.187441,
                    "min": 26.112634,
                    "p50": 26.971697,
                    "p95": 27.187441,
                    "p99": 27.187441,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 29.510696,
                    "min": 22.685969999999998,
                    "p50": 27.10241,
                    "p95": 29.510696,
                    "p99": 29.510696,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.023912,
                    "min": 23.212018999999998,
                    "p50": 26.899845,
                    "p95": 28.023912,
                    "p99": 28.023912,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.749518,
                    "min": 26.52881,
                    "p50": 27.183728,
                    "p95": 28.749518,
                    "p99": 28.749518,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 50.739411999999994,
                    "min": 43.916855,
                    "p50": 47.11711,
                    "p95": 50.739411999999994,
                    "p99": 50.739411999999994,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.596819,
                    "min": 23.147799,
                    "p50": 26.8248,
                    "p95": 27.596819,
                    "p99": 27.596819,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 180.447982,
                    "min": 26.658759999999997,
                    "p50": 27.247850999999997,
                    "p95": 180.447982,
                    "p99": 180.447982,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.511404,
                    "min": 24.932208,
                    "p50": 26.8024,
                    "p95": 27.511404,
                    "p99": 27.511404,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 122.502572,
                    "min": 117.74371599999999,
                    "p50": 120.89706199999999,
                    "p95": 122.502572,
                    "p99": 122.502572,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 52.012195,
                    "min": 26.778682,
                    "p50": 48.759688,
                    "p95": 52.012195,
                    "p99": 52.012195,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 868.649001,
                    "min": 773.659082,
                    "p50": 837.7871759999999,
                    "p95": 868.649001,
                    "p99": 868.649001,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 197.051818,
                    "min": 156.898566,
                    "p50": 194.41196599999998,
                    "p95": 197.051818,
                    "p99": 197.051818,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 98.52637299999999,
                    "min": 54.956289,
                    "p50": 94.87022499999999,
                    "p95": 98.52637299999999,
                    "p99": 98.52637299999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 67.013252,
                    "min": 33.976948,
                    "p50": 63.777431,
                    "p95": 67.013252,
                    "p99": 67.013252,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 91.598173,
                    "min": 47.771074999999996,
                    "p50": 88.77846699999999,
                    "p95": 91.598173,
                    "p99": 91.598173,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 286.83151,
                    "min": 245.03353099999998,
                    "p50": 281.734239,
                    "p95": 286.83151,
                    "p99": 286.83151,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 146.018606,
                    "min": 101.84030899999999,
                    "p50": 135.26160199999998,
                    "p95": 146.018606,
                    "p99": 146.018606,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 132.15348799999998,
                    "min": 85.254849,
                    "p50": 128.794778,
                    "p95": 132.15348799999998,
                    "p99": 132.15348799999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 366.044354,
                    "min": 328.333682,
                    "p50": 358.161769,
                    "p95": 366.044354,
                    "p99": 366.044354,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 449.06585099999995,
                    "min": 410.525407,
                    "p50": 428.98157899999995,
                    "p95": 449.06585099999995,
                    "p99": 449.06585099999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 163.750496,
                    "min": 137.735652,
                    "p50": 154.309702,
                    "p95": 163.750496,
                    "p99": 163.750496,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 80.784882,
                    "min": 42.126199,
                    "p50": 76.57591099999999,
                    "p95": 80.784882,
                    "p99": 80.784882,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 187.490137,
                    "min": 142.890048,
                    "p50": 175.760156,
                    "p95": 187.490137,
                    "p99": 187.490137,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 111.629251,
                    "min": 73.057751,
                    "p50": 99.219724,
                    "p95": 111.629251,
                    "p99": 111.629251,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 141.851237,
                    "min": 121.898985,
                    "p50": 137.509191,
                    "p95": 141.851237,
                    "p99": 141.851237,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 168.612348,
                    "min": 122.44331,
                    "p50": 162.730918,
                    "p95": 168.612348,
                    "p99": 168.612348,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 106.942909,
                    "min": 66.849724,
                    "p50": 103.34457599999999,
                    "p95": 106.942909,
                    "p99": 106.942909,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 737.682814,
                    "min": 668.6343909999999,
                    "p50": 713.03937,
                    "p95": 737.682814,
                    "p99": 737.682814,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 134.703273,
                    "min": 121.491548,
                    "p50": 126.513803,
                    "p95": 134.703273,
                    "p99": 134.703273,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 245.52372699999998,
                    "min": 225.99021199999999,
                    "p50": 234.841423,
                    "p95": 245.52372699999998,
                    "p99": 245.52372699999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 351.622661,
                    "min": 312.26203499999997,
                    "p50": 325.090018,
                    "p95": 351.622661,
                    "p99": 351.622661,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 154.016887,
                    "min": 109.27487699999999,
                    "p50": 136.420127,
                    "p95": 154.016887,
                    "p99": 154.016887,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 380.906752,
                    "min": 334.93350899999996,
                    "p50": 374.76210199999997,
                    "p95": 380.906752,
                    "p99": 380.906752,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 219.120947,
                    "min": 199.85172699999998,
                    "p50": 213.775519,
                    "p95": 219.120947,
                    "p99": 219.120947,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 468.38908599999996,
                    "min": 392.42267499999997,
                    "p50": 419.447901,
                    "p95": 468.38908599999996,
                    "p99": 468.38908599999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 184.247326,
                    "min": 127.51756599999999,
                    "p50": 171.44012899999998,
                    "p95": 184.247326,
                    "p99": 184.247326,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 291.474598,
                    "min": 232.59866399999999,
                    "p50": 264.13114,
                    "p95": 291.474598,
                    "p99": 291.474598,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1009.217444,
                    "min": 859.763351,
                    "p50": 939.7387369999999,
                    "p95": 1009.217444,
                    "p99": 1009.217444,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 293.699596,
                    "min": 258.296571,
                    "p50": 286.601291,
                    "p95": 293.699596,
                    "p99": 293.699596,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 200.78761599999999,
                    "min": 175.153834,
                    "p50": 195.805386,
                    "p95": 200.78761599999999,
                    "p99": 200.78761599999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 321.360743,
                    "min": 295.14849399999997,
                    "p50": 305.908276,
                    "p95": 321.360743,
                    "p99": 321.360743,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.782619,
                    "min": 73.799219,
                    "p50": 107.049728,
                    "p95": 112.782619,
                    "p99": 112.782619,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 351.994892,
                    "min": 307.575106,
                    "p50": 337.730057,
                    "p95": 351.994892,
                    "p99": 351.994892,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 515.552224,
                    "min": 477.543709,
                    "p50": 498.717004,
                    "p95": 515.552224,
                    "p99": 515.552224,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1506.0561149999999,
                    "min": 1311.3532559999999,
                    "p50": 1377.320903,
                    "p95": 1506.0561149999999,
                    "p99": 1506.0561149999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 166.57868499999998,
                    "min": 127.156285,
                    "p50": 130.257225,
                    "p95": 166.57868499999998,
                    "p99": 166.57868499999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 287.390628,
                    "min": 250.572643,
                    "p50": 276.469611,
                    "p95": 287.390628,
                    "p99": 287.390628,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 249.554051,
                    "min": 211.757507,
                    "p50": 238.63352899999998,
                    "p95": 249.554051,
                    "p99": 249.554051,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 460.953894,
                    "min": 418.147176,
                    "p50": 442.772152,
                    "p95": 460.953894,
                    "p99": 460.953894,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 414.544379,
                    "min": 374.770756,
                    "p50": 383.965654,
                    "p95": 414.544379,
                    "p99": 414.544379,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 554.4369829999999,
                    "min": 496.524607,
                    "p50": 543.403187,
                    "p95": 554.4369829999999,
                    "p99": 554.4369829999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 661.131011,
                    "min": 627.0125899999999,
                    "p50": 652.94363,
                    "p95": 661.131011,
                    "p99": 661.131011,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 586.255097,
                    "min": 547.8735909999999,
                    "p50": 576.811751,
                    "p95": 586.255097,
                    "p99": 586.255097,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 502.64994099999996,
                    "min": 459.659041,
                    "p50": 490.012609,
                    "p95": 502.64994099999996,
                    "p99": 502.64994099999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 880.195492,
                    "min": 837.3857539999999,
                    "p50": 856.286253,
                    "p95": 880.195492,
                    "p99": 880.195492,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 334.621311,
                    "min": 292.970189,
                    "p50": 322.026527,
                    "p95": 334.621311,
                    "p99": 334.621311,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 208.444391,
                    "min": 167.383915,
                    "p50": 183.64899599999998,
                    "p95": 208.444391,
                    "p99": 208.444391,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1000.118247,
                    "min": 734.5301509999999,
                    "p50": 760.8933989999999,
                    "p95": 1000.118247,
                    "p99": 1000.118247,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 377.153525,
                    "min": 332.993291,
                    "p50": 372.00023699999997,
                    "p95": 377.153525,
                    "p99": 377.153525,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 629.823459,
                    "min": 586.299813,
                    "p50": 617.115291,
                    "p95": 629.823459,
                    "p99": 629.823459,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 899.0968389999999,
                    "min": 859.4919179999999,
                    "p50": 882.4093419999999,
                    "p95": 899.0968389999999,
                    "p99": 899.0968389999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2031.792688,
                    "min": 1978.8998459999998,
                    "p50": 2018.435947,
                    "p95": 2031.792688,
                    "p99": 2031.792688,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2879.6422479999997,
                    "min": 2845.467984,
                    "p50": 2862.6234019999997,
                    "p95": 2879.6422479999997,
                    "p99": 2879.6422479999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5709.02982,
                    "min": 5620.303994,
                    "p50": 5695.323796,
                    "p95": 5709.02982,
                    "p99": 5709.02982,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1592.5588249999998,
                    "min": 1558.327012,
                    "p50": 1591.594296,
                    "p95": 1592.5588249999998,
                    "p99": 1592.5588249999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 747.99736,
                    "min": 710.818043,
                    "p50": 739.248216,
                    "p95": 747.99736,
                    "p99": 747.99736,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 611.110902,
                    "min": 571.318718,
                    "p50": 596.420031,
                    "p95": 611.110902,
                    "p99": 611.110902,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1747.301788,
                    "min": 1684.4737599999999,
                    "p50": 1726.837765,
                    "p95": 1747.301788,
                    "p99": 1747.301788,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4309.146189,
                    "min": 4249.303737,
                    "p50": 4283.75225,
                    "p95": 4309.146189,
                    "p99": 4309.146189,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2545.088426,
                    "min": 2480.714807,
                    "p50": 2514.837692,
                    "p95": 2545.088426,
                    "p99": 2545.088426,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2184.170622,
                    "min": 2114.000821,
                    "p50": 2148.591673,
                    "p95": 2184.170622,
                    "p99": 2184.170622,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1181.0738219999998,
                    "min": 1133.328172,
                    "p50": 1160.5766449999999,
                    "p95": 1181.0738219999998,
                    "p99": 1181.0738219999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1464.8546469999999,
                    "min": 1413.691961,
                    "p50": 1450.6236159999999,
                    "p95": 1464.8546469999999,
                    "p99": 1464.8546469999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1040.150827,
                    "min": 990.493216,
                    "p50": 1025.99476,
                    "p95": 1040.150827,
                    "p99": 1040.150827,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 469.424669,
                    "min": 430.44474199999996,
                    "p50": 456.248029,
                    "p95": 469.424669,
                    "p99": 469.424669,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1878.5924089999999,
                    "min": 1837.916914,
                    "p50": 1850.706051,
                    "p95": 1878.5924089999999,
                    "p99": 1878.5924089999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1320.169844,
                    "min": 1275.9735369999999,
                    "p50": 1303.19472,
                    "p95": 1320.169844,
                    "p99": 1320.169844,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 434.421628,
                    "min": 391.64696499999997,
                    "p50": 421.630774,
                    "p95": 434.421628,
                    "p99": 434.421628,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1321.595153,
                    "min": 1276.029427,
                    "p50": 1307.816619,
                    "p95": 1321.595153,
                    "p99": 1321.595153,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2653.1318269999997,
                    "min": 2572.041977,
                    "p50": 2601.740252,
                    "p95": 2653.1318269999997,
                    "p99": 2653.1318269999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1469.289628,
                    "min": 1406.099416,
                    "p50": 1444.390622,
                    "p95": 1469.289628,
                    "p99": 1469.289628,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3826.4010369999996,
                    "min": 3750.287433,
                    "p50": 3781.908185,
                    "p95": 3826.4010369999996,
                    "p99": 3826.4010369999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 820.238358,
                    "min": 778.322377,
                    "p50": 801.11249,
                    "p95": 820.238358,
                    "p99": 820.238358,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1222.25526,
                    "min": 1163.083083,
                    "p50": 1202.39275,
                    "p95": 1222.25526,
                    "p99": 1222.25526,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5060.0365,
                    "min": 4973.1280639999995,
                    "p50": 5025.617781999999,
                    "p95": 5060.0365,
                    "p99": 5060.0365,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 702.8017279999999,
                    "min": 662.477235,
                    "p50": 685.2549399999999,
                    "p95": 702.8017279999999,
                    "p99": 702.8017279999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1741.8888989999998,
                    "min": 1691.056771,
                    "p50": 1727.4876649999999,
                    "p95": 1741.8888989999998,
                    "p99": 1741.8888989999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 923.5810879999999,
                    "min": 884.323638,
                    "p50": 897.454796,
                    "p95": 923.5810879999999,
                    "p99": 923.5810879999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 556.115632,
                    "min": 514.933812,
                    "p50": 552.398022,
                    "p95": 556.115632,
                    "p99": 556.115632,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1989.989008,
                    "min": 1950.4506279999998,
                    "p50": 1970.229909,
                    "p95": 1989.989008,
                    "p99": 1989.989008,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1866.883016,
                    "min": 1808.5003709999999,
                    "p50": 1844.8116519999999,
                    "p95": 1866.883016,
                    "p99": 1866.883016,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2277.195326,
                    "min": 2205.086288,
                    "p50": 2250.42631,
                    "p95": 2277.195326,
                    "p99": 2277.195326,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1048.8195799999999,
                    "min": 1006.303402,
                    "p50": 1034.976652,
                    "p95": 1048.8195799999999,
                    "p99": 1048.8195799999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1593.922707,
                    "min": 1547.335036,
                    "p50": 1564.064022,
                    "p95": 1593.922707,
                    "p99": 1593.922707,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 116.45895499999999,
                    "min": 68.80896,
                    "p50": 94.70078,
                    "p95": 116.45895499999999,
                    "p99": 116.45895499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 90.896468,
                    "min": 49.026258999999996,
                    "p50": 86.154617,
                    "p95": 90.896468,
                    "p99": 90.896468,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 132.705127,
                    "min": 92.917417,
                    "p50": 118.96152099999999,
                    "p95": 132.705127,
                    "p99": 132.705127,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 179.10154,
                    "min": 139.117886,
                    "p50": 173.594993,
                    "p95": 179.10154,
                    "p99": 179.10154,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 496.24015399999996,
                    "min": 477.90525599999995,
                    "p50": 485.638868,
                    "p95": 496.24015399999996,
                    "p99": 496.24015399999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 223.91957,
                    "min": 184.05021,
                    "p50": 221.752862,
                    "p95": 223.91957,
                    "p99": 223.91957,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 91.849745,
                    "min": 54.308735,
                    "p50": 83.354608,
                    "p95": 91.849745,
                    "p99": 91.849745,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.526778,
                    "min": 26.563751,
                    "p50": 27.013710999999997,
                    "p95": 28.526778,
                    "p99": 28.526778,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 270.398441,
                    "min": 229.34848499999998,
                    "p50": 259.006895,
                    "p95": 270.398441,
                    "p99": 270.398441,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 70.872677,
                    "min": 35.78336,
                    "p50": 65.41669,
                    "p95": 70.872677,
                    "p99": 70.872677,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 80.30923,
                    "min": 38.912625,
                    "p50": 73.802825,
                    "p95": 80.30923,
                    "p99": 80.30923,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 83.224075,
                    "min": 44.324797,
                    "p50": 75.974398,
                    "p95": 83.224075,
                    "p99": 83.224075,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 122.017716,
                    "min": 82.45268899999999,
                    "p50": 120.13770699999999,
                    "p95": 122.017716,
                    "p99": 122.017716,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 50.830476999999995,
                    "min": 47.888095,
                    "p50": 48.559965999999996,
                    "p95": 50.830476999999995,
                    "p99": 50.830476999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 64.557763,
                    "min": 30.663814,
                    "p50": 44.952065999999995,
                    "p95": 64.557763,
                    "p99": 64.557763,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 112.014715,
                    "min": 71.051306,
                    "p50": 109.318675,
                    "p95": 112.014715,
                    "p99": 112.014715,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 89.209364,
                    "min": 57.828109999999995,
                    "p50": 84.179637,
                    "p95": 89.209364,
                    "p99": 89.209364,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 39.556849,
                    "min": 25.191798,
                    "p50": 31.633647999999997,
                    "p95": 39.556849,
                    "p99": 39.556849,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 100.667316,
                    "min": 62.277646,
                    "p50": 62.944824999999994,
                    "p95": 100.667316,
                    "p99": 100.667316,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2556.310752,
                    "min": 2504.1477,
                    "p50": 2527.8180829999997,
                    "p95": 2556.310752,
                    "p99": 2556.310752,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1048.735829,
                    "min": 1015.524101,
                    "p50": 1035.2456379999999,
                    "p95": 1048.735829,
                    "p99": 1048.735829,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 759.270981,
                    "min": 716.7266989999999,
                    "p50": 749.027056,
                    "p95": 759.270981,
                    "p99": 759.270981,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1782.8161539999999,
                    "min": 1718.5854849999998,
                    "p50": 1755.4721129999998,
                    "p95": 1782.8161539999999,
                    "p99": 1782.8161539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1182.354992,
                    "min": 1148.187709,
                    "p50": 1175.708972,
                    "p95": 1182.354992,
                    "p99": 1182.354992,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5772.116378,
                    "min": 5635.009922,
                    "p50": 5728.601251,
                    "p95": 5772.116378,
                    "p99": 5772.116378,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1626.9789019999998,
                    "min": 1570.3130939999999,
                    "p50": 1588.268179,
                    "p95": 1626.9789019999998,
                    "p99": 1626.9789019999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 907.598857,
                    "min": 852.5593849999999,
                    "p50": 904.230101,
                    "p95": 907.598857,
                    "p99": 907.598857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1920.065069,
                    "min": 1883.9010139999998,
                    "p50": 1901.352191,
                    "p95": 1920.065069,
                    "p99": 1920.065069,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4390.092817,
                    "min": 4250.749621,
                    "p50": 4327.090294,
                    "p95": 4390.092817,
                    "p99": 4390.092817,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2201.214987,
                    "min": 2142.511608,
                    "p50": 2165.950614,
                    "p95": 2201.214987,
                    "p99": 2201.214987,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2937.345507,
                    "min": 2849.263326,
                    "p50": 2896.8210169999998,
                    "p95": 2937.345507,
                    "p99": 2937.345507,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 481.42376199999995,
                    "min": 467.073406,
                    "p50": 476.777591,
                    "p95": 481.42376199999995,
                    "p99": 481.42376199999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2065.335525,
                    "min": 2001.3228749999998,
                    "p50": 2040.601025,
                    "p95": 2065.335525,
                    "p99": 2065.335525,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 619.471625,
                    "min": 575.1652849999999,
                    "p50": 586.4240639999999,
                    "p95": 619.471625,
                    "p99": 619.471625,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1482.378874,
                    "min": 1427.052426,
                    "p50": 1459.467864,
                    "p95": 1482.378874,
                    "p99": 1482.378874,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1341.771908,
                    "min": 1302.667545,
                    "p50": 1323.2783239999999,
                    "p95": 1341.771908,
                    "p99": 1341.771908,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2191.142039,
                    "min": 2146.523523,
                    "p50": 2171.0007029999997,
                    "p95": 2191.142039,
                    "p99": 2191.142039,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 608.083896,
                    "min": 572.6193569999999,
                    "p50": 589.506662,
                    "p95": 608.083896,
                    "p99": 608.083896,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1329.327033,
                    "min": 1281.6288319999999,
                    "p50": 1320.612834,
                    "p95": 1329.327033,
                    "p99": 1329.327033,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1911.30901,
                    "min": 1857.568965,
                    "p50": 1884.562952,
                    "p95": 1911.30901,
                    "p99": 1911.30901,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1489.023223,
                    "min": 1430.437443,
                    "p50": 1469.561495,
                    "p95": 1489.023223,
                    "p99": 1489.023223,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1618.0782689999999,
                    "min": 1558.167274,
                    "p50": 1609.464647,
                    "p95": 1618.0782689999999,
                    "p99": 1618.0782689999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2920.366508,
                    "min": 2859.922199,
                    "p50": 2881.0482779999998,
                    "p95": 2920.366508,
                    "p99": 2920.366508,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4350.4889109999995,
                    "min": 4269.514985,
                    "p50": 4302.851686,
                    "p95": 4350.4889109999995,
                    "p99": 4350.4889109999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1774.5146909999999,
                    "min": 1740.524448,
                    "p50": 1765.9500719999999,
                    "p95": 1774.5146909999999,
                    "p99": 1774.5146909999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 769.302333,
                    "min": 726.972351,
                    "p50": 757.77816,
                    "p95": 769.302333,
                    "p99": 769.302333,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 474.54729299999997,
                    "min": 434.800059,
                    "p50": 445.26025599999997,
                    "p95": 474.54729299999997,
                    "p99": 474.54729299999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 910.389731,
                    "min": 864.794264,
                    "p50": 901.9457709999999,
                    "p95": 910.389731,
                    "p99": 910.389731,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2551.9338479999997,
                    "min": 2505.348408,
                    "p50": 2533.298532,
                    "p95": 2551.9338479999997,
                    "p99": 2551.9338479999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1050.166862,
                    "min": 1004.619248,
                    "p50": 1035.16129,
                    "p95": 1050.166862,
                    "p99": 1050.166862,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2067.8988759999997,
                    "min": 1985.9561629999998,
                    "p50": 2030.704155,
                    "p95": 2067.8988759999997,
                    "p99": 2067.8988759999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1201.040238,
                    "min": 1146.2378879999999,
                    "p50": 1182.681067,
                    "p95": 1201.040238,
                    "p99": 1201.040238,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 746.760775,
                    "min": 708.333415,
                    "p50": 737.597044,
                    "p95": 746.760775,
                    "p99": 746.760775,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 145.508432,
                    "min": 103.81121499999999,
                    "p50": 140.817294,
                    "p95": 145.508432,
                    "p99": 145.508432,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 408.04882599999996,
                    "min": 356.854787,
                    "p50": 396.835564,
                    "p95": 408.04882599999996,
                    "p99": 408.04882599999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.068913,
                    "min": 79.456868,
                    "p50": 86.317239,
                    "p95": 93.068913,
                    "p99": 93.068913,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 63.42153,
                    "min": 32.062808,
                    "p50": 59.651674,
                    "p95": 63.42153,
                    "p99": 63.42153,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 127.43444699999999,
                    "min": 88.37122099999999,
                    "p50": 126.093246,
                    "p95": 127.43444699999999,
                    "p99": 127.43444699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 325.87334599999997,
                    "min": 282.89052799999996,
                    "p50": 311.939491,
                    "p95": 325.87334599999997,
                    "p99": 325.87334599999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 150.783279,
                    "min": 109.155028,
                    "p50": 136.842843,
                    "p95": 150.783279,
                    "p99": 150.783279,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 135.44106399999998,
                    "min": 94.37800299999999,
                    "p50": 108.28021,
                    "p95": 135.44106399999998,
                    "p99": 135.44106399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 168.242548,
                    "min": 126.94746699999999,
                    "p50": 156.64444,
                    "p95": 168.242548,
                    "p99": 168.242548,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.641599,
                    "min": 39.427153,
                    "p50": 66.77995,
                    "p95": 77.641599,
                    "p99": 77.641599,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 126.492599,
                    "min": 102.057786,
                    "p50": 120.786878,
                    "p95": 126.492599,
                    "p99": 126.492599,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 46.423364,
                    "min": 25.421792999999997,
                    "p50": 45.798874999999995,
                    "p95": 46.423364,
                    "p99": 46.423364,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 99.28394899999999,
                    "min": 74.22571599999999,
                    "p50": 86.816363,
                    "p95": 99.28394899999999,
                    "p99": 99.28394899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 87.205148,
                    "min": 46.354417,
                    "p50": 84.132232,
                    "p95": 87.205148,
                    "p99": 87.205148,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 107.554019,
                    "min": 68.460605,
                    "p50": 106.398423,
                    "p95": 107.554019,
                    "p99": 107.554019,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 115.48970399999999,
                    "min": 74.306877,
                    "p50": 112.55300299999999,
                    "p95": 115.48970399999999,
                    "p99": 115.48970399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 256.178633,
                    "min": 241.687242,
                    "p50": 253.33965899999998,
                    "p95": 256.178633,
                    "p99": 256.178633,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 184.95646299999999,
                    "min": 146.1564,
                    "p50": 172.06157,
                    "p95": 184.95646299999999,
                    "p99": 184.95646299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 38.690844999999996,
                    "min": 26.984032,
                    "p50": 37.541657,
                    "p95": 38.690844999999996,
                    "p99": 38.690844999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 161.673103,
                    "min": 147.702831,
                    "p50": 156.666031,
                    "p95": 161.673103,
                    "p99": 161.673103,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 132.10385399999998,
                    "min": 92.558161,
                    "p50": 120.623342,
                    "p95": 132.10385399999998,
                    "p99": 132.10385399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 102.736581,
                    "min": 62.354597999999996,
                    "p50": 97.54747599999999,
                    "p95": 102.736581,
                    "p99": 102.736581,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 68.275026,
                    "min": 33.784026,
                    "p50": 62.026194999999994,
                    "p95": 68.275026,
                    "p99": 68.275026,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 344.47929,
                    "min": 296.32793499999997,
                    "p50": 325.268642,
                    "p95": 344.47929,
                    "p99": 344.47929,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 190.329086,
                    "min": 151.907206,
                    "p50": 184.317758,
                    "p95": 190.329086,
                    "p99": 190.329086,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 74.47740999999999,
                    "min": 38.966539,
                    "p50": 71.424593,
                    "p95": 74.47740999999999,
                    "p99": 74.47740999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 84.040026,
                    "min": 45.847769,
                    "p50": 77.582279,
                    "p95": 84.040026,
                    "p99": 84.040026,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 53.316759,
                    "min": 27.497511,
                    "p50": 50.548913999999996,
                    "p95": 53.316759,
                    "p99": 53.316759,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 45.394431999999995,
                    "min": 29.656564,
                    "p50": 30.680470999999997,
                    "p95": 45.394431999999995,
                    "p99": 45.394431999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.810015,
                    "min": 25.149285,
                    "p50": 27.557764,
                    "p95": 28.810015,
                    "p99": 28.810015,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 94.804042,
                    "min": 55.415043,
                    "p50": 82.19750599999999,
                    "p95": 94.804042,
                    "p99": 94.804042,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 68.10717199999999,
                    "min": 36.164076,
                    "p50": 62.421993,
                    "p95": 68.10717199999999,
                    "p99": 68.10717199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 86.55902499999999,
                    "min": 46.089588,
                    "p50": 85.486677,
                    "p95": 86.55902499999999,
                    "p99": 86.55902499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 44.820696999999996,
                    "min": 27.762742,
                    "p50": 44.024591,
                    "p95": 44.820696999999996,
                    "p99": 44.820696999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 79.871811,
                    "min": 42.603066,
                    "p50": 62.656425999999996,
                    "p95": 79.871811,
                    "p99": 79.871811,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 34.930839999999996,
                    "min": 33.245605999999995,
                    "p50": 33.466304,
                    "p95": 34.930839999999996,
                    "p99": 34.930839999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.007848,
                    "min": 22.365892,
                    "p50": 26.711116999999998,
                    "p95": 27.007848,
                    "p99": 27.007848,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 164.79483,
                    "min": 123.237849,
                    "p50": 162.88092899999998,
                    "p95": 164.79483,
                    "p99": 164.79483,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 97.599256,
                    "min": 58.24567,
                    "p50": 86.53730999999999,
                    "p95": 97.599256,
                    "p99": 97.599256,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 188.081298,
                    "min": 173.65912,
                    "p50": 180.215534,
                    "p95": 188.081298,
                    "p99": 188.081298,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 90.05824199999999,
                    "min": 51.918946,
                    "p50": 72.11070099999999,
                    "p95": 90.05824199999999,
                    "p99": 90.05824199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 84.113041,
                    "min": 45.348884999999996,
                    "p50": 83.9045,
                    "p95": 84.113041,
                    "p99": 84.113041,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 60.399901,
                    "min": 31.536192999999997,
                    "p50": 58.565095,
                    "p95": 60.399901,
                    "p99": 60.399901,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 135.07745599999998,
                    "min": 101.595869,
                    "p50": 131.123691,
                    "p95": 135.07745599999998,
                    "p99": 135.07745599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 119.083078,
                    "min": 99.016565,
                    "p50": 118.018298,
                    "p95": 119.083078,
                    "p99": 119.083078,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 251.94153899999998,
                    "min": 210.60421,
                    "p50": 240.668036,
                    "p95": 251.94153899999998,
                    "p99": 251.94153899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 95.33800199999999,
                    "min": 64.06490099999999,
                    "p50": 66.551178,
                    "p95": 95.33800199999999,
                    "p99": 95.33800199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 739.764851,
                    "min": 695.8919119999999,
                    "p50": 728.380757,
                    "p95": 739.764851,
                    "p99": 739.764851,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 75.988523,
                    "min": 56.847468,
                    "p50": 71.70727099999999,
                    "p95": 75.988523,
                    "p99": 75.988523,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 135.462184,
                    "min": 94.33986499999999,
                    "p50": 132.329778,
                    "p95": 135.462184,
                    "p99": 135.462184,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 126.809165,
                    "min": 98.31136099999999,
                    "p50": 125.37642,
                    "p95": 126.809165,
                    "p99": 126.809165,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 324.623652,
                    "min": 283.79431999999997,
                    "p50": 315.191438,
                    "p95": 324.623652,
                    "p99": 324.623652,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.889390999999996,
                    "min": 26.648118,
                    "p50": 44.980604,
                    "p95": 47.889390999999996,
                    "p99": 47.889390999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 152.47366499999998,
                    "min": 108.33265399999999,
                    "p50": 144.40751899999998,
                    "p95": 152.47366499999998,
                    "p99": 152.47366499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 111.997091,
                    "min": 72.361691,
                    "p50": 109.19714499999999,
                    "p95": 111.997091,
                    "p99": 111.997091,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 389.40864899999997,
                    "min": 346.63908299999997,
                    "p50": 375.36822,
                    "p95": 389.40864899999997,
                    "p99": 389.40864899999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 563.018904,
                    "min": 556.2588559999999,
                    "p50": 562.4090719999999,
                    "p95": 563.018904,
                    "p99": 563.018904,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 488.662583,
                    "min": 446.261557,
                    "p50": 480.606411,
                    "p95": 488.662583,
                    "p99": 488.662583,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 709.613668,
                    "min": 666.969671,
                    "p50": 696.1016589999999,
                    "p95": 709.613668,
                    "p99": 709.613668,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.506221,
                    "min": 221.72877499999998,
                    "p50": 249.13814,
                    "p95": 261.506221,
                    "p99": 261.506221,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 337.377549,
                    "min": 321.673415,
                    "p50": 327.515088,
                    "p95": 337.377549,
                    "p99": 337.377549,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 638.6708639999999,
                    "min": 597.1849159999999,
                    "p50": 622.45929,
                    "p95": 638.6708639999999,
                    "p99": 638.6708639999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 411.356942,
                    "min": 368.939796,
                    "p50": 372.051645,
                    "p95": 411.356942,
                    "p99": 411.356942,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 766.520276,
                    "min": 734.466136,
                    "p50": 743.054459,
                    "p95": 766.520276,
                    "p99": 766.520276,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 265.145924,
                    "min": 223.613179,
                    "p50": 242.368022,
                    "p95": 265.145924,
                    "p99": 265.145924,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 633.4749519999999,
                    "min": 586.37646,
                    "p50": 625.628603,
                    "p95": 633.4749519999999,
                    "p99": 633.4749519999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 486.266104,
                    "min": 442.563003,
                    "p50": 471.30540199999996,
                    "p95": 486.266104,
                    "p99": 486.266104,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 556.673245,
                    "min": 515.864594,
                    "p50": 540.612181,
                    "p95": 556.673245,
                    "p99": 556.673245,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 698.891862,
                    "min": 665.7333639999999,
                    "p50": 682.98926,
                    "p95": 698.891862,
                    "p99": 698.891862,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 338.325669,
                    "min": 315.472286,
                    "p50": 333.25899599999997,
                    "p95": 338.325669,
                    "p99": 338.325669,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 408.57487299999997,
                    "min": 367.08790899999997,
                    "p50": 401.972779,
                    "p95": 408.57487299999997,
                    "p99": 408.57487299999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.65516299999996,
                    "min": 238.059865,
                    "p50": 264.778569,
                    "p95": 280.65516299999996,
                    "p99": 280.65516299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 463.44478699999996,
                    "min": 426.36805699999996,
                    "p50": 446.703956,
                    "p95": 463.44478699999996,
                    "p99": 463.44478699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 610.318345,
                    "min": 524.884137,
                    "p50": 570.0067809999999,
                    "p95": 610.318345,
                    "p99": 610.318345,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 415.055746,
                    "min": 366.377817,
                    "p50": 394.563153,
                    "p95": 415.055746,
                    "p99": 415.055746,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 758.952466,
                    "min": 724.434864,
                    "p50": 745.095468,
                    "p95": 758.952466,
                    "p99": 758.952466,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.00703199999998,
                    "min": 192.33675499999998,
                    "p50": 211.73483099999999,
                    "p95": 218.00703199999998,
                    "p99": 218.00703199999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 646.409233,
                    "min": 604.3796219999999,
                    "p50": 632.2362949999999,
                    "p95": 646.409233,
                    "p99": 646.409233,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 513.864288,
                    "min": 485.52184,
                    "p50": 505.21344799999997,
                    "p95": 513.864288,
                    "p99": 513.864288,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 357.97137499999997,
                    "min": 301.341456,
                    "p50": 337.09969,
                    "p95": 357.97137499999997,
                    "p99": 357.97137499999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 707.44579,
                    "min": 664.451517,
                    "p50": 691.345317,
                    "p95": 707.44579,
                    "p99": 707.44579,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 491.38248699999997,
                    "min": 451.688479,
                    "p50": 453.133768,
                    "p95": 491.38248699999997,
                    "p99": 491.38248699999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 643.35057,
                    "min": 600.782565,
                    "p50": 627.60617,
                    "p95": 643.35057,
                    "p99": 643.35057,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 192.57360599999998,
                    "min": 152.443702,
                    "p50": 183.517439,
                    "p95": 192.57360599999998,
                    "p99": 192.57360599999998,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 341.84101799999996,
                    "min": 303.20901,
                    "p50": 327.43710899999996,
                    "p95": 341.84101799999996,
                    "p99": 341.84101799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 569.244338,
                    "min": 527.172481,
                    "p50": 560.545224,
                    "p95": 569.244338,
                    "p99": 569.244338,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.006756,
                    "min": 228.26623099999998,
                    "p50": 261.28701,
                    "p95": 267.006756,
                    "p99": 267.006756,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 417.57260399999996,
                    "min": 375.665127,
                    "p50": 397.15041099999996,
                    "p95": 417.57260399999996,
                    "p99": 417.57260399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1173.16076,
                    "min": 1116.2405939999999,
                    "p50": 1151.785121,
                    "p95": 1173.16076,
                    "p99": 1173.16076,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 600.4191139999999,
                    "min": 548.472946,
                    "p50": 577.7851459999999,
                    "p95": 600.4191139999999,
                    "p99": 600.4191139999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 369.970885,
                    "min": 320.784548,
                    "p50": 355.595447,
                    "p95": 369.970885,
                    "p99": 369.970885,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1083.062342,
                    "min": 1002.509115,
                    "p50": 1060.608321,
                    "p95": 1083.062342,
                    "p99": 1083.062342,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 836.206289,
                    "min": 789.965683,
                    "p50": 823.478042,
                    "p95": 836.206289,
                    "p99": 836.206289,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 685.7297199999999,
                    "min": 631.838637,
                    "p50": 667.22383,
                    "p95": 685.7297199999999,
                    "p99": 685.7297199999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1020.0361959999999,
                    "min": 942.796421,
                    "p50": 979.4072,
                    "p95": 1020.0361959999999,
                    "p99": 1020.0361959999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 450.50597899999997,
                    "min": 391.488999,
                    "p50": 427.944378,
                    "p95": 450.50597899999997,
                    "p99": 450.50597899999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 282.137731,
                    "min": 235.639815,
                    "p50": 278.537211,
                    "p95": 282.137731,
                    "p99": 282.137731,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1473.467205,
                    "min": 1368.196448,
                    "p50": 1426.724358,
                    "p95": 1473.467205,
                    "p99": 1473.467205,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1260.00398,
                    "min": 1165.325284,
                    "p50": 1194.316394,
                    "p95": 1260.00398,
                    "p99": 1260.00398,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1640.0537749999999,
                    "min": 1551.853226,
                    "p50": 1613.046564,
                    "p95": 1640.0537749999999,
                    "p99": 1640.0537749999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 763.485024,
                    "min": 702.1467799999999,
                    "p50": 743.122902,
                    "p95": 763.485024,
                    "p99": 763.485024,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 915.0516329999999,
                    "min": 862.573444,
                    "p50": 899.545581,
                    "p95": 915.0516329999999,
                    "p99": 915.0516329999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 531.444208,
                    "min": 484.345157,
                    "p50": 500.791973,
                    "p95": 531.444208,
                    "p99": 531.444208,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 937.249616,
                    "min": 882.6510639999999,
                    "p50": 903.3354039999999,
                    "p95": 937.249616,
                    "p99": 937.249616,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 390.902252,
                    "min": 364.453035,
                    "p50": 377.41484299999996,
                    "p95": 390.902252,
                    "p99": 390.902252,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1052.686806,
                    "min": 1023.7877679999999,
                    "p50": 1043.578797,
                    "p95": 1052.686806,
                    "p99": 1052.686806,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 726.2770049999999,
                    "min": 666.877311,
                    "p50": 684.751888,
                    "p95": 726.2770049999999,
                    "p99": 726.2770049999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 316.82140699999997,
                    "min": 271.129618,
                    "p50": 294.981272,
                    "p95": 316.82140699999997,
                    "p99": 316.82140699999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 451.90337,
                    "min": 407.891469,
                    "p50": 445.271393,
                    "p95": 451.90337,
                    "p99": 451.90337,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 854.726759,
                    "min": 799.709158,
                    "p50": 840.216506,
                    "p95": 854.726759,
                    "p99": 854.726759,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1001.307026,
                    "min": 958.5054819999999,
                    "p50": 981.2101,
                    "p95": 1001.307026,
                    "p99": 1001.307026,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1426.3322679999999,
                    "min": 1349.105128,
                    "p50": 1390.8968869999999,
                    "p95": 1426.3322679999999,
                    "p99": 1426.3322679999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 522.59236,
                    "min": 472.952888,
                    "p50": 504.252441,
                    "p95": 522.59236,
                    "p99": 522.59236,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1267.248371,
                    "min": 1186.921866,
                    "p50": 1202.953458,
                    "p95": 1267.248371,
                    "p99": 1267.248371,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 597.69345,
                    "min": 535.589071,
                    "p50": 572.704919,
                    "p95": 597.69345,
                    "p99": 597.69345,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 811.682543,
                    "min": 743.688013,
                    "p50": 784.804938,
                    "p95": 811.682543,
                    "p99": 811.682543,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 669.558503,
                    "min": 624.582237,
                    "p50": 646.018528,
                    "p95": 669.558503,
                    "p99": 669.558503,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.934327,
                    "min": 213.70268099999998,
                    "p50": 242.845857,
                    "p95": 248.934327,
                    "p99": 248.934327,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 448.51083,
                    "min": 393.61562899999996,
                    "p50": 402.312406,
                    "p95": 448.51083,
                    "p99": 448.51083,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 676.7623699999999,
                    "min": 646.205424,
                    "p50": 661.181881,
                    "p95": 676.7623699999999,
                    "p99": 676.7623699999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 606.420119,
                    "min": 549.641499,
                    "p50": 584.4346869999999,
                    "p95": 606.420119,
                    "p99": 606.420119,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1457.652726,
                    "min": 1370.283272,
                    "p50": 1398.228201,
                    "p95": 1457.652726,
                    "p99": 1457.652726,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1238.701038,
                    "min": 1154.559963,
                    "p50": 1199.530349,
                    "p95": 1238.701038,
                    "p99": 1238.701038,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 284.347293,
                    "min": 237.71167,
                    "p50": 273.832703,
                    "p95": 284.347293,
                    "p99": 284.347293,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 935.471645,
                    "min": 850.196639,
                    "p50": 892.528118,
                    "p95": 935.471645,
                    "p99": 935.471645,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 834.6678989999999,
                    "min": 769.58357,
                    "p50": 806.4726089999999,
                    "p95": 834.6678989999999,
                    "p99": 834.6678989999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 354.687392,
                    "min": 336.928225,
                    "p50": 348.264861,
                    "p95": 354.687392,
                    "p99": 354.687392,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1003.274917,
                    "min": 940.7992879999999,
                    "p50": 967.3525089999999,
                    "p95": 1003.274917,
                    "p99": 1003.274917,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 759.709965,
                    "min": 703.989288,
                    "p50": 735.5582019999999,
                    "p95": 759.709965,
                    "p99": 759.709965,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1643.0950109999999,
                    "min": 1562.0937729999998,
                    "p50": 1596.4892519999999,
                    "p95": 1643.0950109999999,
                    "p99": 1643.0950109999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1154.386677,
                    "min": 1100.5744419999999,
                    "p50": 1127.9674579999999,
                    "p95": 1154.386677,
                    "p99": 1154.386677,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 531.661313,
                    "min": 469.55641799999995,
                    "p50": 511.29959299999996,
                    "p95": 531.661313,
                    "p99": 531.661313,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1093.519779,
                    "min": 1011.5600059999999,
                    "p50": 1063.750203,
                    "p95": 1093.519779,
                    "p99": 1093.519779,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1664.1025089999998,
                    "min": 1527.00427,
                    "p50": 1599.6314659999998,
                    "p95": 1664.1025089999998,
                    "p99": 1664.1025089999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 352.167959,
                    "min": 317.43591,
                    "p50": 342.995966,
                    "p95": 352.167959,
                    "p99": 352.167959,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 768.870068,
                    "min": 711.107996,
                    "p50": 748.7728569999999,
                    "p95": 768.870068,
                    "p99": 768.870068,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 851.538015,
                    "min": 790.143106,
                    "p50": 828.614113,
                    "p95": 851.538015,
                    "p99": 851.538015,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 932.261481,
                    "min": 863.147529,
                    "p50": 893.971147,
                    "p95": 932.261481,
                    "p99": 932.261481,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1461.5809809999998,
                    "min": 1380.054492,
                    "p50": 1418.358121,
                    "p95": 1461.5809809999998,
                    "p99": 1461.5809809999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 984.5781159999999,
                    "min": 932.8919209999999,
                    "p50": 967.313005,
                    "p95": 984.5781159999999,
                    "p99": 984.5781159999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1082.333664,
                    "min": 1011.3000609999999,
                    "p50": 1052.223919,
                    "p95": 1082.333664,
                    "p99": 1082.333664,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 281.864508,
                    "min": 238.82245799999998,
                    "p50": 266.884119,
                    "p95": 281.864508,
                    "p99": 281.864508,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 511.07536899999997,
                    "min": 466.057007,
                    "p50": 482.708554,
                    "p95": 511.07536899999997,
                    "p99": 511.07536899999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 443.84631299999995,
                    "min": 396.285281,
                    "p50": 415.763689,
                    "p95": 443.84631299999995,
                    "p99": 443.84631299999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1247.564328,
                    "min": 1184.1011959999998,
                    "p50": 1203.073652,
                    "p95": 1247.564328,
                    "p99": 1247.564328,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 680.873851,
                    "min": 630.1935649999999,
                    "p50": 653.438272,
                    "p95": 680.873851,
                    "p99": 680.873851,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1166.627675,
                    "min": 1098.343966,
                    "p50": 1149.381361,
                    "p95": 1166.627675,
                    "p99": 1166.627675,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 612.697398,
                    "min": 561.349439,
                    "p50": 591.1377299999999,
                    "p95": 612.697398,
                    "p99": 612.697398,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 358.51566299999996,
                    "min": 333.774799,
                    "p50": 349.90188,
                    "p95": 358.51566299999996,
                    "p99": 358.51566299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.095289,
                    "min": 58.587160999999995,
                    "p50": 77.26858,
                    "p95": 85.095289,
                    "p99": 85.095289,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1380.2953679999998,
                    "min": 1314.493346,
                    "p50": 1356.3672299999998,
                    "p95": 1380.2953679999998,
                    "p99": 1380.2953679999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 316.59743199999997,
                    "min": 279.741517,
                    "p50": 307.34842399999997,
                    "p95": 316.59743199999997,
                    "p99": 316.59743199999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 454.285733,
                    "min": 417.700151,
                    "p50": 440.366497,
                    "p95": 454.285733,
                    "p99": 454.285733,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 184.475665,
                    "min": 139.728576,
                    "p50": 162.05557199999998,
                    "p95": 184.475665,
                    "p99": 184.475665,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 585.687507,
                    "min": 536.5474909999999,
                    "p50": 579.706695,
                    "p95": 585.687507,
                    "p99": 585.687507,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.50204199999999,
                    "min": 85.951764,
                    "p50": 108.76914099999999,
                    "p95": 123.50204199999999,
                    "p99": 123.50204199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.733934,
                    "min": 111.528825,
                    "p50": 137.429384,
                    "p95": 148.733934,
                    "p99": 148.733934,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 88.90582099999999,
                    "min": 44.505268,
                    "p50": 76.891594,
                    "p95": 88.90582099999999,
                    "p99": 88.90582099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.238947,
                    "min": 125.46978999999999,
                    "p50": 162.695314,
                    "p95": 163.238947,
                    "p99": 163.238947,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.94573,
                    "min": 94.727201,
                    "p50": 124.35976199999999,
                    "p95": 139.94573,
                    "p99": 139.94573,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.74976099999998,
                    "min": 152.654506,
                    "p50": 181.748861,
                    "p95": 191.74976099999998,
                    "p99": 191.74976099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 217.53094199999998,
                    "min": 204.500319,
                    "p50": 214.057256,
                    "p95": 217.53094199999998,
                    "p99": 217.53094199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.277445,
                    "min": 165.875982,
                    "p50": 202.726633,
                    "p95": 205.277445,
                    "p99": 205.277445,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 719.20587,
                    "min": 678.865413,
                    "p50": 712.842224,
                    "p95": 719.20587,
                    "p99": 719.20587,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.29787499999999,
                    "min": 72.768204,
                    "p50": 109.003146,
                    "p95": 110.29787499999999,
                    "p99": 110.29787499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 238.24734899999999,
                    "min": 191.967432,
                    "p50": 227.36064199999998,
                    "p95": 238.24734899999999,
                    "p99": 238.24734899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 249.740289,
                    "min": 203.472073,
                    "p50": 234.270871,
                    "p95": 249.740289,
                    "p99": 249.740289,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 218.08184699999998,
                    "min": 175.49112,
                    "p50": 211.948149,
                    "p95": 218.08184699999998,
                    "p99": 218.08184699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1335.050731,
                    "min": 1266.691911,
                    "p50": 1310.91661,
                    "p95": 1335.050731,
                    "p99": 1335.050731,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 226.548355,
                    "min": 204.966216,
                    "p50": 215.23191799999998,
                    "p95": 226.548355,
                    "p99": 226.548355,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 162.934618,
                    "min": 121.944904,
                    "p50": 148.45726299999998,
                    "p95": 162.934618,
                    "p99": 162.934618,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.24432,
                    "min": 231.82708499999998,
                    "p50": 260.431453,
                    "p95": 270.24432,
                    "p99": 270.24432,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 306.532911,
                    "min": 271.544903,
                    "p50": 303.802611,
                    "p95": 306.532911,
                    "p99": 306.532911,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.15341,
                    "min": 69.871016,
                    "p50": 107.75405599999999,
                    "p95": 109.15341,
                    "p99": 109.15341,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 174.277173,
                    "min": 133.75090699999998,
                    "p50": 171.843406,
                    "p95": 174.277173,
                    "p99": 174.277173,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.68635,
                    "min": 95.167712,
                    "p50": 120.629702,
                    "p95": 134.68635,
                    "p99": 134.68635,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 243.06110999999999,
                    "min": 199.606317,
                    "p50": 234.554125,
                    "p95": 243.06110999999999,
                    "p99": 243.06110999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 199.285045,
                    "min": 163.015906,
                    "p50": 195.768688,
                    "p95": 199.285045,
                    "p99": 199.285045,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 572.676339,
                    "min": 522.428725,
                    "p50": 561.828293,
                    "p95": 572.676339,
                    "p99": 572.676339,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 446.11873399999996,
                    "min": 394.53205199999996,
                    "p50": 417.108496,
                    "p95": 446.11873399999996,
                    "p99": 446.11873399999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 195.362609,
                    "min": 147.643544,
                    "p50": 182.54765999999998,
                    "p95": 195.362609,
                    "p99": 195.362609,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 80.704065,
                    "min": 42.278842999999995,
                    "p50": 72.879832,
                    "p95": 80.704065,
                    "p99": 80.704065,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.396304,
                    "min": 106.613982,
                    "p50": 146.957674,
                    "p95": 149.396304,
                    "p99": 149.396304,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.753699,
                    "min": 55.736776,
                    "p50": 82.275688,
                    "p95": 93.753699,
                    "p99": 93.753699,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.0474,
                    "min": 108.124639,
                    "p50": 110.94742799999999,
                    "p95": 121.0474,
                    "p99": 121.0474,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 703.498958,
                    "min": 664.9371739999999,
                    "p50": 694.891499,
                    "p95": 703.498958,
                    "p99": 703.498958,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.76297399999999,
                    "min": 106.19017799999999,
                    "p50": 132.979297,
                    "p95": 145.76297399999999,
                    "p99": 145.76297399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 233.690398,
                    "min": 192.776678,
                    "p50": 219.615108,
                    "p95": 233.690398,
                    "p99": 233.690398,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 203.76313399999998,
                    "min": 165.520549,
                    "p50": 191.521144,
                    "p95": 203.76313399999998,
                    "p99": 203.76313399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 131.112931,
                    "min": 89.22878,
                    "p50": 127.417138,
                    "p95": 131.112931,
                    "p99": 131.112931,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 333.243703,
                    "min": 295.10549599999996,
                    "p50": 325.328462,
                    "p95": 333.243703,
                    "p99": 333.243703,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 102.659043,
                    "min": 61.955208999999996,
                    "p50": 98.90529599999999,
                    "p95": 102.659043,
                    "p99": 102.659043,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 163.619849,
                    "min": 117.711762,
                    "p50": 152.575681,
                    "p95": 163.619849,
                    "p99": 163.619849,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 197.26628399999998,
                    "min": 148.59201199999998,
                    "p50": 152.352474,
                    "p95": 197.26628399999998,
                    "p99": 197.26628399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 264.618679,
                    "min": 249.724281,
                    "p50": 254.81832,
                    "p95": 264.618679,
                    "p99": 264.618679,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 485.81998,
                    "min": 440.92884999999995,
                    "p50": 469.98668699999996,
                    "p95": 485.81998,
                    "p99": 485.81998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 216.857802,
                    "min": 179.241088,
                    "p50": 206.24016799999998,
                    "p95": 216.857802,
                    "p99": 216.857802,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 176.45130799999998,
                    "min": 134.729022,
                    "p50": 172.691328,
                    "p95": 176.45130799999998,
                    "p99": 176.45130799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.10763299999999,
                    "min": 75.49852,
                    "p50": 102.793493,
                    "p95": 115.10763299999999,
                    "p99": 115.10763299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 250.973596,
                    "min": 205.253268,
                    "p50": 234.84051399999998,
                    "p95": 250.973596,
                    "p99": 250.973596,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 300.336479,
                    "min": 259.071079,
                    "p50": 293.69359,
                    "p95": 300.336479,
                    "p99": 300.336479,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 625.825381,
                    "min": 577.015096,
                    "p50": 595.518123,
                    "p95": 625.825381,
                    "p99": 625.825381,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 770.450966,
                    "min": 716.573037,
                    "p50": 743.398062,
                    "p95": 770.450966,
                    "p99": 770.450966,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1487.694573,
                    "min": 1434.8480969999998,
                    "p50": 1473.1280399999998,
                    "p95": 1487.694573,
                    "p99": 1487.694573,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.51937799999999,
                    "min": 71.367186,
                    "p50": 84.77706599999999,
                    "p95": 86.51937799999999,
                    "p99": 86.51937799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 702.177871,
                    "min": 649.303696,
                    "p50": 685.894994,
                    "p95": 702.177871,
                    "p99": 702.177871,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 213.301594,
                    "min": 173.793636,
                    "p50": 179.08296099999998,
                    "p95": 213.301594,
                    "p99": 213.301594,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 173.368086,
                    "min": 134.45793899999998,
                    "p50": 165.825462,
                    "p95": 173.368086,
                    "p99": 173.368086,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.97996799999999,
                    "min": 201.095494,
                    "p50": 223.2652,
                    "p95": 237.97996799999999,
                    "p99": 237.97996799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 123.099982,
                    "min": 94.749112,
                    "p50": 121.57445899999999,
                    "p95": 123.099982,
                    "p99": 123.099982,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.30990899999999,
                    "min": 68.360271,
                    "p50": 70.752554,
                    "p95": 106.30990899999999,
                    "p99": 106.30990899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.456977,
                    "min": 43.173848,
                    "p50": 64.30120699999999,
                    "p95": 84.456977,
                    "p99": 84.456977,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 186.288188,
                    "min": 148.924421,
                    "p50": 172.817834,
                    "p95": 186.288188,
                    "p99": 186.288188,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 271.957141,
                    "min": 232.594123,
                    "p50": 264.31347999999997,
                    "p95": 271.957141,
                    "p99": 271.957141,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 120.957712,
                    "min": 82.625427,
                    "p50": 108.184263,
                    "p95": 120.957712,
                    "p99": 120.957712,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 146.588315,
                    "min": 109.266267,
                    "p50": 129.172277,
                    "p95": 146.588315,
                    "p99": 146.588315,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 225.71962599999998,
                    "min": 184.66572299999999,
                    "p50": 214.78537,
                    "p95": 225.71962599999998,
                    "p99": 225.71962599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 563.493374,
                    "min": 532.138649,
                    "p50": 560.349836,
                    "p95": 563.493374,
                    "p99": 563.493374,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1334.689504,
                    "min": 1260.410872,
                    "p50": 1314.233682,
                    "p95": 1334.689504,
                    "p99": 1334.689504,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 160.298386,
                    "min": 119.19535599999999,
                    "p50": 157.676393,
                    "p95": 160.298386,
                    "p99": 160.298386,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 307.927848,
                    "min": 291.850817,
                    "p50": 299.919939,
                    "p95": 307.927848,
                    "p99": 307.927848,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 199.47763899999998,
                    "min": 156.934395,
                    "p50": 198.19230199999998,
                    "p95": 199.47763899999998,
                    "p99": 199.47763899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.442842,
                    "min": 56.074948,
                    "p50": 82.777743,
                    "p95": 96.442842,
                    "p99": 96.442842,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 439.234712,
                    "min": 395.087254,
                    "p50": 430.75172,
                    "p95": 439.234712,
                    "p99": 439.234712,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.228244,
                    "min": 214.469167,
                    "p50": 240.238992,
                    "p95": 243.228244,
                    "p99": 243.228244,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 181.364161,
                    "min": 137.468749,
                    "p50": 174.012889,
                    "p95": 181.364161,
                    "p99": 181.364161,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 267.03680299999996,
                    "min": 224.021997,
                    "p50": 256.731747,
                    "p95": 267.03680299999996,
                    "p99": 267.03680299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 949.4607289999999,
                    "min": 873.776118,
                    "p50": 925.399149,
                    "p95": 949.4607289999999,
                    "p99": 949.4607289999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 630.1151219999999,
                    "min": 592.454892,
                    "p50": 621.0640559999999,
                    "p95": 630.1151219999999,
                    "p99": 630.1151219999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 805.388395,
                    "min": 668.2716919999999,
                    "p50": 712.4604049999999,
                    "p95": 805.388395,
                    "p99": 805.388395,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 993.7630079999999,
                    "min": 764.0130909999999,
                    "p50": 803.173425,
                    "p95": 993.7630079999999,
                    "p99": 993.7630079999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 924.2252729999999,
                    "min": 398.986772,
                    "p50": 421.714199,
                    "p95": 924.2252729999999,
                    "p99": 924.2252729999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.293171,
                    "min": 278.65826,
                    "p50": 301.218084,
                    "p95": 318.293171,
                    "p99": 318.293171,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 410.928165,
                    "min": 364.993535,
                    "p50": 395.09763799999996,
                    "p95": 410.928165,
                    "p99": 410.928165,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 364.97491299999996,
                    "min": 316.497796,
                    "p50": 345.419878,
                    "p95": 364.97491299999996,
                    "p99": 364.97491299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 502.47930099999996,
                    "min": 465.677963,
                    "p50": 489.91972899999996,
                    "p95": 502.47930099999996,
                    "p99": 502.47930099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 538.415266,
                    "min": 488.04002099999997,
                    "p50": 526.876461,
                    "p95": 538.415266,
                    "p99": 538.415266,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 680.703708,
                    "min": 634.723659,
                    "p50": 645.752042,
                    "p95": 680.703708,
                    "p99": 680.703708,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 585.18953,
                    "min": 524.8583189999999,
                    "p50": 571.595237,
                    "p95": 585.18953,
                    "p99": 585.18953,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 558.512735,
                    "min": 499.33406299999996,
                    "p50": 536.689458,
                    "p95": 558.512735,
                    "p99": 558.512735,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 640.147293,
                    "min": 578.259958,
                    "p50": 621.831777,
                    "p95": 640.147293,
                    "p99": 640.147293,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 673.188712,
                    "min": 630.006474,
                    "p50": 660.902786,
                    "p95": 673.188712,
                    "p99": 673.188712,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.17383099999998,
                    "min": 183.34038999999999,
                    "p50": 212.89551899999998,
                    "p95": 223.17383099999998,
                    "p99": 223.17383099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 268.19182,
                    "min": 220.75029899999998,
                    "p50": 254.632712,
                    "p95": 268.19182,
                    "p99": 268.19182,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 361.784838,
                    "min": 324.560344,
                    "p50": 353.232422,
                    "p95": 361.784838,
                    "p99": 361.784838,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 315.637369,
                    "min": 269.918889,
                    "p50": 278.223444,
                    "p95": 315.637369,
                    "p99": 315.637369,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 494.027288,
                    "min": 460.36234099999996,
                    "p50": 488.991206,
                    "p95": 494.027288,
                    "p99": 494.027288,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.11636199999998,
                    "min": 165.208273,
                    "p50": 176.383391,
                    "p95": 180.11636199999998,
                    "p99": 180.11636199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 412.991478,
                    "min": 368.675527,
                    "p50": 391.923792,
                    "p95": 412.991478,
                    "p99": 412.991478,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 847.3103629999999,
                    "min": 795.36162,
                    "p50": 820.2865439999999,
                    "p95": 847.3103629999999,
                    "p99": 847.3103629999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 935.7732649999999,
                    "min": 889.6847429999999,
                    "p50": 922.573141,
                    "p95": 935.7732649999999,
                    "p99": 935.7732649999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 713.7749329999999,
                    "min": 683.093619,
                    "p50": 702.562948,
                    "p95": 713.7749329999999,
                    "p99": 713.7749329999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 445.384062,
                    "min": 401.62622,
                    "p50": 425.236721,
                    "p95": 445.384062,
                    "p99": 445.384062,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 592.790655,
                    "min": 548.183321,
                    "p50": 576.983651,
                    "p95": 592.790655,
                    "p99": 592.790655,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 647.797474,
                    "min": 617.7648929999999,
                    "p50": 634.065157,
                    "p95": 647.797474,
                    "p99": 647.797474,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 612.725467,
                    "min": 555.265671,
                    "p50": 605.414239,
                    "p95": 612.725467,
                    "p99": 612.725467,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 697.43251,
                    "min": 642.348112,
                    "p50": 669.126454,
                    "p95": 697.43251,
                    "p99": 697.43251,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 836.2822239999999,
                    "min": 739.912097,
                    "p50": 788.5193889999999,
                    "p95": 836.2822239999999,
                    "p99": 836.2822239999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 583.7601579999999,
                    "min": 523.614096,
                    "p50": 568.292234,
                    "p95": 583.7601579999999,
                    "p99": 583.7601579999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 535.347798,
                    "min": 477.13282,
                    "p50": 509.27941899999996,
                    "p95": 535.347798,
                    "p99": 535.347798,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 813.15329,
                    "min": 130.759852,
                    "p50": 162.488578,
                    "p95": 813.15329,
                    "p99": 813.15329,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 898.033555,
                    "min": 841.441065,
                    "p50": 881.465592,
                    "p95": 898.033555,
                    "p99": 898.033555,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 494.502375,
                    "min": 449.346575,
                    "p50": 483.02348,
                    "p95": 494.502375,
                    "p99": 494.502375,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 452.999538,
                    "min": 411.760771,
                    "p50": 437.89377299999995,
                    "p95": 452.999538,
                    "p99": 452.999538,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 310.59101999999996,
                    "min": 268.139741,
                    "p50": 304.567104,
                    "p95": 310.59101999999996,
                    "p99": 310.59101999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 397.138872,
                    "min": 356.62123199999996,
                    "p50": 385.90128599999997,
                    "p95": 397.138872,
                    "p99": 397.138872,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.00753,
                    "min": 316.117791,
                    "p50": 339.56888799999996,
                    "p95": 348.00753,
                    "p99": 348.00753,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 222.54495599999998,
                    "min": 171.942726,
                    "p50": 215.746173,
                    "p95": 222.54495599999998,
                    "p99": 222.54495599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 263.533488,
                    "min": 229.34228,
                    "p50": 261.091407,
                    "p95": 263.533488,
                    "p99": 263.533488,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 676.452721,
                    "min": 642.510905,
                    "p50": 667.3730429999999,
                    "p95": 676.452721,
                    "p99": 676.452721,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 738.293558,
                    "min": 674.773252,
                    "p50": 719.86586,
                    "p95": 738.293558,
                    "p99": 738.293558,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 590.612297,
                    "min": 533.689616,
                    "p50": 570.251034,
                    "p95": 590.612297,
                    "p99": 590.612297,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 835.654921,
                    "min": 785.482895,
                    "p50": 813.4351899999999,
                    "p95": 835.654921,
                    "p99": 835.654921,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 228.306275,
                    "min": 189.062899,
                    "p50": 210.995439,
                    "p95": 228.306275,
                    "p99": 228.306275,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 553.73471,
                    "min": 494.909253,
                    "p50": 528.59465,
                    "p95": 553.73471,
                    "p99": 553.73471,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 936.5813029999999,
                    "min": 900.270259,
                    "p50": 912.1907769999999,
                    "p95": 936.5813029999999,
                    "p99": 936.5813029999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 311.633057,
                    "min": 267.73269799999997,
                    "p50": 296.665151,
                    "p95": 311.633057,
                    "p99": 311.633057,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1124.9705139999999,
                    "min": 363.073236,
                    "p50": 386.10932299999996,
                    "p95": 1124.9705139999999,
                    "p99": 1124.9705139999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 371.067272,
                    "min": 313.675586,
                    "p50": 346.04995299999996,
                    "p95": 371.067272,
                    "p99": 371.067272,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 923.758915,
                    "min": 226.032837,
                    "p50": 260.245881,
                    "p95": 923.758915,
                    "p99": 923.758915,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 453.428425,
                    "min": 401.21358399999997,
                    "p50": 437.628317,
                    "p95": 453.428425,
                    "p99": 453.428425,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 504.659858,
                    "min": 463.56201599999997,
                    "p50": 491.435956,
                    "p95": 504.659858,
                    "p99": 504.659858,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.45370599999998,
                    "min": 139.390839,
                    "p50": 168.15524399999998,
                    "p95": 178.45370599999998,
                    "p99": 178.45370599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 633.8189199999999,
                    "min": 581.2280089999999,
                    "p50": 614.752392,
                    "p95": 633.8189199999999,
                    "p99": 633.8189199999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 683.308936,
                    "min": 642.479246,
                    "p50": 675.331866,
                    "p95": 683.308936,
                    "p99": 683.308936,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 427.289489,
                    "min": 380.88863799999996,
                    "p50": 396.02284399999996,
                    "p95": 427.289489,
                    "p99": 427.289489,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.407601,
                    "min": 489.620455,
                    "p50": 499.913591,
                    "p95": 516.407601,
                    "p99": 516.407601,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 339.720291,
                    "min": 298.721954,
                    "p50": 335.27788899999996,
                    "p95": 339.720291,
                    "p99": 339.720291,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 296.640058,
                    "min": 254.43329599999998,
                    "p50": 285.762001,
                    "p95": 296.640058,
                    "p99": 296.640058,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 466.03885599999995,
                    "min": 423.570542,
                    "p50": 450.928584,
                    "p95": 466.03885599999995,
                    "p99": 466.03885599999995,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.57844,
                    "min": 131.63140199999998,
                    "p50": 155.322351,
                    "p95": 168.57844,
                    "p99": 168.57844,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.716018,
                    "min": 171.471499,
                    "p50": 181.25949799999998,
                    "p95": 209.716018,
                    "p99": 209.716018,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 380.79594399999996,
                    "min": 338.682544,
                    "p50": 360.392514,
                    "p95": 380.79594399999996,
                    "p99": 380.79594399999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 251.97839199999999,
                    "min": 214.08497799999998,
                    "p50": 241.06259699999998,
                    "p95": 251.97839199999999,
                    "p99": 251.97839199999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 883.977054,
                    "min": 849.134597,
                    "p50": 874.261712,
                    "p95": 883.977054,
                    "p99": 883.977054,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 551.421325,
                    "min": 511.279178,
                    "p50": 535.862524,
                    "p95": 551.421325,
                    "p99": 551.421325,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 778.6900099999999,
                    "min": 736.019202,
                    "p50": 759.571466,
                    "p95": 778.6900099999999,
                    "p99": 778.6900099999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 635.703912,
                    "min": 591.575529,
                    "p50": 616.016079,
                    "p95": 635.703912,
                    "p99": 635.703912,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 591.3412149999999,
                    "min": 548.547181,
                    "p50": 574.589608,
                    "p95": 591.3412149999999,
                    "p99": 591.3412149999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1306.0133839999999,
                    "min": 1262.210883,
                    "p50": 1283.753314,
                    "p95": 1306.0133839999999,
                    "p99": 1306.0133839999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 567.032878,
                    "min": 510.984537,
                    "p50": 546.305172,
                    "p95": 567.032878,
                    "p99": 567.032878,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 424.122711,
                    "min": 368.963446,
                    "p50": 404.293349,
                    "p95": 424.122711,
                    "p99": 424.122711,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 488.595892,
                    "min": 454.315627,
                    "p50": 480.40063699999996,
                    "p95": 488.595892,
                    "p99": 488.595892,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 734.753828,
                    "min": 701.14788,
                    "p50": 726.179746,
                    "p95": 734.753828,
                    "p99": 734.753828,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 649.205198,
                    "min": 597.63263,
                    "p50": 623.059677,
                    "p95": 649.205198,
                    "p99": 649.205198,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 460.12355599999995,
                    "min": 413.65310999999997,
                    "p50": 445.94487399999997,
                    "p95": 460.12355599999995,
                    "p99": 460.12355599999995,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 147.634221,
                    "min": 106.46551199999999,
                    "p50": 136.244282,
                    "p95": 147.634221,
                    "p99": 147.634221,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.125947,
                    "min": 135.83748699999998,
                    "p50": 176.099649,
                    "p95": 181.125947,
                    "p99": 181.125947,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 383.646747,
                    "min": 334.752972,
                    "p50": 372.638551,
                    "p95": 383.646747,
                    "p99": 383.646747,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 252.02167,
                    "min": 219.450798,
                    "p50": 236.176246,
                    "p95": 252.02167,
                    "p99": 252.02167,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 349.04900599999996,
                    "min": 300.853731,
                    "p50": 339.95793499999996,
                    "p95": 349.04900599999996,
                    "p99": 349.04900599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 198.675132,
                    "min": 169.718336,
                    "p50": 178.88331399999998,
                    "p95": 198.675132,
                    "p99": 198.675132,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 533.2036469999999,
                    "min": 467.73193,
                    "p50": 503.569938,
                    "p95": 533.2036469999999,
                    "p99": 533.2036469999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 339.28416699999997,
                    "min": 269.74102999999997,
                    "p50": 308.348633,
                    "p95": 339.28416699999997,
                    "p99": 339.28416699999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 284.042808,
                    "min": 248.488247,
                    "p50": 271.361163,
                    "p95": 284.042808,
                    "p99": 284.042808,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 361.268245,
                    "min": 324.818193,
                    "p50": 350.22805,
                    "p95": 361.268245,
                    "p99": 361.268245,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 197.46252199999998,
                    "min": 129.36923099999998,
                    "p50": 163.154428,
                    "p95": 197.46252199999998,
                    "p99": 197.46252199999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 294.987728,
                    "min": 248.583115,
                    "p50": 286.142408,
                    "p95": 294.987728,
                    "p99": 294.987728,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 268.831506,
                    "min": 223.854522,
                    "p50": 250.68078699999998,
                    "p95": 268.831506,
                    "p99": 268.831506,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 232.41369,
                    "min": 192.213382,
                    "p50": 228.49814099999998,
                    "p95": 232.41369,
                    "p99": 232.41369,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 516.992897,
                    "min": 475.26611599999995,
                    "p50": 502.96126799999996,
                    "p95": 516.992897,
                    "p99": 516.992897,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 460.615505,
                    "min": 403.450028,
                    "p50": 423.070361,
                    "p95": 460.615505,
                    "p99": 460.615505,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 681.1931999999999,
                    "min": 635.439356,
                    "p50": 643.1751499999999,
                    "p95": 681.1931999999999,
                    "p99": 681.1931999999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1009.4459449999999,
                    "min": 922.5636109999999,
                    "p50": 984.6494339999999,
                    "p95": 1009.4459449999999,
                    "p99": 1009.4459449999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 422.63942099999997,
                    "min": 372.438094,
                    "p50": 415.134598,
                    "p95": 422.63942099999997,
                    "p99": 422.63942099999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 199.204772,
                    "min": 160.811085,
                    "p50": 187.11721799999998,
                    "p95": 199.204772,
                    "p99": 199.204772,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 380.947478,
                    "min": 341.81045,
                    "p50": 376.852714,
                    "p95": 380.947478,
                    "p99": 380.947478,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 139.946649,
                    "min": 95.50110099999999,
                    "p50": 126.233018,
                    "p95": 139.946649,
                    "p99": 139.946649,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 482.686757,
                    "min": 432.992684,
                    "p50": 470.401251,
                    "p95": 482.686757,
                    "p99": 482.686757,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 592.064229,
                    "min": 542.096311,
                    "p50": 567.904217,
                    "p95": 592.064229,
                    "p99": 592.064229,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 324.98463899999996,
                    "min": 280.630089,
                    "p50": 314.49614199999996,
                    "p95": 324.98463899999996,
                    "p99": 324.98463899999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1037.348658,
                    "min": 985.8114479999999,
                    "p50": 1001.690606,
                    "p95": 1037.348658,
                    "p99": 1037.348658,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 266.355804,
                    "min": 225.458101,
                    "p50": 251.218517,
                    "p95": 266.355804,
                    "p99": 266.355804,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.137439,
                    "min": 151.576437,
                    "p50": 181.47679499999998,
                    "p95": 185.137439,
                    "p99": 185.137439,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 335.266208,
                    "min": 298.79971,
                    "p50": 313.710003,
                    "p95": 335.266208,
                    "p99": 335.266208,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 140.726193,
                    "min": 101.797848,
                    "p50": 104.300299,
                    "p95": 140.726193,
                    "p99": 140.726193,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 533.912935,
                    "min": 494.42031799999995,
                    "p50": 500.059437,
                    "p95": 533.912935,
                    "p99": 533.912935,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 415.92333199999996,
                    "min": 373.935451,
                    "p50": 407.82426799999996,
                    "p95": 415.92333199999996,
                    "p99": 415.92333199999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 390.55774499999995,
                    "min": 366.368517,
                    "p50": 383.790553,
                    "p95": 390.55774499999995,
                    "p99": 390.55774499999995,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.972747,
                    "min": 77.144007,
                    "p50": 111.79897199999999,
                    "p95": 116.972747,
                    "p99": 116.972747,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.869215,
                    "min": 126.778866,
                    "p50": 155.216317,
                    "p95": 168.869215,
                    "p99": 168.869215,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 471.24427599999996,
                    "min": 434.931065,
                    "p50": 459.86024599999996,
                    "p95": 471.24427599999996,
                    "p99": 471.24427599999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.555558,
                    "min": 204.759764,
                    "p50": 235.132182,
                    "p95": 242.555558,
                    "p99": 242.555558,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 322.614718,
                    "min": 288.697671,
                    "p50": 312.636648,
                    "p95": 322.614718,
                    "p99": 322.614718,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 212.44868,
                    "min": 176.146495,
                    "p50": 179.513645,
                    "p95": 212.44868,
                    "p99": 212.44868,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 359.5089,
                    "min": 320.465966,
                    "p50": 351.42431999999997,
                    "p95": 359.5089,
                    "p99": 359.5089,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 786.649717,
                    "min": 745.392583,
                    "p50": 777.2938369999999,
                    "p95": 786.649717,
                    "p99": 786.649717,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1277.853921,
                    "min": 1231.992655,
                    "p50": 1262.2265519999999,
                    "p95": 1277.853921,
                    "p99": 1277.853921,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 289.53959,
                    "min": 250.392855,
                    "p50": 280.827152,
                    "p95": 289.53959,
                    "p99": 289.53959,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 154.594202,
                    "min": 112.136181,
                    "p50": 138.769959,
                    "p95": 154.594202,
                    "p99": 154.594202,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 356.120698,
                    "min": 315.988189,
                    "p50": 351.499683,
                    "p95": 356.120698,
                    "p99": 356.120698,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 515.968295,
                    "min": 467.464887,
                    "p50": 504.777474,
                    "p95": 515.968295,
                    "p99": 515.968295,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 827.190061,
                    "min": 802.334152,
                    "p50": 812.527975,
                    "p95": 827.190061,
                    "p99": 827.190061,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 669.636698,
                    "min": 627.094109,
                    "p50": 658.328813,
                    "p95": 669.636698,
                    "p99": 669.636698,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 168.873639,
                    "min": 129.828003,
                    "p50": 166.16473399999998,
                    "p95": 168.873639,
                    "p99": 168.873639,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 316.107593,
                    "min": 276.732388,
                    "p50": 312.634664,
                    "p95": 316.107593,
                    "p99": 316.107593,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 143.522079,
                    "min": 96.799539,
                    "p50": 125.49806199999999,
                    "p95": 143.522079,
                    "p99": 143.522079,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 268.282404,
                    "min": 223.15290099999999,
                    "p50": 258.381083,
                    "p95": 268.282404,
                    "p99": 268.282404,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 278.908549,
                    "min": 237.96855499999998,
                    "p50": 268.907123,
                    "p95": 278.908549,
                    "p99": 278.908549,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 105.237693,
                    "min": 66.774126,
                    "p50": 103.98385599999999,
                    "p95": 105.237693,
                    "p99": 105.237693,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 215.416867,
                    "min": 173.77163199999998,
                    "p50": 206.757959,
                    "p95": 215.416867,
                    "p99": 215.416867,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 237.24166499999998,
                    "min": 189.352127,
                    "p50": 215.221319,
                    "p95": 237.24166499999998,
                    "p99": 237.24166499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 122.687829,
                    "min": 80.846267,
                    "p50": 82.25432599999999,
                    "p95": 122.687829,
                    "p99": 122.687829,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.34521099999999,
                    "min": 50.485377,
                    "p50": 75.184343,
                    "p95": 89.34521099999999,
                    "p99": 89.34521099999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 252.675896,
                    "min": 208.109208,
                    "p50": 238.641776,
                    "p95": 252.675896,
                    "p99": 252.675896,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 198.286557,
                    "min": 164.942567,
                    "p50": 185.380171,
                    "p95": 198.286557,
                    "p99": 198.286557,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 184.141561,
                    "min": 165.031503,
                    "p50": 180.44447699999998,
                    "p95": 184.141561,
                    "p99": 184.141561,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 476.916992,
                    "min": 314.26428699999997,
                    "p50": 354.185636,
                    "p95": 476.916992,
                    "p99": 476.916992,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 773.948863,
                    "min": 514.7688079999999,
                    "p50": 533.3049189999999,
                    "p95": 773.948863,
                    "p99": 773.948863,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 667.977926,
                    "min": 409.340259,
                    "p50": 446.691556,
                    "p95": 667.977926,
                    "p99": 667.977926,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.363787,
                    "min": 108.208417,
                    "p50": 136.17192799999998,
                    "p95": 187.363787,
                    "p99": 187.363787,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1079.033431,
                    "min": 715.700254,
                    "p50": 734.474847,
                    "p95": 1079.033431,
                    "p99": 1079.033431,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 465.060325,
                    "min": 273.517899,
                    "p50": 318.99508199999997,
                    "p95": 465.060325,
                    "p99": 465.060325,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 609.237748,
                    "min": 178.271793,
                    "p50": 216.464516,
                    "p95": 609.237748,
                    "p99": 609.237748,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 615.007626,
                    "min": 384.556824,
                    "p50": 423.830058,
                    "p95": 615.007626,
                    "p99": 615.007626,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 358.86785399999997,
                    "min": 212.45854699999998,
                    "p50": 244.490048,
                    "p95": 358.86785399999997,
                    "p99": 358.86785399999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 959.25995,
                    "min": 620.301913,
                    "p50": 656.942588,
                    "p95": 959.25995,
                    "p99": 959.25995,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 252.974437,
                    "min": 142.231582,
                    "p50": 178.406458,
                    "p95": 252.974437,
                    "p99": 252.974437,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 829.274201,
                    "min": 522.1444749999999,
                    "p50": 559.849778,
                    "p95": 829.274201,
                    "p99": 829.274201,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 404.41862599999996,
                    "min": 239.564686,
                    "p50": 272.967808,
                    "p95": 404.41862599999996,
                    "p99": 404.41862599999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 714.8434669999999,
                    "min": 454.19161699999995,
                    "p50": 492.218958,
                    "p95": 714.8434669999999,
                    "p99": 714.8434669999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 535.2162089999999,
                    "min": 351.41963499999997,
                    "p50": 376.328395,
                    "p95": 535.2162089999999,
                    "p99": 535.2162089999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.309467,
                    "min": 198.83977199999998,
                    "p50": 224.92681299999998,
                    "p95": 257.309467,
                    "p99": 257.309467,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 667.538684,
                    "min": 589.248352,
                    "p50": 596.3527359999999,
                    "p95": 667.538684,
                    "p99": 667.538684,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 418.479339,
                    "min": 356.012705,
                    "p50": 369.02756999999997,
                    "p95": 418.479339,
                    "p99": 418.479339,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 590.302545,
                    "min": 511.17508,
                    "p50": 538.752751,
                    "p95": 590.302545,
                    "p99": 590.302545,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 902.6442969999999,
                    "min": 786.026406,
                    "p50": 812.9170869999999,
                    "p95": 902.6442969999999,
                    "p99": 902.6442969999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.19021,
                    "min": 433.47351399999997,
                    "p50": 470.984248,
                    "p95": 516.19021,
                    "p99": 516.19021,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 646.1420469999999,
                    "min": 551.55458,
                    "p50": 582.0465459999999,
                    "p95": 646.1420469999999,
                    "p99": 646.1420469999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1337.953147,
                    "min": 1175.197416,
                    "p50": 1212.7124919999999,
                    "p95": 1337.953147,
                    "p99": 1337.953147,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.78939499999996,
                    "min": 277.128104,
                    "p50": 315.782462,
                    "p95": 341.78939499999996,
                    "p99": 341.78939499999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 458.01216999999997,
                    "min": 119.85317599999999,
                    "p50": 132.187746,
                    "p95": 458.01216999999997,
                    "p99": 458.01216999999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 471.46106,
                    "min": 394.809965,
                    "p50": 432.73407499999996,
                    "p95": 471.46106,
                    "p99": 471.46106,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 275.600432,
                    "min": 237.796978,
                    "p50": 260.888347,
                    "p95": 275.600432,
                    "p99": 275.600432,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 212.896718,
                    "min": 159.916687,
                    "p50": 186.506226,
                    "p95": 212.896718,
                    "p99": 212.896718,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 383.473529,
                    "min": 330.255885,
                    "p50": 352.79132599999997,
                    "p95": 383.473529,
                    "p99": 383.473529,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 792.5251489999999,
                    "min": 690.4391079999999,
                    "p50": 729.903373,
                    "p95": 792.5251489999999,
                    "p99": 792.5251489999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 543.286429,
                    "min": 469.57341299999996,
                    "p50": 503.978644,
                    "p95": 543.286429,
                    "p99": 543.286429,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 511.325044,
                    "min": 460.05553499999996,
                    "p50": 484.06139299999995,
                    "p95": 511.325044,
                    "p99": 511.325044,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 580.477637,
                    "min": 523.3035619999999,
                    "p50": 554.0185809999999,
                    "p95": 580.477637,
                    "p99": 580.477637,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 679.8730469999999,
                    "min": 556.138875,
                    "p50": 601.246005,
                    "p95": 679.8730469999999,
                    "p99": 679.8730469999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 379.616127,
                    "min": 348.66803799999997,
                    "p50": 373.926582,
                    "p95": 379.616127,
                    "p99": 379.616127,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 273.36245299999996,
                    "min": 258.291842,
                    "p50": 263.626885,
                    "p95": 273.36245299999996,
                    "p99": 273.36245299999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 350.542472,
                    "min": 309.799194,
                    "p50": 335.680924,
                    "p95": 350.542472,
                    "p99": 350.542472,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 197.346333,
                    "min": 151.270538,
                    "p50": 194.892245,
                    "p95": 197.346333,
                    "p99": 197.346333,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.225273,
                    "min": 192.473629,
                    "p50": 222.22594999999998,
                    "p95": 233.225273,
                    "p99": 233.225273,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 437.97779099999997,
                    "min": 373.234678,
                    "p50": 423.524618,
                    "p95": 437.97779099999997,
                    "p99": 437.97779099999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 317.275572,
                    "min": 261.972945,
                    "p50": 297.730479,
                    "p95": 317.275572,
                    "p99": 317.275572,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 795.597528,
                    "min": 749.282151,
                    "p50": 771.387306,
                    "p95": 795.597528,
                    "p99": 795.597528,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 475.570764,
                    "min": 413.532131,
                    "p50": 447.886581,
                    "p95": 475.570764,
                    "p99": 475.570764,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 709.181749,
                    "min": 656.9219009999999,
                    "p50": 697.801848,
                    "p95": 709.181749,
                    "p99": 709.181749,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.37187799999998,
                    "min": 114.674842,
                    "p50": 128.485539,
                    "p95": 153.37187799999998,
                    "p99": 153.37187799999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 549.906712,
                    "min": 482.81186299999996,
                    "p50": 508.607578,
                    "p95": 549.906712,
                    "p99": 549.906712,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 370.881437,
                    "min": 309.044512,
                    "p50": 336.217555,
                    "p95": 370.881437,
                    "p99": 370.881437,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 196.55883699999998,
                    "min": 155.828676,
                    "p50": 193.005357,
                    "p95": 196.55883699999998,
                    "p99": 196.55883699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 497.63203799999997,
                    "min": 105.23992799999999,
                    "p50": 132.356527,
                    "p95": 497.63203799999997,
                    "p99": 497.63203799999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 250.048203,
                    "min": 101.083445,
                    "p50": 117.2299,
                    "p95": 250.048203,
                    "p99": 250.048203,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 398.307547,
                    "min": 335.026329,
                    "p50": 363.148826,
                    "p95": 398.307547,
                    "p99": 398.307547,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 428.003297,
                    "min": 384.858663,
                    "p50": 419.265425,
                    "p95": 428.003297,
                    "p99": 428.003297,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 273.433149,
                    "min": 235.012867,
                    "p50": 263.64241899999996,
                    "p95": 273.433149,
                    "p99": 273.433149,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 595.001073,
                    "min": 515.592838,
                    "p50": 540.990082,
                    "p95": 595.001073,
                    "p99": 595.001073,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 324.13978299999997,
                    "min": 259.428903,
                    "p50": 294.017967,
                    "p95": 324.13978299999997,
                    "p99": 324.13978299999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 222.32971999999998,
                    "min": 182.52959199999998,
                    "p50": 208.599282,
                    "p95": 222.32971999999998,
                    "p99": 222.32971999999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 521.747263,
                    "min": 475.63518799999997,
                    "p50": 487.013128,
                    "p95": 521.747263,
                    "p99": 521.747263,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 399.696402,
                    "min": 361.116018,
                    "p50": 396.340865,
                    "p95": 399.696402,
                    "p99": 399.696402,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 179.560521,
                    "min": 131.38226799999998,
                    "p50": 168.945504,
                    "p95": 179.560521,
                    "p99": 179.560521,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 244.050184,
                    "min": 207.186794,
                    "p50": 230.775434,
                    "p95": 244.050184,
                    "p99": 244.050184,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 834.2721379999999,
                    "min": 768.108566,
                    "p50": 797.757226,
                    "p95": 834.2721379999999,
                    "p99": 834.2721379999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 328.432053,
                    "min": 283.28412299999997,
                    "p50": 323.92637199999996,
                    "p95": 328.432053,
                    "p99": 328.432053,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1106.8204,
                    "min": 1019.465838,
                    "p50": 1051.977067,
                    "p95": 1106.8204,
                    "p99": 1106.8204,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 463.739439,
                    "min": 424.719521,
                    "p50": 457.683521,
                    "p95": 463.739439,
                    "p99": 463.739439,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.65819599999998,
                    "min": 237.296519,
                    "p50": 251.62259699999998,
                    "p95": 253.65819599999998,
                    "p99": 253.65819599999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 893.143066,
                    "min": 843.711643,
                    "p50": 875.9961149999999,
                    "p95": 893.143066,
                    "p99": 893.143066,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 635.130489,
                    "min": 591.6511489999999,
                    "p50": 624.0617139999999,
                    "p95": 635.130489,
                    "p99": 635.130489,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.609183,
                    "min": 253.06743699999998,
                    "p50": 280.412911,
                    "p95": 299.609183,
                    "p99": 299.609183,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 672.848573,
                    "min": 639.682903,
                    "p50": 663.3965129999999,
                    "p95": 672.848573,
                    "p99": 672.848573,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.30138,
                    "min": 300.126425,
                    "p50": 334.005454,
                    "p95": 461.30138,
                    "p99": 461.30138,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 544.040806,
                    "min": 515.647581,
                    "p50": 540.0342959999999,
                    "p95": 544.040806,
                    "p99": 544.040806,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 424.961554,
                    "min": 383.270294,
                    "p50": 419.683064,
                    "p95": 424.961554,
                    "p99": 424.961554,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 596.80494,
                    "min": 554.534013,
                    "p50": 583.487355,
                    "p95": 596.80494,
                    "p99": 596.80494,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 785.834611,
                    "min": 738.902388,
                    "p50": 768.057273,
                    "p95": 785.834611,
                    "p99": 785.834611,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 378.205901,
                    "min": 340.29896299999996,
                    "p50": 375.12258399999996,
                    "p95": 378.205901,
                    "p99": 378.205901,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 506.94978399999997,
                    "min": 465.18503699999997,
                    "p50": 498.954755,
                    "p95": 506.94978399999997,
                    "p99": 506.94978399999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.122449,
                    "min": 129.70199,
                    "p50": 156.35569099999998,
                    "p95": 168.122449,
                    "p99": 168.122449,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 207.28409299999998,
                    "min": 171.795054,
                    "p50": 179.300804,
                    "p95": 207.28409299999998,
                    "p99": 207.28409299999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 404.960041,
                    "min": 345.595505,
                    "p50": 382.991542,
                    "p95": 404.960041,
                    "p99": 404.960041,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 182.693825,
                    "min": 142.31581599999998,
                    "p50": 170.92026199999998,
                    "p95": 182.693825,
                    "p99": 182.693825,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 644.733832,
                    "min": 414.14426199999997,
                    "p50": 445.18402799999996,
                    "p95": 644.733832,
                    "p99": 644.733832,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 567.727867,
                    "min": 484.936937,
                    "p50": 508.94521999999995,
                    "p95": 567.727867,
                    "p99": 567.727867,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 219.060466,
                    "min": 174.896422,
                    "p50": 201.518805,
                    "p95": 219.060466,
                    "p99": 219.060466,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 360.245281,
                    "min": 312.296334,
                    "p50": 341.971615,
                    "p95": 360.245281,
                    "p99": 360.245281,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 330.032168,
                    "min": 277.99143399999997,
                    "p50": 305.80803399999996,
                    "p95": 330.032168,
                    "p99": 330.032168,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 266.70651399999997,
                    "min": 210.07426999999998,
                    "p50": 238.98259,
                    "p95": 266.70651399999997,
                    "p99": 266.70651399999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.02870099999998,
                    "min": 106.844983,
                    "p50": 141.04056599999998,
                    "p95": 155.02870099999998,
                    "p99": 155.02870099999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 698.119521,
                    "min": 604.7951479999999,
                    "p50": 639.395234,
                    "p95": 698.119521,
                    "p99": 698.119521,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 450.756201,
                    "min": 379.82525799999996,
                    "p50": 402.09772699999996,
                    "p95": 450.756201,
                    "p99": 450.756201,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 532.868383,
                    "min": 447.933748,
                    "p50": 476.80420699999996,
                    "p95": 532.868383,
                    "p99": 532.868383,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 776.77914,
                    "min": 687.301917,
                    "p50": 713.592643,
                    "p95": 776.77914,
                    "p99": 776.77914,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 604.184505,
                    "min": 515.19272,
                    "p50": 540.197675,
                    "p95": 604.184505,
                    "p99": 604.184505,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 292.654535,
                    "min": 243.826587,
                    "p50": 269.294824,
                    "p95": 292.654535,
                    "p99": 292.654535,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 710.789041,
                    "min": 650.205324,
                    "p50": 682.269548,
                    "p95": 710.789041,
                    "p99": 710.789041,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 404.326817,
                    "min": 370.145184,
                    "p50": 393.13293699999997,
                    "p95": 404.326817,
                    "p99": 404.326817,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 561.898728,
                    "min": 506.27480799999995,
                    "p50": 548.2312919999999,
                    "p95": 561.898728,
                    "p99": 561.898728,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 616.152641,
                    "min": 546.325741,
                    "p50": 581.312207,
                    "p95": 616.152641,
                    "p99": 616.152641,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 781.672164,
                    "min": 753.18435,
                    "p50": 772.821208,
                    "p95": 781.672164,
                    "p99": 781.672164,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 450.92781299999996,
                    "min": 424.439871,
                    "p50": 440.242773,
                    "p95": 450.92781299999996,
                    "p99": 450.92781299999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 272.50663299999997,
                    "min": 219.99652899999998,
                    "p50": 259.698896,
                    "p95": 272.50663299999997,
                    "p99": 272.50663299999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 337.22283799999997,
                    "min": 291.021518,
                    "p50": 321.024435,
                    "p95": 337.22283799999997,
                    "p99": 337.22283799999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 536.2005429999999,
                    "min": 470.355491,
                    "p50": 515.224651,
                    "p95": 536.2005429999999,
                    "p99": 536.2005429999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 497.810545,
                    "min": 434.716461,
                    "p50": 476.72239399999995,
                    "p95": 497.810545,
                    "p99": 497.810545,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1184.193126,
                    "min": 1104.783978,
                    "p50": 1119.2578509999998,
                    "p95": 1184.193126,
                    "p99": 1184.193126,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 296.79238799999996,
                    "min": 257.275256,
                    "p50": 290.107594,
                    "p95": 296.79238799999996,
                    "p99": 296.79238799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.67416799999998,
                    "min": 117.23308499999999,
                    "p50": 152.091282,
                    "p95": 152.67416799999998,
                    "p99": 152.67416799999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 224.287433,
                    "min": 186.168895,
                    "p50": 213.301458,
                    "p95": 224.287433,
                    "p99": 224.287433,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 374.066406,
                    "min": 349.02763799999997,
                    "p50": 366.412575,
                    "p95": 374.066406,
                    "p99": 374.066406,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 195.95207,
                    "min": 150.413805,
                    "p50": 183.31821399999998,
                    "p95": 195.95207,
                    "p99": 195.95207,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 744.373603,
                    "min": 688.043024,
                    "p50": 706.7537629999999,
                    "p95": 744.373603,
                    "p99": 744.373603,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 386.335438,
                    "min": 310.075498,
                    "p50": 352.109583,
                    "p95": 386.335438,
                    "p99": 386.335438,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.326317,
                    "min": 132.829446,
                    "p50": 172.584377,
                    "p95": 184.326317,
                    "p99": 184.326317,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 220.927788,
                    "min": 180.23054299999998,
                    "p50": 209.241607,
                    "p95": 220.927788,
                    "p99": 220.927788,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 519.1207899999999,
                    "min": 465.22391799999997,
                    "p50": 485.591124,
                    "p95": 519.1207899999999,
                    "p99": 519.1207899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 436.307281,
                    "min": 268.076445,
                    "p50": 305.125118,
                    "p95": 436.307281,
                    "p99": 436.307281,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 953.059487,
                    "min": 890.103893,
                    "p50": 917.787202,
                    "p95": 953.059487,
                    "p99": 953.059487,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 281.076937,
                    "min": 225.20314399999998,
                    "p50": 258.371854,
                    "p95": 281.076937,
                    "p99": 281.076937,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 554.806707,
                    "min": 489.43486099999996,
                    "p50": 527.2622789999999,
                    "p95": 554.806707,
                    "p99": 554.806707,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 422.56973999999997,
                    "min": 356.80394,
                    "p50": 380.711578,
                    "p95": 422.56973999999997,
                    "p99": 422.56973999999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 613.5886019999999,
                    "min": 521.603796,
                    "p50": 572.8943479999999,
                    "p95": 613.5886019999999,
                    "p99": 613.5886019999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 663.561068,
                    "min": 577.3898879999999,
                    "p50": 605.624946,
                    "p95": 663.561068,
                    "p99": 663.561068,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 889.78481,
                    "min": 779.2540879999999,
                    "p50": 816.681652,
                    "p95": 889.78481,
                    "p99": 889.78481,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 687.106664,
                    "min": 605.08118,
                    "p50": 660.4083919999999,
                    "p95": 687.106664,
                    "p99": 687.106664,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 470.16304099999996,
                    "min": 421.22131099999996,
                    "p50": 441.853888,
                    "p95": 470.16304099999996,
                    "p99": 470.16304099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 195.18267699999998,
                    "min": 140.30630299999999,
                    "p50": 180.825717,
                    "p95": 195.18267699999998,
                    "p99": 195.18267699999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 582.2582209999999,
                    "min": 520.3059079999999,
                    "p50": 559.403673,
                    "p95": 582.2582209999999,
                    "p99": 582.2582209999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 460.44068,
                    "min": 408.72692,
                    "p50": 422.090417,
                    "p95": 460.44068,
                    "p99": 460.44068,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 388.044988,
                    "min": 343.41707399999996,
                    "p50": 357.673545,
                    "p95": 388.044988,
                    "p99": 388.044988,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 258.50353,
                    "min": 209.663218,
                    "p50": 247.00257399999998,
                    "p95": 258.50353,
                    "p99": 258.50353,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.448671,
                    "min": 106.655503,
                    "p50": 137.84971,
                    "p95": 156.448671,
                    "p99": 156.448671,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 219.33541699999998,
                    "min": 179.730041,
                    "p50": 210.050356,
                    "p95": 219.33541699999998,
                    "p99": 219.33541699999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 576.5819789999999,
                    "min": 484.580783,
                    "p50": 514.550023,
                    "p95": 576.5819789999999,
                    "p99": 576.5819789999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 670.7901449999999,
                    "min": 607.1246219999999,
                    "p50": 644.774689,
                    "p95": 670.7901449999999,
                    "p99": 670.7901449999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 303.984058,
                    "min": 245.207675,
                    "p50": 279.04931799999997,
                    "p95": 303.984058,
                    "p99": 303.984058,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.88838699999997,
                    "min": 349.811789,
                    "p50": 381.774068,
                    "p95": 411.88838699999997,
                    "p99": 411.88838699999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 812.570982,
                    "min": 697.673058,
                    "p50": 734.8721019999999,
                    "p95": 812.570982,
                    "p99": 812.570982,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 501.550479,
                    "min": 419.472327,
                    "p50": 431.407827,
                    "p95": 501.550479,
                    "p99": 501.550479,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 350.01861199999996,
                    "min": 285.607366,
                    "p50": 297.946545,
                    "p95": 350.01861199999996,
                    "p99": 350.01861199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 542.894112,
                    "min": 451.131516,
                    "p50": 487.534445,
                    "p95": 542.894112,
                    "p99": 542.894112,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1256.920993,
                    "min": 1192.155777,
                    "p50": 1218.382822,
                    "p95": 1256.920993,
                    "p99": 1256.920993,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 694.7166629999999,
                    "min": 629.728969,
                    "p50": 680.035208,
                    "p95": 694.7166629999999,
                    "p99": 694.7166629999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 861.338261,
                    "min": 786.56165,
                    "p50": 833.6294409999999,
                    "p95": 861.338261,
                    "p99": 861.338261,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 930.3467899999999,
                    "min": 879.240873,
                    "p50": 910.8146479999999,
                    "p95": 930.3467899999999,
                    "p99": 930.3467899999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1169.249174,
                    "min": 1113.383138,
                    "p50": 1152.817323,
                    "p95": 1169.249174,
                    "p99": 1169.249174,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1099.125464,
                    "min": 1013.844197,
                    "p50": 1049.639357,
                    "p95": 1099.125464,
                    "p99": 1099.125464,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.042301,
                    "min": 332.666997,
                    "p50": 355.03655,
                    "p95": 365.042301,
                    "p99": 365.042301,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 782.870069,
                    "min": 703.114971,
                    "p50": 749.474523,
                    "p95": 782.870069,
                    "p99": 782.870069,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1030.508625,
                    "min": 951.015536,
                    "p50": 980.659001,
                    "p95": 1030.508625,
                    "p99": 1030.508625,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1481.479136,
                    "min": 1399.696548,
                    "p50": 1423.085495,
                    "p95": 1481.479136,
                    "p99": 1481.479136,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 440.960899,
                    "min": 396.400212,
                    "p50": 428.15390399999995,
                    "p95": 440.960899,
                    "p99": 440.960899,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 618.248978,
                    "min": 573.800315,
                    "p50": 590.814094,
                    "p95": 618.248978,
                    "p99": 618.248978,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 288.36109799999997,
                    "min": 239.608149,
                    "p50": 279.290122,
                    "p95": 288.36109799999997,
                    "p99": 288.36109799999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 534.8690419999999,
                    "min": 500.37155099999995,
                    "p50": 518.449648,
                    "p95": 534.8690419999999,
                    "p99": 534.8690419999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1669.954787,
                    "min": 1571.3530819999999,
                    "p50": 1621.452568,
                    "p95": 1669.954787,
                    "p99": 1669.954787,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1666.653852,
                    "min": 1559.046417,
                    "p50": 1621.4791,
                    "p95": 1666.653852,
                    "p99": 1666.653852,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1173.8529099999998,
                    "min": 1111.768388,
                    "p50": 1157.601187,
                    "p95": 1173.8529099999998,
                    "p99": 1173.8529099999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1009.4899009999999,
                    "min": 948.5267749999999,
                    "p50": 1001.6530379999999,
                    "p95": 1009.4899009999999,
                    "p99": 1009.4899009999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 767.998063,
                    "min": 729.025678,
                    "p50": 760.645442,
                    "p95": 767.998063,
                    "p99": 767.998063,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 690.197362,
                    "min": 627.100787,
                    "p50": 652.745415,
                    "p95": 690.197362,
                    "p99": 690.197362,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 526.3014059999999,
                    "min": 482.450502,
                    "p50": 509.072677,
                    "p95": 526.3014059999999,
                    "p99": 526.3014059999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1096.3923519999998,
                    "min": 1022.7198249999999,
                    "p50": 1066.07018,
                    "p95": 1096.3923519999998,
                    "p99": 1096.3923519999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.779784,
                    "min": 323.71148999999997,
                    "p50": 351.922683,
                    "p95": 365.779784,
                    "p99": 365.779784,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 918.0899079999999,
                    "min": 892.050888,
                    "p50": 901.760017,
                    "p95": 918.0899079999999,
                    "p99": 918.0899079999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 444.421675,
                    "min": 397.025856,
                    "p50": 418.16166499999997,
                    "p95": 444.421675,
                    "p99": 444.421675,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1465.281504,
                    "min": 1393.876047,
                    "p50": 1415.163415,
                    "p95": 1465.281504,
                    "p99": 1465.281504,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 279.981324,
                    "min": 237.689653,
                    "p50": 247.72631199999998,
                    "p95": 279.981324,
                    "p99": 279.981324,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 614.01674,
                    "min": 573.772786,
                    "p50": 596.2776279999999,
                    "p95": 614.01674,
                    "p99": 614.01674,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1264.358078,
                    "min": 1178.762199,
                    "p50": 1240.4266539999999,
                    "p95": 1264.358078,
                    "p99": 1264.358078,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 848.9016909999999,
                    "min": 781.972323,
                    "p50": 829.15935,
                    "p95": 848.9016909999999,
                    "p99": 848.9016909999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 935.5524819999999,
                    "min": 882.9439629999999,
                    "p50": 900.148957,
                    "p95": 935.5524819999999,
                    "p99": 935.5524819999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 530.809337,
                    "min": 484.371605,
                    "p50": 512.380985,
                    "p95": 530.809337,
                    "p99": 530.809337,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 447.84645,
                    "min": 407.04472699999997,
                    "p50": 425.257386,
                    "p95": 447.84645,
                    "p99": 447.84645,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 841.3014939999999,
                    "min": 782.684905,
                    "p50": 836.946615,
                    "p95": 841.3014939999999,
                    "p99": 841.3014939999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1636.505897,
                    "min": 1582.923935,
                    "p50": 1621.818214,
                    "p95": 1636.505897,
                    "p99": 1636.505897,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 357.250749,
                    "min": 322.471665,
                    "p50": 339.434907,
                    "p95": 357.250749,
                    "p99": 357.250749,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 602.4509889999999,
                    "min": 569.873322,
                    "p50": 588.879007,
                    "p95": 602.4509889999999,
                    "p99": 602.4509889999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 285.116959,
                    "min": 245.074955,
                    "p50": 277.262929,
                    "p95": 285.116959,
                    "p99": 285.116959,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1250.322653,
                    "min": 1192.5004549999999,
                    "p50": 1234.955514,
                    "p95": 1250.322653,
                    "p99": 1250.322653,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1171.132065,
                    "min": 1092.289382,
                    "p50": 1134.890702,
                    "p95": 1171.132065,
                    "p99": 1171.132065,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1030.597555,
                    "min": 937.183942,
                    "p50": 987.213445,
                    "p95": 1030.597555,
                    "p99": 1030.597555,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1098.523541,
                    "min": 1048.972695,
                    "p50": 1089.099479,
                    "p95": 1098.523541,
                    "p99": 1098.523541,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 771.084617,
                    "min": 709.072361,
                    "p50": 760.142354,
                    "p95": 771.084617,
                    "p99": 771.084617,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1469.5411339999998,
                    "min": 1373.9029329999998,
                    "p50": 1426.107569,
                    "p95": 1469.5411339999998,
                    "p99": 1469.5411339999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 693.703188,
                    "min": 630.967419,
                    "p50": 664.384879,
                    "p95": 693.703188,
                    "p99": 693.703188,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 400.23562699999997,
                    "min": 346.422644,
                    "p50": 378.401735,
                    "p95": 400.23562699999997,
                    "p99": 400.23562699999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 228.936824,
                    "min": 206.331462,
                    "p50": 223.40822899999998,
                    "p95": 228.936824,
                    "p99": 228.936824,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 439.649843,
                    "min": 396.32757599999997,
                    "p50": 424.870301,
                    "p95": 439.649843,
                    "p99": 439.649843,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 508.373287,
                    "min": 448.939704,
                    "p50": 470.064214,
                    "p95": 508.373287,
                    "p99": 508.373287,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 119.859349,
                    "min": 81.483971,
                    "p50": 114.86213099999999,
                    "p95": 119.859349,
                    "p99": 119.859349,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 354.60166,
                    "min": 315.688788,
                    "p50": 349.146669,
                    "p95": 354.60166,
                    "p99": 354.60166,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 201.43827299999998,
                    "min": 161.509135,
                    "p50": 196.456068,
                    "p95": 201.43827299999998,
                    "p99": 201.43827299999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 150.215772,
                    "min": 105.367224,
                    "p50": 133.213491,
                    "p95": 150.215772,
                    "p99": 150.215772,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 849.9056519999999,
                    "min": 816.356275,
                    "p50": 823.072958,
                    "p95": 849.9056519999999,
                    "p99": 849.9056519999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 293.987344,
                    "min": 235.106472,
                    "p50": 274.674889,
                    "p95": 293.987344,
                    "p99": 293.987344,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 338.271046,
                    "min": 286.871715,
                    "p50": 325.445074,
                    "p95": 338.271046,
                    "p99": 338.271046,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 417.660164,
                    "min": 363.912415,
                    "p50": 404.92276599999997,
                    "p95": 417.660164,
                    "p99": 417.660164,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 177.14164499999998,
                    "min": 131.398352,
                    "p50": 168.904391,
                    "p95": 177.14164499999998,
                    "p99": 177.14164499999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1374.824878,
                    "min": 1283.234467,
                    "p50": 1339.7755,
                    "p95": 1374.824878,
                    "p99": 1374.824878,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 586.81805,
                    "min": 513.3405759999999,
                    "p50": 552.3956009999999,
                    "p95": 586.81805,
                    "p99": 586.81805,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 311.667234,
                    "min": 259.12424599999997,
                    "p50": 290.358096,
                    "p95": 311.667234,
                    "p99": 311.667234,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 257.860856,
                    "min": 212.152726,
                    "p50": 235.47350999999998,
                    "p95": 257.860856,
                    "p99": 257.860856,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1122.545747,
                    "min": 1029.901778,
                    "p50": 1085.746964,
                    "p95": 1122.545747,
                    "p99": 1122.545747,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 817.047972,
                    "min": 757.6338539999999,
                    "p50": 780.0945969999999,
                    "p95": 817.047972,
                    "p99": 817.047972,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 285.756963,
                    "min": 232.344956,
                    "p50": 260.12399,
                    "p95": 285.756963,
                    "p99": 285.756963,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 555.631405,
                    "min": 506.974784,
                    "p50": 526.739096,
                    "p95": 555.631405,
                    "p99": 555.631405,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 384.13976399999996,
                    "min": 334.452547,
                    "p50": 371.39365599999996,
                    "p95": 384.13976399999996,
                    "p99": 384.13976399999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 435.79927,
                    "min": 380.95205599999997,
                    "p50": 407.87650199999996,
                    "p95": 435.79927,
                    "p99": 435.79927,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.191034,
                    "min": 135.173757,
                    "p50": 150.91383299999998,
                    "p95": 155.191034,
                    "p99": 155.191034,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 489.75274199999996,
                    "min": 436.102855,
                    "p50": 448.74153099999995,
                    "p95": 489.75274199999996,
                    "p99": 489.75274199999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 238.76379599999999,
                    "min": 188.118179,
                    "p50": 219.48616299999998,
                    "p95": 238.76379599999999,
                    "p99": 238.76379599999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 604.426531,
                    "min": 526.222013,
                    "p50": 552.144517,
                    "p95": 604.426531,
                    "p99": 604.426531,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 350.31650099999996,
                    "min": 308.688877,
                    "p50": 343.396931,
                    "p95": 350.31650099999996,
                    "p99": 350.31650099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 743.6131879999999,
                    "min": 666.111445,
                    "p50": 701.637876,
                    "p95": 743.6131879999999,
                    "p99": 743.6131879999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 514.091667,
                    "min": 446.565255,
                    "p50": 495.51075699999996,
                    "p95": 514.091667,
                    "p99": 514.091667,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 316.983335,
                    "min": 271.73179999999996,
                    "p50": 298.774076,
                    "p95": 316.983335,
                    "p99": 316.983335,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 195.829949,
                    "min": 154.22169,
                    "p50": 189.964329,
                    "p95": 195.829949,
                    "p99": 195.829949,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 651.114465,
                    "min": 577.1206179999999,
                    "p50": 604.9022699999999,
                    "p95": 651.114465,
                    "p99": 651.114465,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1251.918316,
                    "min": 1140.217066,
                    "p50": 1168.539941,
                    "p95": 1251.918316,
                    "p99": 1251.918316,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 257.810347,
                    "min": 215.752785,
                    "p50": 254.687624,
                    "p95": 257.810347,
                    "p99": 257.810347,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 283.040307,
                    "min": 238.447564,
                    "p50": 272.321572,
                    "p95": 283.040307,
                    "p99": 283.040307,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 161.30666499999998,
                    "min": 122.0106,
                    "p50": 147.59327399999998,
                    "p95": 161.30666499999998,
                    "p99": 161.30666499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 235.08257799999998,
                    "min": 191.28405999999998,
                    "p50": 229.831484,
                    "p95": 235.08257799999998,
                    "p99": 235.08257799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 375.16533899999996,
                    "min": 333.62395,
                    "p50": 366.75460499999997,
                    "p95": 375.16533899999996,
                    "p99": 375.16533899999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 113.239069,
                    "min": 74.767376,
                    "p50": 106.03818299999999,
                    "p95": 113.239069,
                    "p99": 113.239069,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 763.1787949999999,
                    "min": 717.475676,
                    "p50": 748.581358,
                    "p95": 763.1787949999999,
                    "p99": 763.1787949999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 299.580203,
                    "min": 264.187209,
                    "p50": 291.236808,
                    "p95": 299.580203,
                    "p99": 299.580203,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 355.520717,
                    "min": 314.15804499999996,
                    "p50": 337.577415,
                    "p95": 355.520717,
                    "p99": 355.520717,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 186.88672499999998,
                    "min": 167.672072,
                    "p50": 172.756102,
                    "p95": 186.88672499999998,
                    "p99": 186.88672499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 462.696282,
                    "min": 421.294589,
                    "p50": 444.618607,
                    "p95": 462.696282,
                    "p99": 462.696282,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 327.09203299999996,
                    "min": 286.745564,
                    "p50": 324.030336,
                    "p95": 327.09203299999996,
                    "p99": 327.09203299999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 208.19852799999998,
                    "min": 169.156465,
                    "p50": 199.404392,
                    "p95": 208.19852799999998,
                    "p99": 208.19852799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 992.5447419999999,
                    "min": 967.497836,
                    "p50": 984.3538739999999,
                    "p95": 992.5447419999999,
                    "p99": 992.5447419999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 136.661798,
                    "min": 98.233943,
                    "p50": 132.8791,
                    "p95": 136.661798,
                    "p99": 136.661798,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 403.311171,
                    "min": 357.886772,
                    "p50": 395.867234,
                    "p95": 403.311171,
                    "p99": 403.311171,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 524.043,
                    "min": 477.34423699999996,
                    "p50": 512.9191119999999,
                    "p95": 524.043,
                    "p99": 524.043,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 664.561757,
                    "min": 599.247122,
                    "p50": 645.9575709999999,
                    "p95": 664.561757,
                    "p99": 664.561757,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 546.621701,
                    "min": 490.301602,
                    "p50": 533.648814,
                    "p95": 546.621701,
                    "p99": 546.621701,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 880.7618779999999,
                    "min": 831.4170359999999,
                    "p50": 847.7200029999999,
                    "p95": 880.7618779999999,
                    "p99": 880.7618779999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 757.82993,
                    "min": 694.0463689999999,
                    "p50": 737.625953,
                    "p95": 757.82993,
                    "p99": 757.82993,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 595.6600099999999,
                    "min": 550.5546519999999,
                    "p50": 587.574567,
                    "p95": 595.6600099999999,
                    "p99": 595.6600099999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 696.338138,
                    "min": 641.4454119999999,
                    "p50": 681.3187929999999,
                    "p95": 696.338138,
                    "p99": 696.338138,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 827.297999,
                    "min": 740.4976879999999,
                    "p50": 791.413323,
                    "p95": 827.297999,
                    "p99": 827.297999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 239.32807699999998,
                    "min": 193.12107999999998,
                    "p50": 200.953102,
                    "p95": 239.32807699999998,
                    "p99": 239.32807699999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 264.78763399999997,
                    "min": 244.97201099999998,
                    "p50": 251.766047,
                    "p95": 264.78763399999997,
                    "p99": 264.78763399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 363.330427,
                    "min": 294.542807,
                    "p50": 317.60808299999997,
                    "p95": 363.330427,
                    "p99": 363.330427,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1139.213726,
                    "min": 1068.501785,
                    "p50": 1088.442674,
                    "p95": 1139.213726,
                    "p99": 1139.213726,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 399.07453799999996,
                    "min": 344.40027299999997,
                    "p50": 365.300702,
                    "p95": 399.07453799999996,
                    "p99": 399.07453799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1008.854464,
                    "min": 939.893337,
                    "p50": 985.273109,
                    "p95": 1008.854464,
                    "p99": 1008.854464,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 497.232382,
                    "min": 443.559864,
                    "p50": 485.70688199999995,
                    "p95": 497.232382,
                    "p99": 497.232382,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 444.159387,
                    "min": 375.586217,
                    "p50": 432.525287,
                    "p95": 444.159387,
                    "p99": 444.159387,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 195.21710199999998,
                    "min": 144.544299,
                    "p50": 162.50593899999998,
                    "p95": 195.21710199999998,
                    "p99": 195.21710199999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 272.287687,
                    "min": 203.836133,
                    "p50": 232.28608699999998,
                    "p95": 272.287687,
                    "p99": 272.287687,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 343.895642,
                    "min": 278.437386,
                    "p50": 296.149681,
                    "p95": 343.895642,
                    "p99": 343.895642,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.07458799999999,
                    "min": 88.346139,
                    "p50": 96.365996,
                    "p95": 109.07458799999999,
                    "p99": 109.07458799999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 211.884235,
                    "min": 158.46898,
                    "p50": 186.52586599999998,
                    "p95": 211.884235,
                    "p99": 211.884235,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 285.03101399999997,
                    "min": 226.628524,
                    "p50": 254.986874,
                    "p95": 285.03101399999997,
                    "p99": 285.03101399999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.072499,
                    "min": 71.259316,
                    "p50": 83.012267,
                    "p95": 89.072499,
                    "p99": 89.072499,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 161.84956599999998,
                    "min": 94.794069,
                    "p50": 124.348519,
                    "p95": 161.84956599999998,
                    "p99": 161.84956599999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.70444799999999,
                    "min": 106.236982,
                    "p50": 135.322794,
                    "p95": 151.70444799999999,
                    "p99": 151.70444799999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 449.117712,
                    "min": 335.881645,
                    "p50": 401.37793999999997,
                    "p95": 449.117712,
                    "p99": 449.117712,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 562.762374,
                    "min": 493.70251199999996,
                    "p50": 513.701462,
                    "p95": 562.762374,
                    "p99": 562.762374,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 218.19136999999998,
                    "min": 170.84743899999998,
                    "p50": 183.435509,
                    "p95": 218.19136999999998,
                    "p99": 218.19136999999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1379.225753,
                    "min": 1250.7512299999999,
                    "p50": 1305.3893659999999,
                    "p95": 1379.225753,
                    "p99": 1379.225753,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 78.57020899999999,
                    "min": 49.925684,
                    "p50": 62.337497,
                    "p95": 78.57020899999999,
                    "p99": 78.57020899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 147.320062,
                    "min": 100.05691499999999,
                    "p50": 119.31419899999999,
                    "p95": 147.320062,
                    "p99": 147.320062,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 660.09604,
                    "min": 604.9407719999999,
                    "p50": 649.112337,
                    "p95": 660.09604,
                    "p99": 660.09604,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 535.588979,
                    "min": 441.11760699999996,
                    "p50": 483.752553,
                    "p95": 535.588979,
                    "p99": 535.588979,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.675368,
                    "min": 394.96324799999996,
                    "p50": 404.871642,
                    "p95": 425.675368,
                    "p99": 425.675368,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 600.014417,
                    "min": 407.914649,
                    "p50": 470.392212,
                    "p95": 600.014417,
                    "p99": 600.014417,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 284.301251,
                    "min": 235.79127,
                    "p50": 267.244155,
                    "p95": 284.301251,
                    "p99": 284.301251,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1312.405107,
                    "min": 1190.563424,
                    "p50": 1248.3903129999999,
                    "p95": 1312.405107,
                    "p99": 1312.405107,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 775.147483,
                    "min": 719.173048,
                    "p50": 742.751856,
                    "p95": 775.147483,
                    "p99": 775.147483,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 622.0189819999999,
                    "min": 549.992268,
                    "p50": 601.647795,
                    "p95": 622.0189819999999,
                    "p99": 622.0189819999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 559.2329569999999,
                    "min": 496.249107,
                    "p50": 515.5754029999999,
                    "p95": 559.2329569999999,
                    "p99": 559.2329569999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 360.221885,
                    "min": 313.658377,
                    "p50": 324.786905,
                    "p95": 360.221885,
                    "p99": 360.221885,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 837.0916579999999,
                    "min": 785.27338,
                    "p50": 822.468723,
                    "p95": 837.0916579999999,
                    "p99": 837.0916579999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.162536,
                    "min": 158.24325,
                    "p50": 165.975734,
                    "p95": 169.162536,
                    "p99": 169.162536,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 681.950986,
                    "min": 618.018022,
                    "p50": 631.010643,
                    "p95": 681.950986,
                    "p99": 681.950986,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 401.283821,
                    "min": 353.527739,
                    "p50": 362.441853,
                    "p95": 401.283821,
                    "p99": 401.283821,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 317.116237,
                    "min": 279.299181,
                    "p50": 282.57782199999997,
                    "p95": 317.116237,
                    "p99": 317.116237,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.56444899999997,
                    "min": 192.690393,
                    "p50": 205.65196699999998,
                    "p95": 271.56444899999997,
                    "p99": 271.56444899999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 605.180743,
                    "min": 585.704512,
                    "p50": 591.556393,
                    "p95": 605.180743,
                    "p99": 605.180743,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1171.036398,
                    "min": 1108.600011,
                    "p50": 1130.629827,
                    "p95": 1171.036398,
                    "p99": 1171.036398,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 258.881557,
                    "min": 229.86182,
                    "p50": 243.329639,
                    "p95": 258.881557,
                    "p99": 258.881557,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 803.7068019999999,
                    "min": 751.604209,
                    "p50": 789.118124,
                    "p95": 803.7068019999999,
                    "p99": 803.7068019999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 904.018789,
                    "min": 831.21061,
                    "p50": 851.139251,
                    "p95": 904.018789,
                    "p99": 904.018789,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 305.386774,
                    "min": 285.152421,
                    "p50": 290.25800899999996,
                    "p95": 305.386774,
                    "p99": 305.386774,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 790.721854,
                    "min": 703.555119,
                    "p50": 736.5983659999999,
                    "p95": 790.721854,
                    "p99": 790.721854,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1004.867342,
                    "min": 951.2835259999999,
                    "p50": 967.3338309999999,
                    "p95": 1004.867342,
                    "p99": 1004.867342,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 448.318609,
                    "min": 409.595673,
                    "p50": 412.47869599999996,
                    "p95": 448.318609,
                    "p99": 448.318609,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 605.69886,
                    "min": 572.3563889999999,
                    "p50": 598.176283,
                    "p95": 605.69886,
                    "p99": 605.69886,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 597.4424349999999,
                    "min": 536.797507,
                    "p50": 578.954043,
                    "p95": 597.4424349999999,
                    "p99": 597.4424349999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1338.893493,
                    "min": 1252.590684,
                    "p50": 1278.218327,
                    "p95": 1338.893493,
                    "p99": 1338.893493,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 714.612175,
                    "min": 657.614418,
                    "p50": 666.791425,
                    "p95": 714.612175,
                    "p99": 714.612175,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 490.69010199999997,
                    "min": 439.25429299999996,
                    "p50": 477.563202,
                    "p95": 490.69010199999997,
                    "p99": 490.69010199999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 420.001439,
                    "min": 350.723519,
                    "p50": 370.94039499999997,
                    "p95": 420.001439,
                    "p99": 420.001439,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 973.9921459999999,
                    "min": 897.135143,
                    "p50": 910.6591209999999,
                    "p95": 973.9921459999999,
                    "p99": 973.9921459999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 129.026104,
                    "min": 115.19125899999999,
                    "p50": 120.66049799999999,
                    "p95": 129.026104,
                    "p99": 129.026104,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 35.968801,
                    "min": 27.163871999999998,
                    "p50": 28.174377999999997,
                    "p95": 35.968801,
                    "p99": 35.968801,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 238.711277,
                    "min": 206.62614599999998,
                    "p50": 216.01259299999998,
                    "p95": 238.711277,
                    "p99": 238.711277,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 428.893423,
                    "min": 368.731088,
                    "p50": 401.453939,
                    "p95": 428.893423,
                    "p99": 428.893423,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 100.72002599999999,
                    "min": 72.26779499999999,
                    "p50": 92.186278,
                    "p95": 100.72002599999999,
                    "p99": 100.72002599999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 56.065425999999995,
                    "min": 42.764963,
                    "p50": 49.623554999999996,
                    "p95": 56.065425999999995,
                    "p99": 56.065425999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 234.12738199999998,
                    "min": 165.583472,
                    "p50": 187.415978,
                    "p95": 234.12738199999998,
                    "p99": 234.12738199999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 48.756713,
                    "min": 33.317668,
                    "p50": 35.268281,
                    "p95": 48.756713,
                    "p99": 48.756713,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 43.277170999999996,
                    "min": 39.531323,
                    "p50": 41.639415,
                    "p95": 43.277170999999996,
                    "p99": 43.277170999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 122.66032899999999,
                    "min": 89.10246599999999,
                    "p50": 109.82042399999999,
                    "p95": 122.66032899999999,
                    "p99": 122.66032899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 162.76156899999998,
                    "min": 137.872191,
                    "p50": 158.33022499999998,
                    "p95": 162.76156899999998,
                    "p99": 162.76156899999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.199828,
                    "min": 26.657044,
                    "p50": 26.959222999999998,
                    "p95": 28.199828,
                    "p99": 28.199828,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 87.138402,
                    "min": 72.854697,
                    "p50": 79.564033,
                    "p95": 87.138402,
                    "p99": 87.138402,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 98.002781,
                    "min": 54.370031999999995,
                    "p50": 94.539102,
                    "p95": 98.002781,
                    "p99": 98.002781,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 73.13461,
                    "min": 29.918059,
                    "p50": 54.07597,
                    "p95": 73.13461,
                    "p99": 73.13461,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 58.440574999999995,
                    "min": 50.023171999999995,
                    "p50": 57.188185999999995,
                    "p95": 58.440574999999995,
                    "p99": 58.440574999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 99.968657,
                    "min": 88.476984,
                    "p50": 92.71338899999999,
                    "p95": 99.968657,
                    "p99": 99.968657,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 60.229738999999995,
                    "min": 55.155992999999995,
                    "p50": 58.313795999999996,
                    "p95": 60.229738999999995,
                    "p99": 60.229738999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 80.227564,
                    "min": 67.659774,
                    "p50": 71.460572,
                    "p95": 80.227564,
                    "p99": 80.227564,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 356.733012,
                    "min": 291.007798,
                    "p50": 323.907069,
                    "p95": 356.733012,
                    "p99": 356.733012,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 208.39077999999998,
                    "min": 188.708215,
                    "p50": 196.74616899999998,
                    "p95": 208.39077999999998,
                    "p99": 208.39077999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 476.564399,
                    "min": 445.119445,
                    "p50": 457.55105899999995,
                    "p95": 476.564399,
                    "p99": 476.564399,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 227.05445999999998,
                    "min": 217.32179299999999,
                    "p50": 223.975463,
                    "p95": 227.05445999999998,
                    "p99": 227.05445999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 434.809377,
                    "min": 356.791917,
                    "p50": 368.703291,
                    "p95": 434.809377,
                    "p99": 434.809377,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1584.4268109999998,
                    "min": 1489.302578,
                    "p50": 1543.13553,
                    "p95": 1584.4268109999998,
                    "p99": 1584.4268109999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 389.896578,
                    "min": 333.714587,
                    "p50": 338.05827,
                    "p95": 389.896578,
                    "p99": 389.896578,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 441.62537499999996,
                    "min": 419.054067,
                    "p50": 436.45100399999995,
                    "p95": 441.62537499999996,
                    "p99": 441.62537499999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 610.6021,
                    "min": 551.004543,
                    "p50": 561.632383,
                    "p95": 610.6021,
                    "p99": 610.6021,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 288.141031,
                    "min": 277.974581,
                    "p50": 281.686066,
                    "p95": 288.141031,
                    "p99": 288.141031,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1338.1087109999999,
                    "min": 1194.779884,
                    "p50": 1226.9755699999998,
                    "p95": 1338.1087109999999,
                    "p99": 1338.1087109999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 293.470893,
                    "min": 238.104852,
                    "p50": 257.531441,
                    "p95": 293.470893,
                    "p99": 293.470893,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 439.60907599999996,
                    "min": 389.430923,
                    "p50": 395.790669,
                    "p95": 439.60907599999996,
                    "p99": 439.60907599999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 937.080523,
                    "min": 885.41496,
                    "p50": 916.4101069999999,
                    "p95": 937.080523,
                    "p99": 937.080523,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.24004499999998,
                    "min": 165.752368,
                    "p50": 167.384965,
                    "p95": 184.24004499999998,
                    "p99": 184.24004499999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3102.46477,
                    "min": 2954.1423409999998,
                    "p50": 3006.044081,
                    "p95": 3102.46477,
                    "p99": 3102.46477,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 181.538941,
                    "min": 100.26965899999999,
                    "p50": 138.126625,
                    "p95": 181.538941,
                    "p99": 181.538941,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 557.489682,
                    "min": 477.179402,
                    "p50": 480.61963799999995,
                    "p95": 557.489682,
                    "p99": 557.489682,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 667.568953,
                    "min": 630.305257,
                    "p50": 641.1864059999999,
                    "p95": 667.568953,
                    "p99": 667.568953,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 40.389221,
                    "min": 33.692229,
                    "p50": 35.589786,
                    "p95": 40.389221,
                    "p99": 40.389221,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 53.877565999999995,
                    "min": 40.106806,
                    "p50": 45.052972,
                    "p95": 53.877565999999995,
                    "p99": 53.877565999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.204518,
                    "min": 26.505765,
                    "p50": 26.723805,
                    "p95": 27.204518,
                    "p99": 27.204518,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 38.921769999999995,
                    "min": 35.737866,
                    "p50": 38.089285,
                    "p95": 38.921769999999995,
                    "p99": 38.921769999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 56.918366999999996,
                    "min": 28.593726,
                    "p50": 47.612961999999996,
                    "p95": 56.918366999999996,
                    "p99": 56.918366999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 149.11824,
                    "min": 110.89479,
                    "p50": 117.491249,
                    "p95": 149.11824,
                    "p99": 149.11824,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 60.060334,
                    "min": 38.652757,
                    "p50": 54.678242,
                    "p95": 60.060334,
                    "p99": 60.060334,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 34.130877,
                    "min": 31.244052999999997,
                    "p50": 31.641247,
                    "p95": 34.130877,
                    "p99": 34.130877,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 153.375655,
                    "min": 133.732537,
                    "p50": 139.133073,
                    "p95": 153.375655,
                    "p99": 153.375655,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 51.083206,
                    "min": 35.167516,
                    "p50": 36.016290999999995,
                    "p95": 51.083206,
                    "p99": 51.083206,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 31.302391999999998,
                    "min": 26.376469999999998,
                    "p50": 26.824657,
                    "p95": 31.302391999999998,
                    "p99": 31.302391999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 52.232341,
                    "min": 48.917384,
                    "p50": 50.334342,
                    "p95": 52.232341,
                    "p99": 52.232341,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 46.602292,
                    "min": 28.215646999999997,
                    "p50": 29.724601,
                    "p95": 46.602292,
                    "p99": 46.602292,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 61.806523999999996,
                    "min": 58.999793999999994,
                    "p50": 60.67559,
                    "p95": 61.806523999999996,
                    "p99": 61.806523999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 312.80519499999997,
                    "min": 233.737957,
                    "p50": 272.800214,
                    "p95": 312.80519499999997,
                    "p99": 312.80519499999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 40.179248,
                    "min": 38.263934,
                    "p50": 39.170911,
                    "p95": 40.179248,
                    "p99": 40.179248,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 148.924125,
                    "min": 115.512041,
                    "p50": 135.227766,
                    "p95": 148.924125,
                    "p99": 148.924125,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 83.119098,
                    "min": 68.204889,
                    "p50": 77.86798,
                    "p95": 83.119098,
                    "p99": 83.119098,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 60.231314,
                    "min": 43.568774999999995,
                    "p50": 45.500796,
                    "p95": 60.231314,
                    "p99": 60.231314,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 71.559212,
                    "min": 62.449845999999994,
                    "p50": 62.950888,
                    "p95": 71.559212,
                    "p99": 71.559212,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.159618,
                    "min": 26.573169,
                    "p50": 26.917303,
                    "p95": 27.159618,
                    "p99": 27.159618,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.094949999999997,
                    "min": 25.200816999999997,
                    "p50": 26.725094,
                    "p95": 27.094949999999997,
                    "p99": 27.094949999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.337526999999998,
                    "min": 24.985647,
                    "p50": 27.007870999999998,
                    "p95": 27.337526999999998,
                    "p99": 27.337526999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 30.763963999999998,
                    "min": 26.122235,
                    "p50": 26.680526,
                    "p95": 30.763963999999998,
                    "p99": 30.763963999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 30.998282999999997,
                    "min": 25.820373,
                    "p50": 26.753988999999997,
                    "p95": 30.998282999999997,
                    "p99": 30.998282999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.398652,
                    "min": 23.577838999999997,
                    "p50": 26.780435999999998,
                    "p95": 27.398652,
                    "p99": 27.398652,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.12429,
                    "min": 22.158466,
                    "p50": 26.71612,
                    "p95": 27.12429,
                    "p99": 27.12429,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.473084,
                    "min": 24.648630999999998,
                    "p50": 26.751027999999998,
                    "p95": 27.473084,
                    "p99": 27.473084,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 54.481468,
                    "min": 47.264340999999995,
                    "p50": 51.200452,
                    "p95": 54.481468,
                    "p99": 54.481468,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 34.165976,
                    "min": 25.403526,
                    "p50": 26.846925,
                    "p95": 34.165976,
                    "p99": 34.165976,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 47.823296,
                    "min": 39.338438,
                    "p50": 39.912183999999996,
                    "p95": 47.823296,
                    "p99": 47.823296,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 34.368138,
                    "min": 28.493402999999997,
                    "p50": 30.147565999999998,
                    "p95": 34.368138,
                    "p99": 34.368138,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 35.12654,
                    "min": 26.233514,
                    "p50": 26.747608999999997,
                    "p95": 35.12654,
                    "p99": 35.12654,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.017896999999998,
                    "min": 26.594015,
                    "p50": 26.71803,
                    "p95": 27.017896999999998,
                    "p99": 27.017896999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 127.558965,
                    "min": 109.24189,
                    "p50": 111.534983,
                    "p95": 127.558965,
                    "p99": 127.558965,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.109954,
                    "min": 25.555222,
                    "p50": 26.800038999999998,
                    "p95": 27.109954,
                    "p99": 27.109954,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 30.069381999999997,
                    "min": 26.377848,
                    "p50": 27.00949,
                    "p95": 30.069381999999997,
                    "p99": 30.069381999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.250083999999998,
                    "min": 22.381003,
                    "p50": 27.031601,
                    "p95": 27.250083999999998,
                    "p99": 27.250083999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.923628,
                    "min": 342.435235,
                    "p50": 350.95876899999996,
                    "p95": 411.923628,
                    "p99": 411.923628,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 141.73363899999998,
                    "min": 116.115681,
                    "p50": 140.001821,
                    "p95": 141.73363899999998,
                    "p99": 141.73363899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3157.3337539999998,
                    "min": 3042.2430099999997,
                    "p50": 3098.679382,
                    "p95": 3157.3337539999998,
                    "p99": 3157.3337539999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 695.579716,
                    "min": 639.4354519999999,
                    "p50": 677.0214199999999,
                    "p95": 695.579716,
                    "p99": 695.579716,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 294.590413,
                    "min": 220.582042,
                    "p50": 257.938344,
                    "p95": 294.590413,
                    "p99": 294.590413,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.35636599999998,
                    "min": 162.620017,
                    "p50": 170.91833599999998,
                    "p95": 201.35636599999998,
                    "p99": 201.35636599999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 240.898856,
                    "min": 217.280859,
                    "p50": 228.402709,
                    "p95": 240.898856,
                    "p99": 240.898856,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 984.475511,
                    "min": 923.320033,
                    "p50": 946.487753,
                    "p95": 984.475511,
                    "p99": 984.475511,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 536.794349,
                    "min": 424.838284,
                    "p50": 466.581189,
                    "p95": 536.794349,
                    "p99": 536.794349,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 463.65054599999996,
                    "min": 369.48287999999997,
                    "p50": 404.403233,
                    "p95": 463.65054599999996,
                    "p99": 463.65054599999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1362.947946,
                    "min": 1223.1021289999999,
                    "p50": 1276.2853699999998,
                    "p95": 1362.947946,
                    "p99": 1362.947946,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1584.7924189999999,
                    "min": 1507.0026679999999,
                    "p50": 1567.063261,
                    "p95": 1584.7924189999999,
                    "p99": 1584.7924189999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 494.88057499999996,
                    "min": 455.004533,
                    "p50": 461.82813,
                    "p95": 494.88057499999996,
                    "p99": 494.88057499999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 202.12877899999998,
                    "min": 196.178395,
                    "p50": 199.802247,
                    "p95": 202.12877899999998,
                    "p99": 202.12877899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 616.7883429999999,
                    "min": 550.035268,
                    "p50": 574.293068,
                    "p95": 616.7883429999999,
                    "p99": 616.7883429999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 381.93247099999996,
                    "min": 314.16900499999997,
                    "p50": 320.58713,
                    "p95": 381.93247099999996,
                    "p99": 381.93247099999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 457.38122999999996,
                    "min": 394.43794399999996,
                    "p50": 410.050226,
                    "p95": 457.38122999999996,
                    "p99": 457.38122999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 543.82713,
                    "min": 492.370305,
                    "p50": 528.0931429999999,
                    "p95": 543.82713,
                    "p99": 543.82713,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 339.93976499999997,
                    "min": 288.01940099999996,
                    "p50": 294.730686,
                    "p95": 339.93976499999997,
                    "p99": 339.93976499999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1828.736798,
                    "min": 1734.7591499999999,
                    "p50": 1801.5746589999999,
                    "p95": 1828.736798,
                    "p99": 1828.736798,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 308.0192,
                    "min": 256.941833,
                    "p50": 265.181377,
                    "p95": 308.0192,
                    "p99": 308.0192,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 584.342712,
                    "min": 536.4478359999999,
                    "p50": 566.317126,
                    "p95": 584.342712,
                    "p99": 584.342712,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 952.5333469999999,
                    "min": 811.690472,
                    "p50": 846.419353,
                    "p95": 952.5333469999999,
                    "p99": 952.5333469999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.40631199999996,
                    "min": 305.680932,
                    "p50": 320.08339,
                    "p95": 346.40631199999996,
                    "p99": 346.40631199999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1039.239271,
                    "min": 915.039131,
                    "p50": 923.3650839999999,
                    "p95": 1039.239271,
                    "p99": 1039.239271,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 583.538564,
                    "min": 464.24407299999996,
                    "p50": 489.375006,
                    "p95": 583.538564,
                    "p99": 583.538564,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1112.0144149999999,
                    "min": 1028.284805,
                    "p50": 1047.066865,
                    "p95": 1112.0144149999999,
                    "p99": 1112.0144149999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 434.84936999999996,
                    "min": 353.151574,
                    "p50": 404.315797,
                    "p95": 434.84936999999996,
                    "p99": 434.84936999999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 699.387526,
                    "min": 593.886705,
                    "p50": 632.67329,
                    "p95": 699.387526,
                    "p99": 699.387526,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2443.13884,
                    "min": 2256.448356,
                    "p50": 2294.382577,
                    "p95": 2443.13884,
                    "p99": 2443.13884,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 733.074293,
                    "min": 636.186212,
                    "p50": 648.493918,
                    "p95": 733.074293,
                    "p99": 733.074293,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 486.943432,
                    "min": 414.901452,
                    "p50": 457.601457,
                    "p95": 486.943432,
                    "p99": 486.943432,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 831.802871,
                    "min": 683.881948,
                    "p50": 747.562373,
                    "p95": 831.802871,
                    "p99": 831.802871,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 252.74893999999998,
                    "min": 208.922708,
                    "p50": 213.580254,
                    "p95": 252.74893999999998,
                    "p99": 252.74893999999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 872.9094769999999,
                    "min": 786.539043,
                    "p50": 799.0330779999999,
                    "p95": 872.9094769999999,
                    "p99": 872.9094769999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1255.253802,
                    "min": 1178.83163,
                    "p50": 1233.115851,
                    "p95": 1255.253802,
                    "p99": 1255.253802,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2961.869249,
                    "min": 2836.0815009999997,
                    "p50": 2920.4227339999998,
                    "p95": 2961.869249,
                    "p99": 2961.869249,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 273.780671,
                    "min": 256.638891,
                    "p50": 267.549519,
                    "p95": 273.780671,
                    "p99": 273.780671,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 540.0226359999999,
                    "min": 468.867214,
                    "p50": 512.634474,
                    "p95": 540.0226359999999,
                    "p99": 540.0226359999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.077631,
                    "min": 396.146106,
                    "p50": 402.075763,
                    "p95": 413.077631,
                    "p99": 413.077631,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 763.6536709999999,
                    "min": 743.7407039999999,
                    "p50": 751.775593,
                    "p95": 763.6536709999999,
                    "p99": 763.6536709999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 718.959742,
                    "min": 668.3945759999999,
                    "p50": 680.971173,
                    "p95": 718.959742,
                    "p99": 718.959742,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 949.596833,
                    "min": 880.34151,
                    "p50": 915.0862639999999,
                    "p95": 949.596833,
                    "p99": 949.596833,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1135.504186,
                    "min": 1077.3008869999999,
                    "p50": 1109.90267,
                    "p95": 1135.504186,
                    "p99": 1135.504186,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1007.08211,
                    "min": 948.433401,
                    "p50": 961.713497,
                    "p95": 1007.08211,
                    "p99": 1007.08211,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 866.44746,
                    "min": 807.2298089999999,
                    "p50": 829.594782,
                    "p95": 866.44746,
                    "p99": 866.44746,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1504.577648,
                    "min": 1441.739235,
                    "p50": 1447.510626,
                    "p95": 1504.577648,
                    "p99": 1504.577648,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 594.359245,
                    "min": 532.699356,
                    "p50": 566.233464,
                    "p95": 594.359245,
                    "p99": 594.359245,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 354.41547099999997,
                    "min": 323.588467,
                    "p50": 333.33948899999996,
                    "p95": 354.41547099999997,
                    "p99": 354.41547099999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1377.345151,
                    "min": 1262.796902,
                    "p50": 1312.351521,
                    "p95": 1377.345151,
                    "p99": 1377.345151,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 619.342144,
                    "min": 601.186785,
                    "p50": 610.226892,
                    "p95": 619.342144,
                    "p99": 619.342144,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1093.701323,
                    "min": 1023.9669849999999,
                    "p50": 1038.7908479999999,
                    "p95": 1093.701323,
                    "p99": 1093.701323,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.478518,
                    "min": 291.562394,
                    "p50": 298.25595,
                    "p95": 309.478518,
                    "p99": 309.478518,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 659.769493,
                    "min": 623.374251,
                    "p50": 630.024947,
                    "p95": 659.769493,
                    "p99": 659.769493,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 887.12284,
                    "min": 864.4313999999999,
                    "p50": 874.7265319999999,
                    "p95": 887.12284,
                    "p99": 887.12284,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1727.266883,
                    "min": 1683.663329,
                    "p50": 1695.3536589999999,
                    "p95": 1727.266883,
                    "p99": 1727.266883,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.414636,
                    "min": 492.33523099999996,
                    "p50": 506.954162,
                    "p95": 525.414636,
                    "p99": 525.414636,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 267.126147,
                    "min": 217.18576,
                    "p50": 257.073199,
                    "p95": 267.126147,
                    "p99": 267.126147,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.814229,
                    "min": 214.10128999999998,
                    "p50": 216.14846,
                    "p95": 280.814229,
                    "p99": 280.814229,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 570.0080419999999,
                    "min": 537.24158,
                    "p50": 545.530865,
                    "p95": 570.0080419999999,
                    "p99": 570.0080419999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1324.6778689999999,
                    "min": 1261.54618,
                    "p50": 1280.2414649999998,
                    "p95": 1324.6778689999999,
                    "p99": 1324.6778689999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 859.619196,
                    "min": 764.4411759999999,
                    "p50": 813.630061,
                    "p95": 859.619196,
                    "p99": 859.619196,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 749.371944,
                    "min": 660.571391,
                    "p50": 667.243115,
                    "p95": 749.371944,
                    "p99": 749.371944,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 386.715483,
                    "min": 371.44764,
                    "p50": 380.65319999999997,
                    "p95": 386.715483,
                    "p99": 386.715483,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 502.01196899999997,
                    "min": 452.216952,
                    "p50": 463.56341599999996,
                    "p95": 502.01196899999997,
                    "p99": 502.01196899999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.33583999999996,
                    "min": 329.034794,
                    "p50": 334.695548,
                    "p95": 352.33583999999996,
                    "p99": 352.33583999999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.66933899999998,
                    "min": 173.903637,
                    "p50": 179.994373,
                    "p95": 214.66933899999998,
                    "p99": 214.66933899999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 596.146199,
                    "min": 580.879162,
                    "p50": 584.857225,
                    "p95": 596.146199,
                    "p99": 596.146199,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 450.66558799999996,
                    "min": 414.609273,
                    "p50": 428.631104,
                    "p95": 450.66558799999996,
                    "p99": 450.66558799999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 694.078401,
                    "min": 642.6496569999999,
                    "p50": 658.8424319999999,
                    "p95": 694.078401,
                    "p99": 694.078401,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2035.116951,
                    "min": 2007.73941,
                    "p50": 2029.86483,
                    "p95": 2035.116951,
                    "p99": 2035.116951,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4122.07769,
                    "min": 4034.0848309999997,
                    "p50": 4091.4623159999996,
                    "p95": 4122.07769,
                    "p99": 4122.07769,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2259.6434019999997,
                    "min": 2217.547325,
                    "p50": 2245.619795,
                    "p95": 2259.6434019999997,
                    "p99": 2259.6434019999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 6025.338439,
                    "min": 5906.638647,
                    "p50": 5965.728330999999,
                    "p95": 6025.338439,
                    "p99": 6025.338439,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1290.903063,
                    "min": 1226.697395,
                    "p50": 1257.303925,
                    "p95": 1290.903063,
                    "p99": 1290.903063,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1886.242438,
                    "min": 1837.352699,
                    "p50": 1855.497899,
                    "p95": 1886.242438,
                    "p99": 1886.242438,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 8008.527892,
                    "min": 7795.833366,
                    "p50": 7866.018953999999,
                    "p95": 8008.527892,
                    "p99": 8008.527892,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1082.729353,
                    "min": 1064.338303,
                    "p50": 1072.123366,
                    "p95": 1082.729353,
                    "p99": 1082.729353,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2735.681313,
                    "min": 2663.252205,
                    "p50": 2692.7155049999997,
                    "p95": 2735.681313,
                    "p99": 2735.681313,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1486.012472,
                    "min": 1428.572087,
                    "p50": 1431.982454,
                    "p95": 1486.012472,
                    "p99": 1486.012472,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 891.165981,
                    "min": 846.487759,
                    "p50": 854.980194,
                    "p95": 891.165981,
                    "p99": 891.165981,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3125.927459,
                    "min": 3048.900509,
                    "p50": 3079.729534,
                    "p95": 3125.927459,
                    "p99": 3125.927459,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2883.354374,
                    "min": 2840.2795849999998,
                    "p50": 2857.931028,
                    "p95": 2883.354374,
                    "p99": 2883.354374,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3559.708068,
                    "min": 3476.9166459999997,
                    "p50": 3533.10945,
                    "p95": 3559.708068,
                    "p99": 3559.708068,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1686.2827049999999,
                    "min": 1619.8377289999999,
                    "p50": 1631.161541,
                    "p95": 1686.2827049999999,
                    "p99": 1686.2827049999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2477.300472,
                    "min": 2415.285214,
                    "p50": 2426.049643,
                    "p95": 2477.300472,
                    "p99": 2477.300472,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 758.022752,
                    "min": 709.796035,
                    "p50": 719.954161,
                    "p95": 758.022752,
                    "p99": 758.022752,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 535.699664,
                    "min": 514.149556,
                    "p50": 523.21179,
                    "p95": 535.699664,
                    "p99": 535.699664,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1033.596524,
                    "min": 986.4886339999999,
                    "p50": 993.3368999999999,
                    "p95": 1033.596524,
                    "p99": 1033.596524,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1512.823296,
                    "min": 1452.224909,
                    "p50": 1477.541086,
                    "p95": 1512.823296,
                    "p99": 1512.823296,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4879.931479,
                    "min": 4768.557922999999,
                    "p50": 4825.809749999999,
                    "p95": 4879.931479,
                    "p99": 4879.931479,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2010.795641,
                    "min": 1910.2743409999998,
                    "p50": 1971.206825,
                    "p95": 2010.795641,
                    "p99": 2010.795641,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 620.382713,
                    "min": 560.317825,
                    "p50": 573.494279,
                    "p95": 620.382713,
                    "p99": 620.382713,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.19302499999998,
                    "min": 191.68794499999998,
                    "p50": 193.0087,
                    "p95": 201.19302499999998,
                    "p99": 201.19302499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2496.513482,
                    "min": 2390.829827,
                    "p50": 2422.863614,
                    "p95": 2496.513482,
                    "p99": 2496.513482,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 421.869797,
                    "min": 377.71463,
                    "p50": 381.139226,
                    "p95": 421.869797,
                    "p99": 421.869797,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 486.60846499999997,
                    "min": 410.205756,
                    "p50": 455.23002099999997,
                    "p95": 486.60846499999997,
                    "p99": 486.60846499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 511.469678,
                    "min": 471.401419,
                    "p50": 475.43213699999995,
                    "p95": 511.469678,
                    "p99": 511.469678,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 928.9602659999999,
                    "min": 875.011217,
                    "p50": 904.6395749999999,
                    "p95": 928.9602659999999,
                    "p99": 928.9602659999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 352.021902,
                    "min": 283.672957,
                    "p50": 296.27734,
                    "p95": 352.021902,
                    "p99": 352.021902,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 435.387526,
                    "min": 326.36569499999996,
                    "p50": 367.081186,
                    "p95": 435.387526,
                    "p99": 435.387526,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 813.601235,
                    "min": 742.085246,
                    "p50": 757.616187,
                    "p95": 813.601235,
                    "p99": 813.601235,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 666.8302689999999,
                    "min": 584.522468,
                    "p50": 615.081278,
                    "p95": 666.8302689999999,
                    "p99": 666.8302689999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 248.37648199999998,
                    "min": 230.544039,
                    "p50": 239.22394,
                    "p95": 248.37648199999998,
                    "p99": 248.37648199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 669.277191,
                    "min": 649.9333439999999,
                    "p50": 661.721967,
                    "p95": 669.277191,
                    "p99": 669.277191,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2108.887177,
                    "min": 2046.086088,
                    "p50": 2088.222044,
                    "p95": 2108.887177,
                    "p99": 2108.887177,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 893.322744,
                    "min": 827.766719,
                    "p50": 852.192645,
                    "p95": 893.322744,
                    "p99": 893.322744,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 675.509961,
                    "min": 622.980675,
                    "p50": 647.570695,
                    "p95": 675.509961,
                    "p99": 675.509961,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1449.158444,
                    "min": 1418.74218,
                    "p50": 1437.589906,
                    "p95": 1449.158444,
                    "p99": 1449.158444,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1012.393787,
                    "min": 943.266845,
                    "p50": 964.9164119999999,
                    "p95": 1012.393787,
                    "p99": 1012.393787,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4770.304733999999,
                    "min": 4601.296257999999,
                    "p50": 4652.539594,
                    "p95": 4770.304733999999,
                    "p99": 4770.304733999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1356.435121,
                    "min": 1303.843944,
                    "p50": 1310.193744,
                    "p95": 1356.435121,
                    "p99": 1356.435121,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 757.59925,
                    "min": 723.9725199999999,
                    "p50": 734.28337,
                    "p95": 757.59925,
                    "p99": 757.59925,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1572.528757,
                    "min": 1521.968056,
                    "p50": 1536.884742,
                    "p95": 1572.528757,
                    "p99": 1572.528757,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3550.337177,
                    "min": 3438.937457,
                    "p50": 3506.9148619999996,
                    "p95": 3550.337177,
                    "p99": 3550.337177,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1805.201325,
                    "min": 1754.083537,
                    "p50": 1762.389039,
                    "p95": 1805.201325,
                    "p99": 1805.201325,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2421.7158999999997,
                    "min": 2326.384606,
                    "p50": 2376.998028,
                    "p95": 2421.7158999999997,
                    "p99": 2421.7158999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 400.75768999999997,
                    "min": 388.25296099999997,
                    "p50": 393.483294,
                    "p95": 400.75768999999997,
                    "p99": 400.75768999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1691.975809,
                    "min": 1626.250004,
                    "p50": 1684.8785249999999,
                    "p95": 1691.975809,
                    "p99": 1691.975809,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 545.827056,
                    "min": 487.259801,
                    "p50": 505.599292,
                    "p95": 545.827056,
                    "p99": 545.827056,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1230.861897,
                    "min": 1183.514823,
                    "p50": 1198.760405,
                    "p95": 1230.861897,
                    "p99": 1230.861897,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1128.962519,
                    "min": 1069.234493,
                    "p50": 1082.051533,
                    "p95": 1128.962519,
                    "p99": 1128.962519,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1820.306499,
                    "min": 1742.4402129999999,
                    "p50": 1793.191061,
                    "p95": 1820.306499,
                    "p99": 1820.306499,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 561.755218,
                    "min": 506.057015,
                    "p50": 512.4841309999999,
                    "p95": 561.755218,
                    "p99": 561.755218,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1109.48063,
                    "min": 1069.925827,
                    "p50": 1079.331612,
                    "p95": 1109.48063,
                    "p99": 1109.48063,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1582.416682,
                    "min": 1519.5328299999999,
                    "p50": 1531.5426169999998,
                    "p95": 1582.416682,
                    "p99": 1582.416682,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1238.024618,
                    "min": 1188.25119,
                    "p50": 1194.556533,
                    "p95": 1238.024618,
                    "p99": 1238.024618,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1350.871839,
                    "min": 1307.113396,
                    "p50": 1321.889255,
                    "p95": 1350.871839,
                    "p99": 1350.871839,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2463.009714,
                    "min": 2266.550979,
                    "p50": 2369.185439,
                    "p95": 2463.009714,
                    "p99": 2463.009714,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3536.0868729999997,
                    "min": 3449.8949089999996,
                    "p50": 3498.2761229999996,
                    "p95": 3536.0868729999997,
                    "p99": 3536.0868729999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1467.178223,
                    "min": 1417.843668,
                    "p50": 1434.947674,
                    "p95": 1467.178223,
                    "p99": 1467.178223,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 649.365559,
                    "min": 620.4872409999999,
                    "p50": 631.882176,
                    "p95": 649.365559,
                    "p99": 649.365559,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 409.76352399999996,
                    "min": 385.808151,
                    "p50": 395.36637099999996,
                    "p95": 409.76352399999996,
                    "p99": 409.76352399999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 771.688,
                    "min": 737.3849789999999,
                    "p50": 747.263298,
                    "p95": 771.688,
                    "p99": 771.688,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2123.0756819999997,
                    "min": 2031.9368769999999,
                    "p50": 2045.2557339999998,
                    "p95": 2123.0756819999997,
                    "p99": 2123.0756819999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 860.500599,
                    "min": 842.972864,
                    "p50": 855.656427,
                    "p95": 860.500599,
                    "p99": 860.500599,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1658.7384379999999,
                    "min": 1624.5863749999999,
                    "p50": 1656.0993859999999,
                    "p95": 1658.7384379999999,
                    "p99": 1658.7384379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1040.401144,
                    "min": 956.855242,
                    "p50": 1000.094704,
                    "p95": 1040.401144,
                    "p99": 1040.401144,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10835.985998999999,
                    "min": 10606.366085,
                    "p50": 10747.833594,
                    "p95": 10835.985998999999,
                    "p99": 10835.985998999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1647.721292,
                    "min": 1532.5540589999998,
                    "p50": 1577.73599,
                    "p95": 1647.721292,
                    "p99": 1647.721292,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5449.543960999999,
                    "min": 5370.343483,
                    "p50": 5417.557177,
                    "p95": 5449.543960999999,
                    "p99": 5449.543960999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 843.930623,
                    "min": 788.091727,
                    "p50": 805.782788,
                    "p95": 843.930623,
                    "p99": 843.930623,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 496.325974,
                    "min": 471.06363,
                    "p50": 480.50692399999997,
                    "p95": 496.325974,
                    "p99": 496.325974,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1376.626483,
                    "min": 1306.903495,
                    "p50": 1330.764122,
                    "p95": 1376.626483,
                    "p99": 1376.626483,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4394.103631999999,
                    "min": 4278.829657,
                    "p50": 4326.6503379999995,
                    "p95": 4394.103631999999,
                    "p99": 4394.103631999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1704.432979,
                    "min": 1641.455193,
                    "p50": 1659.5232369999999,
                    "p95": 1704.432979,
                    "p99": 1704.432979,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1488.3191259999999,
                    "min": 1422.276426,
                    "p50": 1433.457224,
                    "p95": 1488.3191259999999,
                    "p99": 1488.3191259999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1950.6514089999998,
                    "min": 1884.2800619999998,
                    "p50": 1913.610271,
                    "p95": 1950.6514089999998,
                    "p99": 1950.6514089999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 596.446284,
                    "min": 574.8114919999999,
                    "p50": 590.154806,
                    "p95": 596.446284,
                    "p99": 596.446284,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1233.361339,
                    "min": 1211.406497,
                    "p50": 1224.123401,
                    "p95": 1233.361339,
                    "p99": 1233.361339,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 378.849968,
                    "min": 364.639576,
                    "p50": 373.630434,
                    "p95": 378.849968,
                    "p99": 378.849968,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 942.121843,
                    "min": 898.628923,
                    "p50": 919.5835069999999,
                    "p95": 942.121843,
                    "p99": 942.121843,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 701.849349,
                    "min": 689.657997,
                    "p50": 694.80049,
                    "p95": 701.849349,
                    "p99": 701.849349,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1050.737436,
                    "min": 1001.2611919999999,
                    "p50": 1021.002206,
                    "p95": 1050.737436,
                    "p99": 1050.737436,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1144.272998,
                    "min": 1110.563122,
                    "p50": 1126.175776,
                    "p95": 1144.272998,
                    "p99": 1144.272998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3283.950199,
                    "min": 3218.3076419999998,
                    "p50": 3243.483417,
                    "p95": 3283.950199,
                    "p99": 3283.950199,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2266.4706189999997,
                    "min": 2175.495701,
                    "p50": 2223.808594,
                    "p95": 2266.4706189999997,
                    "p99": 2266.4706189999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 336.073542,
                    "min": 317.62952,
                    "p50": 324.800505,
                    "p95": 336.073542,
                    "p99": 336.073542,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1942.594181,
                    "min": 1889.723473,
                    "p50": 1912.2450709999998,
                    "p95": 1942.594181,
                    "p99": 1942.594181,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1488.95068,
                    "min": 1410.2755969999998,
                    "p50": 1428.124187,
                    "p95": 1488.95068,
                    "p99": 1488.95068,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1053.074797,
                    "min": 962.69022,
                    "p50": 978.4788629999999,
                    "p95": 1053.074797,
                    "p99": 1053.074797,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 521.496903,
                    "min": 506.215462,
                    "p50": 510.812352,
                    "p95": 521.496903,
                    "p99": 521.496903,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4704.550628999999,
                    "min": 4599.685471,
                    "p50": 4690.0176599999995,
                    "p95": 4704.550628999999,
                    "p99": 4704.550628999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2400.925182,
                    "min": 2331.373358,
                    "p50": 2386.4862129999997,
                    "p95": 2400.925182,
                    "p99": 2400.925182,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 647.680528,
                    "min": 599.3173929999999,
                    "p50": 612.180989,
                    "p95": 647.680528,
                    "p99": 647.680528,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 770.080389,
                    "min": 665.668263,
                    "p50": 693.099443,
                    "p95": 770.080389,
                    "p99": 770.080389,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 462.52632,
                    "min": 409.97331199999996,
                    "p50": 417.303909,
                    "p95": 462.52632,
                    "p99": 462.52632,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 518.730136,
                    "min": 462.871311,
                    "p50": 492.180508,
                    "p95": 518.730136,
                    "p99": 518.730136,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 240.22188799999998,
                    "min": 232.752028,
                    "p50": 233.83752299999998,
                    "p95": 240.22188799999998,
                    "p99": 240.22188799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 866.958345,
                    "min": 844.279782,
                    "p50": 854.0989619999999,
                    "p95": 866.958345,
                    "p99": 866.958345,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 585.042651,
                    "min": 551.4030819999999,
                    "p50": 561.8285529999999,
                    "p95": 585.042651,
                    "p99": 585.042651,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 748.3028539999999,
                    "min": 734.3390969999999,
                    "p50": 742.843138,
                    "p95": 748.3028539999999,
                    "p99": 748.3028539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 420.811936,
                    "min": 350.570218,
                    "p50": 372.118411,
                    "p95": 420.811936,
                    "p99": 420.811936,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 696.31495,
                    "min": 642.9599949999999,
                    "p50": 651.6987439999999,
                    "p95": 696.31495,
                    "p99": 696.31495,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 332.489487,
                    "min": 275.387975,
                    "p50": 280.91112499999997,
                    "p95": 332.489487,
                    "p99": 332.489487,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 238.11023699999998,
                    "min": 180.22071599999998,
                    "p50": 204.323872,
                    "p95": 238.11023699999998,
                    "p99": 238.11023699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1985.927728,
                    "min": 1901.501744,
                    "p50": 1950.4116159999999,
                    "p95": 1985.927728,
                    "p99": 1985.927728,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 928.171157,
                    "min": 898.23618,
                    "p50": 907.2465149999999,
                    "p95": 928.171157,
                    "p99": 928.171157,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2259.3994399999997,
                    "min": 2130.826993,
                    "p50": 2225.700354,
                    "p95": 2259.3994399999997,
                    "p99": 2259.3994399999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 845.3472969999999,
                    "min": 792.380287,
                    "p50": 811.08493,
                    "p95": 845.3472969999999,
                    "p99": 845.3472969999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 722.326496,
                    "min": 690.891878,
                    "p50": 700.409718,
                    "p95": 722.326496,
                    "p99": 722.326496,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 511.665301,
                    "min": 471.89739499999996,
                    "p50": 487.23200199999997,
                    "p95": 511.665301,
                    "p99": 511.665301,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1631.026519,
                    "min": 1516.3777719999998,
                    "p50": 1585.072756,
                    "p95": 1631.026519,
                    "p99": 1631.026519,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1271.3843869999998,
                    "min": 1213.7848729999998,
                    "p50": 1236.391604,
                    "p95": 1271.3843869999998,
                    "p99": 1271.3843869999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3316.978889,
                    "min": 3233.819676,
                    "p50": 3265.990696,
                    "p95": 3316.978889,
                    "p99": 3316.978889,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1061.3147689999998,
                    "min": 1007.982491,
                    "p50": 1013.9928189999999,
                    "p95": 1061.3147689999998,
                    "p99": 1061.3147689999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10851.89661,
                    "min": 10707.619246,
                    "p50": 10785.659598,
                    "p95": 10851.89661,
                    "p99": 10851.89661,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 632.875262,
                    "min": 576.2701129999999,
                    "p50": 593.624092,
                    "p95": 632.875262,
                    "p99": 632.875262,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1491.540249,
                    "min": 1434.464817,
                    "p50": 1449.3861279999999,
                    "p95": 1491.540249,
                    "p99": 1491.540249,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1374.28361,
                    "min": 1322.165319,
                    "p50": 1338.128913,
                    "p95": 1374.28361,
                    "p99": 1374.28361,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4397.891849,
                    "min": 4328.729881,
                    "p50": 4344.696589,
                    "p95": 4397.891849,
                    "p99": 4397.891849,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 419.101676,
                    "min": 349.117483,
                    "p50": 369.959071,
                    "p95": 419.101676,
                    "p99": 419.101676,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1712.7822219999998,
                    "min": 1655.035621,
                    "p50": 1674.5384159999999,
                    "p95": 1712.7822219999998,
                    "p99": 1712.7822219999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1164.9624509999999,
                    "min": 1109.153791,
                    "p50": 1118.4067579999999,
                    "p95": 1164.9624509999999,
                    "p99": 1164.9624509999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5404.081044,
                    "min": 5323.338645,
                    "p50": 5384.7131229999995,
                    "p95": 5404.081044,
                    "p99": 5404.081044,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 694.458839,
                    "min": 642.570128,
                    "p50": 677.443864,
                    "p95": 694.458839,
                    "p99": 694.458839,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 608.024858,
                    "min": 543.09474,
                    "p50": 584.056979,
                    "p95": 608.024858,
                    "p99": 608.024858,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 894.768374,
                    "min": 833.2341279999999,
                    "p50": 856.887347,
                    "p95": 894.768374,
                    "p99": 894.768374,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 326.631169,
                    "min": 300.575196,
                    "p50": 313.303985,
                    "p95": 326.631169,
                    "p99": 326.631169,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 412.982778,
                    "min": 395.886668,
                    "p50": 407.00512899999995,
                    "p95": 412.982778,
                    "p99": 412.982778,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 771.1895969999999,
                    "min": 760.2921379999999,
                    "p50": 768.2086919999999,
                    "p95": 771.1895969999999,
                    "p99": 771.1895969999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 495.674631,
                    "min": 485.965744,
                    "p50": 494.279025,
                    "p95": 495.674631,
                    "p99": 495.674631,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 939.9104659999999,
                    "min": 878.593672,
                    "p50": 894.801753,
                    "p95": 939.9104659999999,
                    "p99": 939.9104659999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 305.586162,
                    "min": 301.396508,
                    "p50": 303.705045,
                    "p95": 305.586162,
                    "p99": 305.586162,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 771.369553,
                    "min": 709.317637,
                    "p50": 728.887527,
                    "p95": 771.369553,
                    "p99": 771.369553,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 622.599419,
                    "min": 551.733614,
                    "p50": 558.1011659999999,
                    "p95": 622.599419,
                    "p99": 622.599419,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 654.616237,
                    "min": 633.375451,
                    "p50": 639.23705,
                    "p95": 654.616237,
                    "p99": 654.616237,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 810.041077,
                    "min": 796.7510269999999,
                    "p50": 804.851635,
                    "p95": 810.041077,
                    "p99": 810.041077,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 463.21822599999996,
                    "min": 381.486567,
                    "p50": 388.58664799999997,
                    "p95": 463.21822599999996,
                    "p99": 463.21822599999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 480.898827,
                    "min": 462.37552999999997,
                    "p50": 477.192727,
                    "p95": 480.898827,
                    "p99": 480.898827,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.610986,
                    "min": 180.50168599999998,
                    "p50": 182.552041,
                    "p95": 209.610986,
                    "p99": 209.610986,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 331.943261,
                    "min": 283.407213,
                    "p50": 320.48078699999996,
                    "p95": 331.943261,
                    "p99": 331.943261,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 386.581907,
                    "min": 343.028715,
                    "p50": 356.543697,
                    "p95": 386.581907,
                    "p99": 386.581907,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.373521,
                    "min": 243.81641299999998,
                    "p50": 279.996737,
                    "p95": 304.373521,
                    "p99": 304.373521,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 536.7040489999999,
                    "min": 449.075964,
                    "p50": 482.22281799999996,
                    "p95": 536.7040489999999,
                    "p99": 536.7040489999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 199.504618,
                    "min": 152.319842,
                    "p50": 189.08013499999998,
                    "p95": 199.504618,
                    "p99": 199.504618,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 427.516256,
                    "min": 380.036134,
                    "p50": 410.90588299999996,
                    "p95": 427.516256,
                    "p99": 427.516256,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 367.70306,
                    "min": 297.238027,
                    "p50": 310.39036699999997,
                    "p95": 367.70306,
                    "p99": 367.70306,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.08433599999998,
                    "min": 194.079666,
                    "p50": 209.923803,
                    "p95": 227.08433599999998,
                    "p99": 227.08433599999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 458.86053599999997,
                    "min": 422.17350999999996,
                    "p50": 450.224854,
                    "p95": 458.86053599999997,
                    "p99": 458.86053599999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 690.575579,
                    "min": 588.638736,
                    "p50": 594.380168,
                    "p95": 690.575579,
                    "p99": 690.575579,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 777.189231,
                    "min": 765.095638,
                    "p50": 771.348088,
                    "p95": 777.189231,
                    "p99": 777.189231,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 235.305344,
                    "min": 228.016856,
                    "p50": 232.435665,
                    "p95": 235.305344,
                    "p99": 235.305344,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 420.60524399999997,
                    "min": 398.888069,
                    "p50": 409.830922,
                    "p95": 420.60524399999997,
                    "p99": 420.60524399999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 689.439363,
                    "min": 680.9451389999999,
                    "p50": 686.290437,
                    "p95": 689.439363,
                    "p99": 689.439363,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 407.566842,
                    "min": 307.11737999999997,
                    "p50": 317.973816,
                    "p95": 407.566842,
                    "p99": 407.566842,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 510.000609,
                    "min": 501.68913599999996,
                    "p50": 509.18129999999996,
                    "p95": 510.000609,
                    "p99": 510.000609,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 378.12818899999996,
                    "min": 318.641638,
                    "p50": 335.219649,
                    "p95": 378.12818899999996,
                    "p99": 378.12818899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 238.619712,
                    "min": 190.77728299999998,
                    "p50": 224.947772,
                    "p95": 238.619712,
                    "p99": 238.619712,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 154.467679,
                    "min": 126.863247,
                    "p50": 129.710428,
                    "p95": 154.467679,
                    "p99": 154.467679,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 360.126224,
                    "min": 317.335474,
                    "p50": 349.07249099999996,
                    "p95": 360.126224,
                    "p99": 360.126224,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 289.611747,
                    "min": 251.10173699999999,
                    "p50": 275.39245999999997,
                    "p95": 289.611747,
                    "p99": 289.611747,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.975791,
                    "min": 202.595789,
                    "p50": 211.453074,
                    "p95": 276.975791,
                    "p99": 276.975791,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 325.651296,
                    "min": 279.829772,
                    "p50": 284.29602,
                    "p95": 325.651296,
                    "p99": 325.651296,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 165.80738399999998,
                    "min": 144.210737,
                    "p50": 155.73917,
                    "p95": 165.80738399999998,
                    "p99": 165.80738399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 132.46908299999998,
                    "min": 95.95889299999999,
                    "p50": 102.980876,
                    "p95": 132.46908299999998,
                    "p99": 132.46908299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 474.747994,
                    "min": 391.497498,
                    "p50": 437.066599,
                    "p95": 474.747994,
                    "p99": 474.747994,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 420.601094,
                    "min": 339.685965,
                    "p50": 357.323562,
                    "p95": 420.601094,
                    "p99": 420.601094,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 535.174773,
                    "min": 431.025623,
                    "p50": 485.28937299999996,
                    "p95": 535.174773,
                    "p99": 535.174773,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 242.652887,
                    "min": 223.472243,
                    "p50": 228.55834399999998,
                    "p95": 242.652887,
                    "p99": 242.652887,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 325.668617,
                    "min": 260.279788,
                    "p50": 305.15817699999997,
                    "p95": 325.668617,
                    "p99": 325.668617,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 240.162882,
                    "min": 160.12604299999998,
                    "p50": 192.186239,
                    "p95": 240.162882,
                    "p99": 240.162882,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 352.015058,
                    "min": 303.183218,
                    "p50": 337.04974899999996,
                    "p95": 352.015058,
                    "p99": 352.015058,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.250461,
                    "min": 138.098939,
                    "p50": 144.065792,
                    "p95": 150.250461,
                    "p99": 150.250461,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 410.001199,
                    "min": 343.82104999999996,
                    "p50": 371.05085099999997,
                    "p95": 410.001199,
                    "p99": 410.001199,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 289.168349,
                    "min": 222.11704,
                    "p50": 247.723381,
                    "p95": 289.168349,
                    "p99": 289.168349,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.542555,
                    "min": 121.759199,
                    "p50": 139.566848,
                    "p95": 160.542555,
                    "p99": 160.542555,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 213.72093199999998,
                    "min": 124.817617,
                    "p50": 162.391148,
                    "p95": 213.72093199999998,
                    "p99": 213.72093199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 335.13152299999996,
                    "min": 261.79487,
                    "p50": 323.411965,
                    "p95": 335.13152299999996,
                    "p99": 335.13152299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 358.586732,
                    "min": 308.333503,
                    "p50": 332.99465299999997,
                    "p95": 358.586732,
                    "p99": 358.586732,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 473.99951799999997,
                    "min": 416.994461,
                    "p50": 440.296359,
                    "p95": 473.99951799999997,
                    "p99": 473.99951799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 204.65272099999999,
                    "min": 175.729344,
                    "p50": 187.375527,
                    "p95": 204.65272099999999,
                    "p99": 204.65272099999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 439.49981199999996,
                    "min": 373.727333,
                    "p50": 393.206489,
                    "p95": 439.49981199999996,
                    "p99": 439.49981199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 248.97858699999998,
                    "min": 188.877848,
                    "p50": 199.932234,
                    "p95": 248.97858699999998,
                    "p99": 248.97858699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 335.363178,
                    "min": 254.176232,
                    "p50": 305.456075,
                    "p95": 335.363178,
                    "p99": 335.363178,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 270.702715,
                    "min": 206.967781,
                    "p50": 217.865071,
                    "p95": 270.702715,
                    "p99": 270.702715,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 127.565929,
                    "min": 99.969832,
                    "p50": 111.60468999999999,
                    "p95": 127.565929,
                    "p99": 127.565929,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 160.203971,
                    "min": 144.751935,
                    "p50": 150.47975499999998,
                    "p95": 160.203971,
                    "p99": 160.203971,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 208.87381599999998,
                    "min": 193.209161,
                    "p50": 203.481926,
                    "p95": 208.87381599999998,
                    "p99": 208.87381599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 254.43591899999998,
                    "min": 185.42397,
                    "p50": 206.593076,
                    "p95": 254.43591899999998,
                    "p99": 254.43591899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 456.69591699999995,
                    "min": 387.85723099999996,
                    "p50": 428.35949899999997,
                    "p95": 456.69591699999995,
                    "p99": 456.69591699999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 406.734439,
                    "min": 337.11402599999997,
                    "p50": 381.133244,
                    "p95": 406.734439,
                    "p99": 406.734439,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 121.13561399999999,
                    "min": 89.38260799999999,
                    "p50": 113.247255,
                    "p95": 121.13561399999999,
                    "p99": 121.13561399999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 315.868252,
                    "min": 256.145643,
                    "p50": 265.826578,
                    "p95": 315.868252,
                    "p99": 315.868252,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 283.537019,
                    "min": 242.693761,
                    "p50": 277.759702,
                    "p95": 283.537019,
                    "p99": 283.537019,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 175.03543,
                    "min": 126.669185,
                    "p50": 129.510643,
                    "p95": 175.03543,
                    "p99": 175.03543,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 328.05407099999996,
                    "min": 277.236312,
                    "p50": 307.40437199999997,
                    "p95": 328.05407099999996,
                    "p99": 328.05407099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 284.857761,
                    "min": 228.418846,
                    "p50": 258.527835,
                    "p95": 284.857761,
                    "p99": 284.857761,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 500.533531,
                    "min": 436.71829099999997,
                    "p50": 483.72315699999996,
                    "p95": 500.533531,
                    "p99": 500.533531,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 368.91468599999996,
                    "min": 317.47358299999996,
                    "p50": 333.094162,
                    "p95": 368.91468599999996,
                    "p99": 368.91468599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 203.744169,
                    "min": 164.09560199999999,
                    "p50": 171.088383,
                    "p95": 203.744169,
                    "p99": 203.744169,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 367.339695,
                    "min": 297.20295799999997,
                    "p50": 346.586908,
                    "p95": 367.339695,
                    "p99": 367.339695,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 517.499737,
                    "min": 440.358698,
                    "p50": 487.876293,
                    "p95": 517.499737,
                    "p99": 517.499737,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 149.56704399999998,
                    "min": 83.402749,
                    "p50": 128.466568,
                    "p95": 149.56704399999998,
                    "p99": 149.56704399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 268.667583,
                    "min": 194.711781,
                    "p50": 243.149417,
                    "p95": 268.667583,
                    "p99": 268.667583,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.148825,
                    "min": 239.966396,
                    "p50": 247.11087799999999,
                    "p95": 278.148825,
                    "p99": 278.148825,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 318.451351,
                    "min": 279.545766,
                    "p50": 308.82347899999996,
                    "p95": 318.451351,
                    "p99": 318.451351,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 480.76352699999995,
                    "min": 398.128396,
                    "p50": 434.587516,
                    "p95": 480.76352699999995,
                    "p99": 480.76352699999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 384.049623,
                    "min": 287.22083299999997,
                    "p50": 350.313072,
                    "p95": 384.049623,
                    "p99": 384.049623,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 350.20417299999997,
                    "min": 294.32505499999996,
                    "p50": 302.136015,
                    "p95": 350.20417299999997,
                    "p99": 350.20417299999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 136.97089,
                    "min": 101.47666,
                    "p50": 124.40418199999999,
                    "p95": 136.97089,
                    "p99": 136.97089,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 206.45926,
                    "min": 164.694855,
                    "p50": 171.318172,
                    "p95": 206.45926,
                    "p99": 206.45926,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 196.352633,
                    "min": 139.866401,
                    "p50": 166.01152,
                    "p95": 196.352633,
                    "p99": 196.352633,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 446.603136,
                    "min": 334.56203899999997,
                    "p50": 380.259282,
                    "p95": 446.603136,
                    "p99": 446.603136,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 270.545668,
                    "min": 204.321303,
                    "p50": 207.67762399999998,
                    "p95": 270.545668,
                    "p99": 270.545668,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 376.366378,
                    "min": 308.968192,
                    "p50": 331.021953,
                    "p95": 376.366378,
                    "p99": 376.366378,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 227.45267199999998,
                    "min": 176.270346,
                    "p50": 186.50820099999999,
                    "p95": 227.45267199999998,
                    "p99": 227.45267199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.40259599999996,
                    "min": 209.99754399999998,
                    "p50": 212.17551899999998,
                    "p95": 286.40259599999996,
                    "p99": 286.40259599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.471869,
                    "min": 75.466804,
                    "p50": 75.94865,
                    "p95": 87.471869,
                    "p99": 87.471869,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1066.916987,
                    "min": 989.394141,
                    "p50": 1019.2332809999999,
                    "p95": 1066.916987,
                    "p99": 1066.916987,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 351.358966,
                    "min": 230.919809,
                    "p50": 240.769757,
                    "p95": 351.358966,
                    "p99": 351.358966,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 383.507478,
                    "min": 320.503072,
                    "p50": 328.63658,
                    "p95": 383.507478,
                    "p99": 383.507478,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.119721,
                    "min": 142.22633199999999,
                    "p50": 144.01282899999998,
                    "p95": 166.119721,
                    "p99": 166.119721,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 513.037974,
                    "min": 406.395532,
                    "p50": 420.3624,
                    "p95": 513.037974,
                    "p99": 513.037974,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 100.81321799999999,
                    "min": 93.964146,
                    "p50": 98.958253,
                    "p95": 100.81321799999999,
                    "p99": 100.81321799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 133.486731,
                    "min": 118.11874999999999,
                    "p50": 125.203233,
                    "p95": 133.486731,
                    "p99": 133.486731,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.920618999999995,
                    "min": 57.878159,
                    "p50": 58.664431,
                    "p95": 63.920618999999995,
                    "p99": 63.920618999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 134.832997,
                    "min": 130.99981499999998,
                    "p50": 133.585251,
                    "p95": 134.832997,
                    "p99": 134.832997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.195043,
                    "min": 95.045361,
                    "p50": 117.42809799999999,
                    "p95": 139.195043,
                    "p99": 139.195043,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 223.532909,
                    "min": 144.405259,
                    "p50": 151.971295,
                    "p95": 223.532909,
                    "p99": 223.532909,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 221.995554,
                    "min": 163.62103,
                    "p50": 178.421205,
                    "p95": 221.995554,
                    "p99": 221.995554,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 181.07516099999998,
                    "min": 160.11721699999998,
                    "p50": 161.088514,
                    "p95": 181.07516099999998,
                    "p99": 181.07516099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 552.512664,
                    "min": 507.788254,
                    "p50": 515.9658059999999,
                    "p95": 552.512664,
                    "p99": 552.512664,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.719346,
                    "min": 88.246025,
                    "p50": 90.61128099999999,
                    "p95": 109.719346,
                    "p99": 109.719346,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 197.32983199999998,
                    "min": 140.098194,
                    "p50": 179.96208199999998,
                    "p95": 197.32983199999998,
                    "p99": 197.32983199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 235.971118,
                    "min": 182.46497599999998,
                    "p50": 189.029183,
                    "p95": 235.971118,
                    "p99": 235.971118,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 201.091452,
                    "min": 175.019071,
                    "p50": 180.61567399999998,
                    "p95": 201.091452,
                    "p99": 201.091452,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1073.3234909999999,
                    "min": 1024.477928,
                    "p50": 1063.497633,
                    "p95": 1073.3234909999999,
                    "p99": 1073.3234909999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 221.937471,
                    "min": 186.131196,
                    "p50": 193.399454,
                    "p95": 221.937471,
                    "p99": 221.937471,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 175.306941,
                    "min": 127.121623,
                    "p50": 138.598488,
                    "p95": 175.306941,
                    "p99": 175.306941,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 246.910403,
                    "min": 211.96209,
                    "p50": 219.037779,
                    "p95": 246.910403,
                    "p99": 246.910403,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.102734,
                    "min": 243.92885099999998,
                    "p50": 251.236514,
                    "p95": 288.102734,
                    "p99": 288.102734,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.60704799999999,
                    "min": 92.121403,
                    "p50": 98.459375,
                    "p95": 102.60704799999999,
                    "p99": 102.60704799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.839206,
                    "min": 140.15600899999998,
                    "p50": 148.594565,
                    "p95": 149.839206,
                    "p99": 149.839206,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.368687,
                    "min": 100.600669,
                    "p50": 118.578508,
                    "p95": 120.368687,
                    "p99": 120.368687,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 214.328665,
                    "min": 186.25434099999998,
                    "p50": 196.819166,
                    "p95": 214.328665,
                    "p99": 214.328665,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 171.355358,
                    "min": 162.978535,
                    "p50": 167.798523,
                    "p95": 171.355358,
                    "p99": 171.355358,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 585.241455,
                    "min": 428.723589,
                    "p50": 441.75041999999996,
                    "p95": 585.241455,
                    "p99": 585.241455,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 386.863749,
                    "min": 338.541698,
                    "p50": 342.945407,
                    "p95": 386.863749,
                    "p99": 386.863749,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 164.285969,
                    "min": 155.920805,
                    "p50": 157.492928,
                    "p95": 164.285969,
                    "p99": 164.285969,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.74024,
                    "min": 59.765969999999996,
                    "p50": 61.198448,
                    "p95": 61.74024,
                    "p99": 61.74024,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 134.261807,
                    "min": 122.098491,
                    "p50": 127.50022999999999,
                    "p95": 134.261807,
                    "p99": 134.261807,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 83.407324,
                    "min": 79.717421,
                    "p50": 80.92364599999999,
                    "p95": 83.407324,
                    "p99": 83.407324,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 131.530577,
                    "min": 94.089535,
                    "p50": 102.775784,
                    "p95": 131.530577,
                    "p99": 131.530577,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 598.8872259999999,
                    "min": 534.685029,
                    "p50": 585.4720239999999,
                    "p95": 598.8872259999999,
                    "p99": 598.8872259999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 157.47574899999998,
                    "min": 126.76595999999999,
                    "p50": 128.436934,
                    "p95": 157.47574899999998,
                    "p99": 157.47574899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 246.068287,
                    "min": 154.80360299999998,
                    "p50": 199.056545,
                    "p95": 246.068287,
                    "p99": 246.068287,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 215.126737,
                    "min": 170.464865,
                    "p50": 175.116797,
                    "p95": 215.126737,
                    "p99": 215.126737,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.628311,
                    "min": 113.70416999999999,
                    "p50": 117.298513,
                    "p95": 124.628311,
                    "p99": 124.628311,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 314.032672,
                    "min": 269.490302,
                    "p50": 298.194984,
                    "p95": 314.032672,
                    "p99": 314.032672,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.14065,
                    "min": 83.80055899999999,
                    "p50": 88.055025,
                    "p95": 95.14065,
                    "p99": 95.14065,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 147.84715,
                    "min": 130.538296,
                    "p50": 140.03184199999998,
                    "p95": 147.84715,
                    "p99": 147.84715,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 172.772123,
                    "min": 156.87489399999998,
                    "p50": 160.811171,
                    "p95": 172.772123,
                    "p99": 172.772123,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 222.820393,
                    "min": 208.45861399999998,
                    "p50": 215.039516,
                    "p95": 222.820393,
                    "p99": 222.820393,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 416.520507,
                    "min": 374.269049,
                    "p50": 386.619151,
                    "p95": 416.520507,
                    "p99": 416.520507,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 219.47840499999998,
                    "min": 143.418039,
                    "p50": 182.769599,
                    "p95": 219.47840499999998,
                    "p99": 219.47840499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 186.422977,
                    "min": 140.75382,
                    "p50": 152.95332399999998,
                    "p95": 186.422977,
                    "p99": 186.422977,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 122.263802,
                    "min": 93.458756,
                    "p50": 98.863851,
                    "p95": 122.263802,
                    "p99": 122.263802,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 206.753685,
                    "min": 191.383488,
                    "p50": 205.20645399999998,
                    "p95": 206.753685,
                    "p99": 206.753685,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 289.66757,
                    "min": 233.87698999999998,
                    "p50": 251.939304,
                    "p95": 289.66757,
                    "p99": 289.66757,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 643.332411,
                    "min": 476.549692,
                    "p50": 499.54585,
                    "p95": 643.332411,
                    "p99": 643.332411,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 656.850064,
                    "min": 584.208114,
                    "p50": 606.0154709999999,
                    "p95": 656.850064,
                    "p99": 656.850064,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1211.213622,
                    "min": 1131.630661,
                    "p50": 1189.124202,
                    "p95": 1211.213622,
                    "p99": 1211.213622,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 69.211072,
                    "min": 68.491787,
                    "p50": 68.951128,
                    "p95": 69.211072,
                    "p99": 69.211072,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 589.328309,
                    "min": 509.40015,
                    "p50": 549.8238769999999,
                    "p95": 589.328309,
                    "p99": 589.328309,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 224.355608,
                    "min": 165.240229,
                    "p50": 196.474085,
                    "p95": 224.355608,
                    "p99": 224.355608,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 163.48987,
                    "min": 144.54792799999998,
                    "p50": 149.31239399999998,
                    "p95": 163.48987,
                    "p99": 163.48987,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 238.831097,
                    "min": 196.808576,
                    "p50": 199.576383,
                    "p95": 238.831097,
                    "p99": 238.831097,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.35823,
                    "min": 113.105423,
                    "p50": 120.864494,
                    "p95": 134.35823,
                    "p99": 134.35823,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.34097299999999,
                    "min": 84.575172,
                    "p50": 93.473343,
                    "p95": 113.34097299999999,
                    "p99": 113.34097299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 72.773327,
                    "min": 62.084360999999994,
                    "p50": 62.307941,
                    "p95": 72.773327,
                    "p99": 72.773327,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 206.511268,
                    "min": 153.23609199999999,
                    "p50": 162.78331599999999,
                    "p95": 206.511268,
                    "p99": 206.511268,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 341.84020899999996,
                    "min": 221.611704,
                    "p50": 231.966937,
                    "p95": 341.84020899999996,
                    "p99": 341.84020899999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 116.097355,
                    "min": 99.686511,
                    "p50": 110.299646,
                    "p95": 116.097355,
                    "p99": 116.097355,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 133.355947,
                    "min": 121.66296299999999,
                    "p50": 130.281974,
                    "p95": 133.355947,
                    "p99": 133.355947,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 261.09567,
                    "min": 182.04466599999998,
                    "p50": 216.125225,
                    "p95": 261.09567,
                    "p99": 261.09567,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 505.67774199999997,
                    "min": 436.01106799999997,
                    "p50": 491.05936799999995,
                    "p95": 505.67774199999997,
                    "p99": 505.67774199999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1132.516187,
                    "min": 1074.235486,
                    "p50": 1112.939924,
                    "p95": 1132.516187,
                    "p99": 1132.516187,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 177.13189599999998,
                    "min": 133.42673299999998,
                    "p50": 143.398391,
                    "p95": 177.13189599999998,
                    "p99": 177.13189599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 400.717585,
                    "min": 244.138792,
                    "p50": 277.80532999999997,
                    "p95": 400.717585,
                    "p99": 400.717585,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 176.15558,
                    "min": 163.40654999999998,
                    "p50": 172.91648999999998,
                    "p95": 176.15558,
                    "p99": 176.15558,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.83900299999999,
                    "min": 69.486642,
                    "p50": 81.63561399999999,
                    "p95": 91.83900299999999,
                    "p99": 91.83900299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 387.08387799999997,
                    "min": 333.744886,
                    "p50": 345.941236,
                    "p95": 387.08387799999997,
                    "p99": 387.08387799999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 142.911204,
                    "min": 133.40120199999998,
                    "p50": 140.107668,
                    "p95": 142.911204,
                    "p99": 142.911204,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 117.959885,
                    "min": 95.15022499999999,
                    "p50": 113.82002299999999,
                    "p95": 117.959885,
                    "p99": 117.959885,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 195.77514599999998,
                    "min": 152.678369,
                    "p50": 162.707708,
                    "p95": 195.77514599999998,
                    "p99": 195.77514599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 565.163494,
                    "min": 519.397072,
                    "p50": 549.778412,
                    "p95": 565.163494,
                    "p99": 565.163494,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 384.956072,
                    "min": 344.696494,
                    "p50": 377.503718,
                    "p95": 384.956072,
                    "p99": 384.956072,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 439.690008,
                    "min": 375.314618,
                    "p50": 396.381954,
                    "p95": 439.690008,
                    "p99": 439.690008,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 486.004755,
                    "min": 432.492053,
                    "p50": 475.106023,
                    "p95": 486.004755,
                    "p99": 486.004755,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 294.24130299999996,
                    "min": 248.151864,
                    "p50": 273.879298,
                    "p95": 294.24130299999996,
                    "p99": 294.24130299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 250.423102,
                    "min": 186.87093099999998,
                    "p50": 225.611053,
                    "p95": 250.423102,
                    "p99": 250.423102,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 286.942886,
                    "min": 227.56211,
                    "p50": 273.852442,
                    "p95": 286.942886,
                    "p99": 286.942886,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 232.86635199999998,
                    "min": 196.615374,
                    "p50": 206.32931599999998,
                    "p95": 232.86635199999998,
                    "p99": 232.86635199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 342.194534,
                    "min": 274.396792,
                    "p50": 278.41065199999997,
                    "p95": 342.194534,
                    "p99": 342.194534,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 339.67132499999997,
                    "min": 283.986389,
                    "p50": 299.807979,
                    "p95": 339.67132499999997,
                    "p99": 339.67132499999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 409.33812,
                    "min": 359.049583,
                    "p50": 400.287378,
                    "p95": 409.33812,
                    "p99": 409.33812,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.59779499999996,
                    "min": 308.664628,
                    "p50": 322.97952799999996,
                    "p95": 345.59779499999996,
                    "p99": 345.59779499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 376.076347,
                    "min": 334.558434,
                    "p50": 344.799404,
                    "p95": 376.076347,
                    "p99": 376.076347,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 423.770537,
                    "min": 353.094607,
                    "p50": 383.696377,
                    "p95": 423.770537,
                    "p99": 423.770537,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 419.295352,
                    "min": 363.39656399999996,
                    "p50": 400.66594499999997,
                    "p95": 419.295352,
                    "p99": 419.295352,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 164.965138,
                    "min": 140.000374,
                    "p50": 145.832186,
                    "p95": 164.965138,
                    "p99": 164.965138,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 191.554501,
                    "min": 153.016193,
                    "p50": 163.616945,
                    "p95": 191.554501,
                    "p99": 191.554501,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 280.27115399999997,
                    "min": 204.334161,
                    "p50": 208.113398,
                    "p95": 280.27115399999997,
                    "p99": 280.27115399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 216.709106,
                    "min": 174.034238,
                    "p50": 186.51196099999999,
                    "p95": 216.709106,
                    "p99": 216.709106,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 335.800902,
                    "min": 272.09499,
                    "p50": 307.985753,
                    "p95": 335.800902,
                    "p99": 335.800902,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 146.590343,
                    "min": 117.83857599999999,
                    "p50": 120.813851,
                    "p95": 146.590343,
                    "p99": 146.590343,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 296.830844,
                    "min": 229.444583,
                    "p50": 268.445509,
                    "p95": 296.830844,
                    "p99": 296.830844,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 513.511043,
                    "min": 435.735303,
                    "p50": 477.42207099999996,
                    "p95": 513.511043,
                    "p99": 513.511043,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 561.229251,
                    "min": 494.233977,
                    "p50": 543.177187,
                    "p95": 561.229251,
                    "p99": 561.229251,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 443.07268799999997,
                    "min": 378.33743999999996,
                    "p50": 410.476427,
                    "p95": 443.07268799999997,
                    "p99": 443.07268799999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 320.88366099999996,
                    "min": 250.48235,
                    "p50": 280.12449699999996,
                    "p95": 320.88366099999996,
                    "p99": 320.88366099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 376.91921099999996,
                    "min": 318.395042,
                    "p50": 327.752815,
                    "p95": 376.91921099999996,
                    "p99": 376.91921099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 449.408557,
                    "min": 361.06505799999996,
                    "p50": 397.280328,
                    "p95": 449.408557,
                    "p99": 449.408557,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 399.71946399999996,
                    "min": 361.97754699999996,
                    "p50": 380.134689,
                    "p95": 399.71946399999996,
                    "p99": 399.71946399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 430.213008,
                    "min": 387.781295,
                    "p50": 421.854813,
                    "p95": 430.213008,
                    "p99": 430.213008,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 501.61319799999995,
                    "min": 448.681176,
                    "p50": 477.14266,
                    "p95": 501.61319799999995,
                    "p99": 501.61319799999995,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 495.440292,
                    "min": 325.614891,
                    "p50": 358.186311,
                    "p95": 495.440292,
                    "p99": 495.440292,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 348.603458,
                    "min": 294.39264299999996,
                    "p50": 330.79842199999996,
                    "p95": 348.603458,
                    "p99": 348.603458,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.322534,
                    "min": 115.261071,
                    "p50": 136.291486,
                    "p95": 144.322534,
                    "p99": 144.322534,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 595.449312,
                    "min": 502.775173,
                    "p50": 564.842668,
                    "p95": 595.449312,
                    "p99": 595.449312,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 328.91725199999996,
                    "min": 275.414307,
                    "p50": 303.65112799999997,
                    "p95": 328.91725199999996,
                    "p99": 328.91725199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 306.41408,
                    "min": 238.601304,
                    "p50": 267.959934,
                    "p95": 306.41408,
                    "p99": 306.41408,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 243.033152,
                    "min": 140.89766699999998,
                    "p50": 221.131735,
                    "p95": 243.033152,
                    "p99": 243.033152,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 303.789383,
                    "min": 209.834577,
                    "p50": 265.632686,
                    "p95": 303.789383,
                    "p99": 303.789383,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 272.249913,
                    "min": 152.642115,
                    "p50": 211.984797,
                    "p95": 272.249913,
                    "p99": 272.249913,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 174.669233,
                    "min": 135.242417,
                    "p50": 140.15997,
                    "p95": 174.669233,
                    "p99": 174.669233,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 195.64997,
                    "min": 118.778166,
                    "p50": 159.076396,
                    "p95": 195.64997,
                    "p99": 195.64997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 398.108566,
                    "min": 348.615689,
                    "p50": 391.631156,
                    "p95": 398.108566,
                    "p99": 398.108566,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 477.34732199999996,
                    "min": 368.578717,
                    "p50": 391.830733,
                    "p95": 477.34732199999996,
                    "p99": 477.34732199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 349.950787,
                    "min": 306.79094,
                    "p50": 316.566151,
                    "p95": 349.950787,
                    "p99": 349.950787,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 482.037713,
                    "min": 427.699889,
                    "p50": 468.617556,
                    "p95": 482.037713,
                    "p99": 482.037713,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 158.346693,
                    "min": 129.38567,
                    "p50": 140.338566,
                    "p95": 158.346693,
                    "p99": 158.346693,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 331.296118,
                    "min": 290.891208,
                    "p50": 299.47761299999996,
                    "p95": 331.296118,
                    "p99": 331.296118,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 567.452462,
                    "min": 458.22930299999996,
                    "p50": 532.2137749999999,
                    "p95": 567.452462,
                    "p99": 567.452462,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 225.74638,
                    "min": 175.41489199999998,
                    "p50": 178.984884,
                    "p95": 225.74638,
                    "p99": 225.74638,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 333.432502,
                    "min": 219.499672,
                    "p50": 254.353308,
                    "p95": 333.432502,
                    "p99": 333.432502,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 299.895731,
                    "min": 184.636032,
                    "p50": 207.426876,
                    "p95": 299.895731,
                    "p99": 299.895731,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 187.239792,
                    "min": 150.14602399999998,
                    "p50": 157.60371899999998,
                    "p95": 187.239792,
                    "p99": 187.239792,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 282.873389,
                    "min": 238.173285,
                    "p50": 252.538848,
                    "p95": 282.873389,
                    "p99": 282.873389,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 331.726659,
                    "min": 258.03560699999997,
                    "p50": 271.052954,
                    "p95": 331.726659,
                    "p99": 331.726659,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.423576,
                    "min": 68.532167,
                    "p50": 115.977099,
                    "p95": 120.423576,
                    "p99": 120.423576,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 409.517963,
                    "min": 333.035628,
                    "p50": 381.76365999999996,
                    "p95": 409.517963,
                    "p99": 409.517963,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1866.9852939999998,
                    "min": 1847.3406249999998,
                    "p50": 1856.8159469999998,
                    "p95": 1866.9852939999998,
                    "p99": 1866.9852939999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1148.909757,
                    "min": 1125.069937,
                    "p50": 1136.411079,
                    "p95": 1148.909757,
                    "p99": 1148.909757,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1428.9174799999998,
                    "min": 1341.1563859999999,
                    "p50": 1378.379941,
                    "p95": 1428.9174799999998,
                    "p99": 1428.9174799999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 929.832458,
                    "min": 883.7739819999999,
                    "p50": 892.4883159999999,
                    "p95": 929.832458,
                    "p99": 929.832458,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 869.700059,
                    "min": 767.615949,
                    "p50": 781.9075019999999,
                    "p95": 869.700059,
                    "p99": 869.700059,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1315.1260989999998,
                    "min": 1236.859769,
                    "p50": 1265.85361,
                    "p95": 1315.1260989999998,
                    "p99": 1315.1260989999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 425.50726199999997,
                    "min": 408.44226299999997,
                    "p50": 411.849298,
                    "p95": 425.50726199999997,
                    "p99": 425.50726199999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 553.901904,
                    "min": 524.736363,
                    "p50": 539.046694,
                    "p95": 553.901904,
                    "p99": 553.901904,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1029.655853,
                    "min": 991.6967259999999,
                    "p50": 1017.7132509999999,
                    "p95": 1029.655853,
                    "p99": 1029.655853,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 668.1078299999999,
                    "min": 654.534183,
                    "p50": 659.867982,
                    "p95": 668.1078299999999,
                    "p99": 668.1078299999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2500.074393,
                    "min": 2433.8670469999997,
                    "p50": 2468.324025,
                    "p95": 2500.074393,
                    "p99": 2500.074393,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1551.929389,
                    "min": 1483.701411,
                    "p50": 1506.1388789999999,
                    "p95": 1551.929389,
                    "p99": 1551.929389,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2252.666671,
                    "min": 2128.2209319999997,
                    "p50": 2173.931224,
                    "p95": 2252.666671,
                    "p99": 2252.666671,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1805.7504549999999,
                    "min": 1723.958069,
                    "p50": 1753.475518,
                    "p95": 1805.7504549999999,
                    "p99": 1805.7504549999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1665.384488,
                    "min": 1601.4608839999999,
                    "p50": 1632.652014,
                    "p95": 1665.384488,
                    "p99": 1665.384488,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4077.229222,
                    "min": 3609.6776569999997,
                    "p50": 3702.754257,
                    "p95": 4077.229222,
                    "p99": 4077.229222,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1061.261229,
                    "min": 961.3495369999999,
                    "p50": 972.297323,
                    "p95": 1061.261229,
                    "p99": 1061.261229,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 755.767062,
                    "min": 718.827131,
                    "p50": 730.4150579999999,
                    "p95": 755.767062,
                    "p99": 755.767062,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 858.290076,
                    "min": 839.55391,
                    "p50": 856.5800929999999,
                    "p95": 858.290076,
                    "p99": 858.290076,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1320.5277469999999,
                    "min": 1252.804261,
                    "p50": 1281.9128799999999,
                    "p95": 1320.5277469999999,
                    "p99": 1320.5277469999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1169.3961809999998,
                    "min": 1109.8692839999999,
                    "p50": 1128.065846,
                    "p95": 1169.3961809999998,
                    "p99": 1169.3961809999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 829.3851539999999,
                    "min": 743.314523,
                    "p50": 781.2845679999999,
                    "p95": 829.3851539999999,
                    "p99": 829.3851539999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 289.15340599999996,
                    "min": 233.227609,
                    "p50": 235.461379,
                    "p95": 289.15340599999996,
                    "p99": 289.15340599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 311.895057,
                    "min": 286.73491,
                    "p50": 298.357551,
                    "p95": 311.895057,
                    "p99": 311.895057,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.9956569999999,
                    "min": 654.7171519999999,
                    "p50": 669.582053,
                    "p95": 673.9956569999999,
                    "p99": 673.9956569999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 470.533052,
                    "min": 410.22035,
                    "p50": 421.206684,
                    "p95": 470.533052,
                    "p99": 470.533052,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 649.63805,
                    "min": 596.808347,
                    "p50": 623.3824989999999,
                    "p95": 649.63805,
                    "p99": 649.63805,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 384.584611,
                    "min": 351.883093,
                    "p50": 359.876196,
                    "p95": 384.584611,
                    "p99": 384.584611,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 954.6276479999999,
                    "min": 899.4691019999999,
                    "p50": 915.644907,
                    "p95": 954.6276479999999,
                    "p99": 954.6276479999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 574.2709689999999,
                    "min": 536.715406,
                    "p50": 542.6373169999999,
                    "p95": 574.2709689999999,
                    "p99": 574.2709689999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 479.670107,
                    "min": 465.58980099999997,
                    "p50": 477.011619,
                    "p95": 479.670107,
                    "p99": 479.670107,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 699.183514,
                    "min": 678.742923,
                    "p50": 689.745805,
                    "p95": 699.183514,
                    "p99": 699.183514,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.113905,
                    "min": 300.05735699999997,
                    "p50": 307.758001,
                    "p95": 322.113905,
                    "p99": 322.113905,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 599.713297,
                    "min": 565.385495,
                    "p50": 574.080838,
                    "p95": 599.713297,
                    "p99": 599.713297,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 519.990315,
                    "min": 490.229228,
                    "p50": 506.976521,
                    "p95": 519.990315,
                    "p99": 519.990315,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 512.360625,
                    "min": 423.992666,
                    "p50": 441.030214,
                    "p95": 512.360625,
                    "p99": 512.360625,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1061.8800099999999,
                    "min": 1003.8721079999999,
                    "p50": 1019.690572,
                    "p95": 1061.8800099999999,
                    "p99": 1061.8800099999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 895.126303,
                    "min": 877.9229809999999,
                    "p50": 881.1202949999999,
                    "p95": 895.126303,
                    "p99": 895.126303,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1451.706632,
                    "min": 1328.785202,
                    "p50": 1344.968441,
                    "p95": 1451.706632,
                    "p99": 1451.706632,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2137.033936,
                    "min": 1949.717668,
                    "p50": 1995.742718,
                    "p95": 2137.033936,
                    "p99": 2137.033936,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 834.422008,
                    "min": 817.658188,
                    "p50": 828.9829249999999,
                    "p95": 834.422008,
                    "p99": 834.422008,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 378.560504,
                    "min": 364.06940399999996,
                    "p50": 373.93157199999996,
                    "p95": 378.560504,
                    "p99": 378.560504,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 809.48392,
                    "min": 747.755307,
                    "p50": 755.5657289999999,
                    "p95": 809.48392,
                    "p99": 809.48392,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 251.673793,
                    "min": 240.86971699999998,
                    "p50": 245.38866499999997,
                    "p95": 251.673793,
                    "p99": 251.673793,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 979.7999699999999,
                    "min": 936.360587,
                    "p50": 953.642736,
                    "p95": 979.7999699999999,
                    "p99": 979.7999699999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1201.0047749999999,
                    "min": 1163.093704,
                    "p50": 1188.734882,
                    "p95": 1201.0047749999999,
                    "p99": 1201.0047749999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 660.4665259999999,
                    "min": 623.590049,
                    "p50": 629.9874179999999,
                    "p95": 660.4665259999999,
                    "p99": 660.4665259999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3116.884642,
                    "min": 2332.712432,
                    "p50": 2375.2914109999997,
                    "p95": 3116.884642,
                    "p99": 3116.884642,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 572.315309,
                    "min": 565.20709,
                    "p50": 569.503032,
                    "p95": 572.315309,
                    "p99": 572.315309,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 476.59581199999997,
                    "min": 389.365594,
                    "p50": 413.271388,
                    "p95": 476.59581199999997,
                    "p99": 476.59581199999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 755.178985,
                    "min": 728.237395,
                    "p50": 748.10667,
                    "p95": 755.178985,
                    "p99": 755.178985,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.109336,
                    "min": 271.210498,
                    "p50": 280.43373099999997,
                    "p95": 302.109336,
                    "p99": 302.109336,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1272.364435,
                    "min": 1177.663408,
                    "p50": 1198.834726,
                    "p95": 1272.364435,
                    "p99": 1272.364435,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1014.550339,
                    "min": 903.021532,
                    "p50": 924.105879,
                    "p95": 1014.550339,
                    "p99": 1014.550339,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1111.962656,
                    "min": 850.580531,
                    "p50": 861.354429,
                    "p95": 1111.962656,
                    "p99": 1111.962656,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 237.981811,
                    "min": 220.21902899999998,
                    "p50": 225.288488,
                    "p95": 237.981811,
                    "p99": 237.981811,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 352.535688,
                    "min": 325.569817,
                    "p50": 337.968477,
                    "p95": 352.535688,
                    "p99": 352.535688,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1250.373058,
                    "min": 1047.366928,
                    "p50": 1060.678356,
                    "p95": 1250.373058,
                    "p99": 1250.373058,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 661.068168,
                    "min": 504.060867,
                    "p50": 521.4368939999999,
                    "p95": 661.068168,
                    "p99": 661.068168,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 739.0288079999999,
                    "min": 672.215013,
                    "p50": 690.34438,
                    "p95": 739.0288079999999,
                    "p99": 739.0288079999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 483.638384,
                    "min": 414.28572099999997,
                    "p50": 454.25122799999997,
                    "p95": 483.638384,
                    "p99": 483.638384,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 811.918378,
                    "min": 785.997087,
                    "p50": 800.398775,
                    "p95": 811.918378,
                    "p99": 811.918378,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2196.948989,
                    "min": 1752.7267499999998,
                    "p50": 1780.915219,
                    "p95": 2196.948989,
                    "p99": 2196.948989,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3863.5851709999997,
                    "min": 2882.244934,
                    "p50": 2943.2525229999997,
                    "p95": 3863.5851709999997,
                    "p99": 3863.5851709999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 632.7255729999999,
                    "min": 616.621994,
                    "p50": 626.5428979999999,
                    "p95": 632.7255729999999,
                    "p99": 632.7255729999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 365.549871,
                    "min": 305.028211,
                    "p50": 341.84106499999996,
                    "p95": 365.549871,
                    "p99": 365.549871,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 918.266844,
                    "min": 868.304356,
                    "p50": 890.945335,
                    "p95": 918.266844,
                    "p99": 918.266844,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1381.286885,
                    "min": 1301.428827,
                    "p50": 1338.689779,
                    "p95": 1381.286885,
                    "p99": 1381.286885,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2277.479789,
                    "min": 2111.1809359999997,
                    "p50": 2143.909389,
                    "p95": 2277.479789,
                    "p99": 2277.479789,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1886.302837,
                    "min": 1706.304467,
                    "p50": 1717.943565,
                    "p95": 1886.302837,
                    "p99": 1886.302837,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 412.188107,
                    "min": 375.649221,
                    "p50": 387.99826099999996,
                    "p95": 412.188107,
                    "p99": 412.188107,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 804.935256,
                    "min": 771.2493549999999,
                    "p50": 787.4590049999999,
                    "p95": 804.935256,
                    "p99": 804.935256,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 329.89932999999996,
                    "min": 296.989167,
                    "p50": 304.535104,
                    "p95": 329.89932999999996,
                    "p99": 329.89932999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 651.327196,
                    "min": 631.667182,
                    "p50": 641.966398,
                    "p95": 651.327196,
                    "p99": 651.327196,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 703.546327,
                    "min": 677.259091,
                    "p50": 686.99002,
                    "p95": 703.546327,
                    "p99": 703.546327,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 222.394361,
                    "min": 217.21687599999998,
                    "p50": 220.415144,
                    "p95": 222.394361,
                    "p99": 222.394361,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 577.626614,
                    "min": 503.110686,
                    "p50": 516.166293,
                    "p95": 577.626614,
                    "p99": 577.626614,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 579.752308,
                    "min": 547.393617,
                    "p50": 556.950653,
                    "p95": 579.752308,
                    "p99": 579.752308,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 288.13203,
                    "min": 246.86508099999998,
                    "p50": 260.939477,
                    "p95": 288.13203,
                    "p99": 288.13203,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.503593,
                    "min": 169.80812,
                    "p50": 177.953636,
                    "p95": 185.503593,
                    "p99": 185.503593,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 606.048003,
                    "min": 591.476774,
                    "p50": 600.230965,
                    "p95": 606.048003,
                    "p99": 606.048003,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 481.939977,
                    "min": 467.87438699999996,
                    "p50": 476.241137,
                    "p95": 481.939977,
                    "p99": 481.939977,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 454.68773,
                    "min": 421.83797899999996,
                    "p50": 431.29454,
                    "p95": 454.68773,
                    "p99": 454.68773,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 704.606491,
                    "min": 650.4561259999999,
                    "p50": 675.219838,
                    "p95": 704.606491,
                    "p99": 704.606491,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1035.339468,
                    "min": 991.732762,
                    "p50": 1010.315943,
                    "p95": 1035.339468,
                    "p99": 1035.339468,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1044.616254,
                    "min": 864.650309,
                    "p50": 894.327422,
                    "p95": 1044.616254,
                    "p99": 1044.616254,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.5342,
                    "min": 251.15521199999998,
                    "p50": 255.454745,
                    "p95": 261.5342,
                    "p99": 261.5342,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1465.526612,
                    "min": 1397.701499,
                    "p50": 1406.458412,
                    "p95": 1465.526612,
                    "p99": 1465.526612,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 621.090426,
                    "min": 590.882079,
                    "p50": 604.353119,
                    "p95": 621.090426,
                    "p99": 621.090426,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 463.532038,
                    "min": 387.285647,
                    "p50": 424.68972099999996,
                    "p95": 463.532038,
                    "p99": 463.532038,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 811.741617,
                    "min": 788.5409559999999,
                    "p50": 803.584481,
                    "p95": 811.741617,
                    "p99": 811.741617,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 462.348194,
                    "min": 452.888646,
                    "p50": 458.696102,
                    "p95": 462.348194,
                    "p99": 462.348194,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1308.727625,
                    "min": 1237.8770399999999,
                    "p50": 1284.750267,
                    "p95": 1308.727625,
                    "p99": 1308.727625,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 344.65167199999996,
                    "min": 317.45082199999996,
                    "p50": 321.80956599999996,
                    "p95": 344.65167199999996,
                    "p99": 344.65167199999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1125.2407879999998,
                    "min": 1024.369411,
                    "p50": 1074.614637,
                    "p95": 1125.2407879999998,
                    "p99": 1125.2407879999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 557.896081,
                    "min": 522.076278,
                    "p50": 531.970911,
                    "p95": 557.896081,
                    "p99": 557.896081,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 987.1045379999999,
                    "min": 927.704308,
                    "p50": 945.405125,
                    "p95": 987.1045379999999,
                    "p99": 987.1045379999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 736.070466,
                    "min": 728.271996,
                    "p50": 732.273251,
                    "p95": 736.070466,
                    "p99": 736.070466,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 330.569859,
                    "min": 287.364494,
                    "p50": 297.52234,
                    "p95": 330.569859,
                    "p99": 330.569859,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 785.0872969999999,
                    "min": 761.286881,
                    "p50": 773.5895459999999,
                    "p95": 785.0872969999999,
                    "p99": 785.0872969999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 523.29106,
                    "min": 444.524743,
                    "p50": 486.271938,
                    "p95": 523.29106,
                    "p99": 523.29106,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 747.9531479999999,
                    "min": 661.8847139999999,
                    "p50": 681.984688,
                    "p95": 747.9531479999999,
                    "p99": 747.9531479999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1164.7519909999999,
                    "min": 1001.207896,
                    "p50": 1012.115157,
                    "p95": 1164.7519909999999,
                    "p99": 1164.7519909999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 623.0199799999999,
                    "min": 577.9592789999999,
                    "p50": 585.952329,
                    "p95": 623.0199799999999,
                    "p99": 623.0199799999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 752.4955679999999,
                    "min": 682.695238,
                    "p50": 733.866174,
                    "p95": 752.4955679999999,
                    "p99": 752.4955679999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1527.781245,
                    "min": 1482.85008,
                    "p50": 1496.4538599999998,
                    "p95": 1527.781245,
                    "p99": 1527.781245,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 400.43162,
                    "min": 378.78639999999996,
                    "p50": 389.387121,
                    "p95": 400.43162,
                    "p99": 400.43162,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.549804,
                    "min": 194.34161,
                    "p50": 196.823727,
                    "p95": 228.549804,
                    "p99": 228.549804,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 571.513891,
                    "min": 504.358236,
                    "p50": 535.508286,
                    "p95": 571.513891,
                    "p99": 571.513891,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 385.108744,
                    "min": 307.664072,
                    "p50": 339.03837899999996,
                    "p95": 385.108744,
                    "p99": 385.108744,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 256.649872,
                    "min": 242.115926,
                    "p50": 243.76958,
                    "p95": 256.649872,
                    "p99": 256.649872,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 486.11301,
                    "min": 430.10623,
                    "p50": 443.42321499999997,
                    "p95": 486.11301,
                    "p99": 486.11301,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 987.8499119999999,
                    "min": 886.264092,
                    "p50": 902.6748709999999,
                    "p95": 987.8499119999999,
                    "p99": 987.8499119999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 702.933379,
                    "min": 630.027668,
                    "p50": 647.980331,
                    "p95": 702.933379,
                    "p99": 702.933379,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 824.005415,
                    "min": 757.0745059999999,
                    "p50": 782.3387389999999,
                    "p95": 824.005415,
                    "p99": 824.005415,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 928.592627,
                    "min": 885.585102,
                    "p50": 901.205016,
                    "p95": 928.592627,
                    "p99": 928.592627,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1013.7120669999999,
                    "min": 949.2413919999999,
                    "p50": 958.224383,
                    "p95": 1013.7120669999999,
                    "p99": 1013.7120669999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 624.8808819999999,
                    "min": 597.4338379999999,
                    "p50": 605.032013,
                    "p95": 624.8808819999999,
                    "p99": 624.8808819999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 476.87607399999996,
                    "min": 408.19664,
                    "p50": 417.63620599999996,
                    "p95": 476.87607399999996,
                    "p99": 476.87607399999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 542.656807,
                    "min": 535.926519,
                    "p50": 540.786616,
                    "p95": 542.656807,
                    "p99": 542.656807,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 327.787415,
                    "min": 292.81827499999997,
                    "p50": 301.05888999999996,
                    "p95": 327.787415,
                    "p99": 327.787415,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 394.66531499999996,
                    "min": 349.493254,
                    "p50": 356.880313,
                    "p95": 394.66531499999996,
                    "p99": 394.66531499999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 709.523515,
                    "min": 650.479023,
                    "p50": 667.5791839999999,
                    "p95": 709.523515,
                    "p99": 709.523515,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 531.869593,
                    "min": 467.25172499999996,
                    "p50": 491.802596,
                    "p95": 531.869593,
                    "p99": 531.869593,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1299.72832,
                    "min": 1246.016484,
                    "p50": 1264.931288,
                    "p95": 1299.72832,
                    "p99": 1299.72832,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 770.593382,
                    "min": 715.920448,
                    "p50": 726.06719,
                    "p95": 770.593382,
                    "p99": 770.593382,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1139.709633,
                    "min": 1097.8643769999999,
                    "p50": 1111.842152,
                    "p95": 1139.709633,
                    "p99": 1139.709633,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.331133,
                    "min": 224.797746,
                    "p50": 234.797274,
                    "p95": 244.331133,
                    "p99": 244.331133,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 893.924043,
                    "min": 833.161937,
                    "p50": 868.561485,
                    "p95": 893.924043,
                    "p99": 893.924043,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 573.005362,
                    "min": 555.472977,
                    "p50": 562.766792,
                    "p95": 573.005362,
                    "p99": 573.005362,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 326.384869,
                    "min": 301.40637799999996,
                    "p50": 305.430048,
                    "p95": 326.384869,
                    "p99": 326.384869,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 272.024708,
                    "min": 212.376488,
                    "p50": 222.71379,
                    "p95": 272.024708,
                    "p99": 272.024708,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 207.853459,
                    "min": 165.226071,
                    "p50": 179.276399,
                    "p95": 207.853459,
                    "p99": 207.853459,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 630.116539,
                    "min": 575.300489,
                    "p50": 606.530526,
                    "p95": 630.116539,
                    "p99": 630.116539,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 705.6196229999999,
                    "min": 683.739252,
                    "p50": 692.214855,
                    "p95": 705.6196229999999,
                    "p99": 705.6196229999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 464.848638,
                    "min": 426.723793,
                    "p50": 442.722734,
                    "p95": 464.848638,
                    "p99": 464.848638,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 981.639101,
                    "min": 897.1599659999999,
                    "p50": 905.105909,
                    "p95": 981.639101,
                    "p99": 981.639101,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 532.734929,
                    "min": 465.946459,
                    "p50": 491.750542,
                    "p95": 532.734929,
                    "p99": 532.734929,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.958299,
                    "min": 334.567702,
                    "p50": 341.962086,
                    "p95": 345.958299,
                    "p99": 345.958299,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 872.3879089999999,
                    "min": 786.92553,
                    "p50": 798.0502829999999,
                    "p95": 872.3879089999999,
                    "p99": 872.3879089999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 830.724962,
                    "min": 630.836585,
                    "p50": 648.991408,
                    "p95": 830.724962,
                    "p99": 830.724962,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 329.622115,
                    "min": 252.149985,
                    "p50": 265.867027,
                    "p95": 329.622115,
                    "p99": 329.622115,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 399.712455,
                    "min": 368.260539,
                    "p50": 392.878196,
                    "p95": 399.712455,
                    "p99": 399.712455,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1368.740883,
                    "min": 1303.301817,
                    "p50": 1337.528893,
                    "p95": 1368.740883,
                    "p99": 1368.740883,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 546.627793,
                    "min": 513.438267,
                    "p50": 519.7227389999999,
                    "p95": 546.627793,
                    "p99": 546.627793,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2060.734686,
                    "min": 1734.4870549999998,
                    "p50": 1743.9822729999999,
                    "p95": 2060.734686,
                    "p99": 2060.734686,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1024.307847,
                    "min": 974.90125,
                    "p50": 990.9547719999999,
                    "p95": 1024.307847,
                    "p99": 1024.307847,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 548.642115,
                    "min": 503.13876,
                    "p50": 519.785582,
                    "p95": 548.642115,
                    "p99": 548.642115,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1968.981812,
                    "min": 1866.1414989999998,
                    "p50": 1926.7899659999998,
                    "p95": 1968.981812,
                    "p99": 1968.981812,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1361.898819,
                    "min": 1336.3802349999999,
                    "p50": 1346.761196,
                    "p95": 1361.898819,
                    "p99": 1361.898819,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 647.80389,
                    "min": 604.793586,
                    "p50": 615.236288,
                    "p95": 647.80389,
                    "p99": 647.80389,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1516.885304,
                    "min": 1433.1118259999998,
                    "p50": 1466.557043,
                    "p95": 1516.885304,
                    "p99": 1516.885304,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 773.494324,
                    "min": 699.092497,
                    "p50": 709.521627,
                    "p95": 773.494324,
                    "p99": 773.494324,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1207.140526,
                    "min": 1157.640202,
                    "p50": 1167.972438,
                    "p95": 1207.140526,
                    "p99": 1207.140526,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 934.220061,
                    "min": 877.846222,
                    "p50": 891.833231,
                    "p95": 934.220061,
                    "p99": 934.220061,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1302.266191,
                    "min": 1249.804637,
                    "p50": 1265.673798,
                    "p95": 1302.266191,
                    "p99": 1302.266191,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1702.6202569999998,
                    "min": 1657.2580349999998,
                    "p50": 1673.4318859999998,
                    "p95": 1702.6202569999998,
                    "p99": 1702.6202569999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 842.9681049999999,
                    "min": 784.900929,
                    "p50": 799.844986,
                    "p95": 842.9681049999999,
                    "p99": 842.9681049999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1145.42883,
                    "min": 1076.7558139999999,
                    "p50": 1085.045431,
                    "p95": 1145.42883,
                    "p99": 1145.42883,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 340.439008,
                    "min": 319.035177,
                    "p50": 330.19980599999997,
                    "p95": 340.439008,
                    "p99": 340.439008,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 468.559869,
                    "min": 394.086299,
                    "p50": 424.228744,
                    "p95": 468.559869,
                    "p99": 468.559869,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 563.878121,
                    "min": 542.555283,
                    "p50": 552.648547,
                    "p95": 563.878121,
                    "p99": 563.878121,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 308.516546,
                    "min": 239.993113,
                    "p50": 255.004856,
                    "p95": 308.516546,
                    "p99": 308.516546,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 693.836413,
                    "min": 648.765886,
                    "p50": 654.072762,
                    "p95": 693.836413,
                    "p99": 693.836413,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 761.458178,
                    "min": 742.7867759999999,
                    "p50": 751.185265,
                    "p95": 761.458178,
                    "p99": 761.458178,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 359.098489,
                    "min": 299.02643,
                    "p50": 301.985438,
                    "p95": 359.098489,
                    "p99": 359.098489,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 548.7376929999999,
                    "min": 486.310099,
                    "p50": 503.215419,
                    "p95": 548.7376929999999,
                    "p99": 548.7376929999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 458.72146399999997,
                    "min": 444.587063,
                    "p50": 450.562664,
                    "p95": 458.72146399999997,
                    "p99": 458.72146399999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 408.395284,
                    "min": 344.79439299999996,
                    "p50": 352.02009599999997,
                    "p95": 408.395284,
                    "p99": 408.395284,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 205.266483,
                    "min": 198.55908499999998,
                    "p50": 200.42334,
                    "p95": 205.266483,
                    "p99": 205.266483,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 992.476829,
                    "min": 911.5972049999999,
                    "p50": 943.415391,
                    "p95": 992.476829,
                    "p99": 992.476829,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 614.83722,
                    "min": 587.303597,
                    "p50": 601.40598,
                    "p95": 614.83722,
                    "p99": 614.83722,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 716.369257,
                    "min": 681.746705,
                    "p50": 704.3715109999999,
                    "p95": 716.369257,
                    "p99": 716.369257,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1099.529912,
                    "min": 1046.2272779999998,
                    "p50": 1074.8769849999999,
                    "p95": 1099.529912,
                    "p99": 1099.529912,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 852.5650449999999,
                    "min": 790.911672,
                    "p50": 802.93099,
                    "p95": 852.5650449999999,
                    "p99": 852.5650449999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 428.61780699999997,
                    "min": 392.26408299999997,
                    "p50": 398.393606,
                    "p95": 428.61780699999997,
                    "p99": 428.61780699999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1190.921654,
                    "min": 1102.983166,
                    "p50": 1113.806594,
                    "p95": 1190.921654,
                    "p99": 1190.921654,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 675.925296,
                    "min": 652.594375,
                    "p50": 667.683649,
                    "p95": 675.925296,
                    "p99": 675.925296,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 946.850004,
                    "min": 899.67368,
                    "p50": 911.4093399999999,
                    "p95": 946.850004,
                    "p99": 946.850004,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1033.5979889999999,
                    "min": 955.515009,
                    "p50": 1012.101872,
                    "p95": 1033.5979889999999,
                    "p99": 1033.5979889999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1308.486817,
                    "min": 1254.882591,
                    "p50": 1272.792048,
                    "p95": 1308.486817,
                    "p99": 1308.486817,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 897.491998,
                    "min": 705.371457,
                    "p50": 731.491447,
                    "p95": 897.491998,
                    "p99": 897.491998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 480.100897,
                    "min": 407.72279299999997,
                    "p50": 419.052613,
                    "p95": 480.100897,
                    "p99": 480.100897,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 663.298779,
                    "min": 542.1383139999999,
                    "p50": 546.3958779999999,
                    "p95": 663.298779,
                    "p99": 663.298779,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 887.223838,
                    "min": 834.68693,
                    "p50": 847.958123,
                    "p95": 887.223838,
                    "p99": 887.223838,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 854.110159,
                    "min": 775.9528849999999,
                    "p50": 788.958928,
                    "p95": 854.110159,
                    "p99": 854.110159,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1922.0972749999999,
                    "min": 1870.279462,
                    "p50": 1910.050724,
                    "p95": 1922.0972749999999,
                    "p99": 1922.0972749999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 493.996203,
                    "min": 466.985666,
                    "p50": 477.36686299999997,
                    "p95": 493.996203,
                    "p99": 493.996203,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 264.555146,
                    "min": 234.16215799999998,
                    "p50": 253.938631,
                    "p95": 264.555146,
                    "p99": 264.555146,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 363.51340899999997,
                    "min": 349.533055,
                    "p50": 355.498584,
                    "p95": 363.51340899999997,
                    "p99": 363.51340899999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 622.944997,
                    "min": 597.70844,
                    "p50": 606.91005,
                    "p95": 622.944997,
                    "p99": 622.944997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.908917,
                    "min": 290.38404099999997,
                    "p50": 295.511931,
                    "p95": 302.908917,
                    "p99": 302.908917,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1152.520986,
                    "min": 1069.075359,
                    "p50": 1126.4240029999999,
                    "p95": 1152.520986,
                    "p99": 1152.520986,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 600.0263649999999,
                    "min": 526.375585,
                    "p50": 540.129001,
                    "p95": 600.0263649999999,
                    "p99": 600.0263649999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 304.28893899999997,
                    "min": 248.792799,
                    "p50": 259.442188,
                    "p95": 304.28893899999997,
                    "p99": 304.28893899999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 342.415142,
                    "min": 322.206665,
                    "p50": 330.050343,
                    "p95": 342.415142,
                    "p99": 342.415142,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 772.010996,
                    "min": 743.9090219999999,
                    "p50": 752.4973729999999,
                    "p95": 772.010996,
                    "p99": 772.010996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 531.871373,
                    "min": 433.16207599999996,
                    "p50": 480.441468,
                    "p95": 531.871373,
                    "p99": 531.871373,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1446.862191,
                    "min": 1430.203319,
                    "p50": 1438.633189,
                    "p95": 1446.862191,
                    "p99": 1446.862191,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 398.255919,
                    "min": 387.04225099999996,
                    "p50": 394.631869,
                    "p95": 398.255919,
                    "p99": 398.255919,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 874.893277,
                    "min": 814.011493,
                    "p50": 831.140535,
                    "p95": 874.893277,
                    "p99": 874.893277,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 688.8965089999999,
                    "min": 608.875725,
                    "p50": 616.301326,
                    "p95": 688.8965089999999,
                    "p99": 688.8965089999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 935.695621,
                    "min": 885.094029,
                    "p50": 895.6548869999999,
                    "p95": 935.695621,
                    "p99": 935.695621,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 966.9306019999999,
                    "min": 938.6079129999999,
                    "p50": 959.6667,
                    "p95": 966.9306019999999,
                    "p99": 966.9306019999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1316.6052459999999,
                    "min": 1247.8786559999999,
                    "p50": 1275.353766,
                    "p95": 1316.6052459999999,
                    "p99": 1316.6052459999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1069.511238,
                    "min": 1003.974205,
                    "p50": 1029.939703,
                    "p95": 1069.511238,
                    "p99": 1069.511238,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 683.469889,
                    "min": 657.978001,
                    "p50": 680.83683,
                    "p95": 683.469889,
                    "p99": 683.469889,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 289.486724,
                    "min": 246.399115,
                    "p50": 253.685558,
                    "p95": 289.486724,
                    "p99": 289.486724,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 866.9256879999999,
                    "min": 806.443366,
                    "p50": 826.95321,
                    "p95": 866.9256879999999,
                    "p99": 866.9256879999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 690.997611,
                    "min": 595.877123,
                    "p50": 607.25988,
                    "p95": 690.997611,
                    "p99": 690.997611,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 557.07643,
                    "min": 493.94001799999995,
                    "p50": 511.70041399999997,
                    "p95": 557.07643,
                    "p99": 557.07643,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 423.44823199999996,
                    "min": 315.31665,
                    "p50": 351.32415599999996,
                    "p95": 423.44823199999996,
                    "p99": 423.44823199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.93467,
                    "min": 185.17648599999998,
                    "p50": 202.271818,
                    "p95": 257.93467,
                    "p99": 257.93467,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 318.693024,
                    "min": 294.063623,
                    "p50": 305.85871199999997,
                    "p95": 318.693024,
                    "p99": 318.693024,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 787.596582,
                    "min": 755.084116,
                    "p50": 758.558064,
                    "p95": 787.596582,
                    "p99": 787.596582,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 974.372048,
                    "min": 928.041715,
                    "p50": 954.2681399999999,
                    "p95": 974.372048,
                    "p99": 974.372048,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 437.67438899999996,
                    "min": 399.053114,
                    "p50": 414.757923,
                    "p95": 437.67438899999996,
                    "p99": 437.67438899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 563.333765,
                    "min": 551.909334,
                    "p50": 556.821276,
                    "p95": 563.333765,
                    "p99": 563.333765,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1127.190605,
                    "min": 1055.035593,
                    "p50": 1076.7689269999998,
                    "p95": 1127.190605,
                    "p99": 1127.190605,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 697.019849,
                    "min": 647.1924759999999,
                    "p50": 660.190797,
                    "p95": 697.019849,
                    "p99": 697.019849,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 461.33446399999997,
                    "min": 445.62944899999997,
                    "p50": 450.26867699999997,
                    "p95": 461.33446399999997,
                    "p99": 461.33446399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 732.860656,
                    "min": 696.744651,
                    "p50": 707.4156419999999,
                    "p95": 732.860656,
                    "p99": 732.860656,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2203.4287759999997,
                    "min": 2133.638543,
                    "p50": 2163.8131169999997,
                    "p95": 2203.4287759999997,
                    "p99": 2203.4287759999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1215.230505,
                    "min": 1170.686454,
                    "p50": 1191.170103,
                    "p95": 1215.230505,
                    "p99": 1215.230505,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1489.303626,
                    "min": 1455.982917,
                    "p50": 1471.0035,
                    "p95": 1489.303626,
                    "p99": 1489.303626,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1619.076325,
                    "min": 1591.938729,
                    "p50": 1612.74587,
                    "p95": 1619.076325,
                    "p99": 1619.076325,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2071.1515369999997,
                    "min": 1990.325832,
                    "p50": 2045.4419269999999,
                    "p95": 2071.1515369999997,
                    "p99": 2071.1515369999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1938.8610199999998,
                    "min": 1866.7725719999999,
                    "p50": 1890.5961699999998,
                    "p95": 1938.8610199999998,
                    "p99": 1938.8610199999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 632.3169439999999,
                    "min": 614.026302,
                    "p50": 620.978843,
                    "p95": 632.3169439999999,
                    "p99": 632.3169439999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1353.9497039999999,
                    "min": 1308.136823,
                    "p50": 1336.400238,
                    "p95": 1353.9497039999999,
                    "p99": 1353.9497039999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1794.1453589999999,
                    "min": 1740.4911319999999,
                    "p50": 1754.6245159999999,
                    "p95": 1794.1453589999999,
                    "p99": 1794.1453589999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2549.90533,
                    "min": 2501.181207,
                    "p50": 2539.1285749999997,
                    "p95": 2549.90533,
                    "p99": 2549.90533,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 767.937837,
                    "min": 750.429849,
                    "p50": 757.769804,
                    "p95": 767.937837,
                    "p99": 767.937837,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1050.2671719999998,
                    "min": 1033.04548,
                    "p50": 1042.8842479999998,
                    "p95": 1050.2671719999998,
                    "p99": 1050.2671719999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 482.869398,
                    "min": 464.948922,
                    "p50": 479.945725,
                    "p95": 482.869398,
                    "p99": 482.869398,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 938.9241089999999,
                    "min": 890.3860689999999,
                    "p50": 906.606552,
                    "p95": 938.9241089999999,
                    "p99": 938.9241089999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2925.7748589999997,
                    "min": 2850.301599,
                    "p50": 2903.622895,
                    "p95": 2925.7748589999997,
                    "p99": 2925.7748589999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2855.7927809999996,
                    "min": 2801.197046,
                    "p50": 2815.04716,
                    "p95": 2855.7927809999996,
                    "p99": 2855.7927809999996,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2062.608877,
                    "min": 1981.577446,
                    "p50": 2025.7734229999999,
                    "p95": 2062.608877,
                    "p99": 2062.608877,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1752.808986,
                    "min": 1706.137571,
                    "p50": 1727.507695,
                    "p95": 1752.808986,
                    "p99": 1752.808986,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1352.707373,
                    "min": 1286.3885129999999,
                    "p50": 1310.3468779999998,
                    "p95": 1352.707373,
                    "p99": 1352.707373,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1214.873226,
                    "min": 1149.0284649999999,
                    "p50": 1171.818814,
                    "p95": 1214.873226,
                    "p99": 1214.873226,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 912.8925999999999,
                    "min": 880.4191119999999,
                    "p50": 891.1798689999999,
                    "p95": 912.8925999999999,
                    "p99": 912.8925999999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1911.5745869999998,
                    "min": 1849.5318439999999,
                    "p50": 1865.9717719999999,
                    "p95": 1911.5745869999998,
                    "p99": 1911.5745869999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 620.701913,
                    "min": 604.8885839999999,
                    "p50": 612.4102459999999,
                    "p95": 620.701913,
                    "p99": 620.701913,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1622.8371029999998,
                    "min": 1565.102226,
                    "p50": 1584.122052,
                    "p95": 1622.8371029999998,
                    "p99": 1622.8371029999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 782.772349,
                    "min": 747.864557,
                    "p50": 753.853812,
                    "p95": 782.772349,
                    "p99": 782.772349,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2617.1053079999997,
                    "min": 2472.3309919999997,
                    "p50": 2503.628244,
                    "p95": 2617.1053079999997,
                    "p99": 2617.1053079999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 478.922599,
                    "min": 457.72554199999996,
                    "p50": 471.22496099999995,
                    "p95": 478.922599,
                    "p99": 478.922599,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1050.444187,
                    "min": 1001.3101079999999,
                    "p50": 1025.013457,
                    "p95": 1050.444187,
                    "p99": 1050.444187,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2146.9707009999997,
                    "min": 2123.78985,
                    "p50": 2137.687488,
                    "p95": 2146.9707009999997,
                    "p99": 2146.9707009999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1451.982662,
                    "min": 1423.090317,
                    "p50": 1438.335666,
                    "p95": 1451.982662,
                    "p99": 1451.982662,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1506.316995,
                    "min": 1468.898997,
                    "p50": 1481.121789,
                    "p95": 1506.316995,
                    "p99": 1506.316995,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 883.336789,
                    "min": 819.797504,
                    "p50": 834.5606369999999,
                    "p95": 883.336789,
                    "p99": 883.336789,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 758.05131,
                    "min": 682.872263,
                    "p50": 709.9217,
                    "p95": 758.05131,
                    "p99": 758.05131,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1402.571575,
                    "min": 1346.055226,
                    "p50": 1368.871742,
                    "p95": 1402.571575,
                    "p99": 1402.571575,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2687.1582399999998,
                    "min": 2633.961429,
                    "p50": 2656.640442,
                    "p95": 2687.1582399999998,
                    "p99": 2687.1582399999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 585.241351,
                    "min": 566.1347539999999,
                    "p50": 579.566557,
                    "p95": 585.241351,
                    "p99": 585.241351,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 982.414915,
                    "min": 960.6114349999999,
                    "p50": 971.6272859999999,
                    "p95": 982.414915,
                    "p99": 982.414915,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 456.315852,
                    "min": 441.155102,
                    "p50": 444.070457,
                    "p95": 456.315852,
                    "p99": 456.315852,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2114.020035,
                    "min": 1993.369583,
                    "p50": 2030.6490729999998,
                    "p95": 2114.020035,
                    "p99": 2114.020035,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1913.489374,
                    "min": 1865.9735779999999,
                    "p50": 1886.149592,
                    "p95": 1913.489374,
                    "p99": 1913.489374,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1646.264604,
                    "min": 1602.727426,
                    "p50": 1623.857884,
                    "p95": 1646.264604,
                    "p99": 1646.264604,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1796.3767639999999,
                    "min": 1723.2522179999999,
                    "p50": 1753.223063,
                    "p95": 1796.3767639999999,
                    "p99": 1796.3767639999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1242.180963,
                    "min": 1213.650046,
                    "p50": 1231.489425,
                    "p95": 1242.180963,
                    "p99": 1242.180963,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2388.696173,
                    "min": 2329.548835,
                    "p50": 2347.198235,
                    "p95": 2388.696173,
                    "p99": 2388.696173,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1148.8665059999998,
                    "min": 1089.7887309999999,
                    "p50": 1098.8701819999999,
                    "p95": 1148.8665059999998,
                    "p99": 1148.8665059999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 817.5808179999999,
                    "min": 790.9023569999999,
                    "p50": 805.110591,
                    "p95": 817.5808179999999,
                    "p99": 817.5808179999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 596.5671169999999,
                    "min": 452.138653,
                    "p50": 462.03745,
                    "p95": 596.5671169999999,
                    "p99": 596.5671169999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1231.403232,
                    "min": 913.261208,
                    "p50": 927.8050969999999,
                    "p95": 1231.403232,
                    "p99": 1231.403232,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1095.2896819999999,
                    "min": 1050.613918,
                    "p50": 1067.474766,
                    "p95": 1095.2896819999999,
                    "p99": 1095.2896819999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.784869,
                    "min": 211.602486,
                    "p50": 226.387033,
                    "p95": 248.784869,
                    "p99": 248.784869,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 809.765726,
                    "min": 742.1614549999999,
                    "p50": 750.7782579999999,
                    "p95": 809.765726,
                    "p99": 809.765726,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 412.56088,
                    "min": 388.00852799999996,
                    "p50": 399.12134399999997,
                    "p95": 412.56088,
                    "p99": 412.56088,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.317194,
                    "min": 273.087428,
                    "p50": 285.468963,
                    "p95": 307.317194,
                    "p99": 307.317194,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2360.327821,
                    "min": 1752.337059,
                    "p50": 1800.958594,
                    "p95": 2360.327821,
                    "p99": 2360.327821,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 591.572685,
                    "min": 567.5096639999999,
                    "p50": 573.385528,
                    "p95": 591.572685,
                    "p99": 591.572685,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 695.072382,
                    "min": 679.386681,
                    "p50": 691.3494469999999,
                    "p95": 695.072382,
                    "p99": 695.072382,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 881.492906,
                    "min": 860.271591,
                    "p50": 865.8439669999999,
                    "p95": 881.492906,
                    "p99": 881.492906,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.153213,
                    "min": 330.713131,
                    "p50": 342.92560199999997,
                    "p95": 349.153213,
                    "p99": 349.153213,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3662.4908069999997,
                    "min": 2915.964128,
                    "p50": 2958.3354369999997,
                    "p95": 3662.4908069999997,
                    "p99": 3662.4908069999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1618.906753,
                    "min": 1197.9942389999999,
                    "p50": 1224.750161,
                    "p95": 1618.906753,
                    "p99": 1618.906753,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 749.0325849999999,
                    "min": 626.779488,
                    "p50": 634.5462689999999,
                    "p95": 749.0325849999999,
                    "p99": 749.0325849999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 609.290606,
                    "min": 513.743966,
                    "p50": 527.064652,
                    "p95": 609.290606,
                    "p99": 609.290606,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2386.537864,
                    "min": 2339.3136649999997,
                    "p50": 2368.159295,
                    "p95": 2386.537864,
                    "p99": 2386.537864,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1072.6686049999998,
                    "min": 1039.492011,
                    "p50": 1057.269319,
                    "p95": 1072.6686049999998,
                    "p99": 1072.6686049999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 373.600308,
                    "min": 344.57767,
                    "p50": 352.98696,
                    "p95": 373.600308,
                    "p99": 373.600308,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 752.422202,
                    "min": 701.4125889999999,
                    "p50": 707.811963,
                    "p95": 752.422202,
                    "p99": 752.422202,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 523.145355,
                    "min": 492.46605999999997,
                    "p50": 500.11094099999997,
                    "p95": 523.145355,
                    "p99": 523.145355,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 594.741413,
                    "min": 548.2778089999999,
                    "p50": 552.0283019999999,
                    "p95": 594.741413,
                    "p99": 594.741413,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 250.45276299999998,
                    "min": 193.797936,
                    "p50": 200.241547,
                    "p95": 250.45276299999998,
                    "p99": 250.45276299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 657.786943,
                    "min": 598.364465,
                    "p50": 609.169806,
                    "p95": 657.786943,
                    "p99": 657.786943,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 331.95381299999997,
                    "min": 297.626767,
                    "p50": 303.277381,
                    "p95": 331.95381299999997,
                    "p99": 331.95381299999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 776.6399799999999,
                    "min": 741.0490259999999,
                    "p50": 760.104171,
                    "p95": 776.6399799999999,
                    "p99": 776.6399799999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 496.126272,
                    "min": 448.669991,
                    "p50": 457.847021,
                    "p95": 496.126272,
                    "p99": 496.126272,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 983.8395879999999,
                    "min": 909.378031,
                    "p50": 943.3160809999999,
                    "p95": 983.8395879999999,
                    "p99": 983.8395879999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 684.716141,
                    "min": 645.240669,
                    "p50": 654.765553,
                    "p95": 684.716141,
                    "p99": 684.716141,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 429.927014,
                    "min": 369.873475,
                    "p50": 400.84734299999997,
                    "p95": 429.927014,
                    "p99": 429.927014,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 253.776862,
                    "min": 250.023915,
                    "p50": 251.320104,
                    "p95": 253.776862,
                    "p99": 253.776862,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 871.8388759999999,
                    "min": 791.20429,
                    "p50": 821.7911909999999,
                    "p95": 871.8388759999999,
                    "p99": 871.8388759999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1598.586534,
                    "min": 1533.056159,
                    "p50": 1559.178138,
                    "p95": 1598.586534,
                    "p99": 1598.586534,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 529.3408099999999,
                    "min": 485.27489399999996,
                    "p50": 498.702947,
                    "p95": 529.3408099999999,
                    "p99": 529.3408099999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 590.349246,
                    "min": 535.814475,
                    "p50": 558.121228,
                    "p95": 590.349246,
                    "p99": 590.349246,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 315.055185,
                    "min": 293.034783,
                    "p50": 295.593422,
                    "p95": 315.055185,
                    "p99": 315.055185,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 489.377732,
                    "min": 432.57521399999996,
                    "p50": 445.881915,
                    "p95": 489.377732,
                    "p99": 489.377732,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 764.1843359999999,
                    "min": 734.254562,
                    "p50": 742.1056229999999,
                    "p95": 764.1843359999999,
                    "p99": 764.1843359999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 249.51233499999998,
                    "min": 187.036214,
                    "p50": 199.651264,
                    "p95": 249.51233499999998,
                    "p99": 249.51233499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1702.560967,
                    "min": 1507.291894,
                    "p50": 1569.653537,
                    "p95": 1702.560967,
                    "p99": 1702.560967,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 639.243286,
                    "min": 571.068316,
                    "p50": 596.733427,
                    "p95": 639.243286,
                    "p99": 639.243286,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 733.6420909999999,
                    "min": 684.301278,
                    "p50": 701.1455169999999,
                    "p95": 733.6420909999999,
                    "p99": 733.6420909999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 429.76241999999996,
                    "min": 328.76158799999996,
                    "p50": 344.911163,
                    "p95": 429.76241999999996,
                    "p99": 429.76241999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 970.9517689999999,
                    "min": 902.0380769999999,
                    "p50": 913.0398399999999,
                    "p95": 970.9517689999999,
                    "p99": 970.9517689999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 651.204891,
                    "min": 630.359863,
                    "p50": 640.2164799999999,
                    "p95": 651.204891,
                    "p99": 651.204891,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 431.20420199999995,
                    "min": 389.94806,
                    "p50": 403.94800999999995,
                    "p95": 431.20420199999995,
                    "p99": 431.20420199999995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2056.093887,
                    "min": 1997.411498,
                    "p50": 2031.508809,
                    "p95": 2056.093887,
                    "p99": 2056.093887,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 250.80722,
                    "min": 241.45871799999998,
                    "p50": 247.79807399999999,
                    "p95": 250.80722,
                    "p99": 250.80722,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 793.4925969999999,
                    "min": 783.423852,
                    "p50": 788.988479,
                    "p95": 793.4925969999999,
                    "p99": 793.4925969999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1078.151729,
                    "min": 1022.4681499999999,
                    "p50": 1038.1205949999999,
                    "p95": 1078.151729,
                    "p99": 1078.151729,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 413.678342,
                    "min": 347.57692499999996,
                    "p50": 356.432483,
                    "p95": 413.678342,
                    "p99": 413.678342,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 307.22688899999997,
                    "min": 303.54925399999996,
                    "p50": 304.939625,
                    "p95": 307.22688899999997,
                    "p99": 307.22688899999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 486.55662099999995,
                    "min": 477.754298,
                    "p50": 483.72878499999996,
                    "p95": 486.55662099999995,
                    "p99": 486.55662099999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 493.79871499999996,
                    "min": 418.646186,
                    "p50": 425.22952399999997,
                    "p95": 493.79871499999996,
                    "p99": 493.79871499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 388.85040599999996,
                    "min": 331.552076,
                    "p50": 384.880219,
                    "p95": 388.85040599999996,
                    "p99": 388.85040599999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 457.31177099999996,
                    "min": 389.37886,
                    "p50": 395.745026,
                    "p95": 457.31177099999996,
                    "p99": 457.31177099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 521.070075,
                    "min": 449.498298,
                    "p50": 451.20201399999996,
                    "p95": 521.070075,
                    "p99": 521.070075,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 127.91809699999999,
                    "min": 120.301048,
                    "p50": 126.673993,
                    "p95": 127.91809699999999,
                    "p99": 127.91809699999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 180.470552,
                    "min": 155.815892,
                    "p50": 158.13166999999999,
                    "p95": 180.470552,
                    "p99": 180.470552,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.258402,
                    "min": 182.769001,
                    "p50": 186.381861,
                    "p95": 214.258402,
                    "p99": 214.258402,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 735.425044,
                    "min": 625.6902759999999,
                    "p50": 632.654465,
                    "p95": 735.425044,
                    "p99": 735.425044,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 247.534145,
                    "min": 179.49626899999998,
                    "p50": 214.35105099999998,
                    "p95": 247.534145,
                    "p99": 247.534145,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 648.85189,
                    "min": 532.071063,
                    "p50": 557.94684,
                    "p95": 648.85189,
                    "p99": 648.85189,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 316.637324,
                    "min": 275.441,
                    "p50": 276.970255,
                    "p95": 316.637324,
                    "p99": 316.637324,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 282.851483,
                    "min": 245.87040199999998,
                    "p50": 247.19293499999998,
                    "p95": 282.851483,
                    "p99": 282.851483,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 92.345717,
                    "min": 84.753913,
                    "p50": 90.57581599999999,
                    "p95": 92.345717,
                    "p99": 92.345717,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 155.238437,
                    "min": 120.988568,
                    "p50": 151.04700499999998,
                    "p95": 155.238437,
                    "p99": 155.238437,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 193.749887,
                    "min": 154.99934299999998,
                    "p50": 189.098716,
                    "p95": 193.749887,
                    "p99": 193.749887,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 52.207482,
                    "min": 31.618691,
                    "p50": 42.838463,
                    "p95": 52.207482,
                    "p99": 52.207482,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 102.433286,
                    "min": 92.020226,
                    "p50": 99.136907,
                    "p95": 102.433286,
                    "p99": 102.433286,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 179.62634699999998,
                    "min": 134.584214,
                    "p50": 173.59049199999998,
                    "p95": 179.62634699999998,
                    "p99": 179.62634699999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 41.51651,
                    "min": 38.782953,
                    "p50": 39.609359999999995,
                    "p95": 41.51651,
                    "p99": 41.51651,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 70.714848,
                    "min": 58.949037,
                    "p50": 69.649898,
                    "p95": 70.714848,
                    "p99": 70.714848,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 82.10854499999999,
                    "min": 70.471597,
                    "p50": 79.369436,
                    "p95": 82.10854499999999,
                    "p99": 82.10854499999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 247.65377199999998,
                    "min": 220.82964099999998,
                    "p50": 222.82316,
                    "p95": 247.65377199999998,
                    "p99": 247.65377199999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 280.16783599999997,
                    "min": 247.89139799999998,
                    "p50": 269.78298,
                    "p95": 280.16783599999997,
                    "p99": 280.16783599999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 90.705253,
                    "min": 66.022244,
                    "p50": 86.585869,
                    "p95": 90.705253,
                    "p99": 90.705253,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 657.949926,
                    "min": 644.7326419999999,
                    "p50": 654.726547,
                    "p95": 657.949926,
                    "p99": 657.949926,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.012076,
                    "min": 24.3161,
                    "p50": 24.803658,
                    "p95": 27.012076,
                    "p99": 27.012076,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 64.97907599999999,
                    "min": 56.207105999999996,
                    "p50": 58.294005999999996,
                    "p95": 64.97907599999999,
                    "p99": 64.97907599999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 365.497781,
                    "min": 347.28513,
                    "p50": 354.14932999999996,
                    "p95": 365.497781,
                    "p99": 365.497781,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 317.533476,
                    "min": 264.236928,
                    "p50": 312.06211099999996,
                    "p95": 317.533476,
                    "p99": 317.533476,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 283.420406,
                    "min": 246.483454,
                    "p50": 259.938793,
                    "p95": 283.420406,
                    "p99": 283.420406,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 307.59421299999997,
                    "min": 241.948769,
                    "p50": 275.699797,
                    "p95": 307.59421299999997,
                    "p99": 307.59421299999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 180.268139,
                    "min": 137.36938899999998,
                    "p50": 176.689358,
                    "p95": 180.268139,
                    "p99": 180.268139,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 877.3762839999999,
                    "min": 728.3419369999999,
                    "p50": 755.6425479999999,
                    "p95": 877.3762839999999,
                    "p99": 877.3762839999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 529.530628,
                    "min": 439.927086,
                    "p50": 482.453788,
                    "p95": 529.530628,
                    "p99": 529.530628,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 404.221562,
                    "min": 311.101695,
                    "p50": 362.890464,
                    "p95": 404.221562,
                    "p99": 404.221562,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 373.435024,
                    "min": 310.351208,
                    "p50": 357.018742,
                    "p95": 373.435024,
                    "p99": 373.435024,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 233.864557,
                    "min": 196.370925,
                    "p50": 203.443482,
                    "p95": 233.864557,
                    "p99": 233.864557,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 591.964153,
                    "min": 461.53195999999997,
                    "p50": 540.679452,
                    "p95": 591.964153,
                    "p99": 591.964153,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.61107399999999,
                    "min": 70.70079799999999,
                    "p50": 112.95875199999999,
                    "p95": 122.61107399999999,
                    "p99": 122.61107399999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 440.509142,
                    "min": 381.19140999999996,
                    "p50": 389.177447,
                    "p95": 440.509142,
                    "p99": 440.509142,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 254.86736499999998,
                    "min": 222.14559899999998,
                    "p50": 227.11369299999998,
                    "p95": 254.86736499999998,
                    "p99": 254.86736499999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 211.55009199999998,
                    "min": 172.315247,
                    "p50": 183.854389,
                    "p95": 211.55009199999998,
                    "p99": 211.55009199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 150.653452,
                    "min": 129.914833,
                    "p50": 134.211019,
                    "p95": 150.653452,
                    "p99": 150.653452,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 421.327301,
                    "min": 360.75428899999997,
                    "p50": 390.734106,
                    "p95": 421.327301,
                    "p99": 421.327301,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 652.1341239999999,
                    "min": 543.991764,
                    "p50": 556.927245,
                    "p95": 652.1341239999999,
                    "p99": 652.1341239999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.368915,
                    "min": 110.66028999999999,
                    "p50": 127.544134,
                    "p95": 143.368915,
                    "p99": 143.368915,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 398.944747,
                    "min": 357.00208599999996,
                    "p50": 393.24355499999996,
                    "p95": 398.944747,
                    "p99": 398.944747,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 491.446151,
                    "min": 385.71844899999996,
                    "p50": 420.897518,
                    "p95": 491.446151,
                    "p99": 491.446151,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 156.102062,
                    "min": 123.904034,
                    "p50": 155.599896,
                    "p95": 156.102062,
                    "p99": 156.102062,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 382.886153,
                    "min": 359.292022,
                    "p50": 361.74616199999997,
                    "p95": 382.886153,
                    "p99": 382.886153,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 561.032101,
                    "min": 476.832742,
                    "p50": 483.00249299999996,
                    "p95": 561.032101,
                    "p99": 561.032101,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 245.096423,
                    "min": 206.252701,
                    "p50": 214.976523,
                    "p95": 245.096423,
                    "p99": 245.096423,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 351.052546,
                    "min": 301.08962099999997,
                    "p50": 304.09308899999996,
                    "p95": 351.052546,
                    "p99": 351.052546,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 319.189619,
                    "min": 271.637992,
                    "p50": 275.737229,
                    "p95": 319.189619,
                    "p99": 319.189619,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 731.919781,
                    "min": 629.351892,
                    "p50": 636.976517,
                    "p95": 731.919781,
                    "p99": 731.919781,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 336.700081,
                    "min": 330.261758,
                    "p50": 335.29073999999997,
                    "p95": 336.700081,
                    "p99": 336.700081,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 279.599793,
                    "min": 233.348356,
                    "p50": 247.70353599999999,
                    "p95": 279.599793,
                    "p99": 279.599793,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 211.78736999999998,
                    "min": 182.47466699999998,
                    "p50": 186.462178,
                    "p95": 211.78736999999998,
                    "p99": 211.78736999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 522.016109,
                    "min": 448.154653,
                    "p50": 452.89457999999996,
                    "p95": 522.016109,
                    "p99": 522.016109,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 31.621959999999998,
                    "min": 27.383626999999997,
                    "p50": 30.499582999999998,
                    "p95": 31.621959999999998,
                    "p99": 31.621959999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.88208,
                    "min": 22.228966999999997,
                    "p50": 24.560592999999997,
                    "p95": 26.88208,
                    "p99": 26.88208,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 76.865438,
                    "min": 71.552785,
                    "p50": 75.303797,
                    "p95": 76.865438,
                    "p99": 76.865438,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 145.556886,
                    "min": 127.715188,
                    "p50": 143.587077,
                    "p95": 145.556886,
                    "p99": 145.556886,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.503390999999997,
                    "min": 24.105818,
                    "p50": 24.613802,
                    "p95": 26.503390999999997,
                    "p99": 26.503390999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.938361,
                    "min": 24.085725999999998,
                    "p50": 24.608783,
                    "p95": 26.938361,
                    "p99": 26.938361,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 62.887578999999995,
                    "min": 56.886993999999994,
                    "p50": 59.770008,
                    "p95": 62.887578999999995,
                    "p99": 62.887578999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.705508,
                    "min": 18.297107,
                    "p50": 24.413508,
                    "p95": 24.705508,
                    "p99": 24.705508,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 58.262055999999994,
                    "min": 32.884205,
                    "p50": 57.839011,
                    "p95": 58.262055999999994,
                    "p99": 58.262055999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.451884,
                    "min": 24.577572999999997,
                    "p50": 26.876939,
                    "p95": 27.451884,
                    "p99": 27.451884,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 46.905189,
                    "min": 24.449064999999997,
                    "p50": 45.162154,
                    "p95": 46.905189,
                    "p99": 46.905189,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.58935,
                    "min": 24.400668,
                    "p50": 24.690369999999998,
                    "p95": 26.58935,
                    "p99": 26.58935,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.847925999999998,
                    "min": 24.35774,
                    "p50": 24.666591,
                    "p95": 24.847925999999998,
                    "p99": 24.847925999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.867863,
                    "min": 24.063879,
                    "p50": 24.408858,
                    "p95": 24.867863,
                    "p99": 24.867863,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.661761,
                    "min": 24.164534999999997,
                    "p50": 24.377688,
                    "p95": 24.661761,
                    "p99": 24.661761,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.891568,
                    "min": 24.090777,
                    "p50": 24.815177,
                    "p95": 26.891568,
                    "p99": 26.891568,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.827375,
                    "min": 22.118741,
                    "p50": 24.607483,
                    "p95": 24.827375,
                    "p99": 24.827375,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.851858999999997,
                    "min": 22.798012,
                    "p50": 24.893214999999998,
                    "p95": 26.851858999999997,
                    "p99": 26.851858999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.70466,
                    "min": 22.735941,
                    "p50": 24.498466999999998,
                    "p95": 24.70466,
                    "p99": 24.70466,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 140.015434,
                    "min": 108.06076499999999,
                    "p50": 139.17231999999998,
                    "p95": 140.015434,
                    "p99": 140.015434,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.82082899999999,
                    "min": 97.41900799999999,
                    "p50": 98.896434,
                    "p95": 102.82082899999999,
                    "p99": 102.82082899999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 206.154267,
                    "min": 182.92092399999999,
                    "p50": 204.666666,
                    "p95": 206.154267,
                    "p99": 206.154267,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 111.87993,
                    "min": 105.234158,
                    "p50": 110.23287499999999,
                    "p95": 111.87993,
                    "p99": 111.87993,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.022282,
                    "min": 130.939873,
                    "p50": 169.06377799999999,
                    "p95": 171.022282,
                    "p99": 171.022282,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 639.747335,
                    "min": 620.938665,
                    "p50": 625.8700299999999,
                    "p95": 639.747335,
                    "p99": 639.747335,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 157.740476,
                    "min": 119.419252,
                    "p50": 156.914179,
                    "p95": 157.740476,
                    "p99": 157.740476,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.63713199999998,
                    "min": 154.484288,
                    "p50": 191.813921,
                    "p95": 194.63713199999998,
                    "p99": 194.63713199999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 247.544345,
                    "min": 207.30011299999998,
                    "p50": 245.71369399999998,
                    "p95": 247.544345,
                    "p99": 247.544345,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 136.799412,
                    "min": 130.959645,
                    "p50": 132.987649,
                    "p95": 136.799412,
                    "p99": 136.799412,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 520.389494,
                    "min": 506.328921,
                    "p50": 510.36758999999995,
                    "p95": 520.389494,
                    "p99": 520.389494,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 126.119152,
                    "min": 120.13053,
                    "p50": 122.829758,
                    "p95": 126.119152,
                    "p99": 126.119152,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.768709,
                    "min": 156.214106,
                    "p50": 178.31632,
                    "p95": 183.768709,
                    "p99": 183.768709,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 396.317389,
                    "min": 381.414161,
                    "p50": 393.888126,
                    "p95": 396.317389,
                    "p99": 396.317389,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.680049,
                    "min": 69.385693,
                    "p50": 86.947687,
                    "p95": 89.680049,
                    "p99": 89.680049,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1213.189433,
                    "min": 1187.629766,
                    "p50": 1204.067027,
                    "p95": 1213.189433,
                    "p99": 1213.189433,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.778752,
                    "min": 36.526615,
                    "p50": 69.955918,
                    "p95": 70.778752,
                    "p99": 70.778752,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 222.27744099999998,
                    "min": 193.475485,
                    "p50": 214.743188,
                    "p95": 222.27744099999998,
                    "p99": 222.27744099999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 276.888268,
                    "min": 234.060036,
                    "p50": 273.799289,
                    "p95": 276.888268,
                    "p99": 276.888268,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 25.696302,
                    "min": 23.90957,
                    "p50": 24.519305,
                    "p95": 25.696302,
                    "p99": 25.696302,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.663736,
                    "min": 24.151493,
                    "p50": 24.767657,
                    "p95": 26.663736,
                    "p99": 26.663736,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.012681999999998,
                    "min": 24.131545,
                    "p50": 24.569843,
                    "p95": 25.012681999999998,
                    "p99": 25.012681999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 25.231925999999998,
                    "min": 23.849241,
                    "p50": 24.478427999999997,
                    "p95": 25.231925999999998,
                    "p99": 25.231925999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.765217999999997,
                    "min": 24.229032,
                    "p50": 24.420296,
                    "p95": 24.765217999999997,
                    "p99": 24.765217999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.493814,
                    "min": 24.262072999999997,
                    "p50": 25.700072,
                    "p95": 27.493814,
                    "p99": 27.493814,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 25.006788999999998,
                    "min": 23.200491,
                    "p50": 24.440576999999998,
                    "p95": 25.006788999999998,
                    "p99": 25.006788999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.748103,
                    "min": 23.582409,
                    "p50": 24.548804,
                    "p95": 26.748103,
                    "p99": 26.748103,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 46.214577999999996,
                    "min": 41.144228,
                    "p50": 43.868521,
                    "p95": 46.214577999999996,
                    "p99": 46.214577999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 25.4847,
                    "min": 22.91427,
                    "p50": 24.70453,
                    "p95": 25.4847,
                    "p99": 25.4847,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.559385,
                    "min": 24.154626,
                    "p50": 24.440647,
                    "p95": 24.559385,
                    "p99": 24.559385,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.569402,
                    "min": 24.154185,
                    "p50": 24.537014,
                    "p95": 24.569402,
                    "p99": 24.569402,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.861124999999998,
                    "min": 23.62763,
                    "p50": 24.504013999999998,
                    "p95": 24.861124999999998,
                    "p99": 24.861124999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.610205999999998,
                    "min": 22.14301,
                    "p50": 24.634470999999998,
                    "p95": 26.610205999999998,
                    "p99": 26.610205999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 88.63967,
                    "min": 79.909244,
                    "p50": 87.45683299999999,
                    "p95": 88.63967,
                    "p99": 88.63967,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.636582,
                    "min": 23.830754,
                    "p50": 24.436667,
                    "p95": 24.636582,
                    "p99": 24.636582,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 37.161116,
                    "min": 32.092898,
                    "p50": 35.178008999999996,
                    "p95": 37.161116,
                    "p99": 37.161116,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 25.051161,
                    "min": 22.214509,
                    "p50": 24.433407,
                    "p95": 25.051161,
                    "p99": 25.051161,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.604505,
                    "min": 22.447049999999997,
                    "p50": 24.435636,
                    "p95": 24.604505,
                    "p99": 24.604505,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.370447,
                    "min": 24.330281,
                    "p50": 24.663919,
                    "p95": 27.370447,
                    "p99": 27.370447,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.751683999999997,
                    "min": 23.582521999999997,
                    "p50": 24.721197999999998,
                    "p95": 26.751683999999997,
                    "p99": 26.751683999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.856201,
                    "min": 21.972672,
                    "p50": 24.34189,
                    "p95": 26.856201,
                    "p99": 26.856201,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.794407,
                    "min": 22.403924,
                    "p50": 24.556753,
                    "p95": 24.794407,
                    "p99": 24.794407,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 25.124297,
                    "min": 22.054813,
                    "p50": 24.362900999999997,
                    "p95": 25.124297,
                    "p99": 25.124297,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.364694999999998,
                    "min": 24.140237,
                    "p50": 24.782656,
                    "p95": 26.364694999999998,
                    "p99": 26.364694999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.856734,
                    "min": 24.082697,
                    "p50": 24.507115,
                    "p95": 24.856734,
                    "p99": 24.856734,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.735291,
                    "min": 23.995359999999998,
                    "p50": 24.474597,
                    "p95": 24.735291,
                    "p99": 24.735291,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.732259,
                    "min": 23.175881999999998,
                    "p50": 24.392799,
                    "p95": 24.732259,
                    "p99": 24.732259,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 24.997142999999998,
                    "min": 24.205641999999997,
                    "p50": 24.696749999999998,
                    "p95": 24.997142999999998,
                    "p99": 24.997142999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.691149,
                    "min": 22.327465,
                    "p50": 24.470688,
                    "p95": 24.691149,
                    "p99": 24.691149,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 24.688250999999998,
                    "min": 23.218791,
                    "p50": 24.33985,
                    "p95": 24.688250999999998,
                    "p99": 24.688250999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.920824,
                    "min": 24.256069999999998,
                    "p50": 24.417868,
                    "p95": 24.920824,
                    "p99": 24.920824,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 24.68688,
                    "min": 23.379458,
                    "p50": 24.434565,
                    "p95": 24.68688,
                    "p99": 24.68688,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.551859999999998,
                    "min": 22.52328,
                    "p50": 24.833855,
                    "p95": 26.551859999999998,
                    "p99": 26.551859999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 48.69048,
                    "min": 43.920351,
                    "p50": 47.029272999999996,
                    "p95": 48.69048,
                    "p99": 48.69048,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.111473,
                    "min": 22.954286,
                    "p50": 24.441188999999998,
                    "p95": 26.111473,
                    "p99": 26.111473,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.966583999999997,
                    "min": 24.414478,
                    "p50": 24.68491,
                    "p95": 24.966583999999997,
                    "p99": 24.966583999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 25.142488999999998,
                    "min": 21.622275,
                    "p50": 24.653478999999997,
                    "p95": 25.142488999999998,
                    "p99": 25.142488999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.480414,
                    "min": 145.694668,
                    "p50": 148.14816199999999,
                    "p95": 149.480414,
                    "p99": 149.480414,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 73.131601,
                    "min": 61.430538999999996,
                    "p50": 70.399869,
                    "p95": 73.131601,
                    "p99": 73.131601,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1240.988271,
                    "min": 1196.863421,
                    "p50": 1209.27724,
                    "p95": 1240.988271,
                    "p99": 1240.988271,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 276.158038,
                    "min": 272.642917,
                    "p50": 274.22848999999997,
                    "p95": 276.158038,
                    "p99": 276.158038,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 126.39137799999999,
                    "min": 83.53752,
                    "p50": 121.935733,
                    "p95": 126.39137799999999,
                    "p99": 126.39137799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.135804,
                    "min": 77.014156,
                    "p50": 83.120762,
                    "p95": 84.135804,
                    "p99": 84.135804,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 113.27049799999999,
                    "min": 70.876003,
                    "p50": 110.663089,
                    "p95": 113.27049799999999,
                    "p99": 113.27049799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 403.951869,
                    "min": 384.782085,
                    "p50": 396.21689299999997,
                    "p95": 403.951869,
                    "p99": 403.951869,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 196.237527,
                    "min": 187.53033,
                    "p50": 192.49287099999998,
                    "p95": 196.237527,
                    "p99": 196.237527,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.922477,
                    "min": 155.900508,
                    "p50": 168.386824,
                    "p95": 171.922477,
                    "p99": 171.922477,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 513.55869,
                    "min": 484.674717,
                    "p50": 506.38867,
                    "p95": 513.55869,
                    "p99": 513.55869,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 639.5678429999999,
                    "min": 604.042421,
                    "p50": 629.9027699999999,
                    "p95": 639.5678429999999,
                    "p99": 639.5678429999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 209.031996,
                    "min": 166.716181,
                    "p50": 205.60726,
                    "p95": 209.031996,
                    "p99": 209.031996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 99.927081,
                    "min": 59.990798999999996,
                    "p50": 99.05480899999999,
                    "p95": 99.927081,
                    "p99": 99.927081,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 253.138994,
                    "min": 241.615628,
                    "p50": 246.966232,
                    "p95": 253.138994,
                    "p99": 253.138994,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 150.202803,
                    "min": 107.555179,
                    "p50": 146.207395,
                    "p95": 150.202803,
                    "p99": 150.202803,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 184.09273199999998,
                    "min": 176.53172999999998,
                    "p50": 180.591037,
                    "p95": 184.09273199999998,
                    "p99": 184.09273199999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 217.904092,
                    "min": 211.98588099999998,
                    "p50": 215.14648699999998,
                    "p95": 217.904092,
                    "p99": 217.904092,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 138.74607799999998,
                    "min": 132.2102,
                    "p50": 133.515208,
                    "p95": 138.74607799999998,
                    "p99": 138.74607799999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 766.746345,
                    "min": 754.392486,
                    "p50": 763.791621,
                    "p95": 766.746345,
                    "p99": 766.746345,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 132.881336,
                    "min": 95.920852,
                    "p50": 131.294036,
                    "p95": 132.881336,
                    "p99": 132.881336,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 253.53526,
                    "min": 212.07777299999998,
                    "p50": 250.077248,
                    "p95": 253.53526,
                    "p99": 253.53526,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 384.374669,
                    "min": 342.03954699999997,
                    "p50": 382.280736,
                    "p95": 384.374669,
                    "p99": 384.374669,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 155.17059,
                    "min": 149.613643,
                    "p50": 152.123722,
                    "p95": 155.17059,
                    "p99": 155.17059,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 405.11239,
                    "min": 390.506989,
                    "p50": 402.378914,
                    "p95": 405.11239,
                    "p99": 405.11239,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 233.48974299999998,
                    "min": 215.361693,
                    "p50": 230.805299,
                    "p95": 233.48974299999998,
                    "p99": 233.48974299999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 452.154208,
                    "min": 431.27387799999997,
                    "p50": 449.357919,
                    "p95": 452.154208,
                    "p99": 452.154208,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 190.476527,
                    "min": 151.80435,
                    "p50": 188.326306,
                    "p95": 190.476527,
                    "p99": 190.476527,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 273.669736,
                    "min": 228.509659,
                    "p50": 266.666323,
                    "p95": 273.669736,
                    "p99": 273.669736,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 959.1731239999999,
                    "min": 919.76824,
                    "p50": 955.254949,
                    "p95": 959.1731239999999,
                    "p99": 959.1731239999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 292.934216,
                    "min": 267.522516,
                    "p50": 289.796748,
                    "p95": 292.934216,
                    "p99": 292.934216,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 211.824065,
                    "min": 196.94055799999998,
                    "p50": 209.428684,
                    "p95": 211.824065,
                    "p99": 211.824065,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 344.28747899999996,
                    "min": 308.60983999999996,
                    "p50": 341.203673,
                    "p95": 344.28747899999996,
                    "p99": 344.28747899999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 114.936211,
                    "min": 75.735445,
                    "p50": 111.91583,
                    "p95": 114.936211,
                    "p99": 114.936211,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 365.055822,
                    "min": 346.368743,
                    "p50": 360.36301,
                    "p95": 365.055822,
                    "p99": 365.055822,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 502.642702,
                    "min": 458.912157,
                    "p50": 497.927573,
                    "p95": 502.642702,
                    "p99": 502.642702,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1295.079027,
                    "min": 1258.0836669999999,
                    "p50": 1282.818422,
                    "p95": 1295.079027,
                    "p99": 1295.079027,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.64143099999998,
                    "min": 210.567814,
                    "p50": 214.840646,
                    "p95": 218.64143099999998,
                    "p99": 218.64143099999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 389.496057,
                    "min": 348.156634,
                    "p50": 389.197618,
                    "p95": 389.496057,
                    "p99": 389.496057,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 331.07240099999996,
                    "min": 323.45559199999997,
                    "p50": 328.501016,
                    "p95": 331.07240099999996,
                    "p99": 331.07240099999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 622.142433,
                    "min": 611.400839,
                    "p50": 618.5622979999999,
                    "p95": 622.142433,
                    "p99": 622.142433,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 562.387912,
                    "min": 553.012465,
                    "p50": 555.996458,
                    "p95": 562.387912,
                    "p99": 562.387912,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 736.400808,
                    "min": 714.752663,
                    "p50": 728.679098,
                    "p95": 736.400808,
                    "p99": 736.400808,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 912.1360169999999,
                    "min": 880.0066939999999,
                    "p50": 899.356722,
                    "p95": 912.1360169999999,
                    "p99": 912.1360169999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 796.903187,
                    "min": 744.924662,
                    "p50": 788.929891,
                    "p95": 796.903187,
                    "p99": 796.903187,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 679.0170079999999,
                    "min": 638.9970589999999,
                    "p50": 677.2428739999999,
                    "p95": 679.0170079999999,
                    "p99": 679.0170079999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1205.640969,
                    "min": 1141.552504,
                    "p50": 1199.357356,
                    "p95": 1205.640969,
                    "p99": 1205.640969,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 444.672539,
                    "min": 407.544198,
                    "p50": 442.15128,
                    "p95": 444.672539,
                    "p99": 444.672539,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 276.675728,
                    "min": 252.518568,
                    "p50": 268.15619499999997,
                    "p95": 276.675728,
                    "p99": 276.675728,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1055.324608,
                    "min": 1008.375311,
                    "p50": 1052.028689,
                    "p95": 1055.324608,
                    "p99": 1055.324608,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 503.77986999999996,
                    "min": 460.62086999999997,
                    "p50": 501.855325,
                    "p95": 503.77986999999996,
                    "p99": 503.77986999999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 848.485092,
                    "min": 803.3665239999999,
                    "p50": 837.161873,
                    "p95": 848.485092,
                    "p99": 848.485092,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 946.221107,
                    "min": 891.997175,
                    "p50": 932.3722389999999,
                    "p95": 946.221107,
                    "p99": 946.221107,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2030.1972529999998,
                    "min": 1996.2995139999998,
                    "p50": 2009.755033,
                    "p95": 2030.1972529999998,
                    "p99": 2030.1972529999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2894.733042,
                    "min": 2834.945809,
                    "p50": 2862.821051,
                    "p95": 2894.733042,
                    "p99": 2894.733042,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5763.405328,
                    "min": 5681.491822999999,
                    "p50": 5748.073082999999,
                    "p95": 5763.405328,
                    "p99": 5763.405328,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1616.1688689999999,
                    "min": 1583.2393049999998,
                    "p50": 1606.807388,
                    "p95": 1616.1688689999999,
                    "p99": 1616.1688689999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 756.3162599999999,
                    "min": 715.428094,
                    "p50": 751.4081279999999,
                    "p95": 756.3162599999999,
                    "p99": 756.3162599999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 614.419635,
                    "min": 585.4901229999999,
                    "p50": 609.4317239999999,
                    "p95": 614.419635,
                    "p99": 614.419635,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1758.2047479999999,
                    "min": 1713.9798569999998,
                    "p50": 1734.455052,
                    "p95": 1758.2047479999999,
                    "p99": 1758.2047479999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4342.972811,
                    "min": 4238.55636,
                    "p50": 4288.657789,
                    "p95": 4342.972811,
                    "p99": 4342.972811,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2546.486837,
                    "min": 2482.8632199999997,
                    "p50": 2495.7236829999997,
                    "p95": 2546.486837,
                    "p99": 2546.486837,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2190.913166,
                    "min": 2133.351412,
                    "p50": 2152.3273529999997,
                    "p95": 2190.913166,
                    "p99": 2190.913166,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1183.418561,
                    "min": 1156.546472,
                    "p50": 1170.2559179999998,
                    "p95": 1183.418561,
                    "p99": 1183.418561,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1482.219355,
                    "min": 1435.673184,
                    "p50": 1443.012645,
                    "p95": 1482.219355,
                    "p99": 1482.219355,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1060.693021,
                    "min": 1001.862439,
                    "p50": 1026.386626,
                    "p95": 1060.693021,
                    "p99": 1060.693021,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 467.627233,
                    "min": 430.90225699999996,
                    "p50": 458.538837,
                    "p95": 467.627233,
                    "p99": 467.627233,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1903.155765,
                    "min": 1854.790031,
                    "p50": 1883.634043,
                    "p95": 1903.155765,
                    "p99": 1903.155765,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1330.113013,
                    "min": 1274.56558,
                    "p50": 1308.561307,
                    "p95": 1330.113013,
                    "p99": 1330.113013,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 431.386733,
                    "min": 390.885917,
                    "p50": 425.66027299999996,
                    "p95": 431.386733,
                    "p99": 431.386733,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1331.1890429999999,
                    "min": 1286.020838,
                    "p50": 1296.141248,
                    "p95": 1331.1890429999999,
                    "p99": 1331.1890429999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2660.848629,
                    "min": 2562.3183089999998,
                    "p50": 2613.250321,
                    "p95": 2660.848629,
                    "p99": 2660.848629,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1446.947647,
                    "min": 1426.4401169999999,
                    "p50": 1435.029294,
                    "p95": 1446.947647,
                    "p99": 1446.947647,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3850.782991,
                    "min": 3751.793079,
                    "p50": 3791.025279,
                    "p95": 3850.782991,
                    "p99": 3850.782991,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 818.1030979999999,
                    "min": 769.346595,
                    "p50": 801.813911,
                    "p95": 818.1030979999999,
                    "p99": 818.1030979999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1220.9068889999999,
                    "min": 1154.617137,
                    "p50": 1192.381226,
                    "p95": 1220.9068889999999,
                    "p99": 1220.9068889999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5100.01142,
                    "min": 4956.003017999999,
                    "p50": 4978.205754,
                    "p95": 5100.01142,
                    "p99": 5100.01142,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 696.907114,
                    "min": 652.136077,
                    "p50": 685.11997,
                    "p95": 696.907114,
                    "p99": 696.907114,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1747.462364,
                    "min": 1682.2310479999999,
                    "p50": 1715.835459,
                    "p95": 1747.462364,
                    "p99": 1747.462364,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 945.53636,
                    "min": 885.7310769999999,
                    "p50": 923.7603399999999,
                    "p95": 945.53636,
                    "p99": 945.53636,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 554.044718,
                    "min": 509.27629199999996,
                    "p50": 547.3981259999999,
                    "p95": 554.044718,
                    "p99": 554.044718,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1992.770331,
                    "min": 1945.9920599999998,
                    "p50": 1963.5008229999999,
                    "p95": 1992.770331,
                    "p99": 1992.770331,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1860.9488,
                    "min": 1815.5501259999999,
                    "p50": 1838.259885,
                    "p95": 1860.9488,
                    "p99": 1860.9488,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2268.989596,
                    "min": 2194.904396,
                    "p50": 2260.256165,
                    "p95": 2268.989596,
                    "p99": 2268.989596,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1058.740203,
                    "min": 1034.210103,
                    "p50": 1038.602858,
                    "p95": 1058.740203,
                    "p99": 1058.740203,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1591.943205,
                    "min": 1540.4459829999998,
                    "p50": 1560.3979439999998,
                    "p95": 1591.943205,
                    "p99": 1591.943205,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 903.6873119999999,
                    "min": 878.679187,
                    "p50": 893.711913,
                    "p95": 903.6873119999999,
                    "p99": 903.6873119999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 661.09534,
                    "min": 634.954658,
                    "p50": 651.3716979999999,
                    "p95": 661.09534,
                    "p99": 661.09534,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1271.9953659999999,
                    "min": 1253.007244,
                    "p50": 1261.847703,
                    "p95": 1271.9953659999999,
                    "p99": 1271.9953659999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1900.703896,
                    "min": 1838.8661169999998,
                    "p50": 1876.3256569999999,
                    "p95": 1900.703896,
                    "p99": 1900.703896,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 6231.598183,
                    "min": 6074.734616,
                    "p50": 6151.716536999999,
                    "p95": 6231.598183,
                    "p99": 6231.598183,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2513.0455159999997,
                    "min": 2461.156373,
                    "p50": 2495.484062,
                    "p95": 2513.0455159999997,
                    "p99": 2513.0455159999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 723.7811049999999,
                    "min": 707.24834,
                    "p50": 711.885755,
                    "p95": 723.7811049999999,
                    "p99": 723.7811049999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.51567799999998,
                    "min": 195.831889,
                    "p50": 224.76778199999998,
                    "p95": 226.51567799999998,
                    "p99": 226.51567799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3138.578923,
                    "min": 3055.2646999999997,
                    "p50": 3088.8808879999997,
                    "p95": 3138.578923,
                    "p99": 3138.578923,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 469.63591199999996,
                    "min": 463.724611,
                    "p50": 466.031231,
                    "p95": 469.63591199999996,
                    "p99": 469.63591199999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 535.2212,
                    "min": 519.2225569999999,
                    "p50": 531.881168,
                    "p95": 535.2212,
                    "p99": 535.2212,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 602.589981,
                    "min": 550.191005,
                    "p50": 588.411558,
                    "p95": 602.589981,
                    "p99": 602.589981,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1117.700171,
                    "min": 1065.4582719999999,
                    "p50": 1106.1201489999999,
                    "p95": 1117.700171,
                    "p99": 1117.700171,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 351.811205,
                    "min": 324.18895,
                    "p50": 345.99238499999996,
                    "p95": 351.811205,
                    "p99": 351.811205,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 416.982651,
                    "min": 371.94795999999997,
                    "p50": 409.79696099999995,
                    "p95": 416.982651,
                    "p99": 416.982651,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 972.624054,
                    "min": 947.944523,
                    "p50": 954.860873,
                    "p95": 972.624054,
                    "p99": 972.624054,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 786.676824,
                    "min": 731.1707729999999,
                    "p50": 765.818015,
                    "p95": 786.676824,
                    "p99": 786.676824,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.440809,
                    "min": 245.52330099999998,
                    "p50": 283.895374,
                    "p95": 288.440809,
                    "p99": 288.440809,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 833.905083,
                    "min": 796.176842,
                    "p50": 828.7638479999999,
                    "p95": 833.905083,
                    "p99": 833.905083,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3436.3482989999998,
                    "min": 3354.032628,
                    "p50": 3361.363405,
                    "p95": 3436.3482989999998,
                    "p99": 3436.3482989999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1384.931734,
                    "min": 1345.5814169999999,
                    "p50": 1375.2428499999999,
                    "p95": 1384.931734,
                    "p99": 1384.931734,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1019.697588,
                    "min": 980.624505,
                    "p50": 990.6063489999999,
                    "p95": 1019.697588,
                    "p99": 1019.697588,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2378.784534,
                    "min": 2304.7208539999997,
                    "p50": 2321.516173,
                    "p95": 2378.784534,
                    "p99": 2378.784534,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1578.2800909999999,
                    "min": 1542.2221539999998,
                    "p50": 1566.572138,
                    "p95": 1578.2800909999999,
                    "p99": 1578.2800909999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7734.069976,
                    "min": 7571.3770509999995,
                    "p50": 7660.671899,
                    "p95": 7734.069976,
                    "p99": 7734.069976,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2158.503036,
                    "min": 2107.97802,
                    "p50": 2134.378842,
                    "p95": 2158.503036,
                    "p99": 2158.503036,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1197.897283,
                    "min": 1147.003819,
                    "p50": 1180.856132,
                    "p95": 1197.897283,
                    "p99": 1197.897283,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2542.759831,
                    "min": 2487.7619529999997,
                    "p50": 2513.55156,
                    "p95": 2542.759831,
                    "p99": 2542.759831,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5835.752267,
                    "min": 5653.200752,
                    "p50": 5727.106424,
                    "p95": 5835.752267,
                    "p99": 5835.752267,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2928.8036819999998,
                    "min": 2856.2593699999998,
                    "p50": 2893.326556,
                    "p95": 2928.8036819999998,
                    "p99": 2928.8036819999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3907.572217,
                    "min": 3806.9652379999998,
                    "p50": 3857.5509349999998,
                    "p95": 3907.572217,
                    "p99": 3907.572217,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 624.127758,
                    "min": 597.928963,
                    "p50": 605.971398,
                    "p95": 624.127758,
                    "p99": 624.127758,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2724.774579,
                    "min": 2676.703305,
                    "p50": 2697.7063249999997,
                    "p95": 2724.774579,
                    "p99": 2724.774579,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 809.2268329999999,
                    "min": 771.54131,
                    "p50": 795.8865629999999,
                    "p95": 809.2268329999999,
                    "p99": 809.2268329999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1948.2078079999999,
                    "min": 1921.8077939999998,
                    "p50": 1933.567161,
                    "p95": 1948.2078079999999,
                    "p99": 1948.2078079999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1758.575998,
                    "min": 1717.358203,
                    "p50": 1740.779398,
                    "p95": 1758.575998,
                    "p99": 1758.575998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2915.8742509999997,
                    "min": 2850.08545,
                    "p50": 2889.496514,
                    "p95": 2915.8742509999997,
                    "p99": 2915.8742509999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 811.297555,
                    "min": 764.246352,
                    "p50": 798.765394,
                    "p95": 811.297555,
                    "p99": 811.297555,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1758.197305,
                    "min": 1718.4825409999999,
                    "p50": 1742.577128,
                    "p95": 1758.197305,
                    "p99": 1758.197305,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2543.6662539999998,
                    "min": 2486.007745,
                    "p50": 2506.7807399999997,
                    "p95": 2543.6662539999998,
                    "p99": 2543.6662539999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1962.081086,
                    "min": 1920.810242,
                    "p50": 1934.203474,
                    "p95": 1962.081086,
                    "p99": 1962.081086,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2150.477949,
                    "min": 2090.512839,
                    "p50": 2124.768427,
                    "p95": 2150.477949,
                    "p99": 2150.477949,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3847.825003,
                    "min": 3797.169157,
                    "p50": 3827.230302,
                    "p95": 3847.825003,
                    "p99": 3847.825003,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5777.610726999999,
                    "min": 5683.905710999999,
                    "p50": 5698.013008999999,
                    "p95": 5777.610726999999,
                    "p99": 5777.610726999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2344.4575489999997,
                    "min": 2278.556354,
                    "p50": 2312.1476589999997,
                    "p95": 2344.4575489999997,
                    "p99": 2344.4575489999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 996.844158,
                    "min": 976.1117079999999,
                    "p50": 988.572834,
                    "p95": 996.844158,
                    "p99": 996.844158,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 620.708112,
                    "min": 567.781749,
                    "p50": 607.027249,
                    "p95": 620.708112,
                    "p99": 620.708112,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1212.864811,
                    "min": 1142.1812579999998,
                    "p50": 1186.9107219999999,
                    "p95": 1212.864811,
                    "p99": 1212.864811,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3408.282319,
                    "min": 3327.612592,
                    "p50": 3365.0625019999998,
                    "p95": 3408.282319,
                    "p99": 3408.282319,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1396.960993,
                    "min": 1356.1332029999999,
                    "p50": 1364.426616,
                    "p95": 1396.960993,
                    "p99": 1396.960993,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2728.4104859999998,
                    "min": 2672.1578759999998,
                    "p50": 2689.007865,
                    "p95": 2728.4104859999998,
                    "p99": 2728.4104859999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1567.511478,
                    "min": 1516.625356,
                    "p50": 1554.3789299999999,
                    "p95": 1567.511478,
                    "p99": 1567.511478,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 934.76213,
                    "min": 890.0938269999999,
                    "p50": 919.561514,
                    "p95": 934.76213,
                    "p99": 934.76213,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 165.731858,
                    "min": 161.63365,
                    "p50": 164.17225399999998,
                    "p95": 165.731858,
                    "p99": 165.731858,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 485.045343,
                    "min": 466.217136,
                    "p50": 477.26325099999997,
                    "p95": 485.045343,
                    "p99": 485.045343,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 102.596435,
                    "min": 62.720926,
                    "p50": 101.34595999999999,
                    "p95": 102.596435,
                    "p99": 102.596435,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.964486,
                    "min": 50.324465,
                    "p50": 70.952844,
                    "p95": 74.964486,
                    "p99": 74.964486,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 146.22895699999998,
                    "min": 106.94233799999999,
                    "p50": 143.85201999999998,
                    "p95": 146.22895699999998,
                    "p99": 146.22895699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 394.79513099999997,
                    "min": 351.885606,
                    "p50": 391.090284,
                    "p95": 394.79513099999997,
                    "p99": 394.79513099999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 172.38672499999998,
                    "min": 131.794403,
                    "p50": 171.333844,
                    "p95": 172.38672499999998,
                    "p99": 172.38672499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 156.237459,
                    "min": 115.36201799999999,
                    "p50": 153.737497,
                    "p95": 156.237459,
                    "p99": 156.237459,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 194.357009,
                    "min": 153.71084,
                    "p50": 192.93749499999998,
                    "p95": 194.357009,
                    "p99": 194.357009,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.185383,
                    "min": 45.187808,
                    "p50": 83.084063,
                    "p95": 84.185383,
                    "p99": 84.185383,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 136.482123,
                    "min": 113.761861,
                    "p50": 134.818331,
                    "p95": 136.482123,
                    "p99": 136.482123,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 55.015814999999996,
                    "min": 27.146039,
                    "p50": 53.177353,
                    "p95": 55.015814999999996,
                    "p99": 55.015814999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 111.04539299999999,
                    "min": 91.006044,
                    "p50": 110.4658,
                    "p95": 111.04539299999999,
                    "p99": 111.04539299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 95.074646,
                    "min": 90.977396,
                    "p50": 92.551153,
                    "p95": 95.074646,
                    "p99": 95.074646,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 122.067619,
                    "min": 79.087289,
                    "p50": 119.41712199999999,
                    "p95": 122.067619,
                    "p99": 122.067619,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 132.70111699999998,
                    "min": 115.89837299999999,
                    "p50": 127.799706,
                    "p95": 132.70111699999998,
                    "p99": 132.70111699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 308.073609,
                    "min": 285.926299,
                    "p50": 304.972934,
                    "p95": 308.073609,
                    "p99": 308.073609,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 216.213267,
                    "min": 186.999932,
                    "p50": 212.15059,
                    "p95": 216.213267,
                    "p99": 216.213267,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.306652,
                    "min": 24.067273,
                    "p50": 27.136053,
                    "p95": 28.306652,
                    "p99": 28.306652,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 129.377418,
                    "min": 89.312545,
                    "p50": 128.302967,
                    "p95": 129.377418,
                    "p99": 129.377418,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 104.46552799999999,
                    "min": 65.15543699999999,
                    "p50": 103.717275,
                    "p95": 104.46552799999999,
                    "p99": 104.46552799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 84.659339,
                    "min": 45.520987999999996,
                    "p50": 83.27662699999999,
                    "p95": 84.659339,
                    "p99": 84.659339,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 46.050762,
                    "min": 24.760479999999998,
                    "p50": 43.512552,
                    "p95": 46.050762,
                    "p99": 46.050762,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 268.21417299999996,
                    "min": 243.67044199999998,
                    "p50": 263.82721699999996,
                    "p95": 268.21417299999996,
                    "p99": 268.21417299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 157.38146,
                    "min": 149.36818,
                    "p50": 150.902116,
                    "p95": 157.38146,
                    "p99": 157.38146,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 55.619281,
                    "min": 26.563368,
                    "p50": 51.58286,
                    "p95": 55.619281,
                    "p99": 55.619281,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 61.272974,
                    "min": 31.570797,
                    "p50": 59.985816,
                    "p95": 61.272974,
                    "p99": 61.272974,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 36.125095,
                    "min": 26.360094999999998,
                    "p50": 34.792868999999996,
                    "p95": 36.125095,
                    "p99": 36.125095,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 41.719522999999995,
                    "min": 34.253136999999995,
                    "p50": 40.658291999999996,
                    "p95": 41.719522999999995,
                    "p99": 41.719522999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 25.403150999999998,
                    "min": 24.231437999999997,
                    "p50": 24.622201999999998,
                    "p95": 25.403150999999998,
                    "p99": 25.403150999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 78.916748,
                    "min": 59.739428,
                    "p50": 74.30215,
                    "p95": 78.916748,
                    "p99": 78.916748,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 49.849278,
                    "min": 39.843523999999995,
                    "p50": 49.07425,
                    "p95": 49.849278,
                    "p99": 49.849278,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 69.182056,
                    "min": 61.321222,
                    "p50": 65.279775,
                    "p95": 69.182056,
                    "p99": 69.182056,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.908793,
                    "min": 24.799556,
                    "p50": 31.418625,
                    "p95": 31.908793,
                    "p99": 31.908793,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 65.509407,
                    "min": 28.480994,
                    "p50": 57.195895,
                    "p95": 65.509407,
                    "p99": 65.509407,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.310146,
                    "min": 23.844621999999998,
                    "p50": 24.777518,
                    "p95": 26.310146,
                    "p99": 26.310146,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.771812999999998,
                    "min": 24.239963,
                    "p50": 24.694198,
                    "p95": 26.771812999999998,
                    "p99": 26.771812999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 217.351677,
                    "min": 176.65552699999998,
                    "p50": 214.847678,
                    "p95": 217.351677,
                    "p99": 217.351677,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 122.59098399999999,
                    "min": 103.65047,
                    "p50": 119.72725299999999,
                    "p95": 122.59098399999999,
                    "p99": 122.59098399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 243.368988,
                    "min": 238.246397,
                    "p50": 242.24736099999998,
                    "p95": 243.368988,
                    "p99": 243.368988,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 115.95660799999999,
                    "min": 108.95175599999999,
                    "p50": 110.05023,
                    "p95": 115.95660799999999,
                    "p99": 115.95660799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.54146,
                    "min": 94.25710699999999,
                    "p50": 100.317568,
                    "p95": 102.54146,
                    "p99": 102.54146,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 82.65999599999999,
                    "min": 75.785876,
                    "p50": 80.59779,
                    "p95": 82.65999599999999,
                    "p99": 82.65999599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 181.35681699999998,
                    "min": 142.436611,
                    "p50": 177.117451,
                    "p95": 181.35681699999998,
                    "p99": 181.35681699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 153.449976,
                    "min": 129.97606299999998,
                    "p50": 150.110299,
                    "p95": 153.449976,
                    "p99": 153.449976,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 346.127571,
                    "min": 303.320803,
                    "p50": 342.64347799999996,
                    "p95": 346.127571,
                    "p99": 346.127571,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 132.767765,
                    "min": 91.178235,
                    "p50": 130.66030899999998,
                    "p95": 132.767765,
                    "p99": 132.767765,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1067.4165349999998,
                    "min": 1013.229463,
                    "p50": 1052.688469,
                    "p95": 1067.4165349999998,
                    "p99": 1067.4165349999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 95.110992,
                    "min": 51.514542,
                    "p50": 90.80473099999999,
                    "p95": 95.110992,
                    "p99": 95.110992,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 179.263544,
                    "min": 131.34739,
                    "p50": 170.864692,
                    "p95": 179.263544,
                    "p99": 179.263544,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 166.315582,
                    "min": 149.080346,
                    "p50": 161.30464899999998,
                    "p95": 166.315582,
                    "p99": 166.315582,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 450.926636,
                    "min": 428.871971,
                    "p50": 446.51951399999996,
                    "p95": 450.926636,
                    "p99": 450.926636,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.86372399999999,
                    "min": 55.887321,
                    "p50": 61.573086999999994,
                    "p95": 64.86372399999999,
                    "p99": 64.86372399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 195.161518,
                    "min": 188.508936,
                    "p50": 192.201255,
                    "p95": 195.161518,
                    "p99": 195.161518,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 143.677539,
                    "min": 136.26604799999998,
                    "p50": 139.891519,
                    "p95": 143.677539,
                    "p99": 143.677539,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 545.515592,
                    "min": 538.814587,
                    "p50": 541.810261,
                    "p95": 545.515592,
                    "p99": 545.515592,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1138.610634,
                    "min": 1088.773187,
                    "p50": 1127.723683,
                    "p95": 1138.610634,
                    "p99": 1138.610634,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 976.8267989999999,
                    "min": 953.847591,
                    "p50": 968.9781549999999,
                    "p95": 976.8267989999999,
                    "p99": 976.8267989999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1468.0952439999999,
                    "min": 1405.868751,
                    "p50": 1451.367255,
                    "p95": 1468.0952439999999,
                    "p99": 1468.0952439999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 502.96915299999995,
                    "min": 458.112868,
                    "p50": 499.451491,
                    "p95": 502.96915299999995,
                    "p99": 502.96915299999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 659.875864,
                    "min": 621.54103,
                    "p50": 650.270838,
                    "p95": 659.875864,
                    "p99": 659.875864,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1303.101218,
                    "min": 1252.4793809999999,
                    "p50": 1295.00642,
                    "p95": 1303.101218,
                    "p99": 1303.101218,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 825.707828,
                    "min": 774.402842,
                    "p50": 815.051157,
                    "p95": 825.707828,
                    "p99": 825.707828,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1526.338201,
                    "min": 1471.1670259999999,
                    "p50": 1507.372854,
                    "p95": 1526.338201,
                    "p99": 1526.338201,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 487.70595399999996,
                    "min": 463.576672,
                    "p50": 482.132437,
                    "p95": 487.70595399999996,
                    "p99": 487.70595399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1236.077612,
                    "min": 1179.50345,
                    "p50": 1220.594611,
                    "p95": 1236.077612,
                    "p99": 1236.077612,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 932.2102769999999,
                    "min": 881.27442,
                    "p50": 922.733488,
                    "p95": 932.2102769999999,
                    "p99": 932.2102769999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1081.9540749999999,
                    "min": 1041.602467,
                    "p50": 1067.743008,
                    "p95": 1081.9540749999999,
                    "p99": 1081.9540749999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1380.05981,
                    "min": 1325.672542,
                    "p50": 1358.5390479999999,
                    "p95": 1380.05981,
                    "p99": 1380.05981,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 639.124905,
                    "min": 600.535863,
                    "p50": 632.213614,
                    "p95": 639.124905,
                    "p99": 639.124905,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 786.761532,
                    "min": 735.4872019999999,
                    "p50": 773.767959,
                    "p95": 786.761532,
                    "p99": 786.761532,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.303451,
                    "min": 272.087248,
                    "p50": 283.765068,
                    "p95": 291.303451,
                    "p99": 291.303451,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 473.73938799999996,
                    "min": 451.98253,
                    "p50": 456.28644399999996,
                    "p95": 473.73938799999996,
                    "p99": 473.73938799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 598.3357659999999,
                    "min": 558.800024,
                    "p50": 594.9522109999999,
                    "p95": 598.3357659999999,
                    "p99": 598.3357659999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 414.643383,
                    "min": 364.59266399999996,
                    "p50": 409.96797399999997,
                    "p95": 414.643383,
                    "p99": 414.643383,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 791.4486129999999,
                    "min": 742.504699,
                    "p50": 778.5753669999999,
                    "p95": 791.4486129999999,
                    "p99": 791.4486129999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.36393099999998,
                    "min": 217.134522,
                    "p50": 224.928898,
                    "p95": 227.36393099999998,
                    "p99": 227.36393099999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 667.990291,
                    "min": 631.128096,
                    "p50": 666.19872,
                    "p95": 667.990291,
                    "p99": 667.990291,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 539.514765,
                    "min": 488.00332599999996,
                    "p50": 530.272744,
                    "p95": 539.514765,
                    "p99": 539.514765,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.38511,
                    "min": 306.88267099999996,
                    "p50": 317.128742,
                    "p95": 344.38511,
                    "p99": 344.38511,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 686.53157,
                    "min": 666.2863229999999,
                    "p50": 673.7169359999999,
                    "p95": 686.53157,
                    "p99": 686.53157,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1002.5236709999999,
                    "min": 946.857753,
                    "p50": 986.675937,
                    "p95": 1002.5236709999999,
                    "p99": 1002.5236709999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1327.009168,
                    "min": 1258.780285,
                    "p50": 1298.8985719999998,
                    "p95": 1327.009168,
                    "p99": 1327.009168,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 362.123221,
                    "min": 344.537355,
                    "p50": 357.50926999999996,
                    "p95": 362.123221,
                    "p99": 362.123221,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 679.195483,
                    "min": 630.837598,
                    "p50": 673.660635,
                    "p95": 679.195483,
                    "p99": 679.195483,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1158.907826,
                    "min": 1127.243285,
                    "p50": 1155.248598,
                    "p95": 1158.907826,
                    "p99": 1158.907826,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 517.472595,
                    "min": 476.98726899999997,
                    "p50": 515.15315,
                    "p95": 517.472595,
                    "p99": 517.472595,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 839.8972779999999,
                    "min": 812.697134,
                    "p50": 829.604146,
                    "p95": 839.8972779999999,
                    "p99": 839.8972779999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 620.6982019999999,
                    "min": 613.1074659999999,
                    "p50": 618.113891,
                    "p95": 620.6982019999999,
                    "p99": 620.6982019999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 326.284038,
                    "min": 257.88460699999996,
                    "p50": 303.452064,
                    "p95": 326.284038,
                    "p99": 326.284038,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.063986,
                    "min": 181.86637299999998,
                    "p50": 189.804497,
                    "p95": 202.063986,
                    "p99": 202.063986,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 579.804226,
                    "min": 522.848117,
                    "p50": 563.132937,
                    "p95": 579.804226,
                    "p99": 579.804226,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 450.284854,
                    "min": 403.74150399999996,
                    "p50": 414.085292,
                    "p95": 450.284854,
                    "p99": 450.284854,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 370.454543,
                    "min": 326.704317,
                    "p50": 338.13412999999997,
                    "p95": 370.454543,
                    "p99": 370.454543,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 531.07486,
                    "min": 493.773347,
                    "p50": 507.48386,
                    "p95": 531.07486,
                    "p99": 531.07486,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 242.04020699999998,
                    "min": 228.83945899999998,
                    "p50": 238.251018,
                    "p95": 242.04020699999998,
                    "p99": 242.04020699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.161373,
                    "min": 148.85697199999998,
                    "p50": 152.88726499999999,
                    "p95": 157.161373,
                    "p99": 157.161373,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 761.3402219999999,
                    "min": 706.68606,
                    "p50": 741.672781,
                    "p95": 761.3402219999999,
                    "p99": 761.3402219999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 659.792573,
                    "min": 602.99393,
                    "p50": 647.7981639999999,
                    "p95": 659.792573,
                    "p99": 659.792573,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 819.8881399999999,
                    "min": 776.903653,
                    "p50": 803.6585329999999,
                    "p95": 819.8881399999999,
                    "p99": 819.8881399999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 376.939304,
                    "min": 358.224198,
                    "p50": 373.21439499999997,
                    "p95": 376.939304,
                    "p99": 376.939304,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 495.700196,
                    "min": 420.32455799999997,
                    "p50": 447.89117,
                    "p95": 495.700196,
                    "p99": 495.700196,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 279.889035,
                    "min": 239.683722,
                    "p50": 274.31206499999996,
                    "p95": 279.889035,
                    "p99": 279.889035,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 525.5080389999999,
                    "min": 471.23535699999996,
                    "p50": 516.538561,
                    "p95": 525.5080389999999,
                    "p99": 525.5080389999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 225.032965,
                    "min": 200.61005699999998,
                    "p50": 216.285572,
                    "p95": 225.032965,
                    "p99": 225.032965,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 594.140134,
                    "min": 539.135418,
                    "p50": 574.20719,
                    "p95": 594.140134,
                    "p99": 594.140134,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 406.388022,
                    "min": 366.575126,
                    "p50": 372.00939999999997,
                    "p95": 406.388022,
                    "p99": 406.388022,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.90971199999998,
                    "min": 136.2318,
                    "p50": 171.959656,
                    "p95": 181.90971199999998,
                    "p99": 181.90971199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 243.42931399999998,
                    "min": 234.735525,
                    "p50": 240.248786,
                    "p95": 243.42931399999998,
                    "p99": 243.42931399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 467.775963,
                    "min": 444.19426799999997,
                    "p50": 457.013419,
                    "p95": 467.775963,
                    "p99": 467.775963,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 555.76386,
                    "min": 507.31467599999996,
                    "p50": 548.8877699999999,
                    "p95": 555.76386,
                    "p99": 555.76386,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 780.242627,
                    "min": 704.3831729999999,
                    "p50": 723.9728299999999,
                    "p95": 780.242627,
                    "p99": 780.242627,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 292.760974,
                    "min": 237.118283,
                    "p50": 275.675188,
                    "p95": 292.760974,
                    "p99": 292.760974,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 698.217849,
                    "min": 589.0903529999999,
                    "p50": 620.0322209999999,
                    "p95": 698.217849,
                    "p99": 698.217849,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 330.893102,
                    "min": 269.88907,
                    "p50": 310.066604,
                    "p95": 330.893102,
                    "p99": 330.893102,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 441.097248,
                    "min": 375.914091,
                    "p50": 417.696651,
                    "p95": 441.097248,
                    "p99": 441.097248,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 371.73765599999996,
                    "min": 301.08288799999997,
                    "p50": 336.802109,
                    "p95": 371.73765599999996,
                    "p99": 371.73765599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 146.227804,
                    "min": 108.60645,
                    "p50": 140.659707,
                    "p95": 146.227804,
                    "p99": 146.227804,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 239.578735,
                    "min": 218.734018,
                    "p50": 222.403718,
                    "p95": 239.578735,
                    "p99": 239.578735,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 364.36325999999997,
                    "min": 328.04355,
                    "p50": 359.22497999999996,
                    "p95": 364.36325999999997,
                    "p99": 364.36325999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 320.702503,
                    "min": 290.574709,
                    "p50": 296.125787,
                    "p95": 320.702503,
                    "p99": 320.702503,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 720.379859,
                    "min": 671.134604,
                    "p50": 711.645729,
                    "p95": 720.379859,
                    "p99": 720.379859,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 664.797479,
                    "min": 577.4126239999999,
                    "p50": 586.258117,
                    "p95": 664.797479,
                    "p99": 664.797479,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.562742,
                    "min": 141.966834,
                    "p50": 151.952407,
                    "p95": 157.562742,
                    "p99": 157.562742,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 476.372483,
                    "min": 433.668844,
                    "p50": 447.033483,
                    "p95": 476.372483,
                    "p99": 476.372483,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 435.603599,
                    "min": 389.213076,
                    "p50": 425.957504,
                    "p95": 435.603599,
                    "p99": 435.603599,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 197.555591,
                    "min": 181.84322899999998,
                    "p50": 185.47086399999998,
                    "p95": 197.555591,
                    "p99": 197.555591,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 483.614982,
                    "min": 444.117686,
                    "p50": 477.393958,
                    "p95": 483.614982,
                    "p99": 483.614982,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 398.925485,
                    "min": 352.518446,
                    "p50": 370.103591,
                    "p95": 398.925485,
                    "p99": 398.925485,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 858.1123269999999,
                    "min": 791.987442,
                    "p50": 834.076821,
                    "p95": 858.1123269999999,
                    "p99": 858.1123269999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 610.9029429999999,
                    "min": 509.15324699999996,
                    "p50": 544.447852,
                    "p95": 610.9029429999999,
                    "p99": 610.9029429999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 279.967402,
                    "min": 221.851793,
                    "p50": 258.325475,
                    "p95": 279.967402,
                    "p99": 279.967402,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 559.828165,
                    "min": 495.18753799999996,
                    "p50": 533.850584,
                    "p95": 559.828165,
                    "p99": 559.828165,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 834.563505,
                    "min": 804.6106169999999,
                    "p50": 828.062454,
                    "p95": 834.563505,
                    "p99": 834.563505,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 200.431378,
                    "min": 151.787974,
                    "p50": 190.75359899999998,
                    "p95": 200.431378,
                    "p99": 200.431378,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 393.418211,
                    "min": 367.72047699999996,
                    "p50": 372.490795,
                    "p95": 393.418211,
                    "p99": 393.418211,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 447.04135299999996,
                    "min": 392.886824,
                    "p50": 406.678473,
                    "p95": 447.04135299999996,
                    "p99": 447.04135299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 488.30384699999996,
                    "min": 445.157085,
                    "p50": 460.86936,
                    "p95": 488.30384699999996,
                    "p99": 488.30384699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 768.7050899999999,
                    "min": 706.035579,
                    "p50": 717.8031189999999,
                    "p95": 768.7050899999999,
                    "p99": 768.7050899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 535.939666,
                    "min": 479.790075,
                    "p50": 526.545626,
                    "p95": 535.939666,
                    "p99": 535.939666,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 557.55954,
                    "min": 545.278068,
                    "p50": 555.7335009999999,
                    "p95": 557.55954,
                    "p99": 557.55954,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.316749,
                    "min": 133.274383,
                    "p50": 151.290355,
                    "p95": 157.316749,
                    "p99": 157.316749,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 279.371596,
                    "min": 223.580065,
                    "p50": 270.716234,
                    "p95": 279.371596,
                    "p99": 279.371596,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 238.133345,
                    "min": 191.423676,
                    "p50": 223.240285,
                    "p95": 238.133345,
                    "p99": 238.133345,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 656.375755,
                    "min": 588.6206129999999,
                    "p50": 614.290579,
                    "p95": 656.375755,
                    "p99": 656.375755,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 361.144485,
                    "min": 300.199744,
                    "p50": 334.351963,
                    "p95": 361.144485,
                    "p99": 361.144485,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 616.544908,
                    "min": 555.909054,
                    "p50": 567.832188,
                    "p95": 616.544908,
                    "p99": 616.544908,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 318.601989,
                    "min": 260.108809,
                    "p50": 299.25919799999997,
                    "p95": 318.601989,
                    "p99": 318.601989,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 227.495174,
                    "min": 205.055536,
                    "p50": 214.557019,
                    "p95": 227.495174,
                    "p99": 227.495174,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.692388,
                    "min": 40.983211999999995,
                    "p50": 78.797783,
                    "p95": 84.692388,
                    "p99": 84.692388,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1141.992747,
                    "min": 1092.1955229999999,
                    "p50": 1137.566993,
                    "p95": 1141.992747,
                    "p99": 1141.992747,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 253.323592,
                    "min": 216.998266,
                    "p50": 237.73375199999998,
                    "p95": 253.323592,
                    "p99": 253.323592,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.022401,
                    "min": 313.531588,
                    "p50": 363.40545499999996,
                    "p95": 365.022401,
                    "p99": 365.022401,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 141.627099,
                    "min": 101.15062599999999,
                    "p50": 136.35344,
                    "p95": 141.627099,
                    "p99": 141.627099,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 455.22207199999997,
                    "min": 443.39793799999995,
                    "p50": 448.001217,
                    "p95": 455.22207199999997,
                    "p99": 455.22207199999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.312602,
                    "min": 61.427279999999996,
                    "p50": 99.88969399999999,
                    "p95": 101.312602,
                    "p99": 101.312602,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 122.33756,
                    "min": 88.34737799999999,
                    "p50": 120.55912199999999,
                    "p95": 122.33756,
                    "p99": 122.33756,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.865235999999996,
                    "min": 47.310148,
                    "p50": 60.558101,
                    "p95": 62.865235999999996,
                    "p99": 62.865235999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 135.381473,
                    "min": 91.619458,
                    "p50": 131.309947,
                    "p95": 135.381473,
                    "p99": 135.381473,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 112.43724499999999,
                    "min": 78.336224,
                    "p50": 109.829117,
                    "p95": 112.43724499999999,
                    "p99": 112.43724499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 153.2924,
                    "min": 112.34732699999999,
                    "p50": 150.153908,
                    "p95": 153.2924,
                    "p99": 153.2924,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 174.84496099999998,
                    "min": 168.295567,
                    "p50": 171.557321,
                    "p95": 174.84496099999998,
                    "p99": 174.84496099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 162.674485,
                    "min": 125.643771,
                    "p50": 157.884515,
                    "p95": 162.674485,
                    "p99": 162.674485,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 592.351768,
                    "min": 552.617657,
                    "p50": 585.274034,
                    "p95": 592.351768,
                    "p99": 592.351768,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 90.38353099999999,
                    "min": 51.046535,
                    "p50": 85.670204,
                    "p95": 90.38353099999999,
                    "p99": 90.38353099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 191.72274099999998,
                    "min": 147.60137699999999,
                    "p50": 182.369429,
                    "p95": 191.72274099999998,
                    "p99": 191.72274099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 193.741855,
                    "min": 157.32165899999998,
                    "p50": 188.45323199999999,
                    "p95": 193.741855,
                    "p99": 193.741855,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 179.390861,
                    "min": 169.86354,
                    "p50": 171.44977,
                    "p95": 179.390861,
                    "p99": 179.390861,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1153.193243,
                    "min": 1093.0217969999999,
                    "p50": 1142.787684,
                    "p95": 1153.193243,
                    "p99": 1153.193243,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 187.84743799999998,
                    "min": 151.63537499999998,
                    "p50": 184.774321,
                    "p95": 187.84743799999998,
                    "p99": 187.84743799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 130.631636,
                    "min": 92.054136,
                    "p50": 128.782535,
                    "p95": 130.631636,
                    "p99": 130.631636,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 218.547121,
                    "min": 211.918546,
                    "p50": 215.11540399999998,
                    "p95": 218.547121,
                    "p99": 218.547121,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 250.2635,
                    "min": 204.373743,
                    "p50": 240.40579699999998,
                    "p95": 250.2635,
                    "p99": 250.2635,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 93.19060499999999,
                    "min": 51.458313999999994,
                    "p50": 88.35473999999999,
                    "p95": 93.19060499999999,
                    "p99": 93.19060499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 144.203701,
                    "min": 121.09844899999999,
                    "p50": 139.919852,
                    "p95": 144.203701,
                    "p99": 144.203701,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 115.31947799999999,
                    "min": 71.941859,
                    "p50": 110.38103799999999,
                    "p95": 115.31947799999999,
                    "p99": 115.31947799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 205.363257,
                    "min": 185.163852,
                    "p50": 201.26145,
                    "p95": 205.363257,
                    "p99": 205.363257,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 170.856957,
                    "min": 156.643787,
                    "p50": 165.168783,
                    "p95": 170.856957,
                    "p99": 170.856957,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 488.9203,
                    "min": 447.85056099999997,
                    "p50": 481.37393199999997,
                    "p95": 488.9203,
                    "p99": 488.9203,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.592195,
                    "min": 338.887989,
                    "p50": 345.41842099999997,
                    "p95": 365.592195,
                    "p99": 365.592195,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 156.368763,
                    "min": 149.295483,
                    "p50": 150.918405,
                    "p95": 156.368763,
                    "p99": 156.368763,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.541012,
                    "min": 31.458029,
                    "p50": 61.007121,
                    "p95": 64.541012,
                    "p99": 64.541012,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 121.747872,
                    "min": 81.342249,
                    "p50": 118.479208,
                    "p95": 121.747872,
                    "p99": 121.747872,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.534199,
                    "min": 41.345532,
                    "p50": 72.810396,
                    "p95": 80.534199,
                    "p99": 80.534199,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 100.692538,
                    "min": 62.747719999999994,
                    "p50": 94.504498,
                    "p95": 100.692538,
                    "p99": 100.692538,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 596.743253,
                    "min": 561.95619,
                    "p50": 582.034048,
                    "p95": 596.743253,
                    "p99": 596.743253,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 111.363204,
                    "min": 70.445171,
                    "p50": 108.411655,
                    "p95": 111.363204,
                    "p99": 111.363204,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 174.597094,
                    "min": 132.357347,
                    "p50": 167.885129,
                    "p95": 174.597094,
                    "p99": 174.597094,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 152.64265799999998,
                    "min": 139.79717399999998,
                    "p50": 149.73397699999998,
                    "p95": 152.64265799999998,
                    "p99": 152.64265799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.35686199999999,
                    "min": 60.352708,
                    "p50": 96.62719,
                    "p95": 102.35686199999999,
                    "p99": 102.35686199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 244.915135,
                    "min": 219.202556,
                    "p50": 237.62392599999998,
                    "p95": 244.915135,
                    "p99": 244.915135,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.62501999999999,
                    "min": 75.83721299999999,
                    "p50": 78.951897,
                    "p95": 84.62501999999999,
                    "p99": 84.62501999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 119.485344,
                    "min": 112.079094,
                    "p50": 118.52871599999999,
                    "p95": 119.485344,
                    "p99": 119.485344,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 140.109925,
                    "min": 134.224865,
                    "p50": 137.228363,
                    "p95": 140.109925,
                    "p99": 140.109925,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 194.713865,
                    "min": 150.476448,
                    "p50": 190.07468699999998,
                    "p95": 194.713865,
                    "p99": 194.713865,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 354.63239699999997,
                    "min": 305.378583,
                    "p50": 351.024042,
                    "p95": 354.63239699999997,
                    "p99": 354.63239699999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 160.12254299999998,
                    "min": 146.924225,
                    "p50": 157.637618,
                    "p95": 160.12254299999998,
                    "p99": 160.12254299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 133.348599,
                    "min": 126.565286,
                    "p50": 129.787727,
                    "p95": 133.348599,
                    "p99": 133.348599,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 92.28456899999999,
                    "min": 87.05175299999999,
                    "p50": 90.492207,
                    "p95": 92.28456899999999,
                    "p99": 92.28456899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 181.906879,
                    "min": 167.09672899999998,
                    "p50": 178.914694,
                    "p95": 181.906879,
                    "p99": 181.906879,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 219.960705,
                    "min": 184.651826,
                    "p50": 216.827251,
                    "p95": 219.960705,
                    "p99": 219.960705,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 452.50039699999996,
                    "min": 407.976908,
                    "p50": 432.09972999999997,
                    "p95": 452.50039699999996,
                    "p99": 452.50039699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 560.517837,
                    "min": 503.83124999999995,
                    "p50": 537.279179,
                    "p95": 560.517837,
                    "p99": 560.517837,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1071.086025,
                    "min": 1019.2136959999999,
                    "p50": 1059.788385,
                    "p95": 1071.086025,
                    "p99": 1071.086025,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 69.488963,
                    "min": 31.333197,
                    "p50": 59.520011999999994,
                    "p95": 69.488963,
                    "p99": 69.488963,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 592.0635159999999,
                    "min": 568.008207,
                    "p50": 586.7535869999999,
                    "p95": 592.0635159999999,
                    "p99": 592.0635159999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 180.95308799999998,
                    "min": 166.958395,
                    "p50": 176.564586,
                    "p95": 180.95308799999998,
                    "p99": 180.95308799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 142.078659,
                    "min": 102.40706999999999,
                    "p50": 139.30661899999998,
                    "p95": 142.078659,
                    "p99": 142.078659,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 202.219914,
                    "min": 173.471015,
                    "p50": 192.82308,
                    "p95": 202.219914,
                    "p99": 202.219914,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 112.221144,
                    "min": 71.596788,
                    "p50": 110.65530299999999,
                    "p95": 112.221144,
                    "p99": 112.221144,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 92.576636,
                    "min": 64.21024299999999,
                    "p50": 90.54879799999999,
                    "p95": 92.576636,
                    "p99": 92.576636,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 66.584648,
                    "min": 32.274982,
                    "p50": 60.669506,
                    "p95": 66.584648,
                    "p99": 66.584648,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 155.14274899999998,
                    "min": 143.910158,
                    "p50": 150.483837,
                    "p95": 155.14274899999998,
                    "p99": 155.14274899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 232.31954,
                    "min": 213.610309,
                    "p50": 227.582902,
                    "p95": 232.31954,
                    "p99": 232.31954,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.452508,
                    "min": 61.991074,
                    "p50": 100.369671,
                    "p95": 102.452508,
                    "p99": 102.452508,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 122.08858699999999,
                    "min": 117.92956699999999,
                    "p50": 120.61373999999999,
                    "p95": 122.08858699999999,
                    "p99": 122.08858699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 190.025456,
                    "min": 144.794144,
                    "p50": 188.56843899999998,
                    "p95": 190.025456,
                    "p99": 190.025456,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 481.861455,
                    "min": 442.732326,
                    "p50": 469.568993,
                    "p95": 481.861455,
                    "p99": 481.861455,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1165.370668,
                    "min": 1096.768716,
                    "p50": 1119.4312029999999,
                    "p95": 1165.370668,
                    "p99": 1165.370668,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 133.267442,
                    "min": 121.51493199999999,
                    "p50": 130.95288499999998,
                    "p95": 133.267442,
                    "p99": 133.267442,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 259.97424,
                    "min": 209.257219,
                    "p50": 245.989147,
                    "p95": 259.97424,
                    "p99": 259.97424,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 168.527875,
                    "min": 124.23745,
                    "p50": 158.998763,
                    "p95": 168.527875,
                    "p99": 168.527875,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.518523,
                    "min": 41.98414,
                    "p50": 78.689734,
                    "p95": 80.518523,
                    "p99": 80.518523,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 368.519295,
                    "min": 335.681,
                    "p50": 364.471075,
                    "p95": 368.519295,
                    "p99": 368.519295,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 227.47876399999998,
                    "min": 186.574083,
                    "p50": 221.60405699999998,
                    "p95": 227.47876399999998,
                    "p99": 227.47876399999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.523586,
                    "min": 170.404979,
                    "p50": 174.487593,
                    "p95": 182.523586,
                    "p99": 182.523586,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 296.029964,
                    "min": 231.81699899999998,
                    "p50": 269.745,
                    "p95": 296.029964,
                    "p99": 296.029964,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1083.305827,
                    "min": 977.3357269999999,
                    "p50": 1008.433808,
                    "p95": 1083.305827,
                    "p99": 1083.305827,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 703.2772769999999,
                    "min": 595.212731,
                    "p50": 672.4079949999999,
                    "p95": 703.2772769999999,
                    "p99": 703.2772769999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 811.636477,
                    "min": 781.62924,
                    "p50": 800.921476,
                    "p95": 811.636477,
                    "p99": 811.636477,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 934.273141,
                    "min": 835.9145219999999,
                    "p50": 851.2647959999999,
                    "p95": 934.273141,
                    "p99": 934.273141,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 504.491357,
                    "min": 416.628171,
                    "p50": 457.073377,
                    "p95": 504.491357,
                    "p99": 504.491357,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 336.71624099999997,
                    "min": 295.096086,
                    "p50": 312.76923999999997,
                    "p95": 336.71624099999997,
                    "p99": 336.71624099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 450.81289799999996,
                    "min": 387.07372599999997,
                    "p50": 406.405133,
                    "p95": 450.81289799999996,
                    "p99": 450.81289799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 399.06242499999996,
                    "min": 329.58025399999997,
                    "p50": 360.296922,
                    "p95": 399.06242499999996,
                    "p99": 399.06242499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 549.98235,
                    "min": 501.556673,
                    "p50": 512.55585,
                    "p95": 549.98235,
                    "p99": 549.98235,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 547.258475,
                    "min": 513.680989,
                    "p50": 542.889503,
                    "p95": 547.258475,
                    "p99": 547.258475,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 754.945527,
                    "min": 699.6395269999999,
                    "p50": 739.23843,
                    "p95": 754.945527,
                    "p99": 754.945527,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 659.835016,
                    "min": 564.3704839999999,
                    "p50": 591.015727,
                    "p95": 659.835016,
                    "p99": 659.835016,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 608.331503,
                    "min": 533.801365,
                    "p50": 558.677884,
                    "p95": 608.331503,
                    "p99": 608.331503,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 709.023679,
                    "min": 620.8158589999999,
                    "p50": 648.41639,
                    "p95": 709.023679,
                    "p99": 709.023679,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 774.031071,
                    "min": 668.3445469999999,
                    "p50": 688.87159,
                    "p95": 774.031071,
                    "p99": 774.031071,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 237.344346,
                    "min": 202.639062,
                    "p50": 223.170236,
                    "p95": 237.344346,
                    "p99": 237.344346,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 292.860507,
                    "min": 256.174764,
                    "p50": 270.801276,
                    "p95": 292.860507,
                    "p99": 292.860507,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.204819,
                    "min": 325.060192,
                    "p50": 344.254939,
                    "p95": 362.204819,
                    "p99": 362.204819,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 343.75284999999997,
                    "min": 296.55987799999997,
                    "p50": 317.73164299999996,
                    "p95": 343.75284999999997,
                    "p99": 343.75284999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 535.962435,
                    "min": 491.399792,
                    "p50": 506.866472,
                    "p95": 535.962435,
                    "p99": 535.962435,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 191.79204,
                    "min": 135.35190699999998,
                    "p50": 173.11200399999998,
                    "p95": 191.79204,
                    "p99": 191.79204,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 452.73758699999996,
                    "min": 403.981369,
                    "p50": 423.066104,
                    "p95": 452.73758699999996,
                    "p99": 452.73758699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 933.700345,
                    "min": 857.572052,
                    "p50": 899.403452,
                    "p95": 933.700345,
                    "p99": 933.700345,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1067.8151679999999,
                    "min": 1002.540001,
                    "p50": 1031.0475549999999,
                    "p95": 1067.8151679999999,
                    "p99": 1067.8151679999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 813.40166,
                    "min": 702.6984239999999,
                    "p50": 734.109681,
                    "p95": 813.40166,
                    "p99": 813.40166,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 512.813363,
                    "min": 447.18275,
                    "p50": 494.566845,
                    "p95": 512.813363,
                    "p99": 512.813363,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 616.0788699999999,
                    "min": 559.088449,
                    "p50": 612.4908879999999,
                    "p95": 616.0788699999999,
                    "p99": 616.0788699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 713.117007,
                    "min": 639.364959,
                    "p50": 650.456774,
                    "p95": 713.117007,
                    "p99": 713.117007,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 659.9890009999999,
                    "min": 550.2794729999999,
                    "p50": 602.3020309999999,
                    "p95": 659.9890009999999,
                    "p99": 659.9890009999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 772.998167,
                    "min": 683.2721829999999,
                    "p50": 688.870136,
                    "p95": 772.998167,
                    "p99": 772.998167,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 901.285818,
                    "min": 752.18103,
                    "p50": 801.66698,
                    "p95": 901.285818,
                    "p99": 901.285818,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 624.927877,
                    "min": 542.672363,
                    "p50": 560.525299,
                    "p95": 624.927877,
                    "p99": 624.927877,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 568.739143,
                    "min": 474.98506499999996,
                    "p50": 518.495017,
                    "p95": 568.739143,
                    "p99": 568.739143,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.957756,
                    "min": 163.571808,
                    "p50": 166.613483,
                    "p95": 175.957756,
                    "p99": 175.957756,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 928.888121,
                    "min": 888.314536,
                    "p50": 926.373125,
                    "p95": 928.888121,
                    "p99": 928.888121,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 495.10950099999997,
                    "min": 465.101976,
                    "p50": 472.313398,
                    "p95": 495.10950099999997,
                    "p99": 495.10950099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 441.47905299999996,
                    "min": 411.451489,
                    "p50": 435.595729,
                    "p95": 441.47905299999996,
                    "p99": 441.47905299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.231592,
                    "min": 287.498331,
                    "p50": 300.027401,
                    "p95": 323.231592,
                    "p99": 323.231592,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 390.168458,
                    "min": 368.43145,
                    "p50": 381.38397,
                    "p95": 390.168458,
                    "p99": 390.168458,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.017514,
                    "min": 301.84028,
                    "p50": 339.159413,
                    "p95": 346.017514,
                    "p99": 346.017514,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 222.76577799999998,
                    "min": 172.191781,
                    "p50": 212.097548,
                    "p95": 222.76577799999998,
                    "p99": 222.76577799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.814572,
                    "min": 251.79013999999998,
                    "p50": 257.846032,
                    "p95": 273.814572,
                    "p99": 273.814572,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 759.602133,
                    "min": 681.2188259999999,
                    "p50": 727.8548499999999,
                    "p95": 759.602133,
                    "p99": 759.602133,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 834.270303,
                    "min": 732.964753,
                    "p50": 764.101005,
                    "p95": 834.270303,
                    "p99": 834.270303,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 658.3224789999999,
                    "min": 572.282609,
                    "p50": 629.770843,
                    "p95": 658.3224789999999,
                    "p99": 658.3224789999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 957.5073649999999,
                    "min": 843.203357,
                    "p50": 866.703075,
                    "p95": 957.5073649999999,
                    "p99": 957.5073649999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 234.971961,
                    "min": 207.000048,
                    "p50": 231.626365,
                    "p95": 234.971961,
                    "p99": 234.971961,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 599.245713,
                    "min": 528.525951,
                    "p50": 589.2935669999999,
                    "p95": 599.245713,
                    "p99": 599.245713,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1041.131879,
                    "min": 976.90643,
                    "p50": 1018.6285829999999,
                    "p95": 1041.131879,
                    "p99": 1041.131879,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 340.903715,
                    "min": 275.400419,
                    "p50": 312.07185899999996,
                    "p95": 340.903715,
                    "p99": 340.903715,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 450.731345,
                    "min": 389.186215,
                    "p50": 435.034974,
                    "p95": 450.731345,
                    "p99": 450.731345,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 396.901755,
                    "min": 352.136016,
                    "p50": 361.08272999999997,
                    "p95": 396.901755,
                    "p99": 396.901755,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 270.297409,
                    "min": 229.312852,
                    "p50": 265.715578,
                    "p95": 270.297409,
                    "p99": 270.297409,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 507.268915,
                    "min": 418.561807,
                    "p50": 457.020919,
                    "p95": 507.268915,
                    "p99": 507.268915,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 554.618392,
                    "min": 491.375113,
                    "p50": 513.264951,
                    "p95": 554.618392,
                    "p99": 554.618392,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 176.62614399999998,
                    "min": 146.682751,
                    "p50": 175.352033,
                    "p95": 176.62614399999998,
                    "p99": 176.62614399999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 708.578072,
                    "min": 629.302945,
                    "p50": 699.377084,
                    "p95": 708.578072,
                    "p99": 708.578072,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 847.167658,
                    "min": 823.4182539999999,
                    "p50": 832.817593,
                    "p95": 847.167658,
                    "p99": 847.167658,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 520.097171,
                    "min": 479.039522,
                    "p50": 513.002947,
                    "p95": 520.097171,
                    "p99": 520.097171,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 631.917544,
                    "min": 613.2643879999999,
                    "p50": 618.3485039999999,
                    "p95": 631.917544,
                    "p99": 631.917544,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 411.94858899999997,
                    "min": 366.35362399999997,
                    "p50": 407.72540599999996,
                    "p95": 411.94858899999997,
                    "p99": 411.94858899999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 359.532756,
                    "min": 348.85713599999997,
                    "p50": 357.48310899999996,
                    "p95": 359.532756,
                    "p99": 359.532756,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 573.518417,
                    "min": 561.399665,
                    "p50": 568.721355,
                    "p95": 573.518417,
                    "p99": 573.518417,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 199.823547,
                    "min": 186.094246,
                    "p50": 199.06636,
                    "p95": 199.823547,
                    "p99": 199.823547,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 250.93816099999998,
                    "min": 237.470542,
                    "p50": 249.941745,
                    "p95": 250.93816099999998,
                    "p99": 250.93816099999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 462.082,
                    "min": 427.931699,
                    "p50": 457.471247,
                    "p95": 462.082,
                    "p99": 462.082,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 304.89009599999997,
                    "min": 265.582693,
                    "p50": 300.50149999999996,
                    "p95": 304.89009599999997,
                    "p99": 304.89009599999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1103.885486,
                    "min": 1070.443552,
                    "p50": 1096.741477,
                    "p95": 1103.885486,
                    "p99": 1103.885486,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 676.5242959999999,
                    "min": 635.046844,
                    "p50": 670.889175,
                    "p95": 676.5242959999999,
                    "p99": 676.5242959999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 970.3379249999999,
                    "min": 923.624874,
                    "p50": 951.2404829999999,
                    "p95": 970.3379249999999,
                    "p99": 970.3379249999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 779.944094,
                    "min": 746.094327,
                    "p50": 774.8706579999999,
                    "p95": 779.944094,
                    "p99": 779.944094,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 729.545544,
                    "min": 681.9528419999999,
                    "p50": 719.0352899999999,
                    "p95": 729.545544,
                    "p99": 729.545544,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1635.355904,
                    "min": 1593.6945759999999,
                    "p50": 1619.352575,
                    "p95": 1635.355904,
                    "p99": 1635.355904,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 499.218616,
                    "min": 411.46993899999995,
                    "p50": 444.44834399999996,
                    "p95": 499.218616,
                    "p99": 499.218616,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 351.01383699999997,
                    "min": 285.113655,
                    "p50": 326.37445199999996,
                    "p95": 351.01383699999997,
                    "p99": 351.01383699999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 460.16806199999996,
                    "min": 352.731389,
                    "p50": 399.801674,
                    "p95": 460.16806199999996,
                    "p99": 460.16806199999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 678.048004,
                    "min": 542.155934,
                    "p50": 557.685437,
                    "p95": 678.048004,
                    "p99": 678.048004,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 581.439983,
                    "min": 444.703868,
                    "p50": 510.517726,
                    "p95": 581.439983,
                    "p99": 581.439983,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 399.14653799999996,
                    "min": 307.003554,
                    "p50": 373.467939,
                    "p95": 399.14653799999996,
                    "p99": 399.14653799999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.40607,
                    "min": 91.670886,
                    "p50": 116.87533599999999,
                    "p95": 129.40607,
                    "p99": 129.40607,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 167.11265,
                    "min": 136.986271,
                    "p50": 154.802528,
                    "p95": 167.11265,
                    "p99": 167.11265,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 344.417491,
                    "min": 289.643512,
                    "p50": 304.14361199999996,
                    "p95": 344.417491,
                    "p99": 344.417491,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 216.528989,
                    "min": 149.787037,
                    "p50": 197.57538,
                    "p95": 216.528989,
                    "p99": 216.528989,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 291.078176,
                    "min": 265.012715,
                    "p50": 275.77401,
                    "p95": 291.078176,
                    "p99": 291.078176,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.625313,
                    "min": 128.12051499999998,
                    "p50": 166.536635,
                    "p95": 186.625313,
                    "p99": 186.625313,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 424.604715,
                    "min": 350.978868,
                    "p50": 397.078504,
                    "p95": 424.604715,
                    "p99": 424.604715,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 290.534545,
                    "min": 229.847802,
                    "p50": 258.881152,
                    "p95": 290.534545,
                    "p99": 290.534545,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 258.968501,
                    "min": 193.984408,
                    "p50": 243.746163,
                    "p95": 258.968501,
                    "p99": 258.968501,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 328.911852,
                    "min": 248.926788,
                    "p50": 274.65506799999997,
                    "p95": 328.911852,
                    "p99": 328.911852,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 134.86916,
                    "min": 95.300697,
                    "p50": 130.584832,
                    "p95": 134.86916,
                    "p99": 134.86916,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 227.059139,
                    "min": 223.972614,
                    "p50": 225.149472,
                    "p95": 227.059139,
                    "p99": 227.059139,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 243.87767599999998,
                    "min": 166.44772799999998,
                    "p50": 199.97314899999998,
                    "p95": 243.87767599999998,
                    "p99": 243.87767599999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 181.771877,
                    "min": 174.956064,
                    "p50": 179.05533,
                    "p95": 181.771877,
                    "p99": 181.771877,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 479.525469,
                    "min": 381.069599,
                    "p50": 390.84862,
                    "p95": 479.525469,
                    "p99": 479.525469,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 374.615816,
                    "min": 339.579411,
                    "p50": 350.46536199999997,
                    "p95": 374.615816,
                    "p99": 374.615816,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 511.248406,
                    "min": 489.14701399999996,
                    "p50": 506.85988599999996,
                    "p95": 511.248406,
                    "p99": 511.248406,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 905.047295,
                    "min": 717.761411,
                    "p50": 753.446048,
                    "p95": 905.047295,
                    "p99": 905.047295,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 321.920508,
                    "min": 304.75424,
                    "p50": 320.499955,
                    "p95": 321.920508,
                    "p99": 321.920508,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 170.61857899999998,
                    "min": 126.969274,
                    "p50": 156.301955,
                    "p95": 170.61857899999998,
                    "p99": 170.61857899999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 348.430029,
                    "min": 258.55893199999997,
                    "p50": 295.680566,
                    "p95": 348.430029,
                    "p99": 348.430029,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 111.59630999999999,
                    "min": 95.755774,
                    "p50": 108.873543,
                    "p95": 111.59630999999999,
                    "p99": 111.59630999999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 374.447162,
                    "min": 360.943651,
                    "p50": 367.449053,
                    "p95": 374.447162,
                    "p99": 374.447162,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 456.24345999999997,
                    "min": 419.91040999999996,
                    "p50": 445.837315,
                    "p95": 456.24345999999997,
                    "p99": 456.24345999999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 293.12192999999996,
                    "min": 236.043917,
                    "p50": 250.260191,
                    "p95": 293.12192999999996,
                    "p99": 293.12192999999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2199.152289,
                    "min": 2145.916815,
                    "p50": 2167.633133,
                    "p95": 2199.152289,
                    "p99": 2199.152289,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 530.417508,
                    "min": 514.295442,
                    "p50": 521.940222,
                    "p95": 530.417508,
                    "p99": 530.417508,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 367.04646499999996,
                    "min": 345.86352899999997,
                    "p50": 360.182521,
                    "p95": 367.04646499999996,
                    "p99": 367.04646499999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 686.2397579999999,
                    "min": 646.158452,
                    "p50": 678.196163,
                    "p95": 686.2397579999999,
                    "p99": 686.2397579999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 255.845747,
                    "min": 242.308734,
                    "p50": 253.477116,
                    "p95": 255.845747,
                    "p99": 255.845747,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1124.88591,
                    "min": 1077.7091619999999,
                    "p50": 1101.692797,
                    "p95": 1124.88591,
                    "p99": 1124.88591,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 845.2172019999999,
                    "min": 824.1232319999999,
                    "p50": 835.735879,
                    "p95": 845.2172019999999,
                    "p99": 845.2172019999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 793.582503,
                    "min": 744.53543,
                    "p50": 789.080747,
                    "p95": 793.582503,
                    "p99": 793.582503,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.82261699999998,
                    "min": 162.44602899999998,
                    "p50": 200.017093,
                    "p95": 201.82261699999998,
                    "p99": 201.82261699999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 310.355106,
                    "min": 268.047454,
                    "p50": 305.274986,
                    "p95": 310.355106,
                    "p99": 310.355106,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 986.59078,
                    "min": 966.8300439999999,
                    "p50": 972.511716,
                    "p95": 986.59078,
                    "p99": 986.59078,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 471.84000199999997,
                    "min": 461.68771999999996,
                    "p50": 464.71907899999997,
                    "p95": 471.84000199999997,
                    "p99": 471.84000199999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 630.893521,
                    "min": 618.389406,
                    "p50": 624.287203,
                    "p95": 630.893521,
                    "p99": 630.893521,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 415.42213999999996,
                    "min": 409.359201,
                    "p50": 413.72812999999996,
                    "p95": 415.42213999999996,
                    "p99": 415.42213999999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 735.889631,
                    "min": 723.56966,
                    "p50": 731.065598,
                    "p95": 735.889631,
                    "p99": 735.889631,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1649.9316609999998,
                    "min": 1601.979484,
                    "p50": 1641.7000349999998,
                    "p95": 1649.9316609999998,
                    "p99": 1649.9316609999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2736.4974669999997,
                    "min": 2689.787042,
                    "p50": 2702.4184539999997,
                    "p95": 2736.4974669999997,
                    "p99": 2736.4974669999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 573.2148599999999,
                    "min": 566.393548,
                    "p50": 571.9725599999999,
                    "p95": 573.2148599999999,
                    "p99": 573.2148599999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 249.75665899999998,
                    "min": 221.594924,
                    "p50": 238.77238699999998,
                    "p95": 249.75665899999998,
                    "p99": 249.75665899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 623.967263,
                    "min": 539.899406,
                    "p50": 582.438136,
                    "p95": 623.967263,
                    "p99": 623.967263,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 952.7998849999999,
                    "min": 808.481803,
                    "p50": 867.213796,
                    "p95": 952.7998849999999,
                    "p99": 952.7998849999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1500.494053,
                    "min": 1345.797832,
                    "p50": 1397.376469,
                    "p95": 1500.494053,
                    "p99": 1500.494053,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1268.7361429999999,
                    "min": 1069.915677,
                    "p50": 1126.314107,
                    "p95": 1268.7361429999999,
                    "p99": 1268.7361429999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 284.643327,
                    "min": 217.366016,
                    "p50": 260.756705,
                    "p95": 284.643327,
                    "p99": 284.643327,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 544.460081,
                    "min": 491.05238399999996,
                    "p50": 518.013159,
                    "p95": 544.460081,
                    "p99": 544.460081,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 205.989761,
                    "min": 164.08262299999998,
                    "p50": 201.30246599999998,
                    "p95": 205.989761,
                    "p99": 205.989761,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 468.210989,
                    "min": 394.997206,
                    "p50": 422.54700199999996,
                    "p95": 468.210989,
                    "p99": 468.210989,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 504.23037899999997,
                    "min": 423.18028999999996,
                    "p50": 449.493434,
                    "p95": 504.23037899999997,
                    "p99": 504.23037899999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 164.764634,
                    "min": 110.350533,
                    "p50": 147.791864,
                    "p95": 164.764634,
                    "p99": 164.764634,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 377.525447,
                    "min": 307.019701,
                    "p50": 350.607525,
                    "p95": 377.525447,
                    "p99": 377.525447,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 409.424317,
                    "min": 362.826503,
                    "p50": 374.11012999999997,
                    "p95": 409.424317,
                    "p99": 409.424317,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 193.31895799999998,
                    "min": 174.44923699999998,
                    "p50": 177.556491,
                    "p95": 193.31895799999998,
                    "p99": 193.31895799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.65025599999998,
                    "min": 112.47573399999999,
                    "p50": 124.45497399999999,
                    "p95": 131.65025599999998,
                    "p99": 131.65025599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 436.880813,
                    "min": 389.557715,
                    "p50": 403.60695499999997,
                    "p95": 436.880813,
                    "p99": 436.880813,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 346.75496,
                    "min": 289.1425,
                    "p50": 317.61647,
                    "p95": 346.75496,
                    "p99": 346.75496,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 311.972168,
                    "min": 283.50390899999996,
                    "p50": 291.35508,
                    "p95": 311.972168,
                    "p99": 311.972168,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 354.144681,
                    "min": 338.358721,
                    "p50": 351.94088999999997,
                    "p95": 354.144681,
                    "p99": 354.144681,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 522.986178,
                    "min": 490.244243,
                    "p50": 519.814386,
                    "p95": 522.986178,
                    "p99": 522.986178,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 451.72230399999995,
                    "min": 445.931104,
                    "p50": 449.441197,
                    "p95": 451.72230399999995,
                    "p99": 451.72230399999995,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.24253199999998,
                    "min": 103.694465,
                    "p50": 140.982331,
                    "p95": 145.24253199999998,
                    "p99": 145.24253199999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 732.669488,
                    "min": 711.811374,
                    "p50": 726.1989599999999,
                    "p95": 732.669488,
                    "p99": 732.669488,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 316.85474999999997,
                    "min": 276.17338,
                    "p50": 311.13073499999996,
                    "p95": 316.85474999999997,
                    "p99": 316.85474999999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 213.656928,
                    "min": 170.85090599999998,
                    "p50": 209.086716,
                    "p95": 213.656928,
                    "p99": 213.656928,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 419.620279,
                    "min": 376.771016,
                    "p50": 413.055329,
                    "p95": 419.620279,
                    "p99": 419.620279,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 251.337581,
                    "min": 208.055217,
                    "p50": 245.117728,
                    "p95": 251.337581,
                    "p99": 251.337581,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 657.577607,
                    "min": 628.463805,
                    "p50": 642.805764,
                    "p95": 657.577607,
                    "p99": 657.577607,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.37195699999998,
                    "min": 157.94982199999998,
                    "p50": 174.986653,
                    "p95": 185.37195699999998,
                    "p99": 185.37195699999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 566.527164,
                    "min": 538.4568919999999,
                    "p50": 555.299913,
                    "p95": 566.527164,
                    "p99": 566.527164,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.224401,
                    "min": 239.29457699999998,
                    "p50": 277.767274,
                    "p95": 286.224401,
                    "p99": 286.224401,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 488.18452099999996,
                    "min": 469.618342,
                    "p50": 485.311469,
                    "p95": 488.18452099999996,
                    "p99": 488.18452099999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 385.561925,
                    "min": 342.41108399999996,
                    "p50": 377.02858699999996,
                    "p95": 385.561925,
                    "p99": 385.561925,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.125939,
                    "min": 131.602714,
                    "p50": 140.261649,
                    "p95": 150.125939,
                    "p99": 150.125939,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 430.791005,
                    "min": 334.023604,
                    "p50": 342.196039,
                    "p95": 430.791005,
                    "p99": 430.791005,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 242.054107,
                    "min": 177.43624499999999,
                    "p50": 225.03870799999999,
                    "p95": 242.054107,
                    "p99": 242.054107,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 376.134911,
                    "min": 288.8864,
                    "p50": 309.161739,
                    "p95": 376.134911,
                    "p99": 376.134911,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 520.982987,
                    "min": 436.089413,
                    "p50": 439.264932,
                    "p95": 520.982987,
                    "p99": 520.982987,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 310.722936,
                    "min": 257.723755,
                    "p50": 270.638809,
                    "p95": 310.722936,
                    "p99": 310.722936,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 329.68367,
                    "min": 301.30238499999996,
                    "p50": 319.88201499999997,
                    "p95": 329.68367,
                    "p99": 329.68367,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 759.2025189999999,
                    "min": 635.276312,
                    "p50": 645.639542,
                    "p95": 759.2025189999999,
                    "p99": 759.2025189999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 214.21375999999998,
                    "min": 174.638452,
                    "p50": 179.719082,
                    "p95": 214.21375999999998,
                    "p99": 214.21375999999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.91505099999999,
                    "min": 83.60977799999999,
                    "p50": 99.354075,
                    "p95": 112.91505099999999,
                    "p99": 112.91505099999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 253.779439,
                    "min": 219.381331,
                    "p50": 248.415011,
                    "p95": 253.779439,
                    "p99": 253.779439,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.10772699999998,
                    "min": 147.161778,
                    "p50": 159.517089,
                    "p95": 185.10772699999998,
                    "p99": 185.10772699999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.640033,
                    "min": 114.19160699999999,
                    "p50": 123.565191,
                    "p95": 137.640033,
                    "p99": 137.640033,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 216.953068,
                    "min": 191.128918,
                    "p50": 204.66277699999998,
                    "p95": 216.953068,
                    "p99": 216.953068,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 406.690794,
                    "min": 368.935883,
                    "p50": 393.825377,
                    "p95": 406.690794,
                    "p99": 406.690794,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 333.11404899999997,
                    "min": 280.876608,
                    "p50": 288.58464499999997,
                    "p95": 333.11404899999997,
                    "p99": 333.11404899999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 458.07964,
                    "min": 392.09538699999996,
                    "p50": 402.13424599999996,
                    "p95": 458.07964,
                    "p99": 458.07964,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 461.41648999999995,
                    "min": 445.93796799999996,
                    "p50": 455.52907,
                    "p95": 461.41648999999995,
                    "p99": 461.41648999999995,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 488.29317599999996,
                    "min": 443.224604,
                    "p50": 484.171272,
                    "p95": 488.29317599999996,
                    "p99": 488.29317599999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 353.136238,
                    "min": 302.324052,
                    "p50": 310.890732,
                    "p95": 353.136238,
                    "p99": 353.136238,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 250.24360099999998,
                    "min": 214.45083,
                    "p50": 247.09111199999998,
                    "p95": 250.24360099999998,
                    "p99": 250.24360099999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 321.001053,
                    "min": 270.207854,
                    "p50": 278.74111,
                    "p95": 321.001053,
                    "p99": 321.001053,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 182.262152,
                    "min": 119.60640699999999,
                    "p50": 157.279943,
                    "p95": 182.262152,
                    "p99": 182.262152,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 213.17452899999998,
                    "min": 163.57986599999998,
                    "p50": 187.213585,
                    "p95": 213.17452899999998,
                    "p99": 213.17452899999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 337.122309,
                    "min": 297.86324099999996,
                    "p50": 334.768243,
                    "p95": 337.122309,
                    "p99": 337.122309,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 284.272114,
                    "min": 244.16619899999998,
                    "p50": 246.603802,
                    "p95": 284.272114,
                    "p99": 284.272114,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 747.57141,
                    "min": 600.800981,
                    "p50": 637.266096,
                    "p95": 747.57141,
                    "p99": 747.57141,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 426.562597,
                    "min": 341.548708,
                    "p50": 363.52797799999996,
                    "p95": 426.562597,
                    "p99": 426.562597,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 563.955704,
                    "min": 554.642398,
                    "p50": 560.963987,
                    "p95": 563.955704,
                    "p99": 563.955704,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 142.827959,
                    "min": 124.84130599999999,
                    "p50": 127.85445299999999,
                    "p95": 142.827959,
                    "p99": 142.827959,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 488.92580999999996,
                    "min": 416.055743,
                    "p50": 422.60661699999997,
                    "p95": 488.92580999999996,
                    "p99": 488.92580999999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 404.04468199999997,
                    "min": 347.423406,
                    "p50": 364.286071,
                    "p95": 404.04468199999997,
                    "p99": 404.04468199999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 222.45225599999998,
                    "min": 184.53706,
                    "p50": 199.287694,
                    "p95": 222.45225599999998,
                    "p99": 222.45225599999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 161.243301,
                    "min": 124.949621,
                    "p50": 144.82475499999998,
                    "p95": 161.243301,
                    "p99": 161.243301,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 130.181199,
                    "min": 100.319558,
                    "p50": 115.314759,
                    "p95": 130.181199,
                    "p99": 130.181199,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 398.256896,
                    "min": 349.45421,
                    "p50": 390.044611,
                    "p95": 398.256896,
                    "p99": 398.256896,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 500.02363499999996,
                    "min": 432.557645,
                    "p50": 445.48171399999995,
                    "p95": 500.02363499999996,
                    "p99": 500.02363499999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 316.049019,
                    "min": 255.39444899999998,
                    "p50": 285.857595,
                    "p95": 316.049019,
                    "p99": 316.049019,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 651.274131,
                    "min": 547.497678,
                    "p50": 582.462724,
                    "p95": 651.274131,
                    "p99": 651.274131,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 315.750188,
                    "min": 309.778973,
                    "p50": 312.132908,
                    "p95": 315.750188,
                    "p99": 315.750188,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 233.932019,
                    "min": 225.659528,
                    "p50": 227.879941,
                    "p95": 233.932019,
                    "p99": 233.932019,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 517.2204919999999,
                    "min": 507.59783999999996,
                    "p50": 512.038694,
                    "p95": 517.2204919999999,
                    "p99": 517.2204919999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 463.235729,
                    "min": 408.185012,
                    "p50": 416.97027099999997,
                    "p95": 463.235729,
                    "p99": 463.235729,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 192.840871,
                    "min": 172.573154,
                    "p50": 174.159146,
                    "p95": 192.840871,
                    "p99": 192.840871,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 283.050588,
                    "min": 215.250485,
                    "p50": 257.445014,
                    "p95": 283.050588,
                    "p99": 283.050588,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 859.412171,
                    "min": 820.164421,
                    "p50": 847.5649209999999,
                    "p95": 859.412171,
                    "p99": 859.412171,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 337.807931,
                    "min": 325.51749,
                    "p50": 335.62058099999996,
                    "p95": 337.807931,
                    "p99": 337.807931,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1243.358412,
                    "min": 1086.263776,
                    "p50": 1115.937927,
                    "p95": 1243.358412,
                    "p99": 1243.358412,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 574.777397,
                    "min": 553.436284,
                    "p50": 570.861554,
                    "p95": 574.777397,
                    "p99": 574.777397,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 305.47483,
                    "min": 295.781227,
                    "p50": 303.327841,
                    "p95": 305.47483,
                    "p99": 305.47483,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1104.823119,
                    "min": 1063.4370139999999,
                    "p50": 1096.979061,
                    "p95": 1104.823119,
                    "p99": 1104.823119,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 785.838069,
                    "min": 737.753441,
                    "p50": 777.528234,
                    "p95": 785.838069,
                    "p99": 785.838069,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 358.69863499999997,
                    "min": 318.657447,
                    "p50": 354.30652699999996,
                    "p95": 358.69863499999997,
                    "p99": 358.69863499999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 846.9555939999999,
                    "min": 787.595103,
                    "p50": 827.324579,
                    "p95": 846.9555939999999,
                    "p99": 846.9555939999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 415.000785,
                    "min": 403.459299,
                    "p50": 409.33442099999996,
                    "p95": 415.000785,
                    "p99": 415.000785,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 677.163878,
                    "min": 630.336998,
                    "p50": 668.633923,
                    "p95": 677.163878,
                    "p99": 677.163878,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 514.573764,
                    "min": 471.60661799999997,
                    "p50": 510.269303,
                    "p95": 514.573764,
                    "p99": 514.573764,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 730.472897,
                    "min": 700.551099,
                    "p50": 723.10403,
                    "p95": 730.472897,
                    "p99": 730.472897,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 967.387608,
                    "min": 942.894767,
                    "p50": 958.847413,
                    "p95": 967.387608,
                    "p99": 967.387608,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 465.70739,
                    "min": 444.92745499999995,
                    "p50": 457.76070799999997,
                    "p95": 465.70739,
                    "p99": 465.70739,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 622.573091,
                    "min": 610.5319929999999,
                    "p50": 617.680348,
                    "p95": 622.573091,
                    "p99": 622.573091,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 200.368352,
                    "min": 159.152618,
                    "p50": 197.013317,
                    "p95": 200.368352,
                    "p99": 200.368352,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 253.688571,
                    "min": 247.01546399999998,
                    "p50": 251.61826299999998,
                    "p95": 253.688571,
                    "p99": 253.688571,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 344.497676,
                    "min": 327.66042,
                    "p50": 337.58993599999997,
                    "p95": 344.497676,
                    "p99": 344.497676,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 178.44933799999998,
                    "min": 153.52746299999998,
                    "p50": 156.866522,
                    "p95": 178.44933799999998,
                    "p99": 178.44933799999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 463.207608,
                    "min": 360.220932,
                    "p50": 398.671225,
                    "p95": 463.207608,
                    "p99": 463.207608,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 462.13199099999997,
                    "min": 435.24969799999997,
                    "p50": 457.23298,
                    "p95": 462.13199099999997,
                    "p99": 462.13199099999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 194.073388,
                    "min": 186.471736,
                    "p50": 188.26925699999998,
                    "p95": 194.073388,
                    "p99": 194.073388,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 314.322371,
                    "min": 302.318957,
                    "p50": 306.926872,
                    "p95": 314.322371,
                    "p99": 314.322371,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 328.63591299999996,
                    "min": 273.617018,
                    "p50": 278.36178,
                    "p95": 328.63591299999996,
                    "p99": 328.63591299999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 250.19064699999998,
                    "min": 177.792006,
                    "p50": 219.366832,
                    "p95": 250.19064699999998,
                    "p99": 250.19064699999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.146984,
                    "min": 119.1459,
                    "p50": 128.201363,
                    "p95": 144.146984,
                    "p99": 144.146984,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 654.004387,
                    "min": 554.642401,
                    "p50": 559.664312,
                    "p95": 654.004387,
                    "p99": 654.004387,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 420.913769,
                    "min": 363.325521,
                    "p50": 369.602505,
                    "p95": 420.913769,
                    "p99": 420.913769,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 491.483147,
                    "min": 412.12391199999996,
                    "p50": 424.26874,
                    "p95": 491.483147,
                    "p99": 491.483147,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 640.1966259999999,
                    "min": 609.021891,
                    "p50": 628.141678,
                    "p95": 640.1966259999999,
                    "p99": 640.1966259999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 487.314958,
                    "min": 478.91504299999997,
                    "p50": 481.67384999999996,
                    "p95": 487.314958,
                    "p99": 487.314958,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.514145,
                    "min": 245.249662,
                    "p50": 247.24681299999997,
                    "p95": 286.514145,
                    "p99": 286.514145,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 648.546396,
                    "min": 559.165947,
                    "p50": 565.865222,
                    "p95": 648.546396,
                    "p99": 648.546396,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 342.053052,
                    "min": 332.681941,
                    "p50": 336.143056,
                    "p95": 342.053052,
                    "p99": 342.053052,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 460.987534,
                    "min": 433.785624,
                    "p50": 454.58468799999997,
                    "p95": 460.987534,
                    "p99": 460.987534,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 567.4803079999999,
                    "min": 472.298045,
                    "p50": 487.26863899999995,
                    "p95": 567.4803079999999,
                    "p99": 567.4803079999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 742.624926,
                    "min": 593.0108339999999,
                    "p50": 638.52429,
                    "p95": 742.624926,
                    "p99": 742.624926,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 370.49156999999997,
                    "min": 357.935402,
                    "p50": 367.47221199999996,
                    "p95": 370.49156999999997,
                    "p99": 370.49156999999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 253.03157399999998,
                    "min": 181.842458,
                    "p50": 216.786589,
                    "p95": 253.03157399999998,
                    "p99": 253.03157399999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 277.448122,
                    "min": 263.208434,
                    "p50": 274.719219,
                    "p95": 277.448122,
                    "p99": 277.448122,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 498.054248,
                    "min": 417.710246,
                    "p50": 424.39617999999996,
                    "p95": 498.054248,
                    "p99": 498.054248,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 395.656385,
                    "min": 352.717626,
                    "p50": 394.48197999999996,
                    "p95": 395.656385,
                    "p99": 395.656385,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1082.0648019999999,
                    "min": 922.1339979999999,
                    "p50": 935.810568,
                    "p95": 1082.0648019999999,
                    "p99": 1082.0648019999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 248.70710699999998,
                    "min": 210.218403,
                    "p50": 245.21047,
                    "p95": 248.70710699999998,
                    "p99": 248.70710699999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.04558,
                    "min": 113.778578,
                    "p50": 127.84558999999999,
                    "p95": 129.04558,
                    "p99": 129.04558,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 193.335308,
                    "min": 167.11982,
                    "p50": 187.131755,
                    "p95": 193.335308,
                    "p99": 193.335308,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 308.48137199999996,
                    "min": 296.77292,
                    "p50": 305.43384,
                    "p95": 308.48137199999996,
                    "p99": 308.48137199999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 157.583763,
                    "min": 146.569717,
                    "p50": 157.335949,
                    "p95": 157.583763,
                    "p99": 157.583763,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 895.0932889999999,
                    "min": 844.177925,
                    "p50": 887.6361939999999,
                    "p95": 895.0932889999999,
                    "p99": 895.0932889999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 440.828245,
                    "min": 394.65099,
                    "p50": 434.347219,
                    "p95": 440.828245,
                    "p99": 440.828245,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.269868,
                    "min": 170.101031,
                    "p50": 208.878267,
                    "p95": 213.269868,
                    "p99": 213.269868,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 269.12104999999997,
                    "min": 227.361451,
                    "p50": 267.066058,
                    "p95": 269.12104999999997,
                    "p99": 269.12104999999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 612.504868,
                    "min": 570.1144049999999,
                    "p50": 605.022214,
                    "p95": 612.504868,
                    "p99": 612.504868,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 383.762405,
                    "min": 339.240181,
                    "p50": 379.86785,
                    "p95": 383.762405,
                    "p99": 383.762405,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1188.131552,
                    "min": 1136.098227,
                    "p50": 1180.799574,
                    "p95": 1188.131552,
                    "p99": 1188.131552,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 326.648908,
                    "min": 282.816729,
                    "p50": 323.472855,
                    "p95": 326.648908,
                    "p99": 326.648908,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 666.730456,
                    "min": 632.618194,
                    "p50": 661.923229,
                    "p95": 666.730456,
                    "p99": 666.730456,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 496.178788,
                    "min": 453.897065,
                    "p50": 491.145781,
                    "p95": 496.178788,
                    "p99": 496.178788,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 735.836912,
                    "min": 681.590817,
                    "p50": 717.915747,
                    "p95": 735.836912,
                    "p99": 735.836912,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 781.477126,
                    "min": 766.360224,
                    "p50": 778.159288,
                    "p95": 781.477126,
                    "p99": 781.477126,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1037.695863,
                    "min": 1017.9531119999999,
                    "p50": 1031.336438,
                    "p95": 1037.695863,
                    "p99": 1037.695863,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 837.5036339999999,
                    "min": 815.4133029999999,
                    "p50": 831.0330749999999,
                    "p95": 837.5036339999999,
                    "p99": 837.5036339999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 552.4991299999999,
                    "min": 510.45210699999996,
                    "p50": 546.706789,
                    "p95": 552.4991299999999,
                    "p99": 552.4991299999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.12265399999998,
                    "min": 154.331536,
                    "p50": 172.681443,
                    "p95": 181.12265399999998,
                    "p99": 181.12265399999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 560.785222,
                    "min": 472.67736399999995,
                    "p50": 483.916317,
                    "p95": 560.785222,
                    "p99": 560.785222,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 420.383463,
                    "min": 343.560562,
                    "p50": 363.832589,
                    "p95": 420.383463,
                    "p99": 420.383463,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 354.313514,
                    "min": 300.439949,
                    "p50": 347.353036,
                    "p95": 354.313514,
                    "p99": 354.313514,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 248.386282,
                    "min": 211.44433099999998,
                    "p50": 217.467523,
                    "p95": 248.386282,
                    "p99": 248.386282,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.675343,
                    "min": 89.351897,
                    "p50": 128.091614,
                    "p95": 145.675343,
                    "p99": 145.675343,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 190.616423,
                    "min": 148.613453,
                    "p50": 186.547567,
                    "p95": 190.616423,
                    "p99": 190.616423,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 532.147748,
                    "min": 416.044557,
                    "p50": 456.33673799999997,
                    "p95": 532.147748,
                    "p99": 532.147748,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 652.01937,
                    "min": 522.874908,
                    "p50": 558.9659409999999,
                    "p95": 652.01937,
                    "p99": 652.01937,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 251.242007,
                    "min": 242.453137,
                    "p50": 246.48369499999998,
                    "p95": 251.242007,
                    "p99": 251.242007,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 391.02480499999996,
                    "min": 328.045169,
                    "p50": 334.336984,
                    "p95": 391.02480499999996,
                    "p99": 391.02480499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 748.880084,
                    "min": 596.590566,
                    "p50": 632.784738,
                    "p95": 748.880084,
                    "p99": 748.880084,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 453.679196,
                    "min": 391.340579,
                    "p50": 394.14160999999996,
                    "p95": 453.679196,
                    "p99": 453.679196,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 278.00077699999997,
                    "min": 272.872008,
                    "p50": 274.459414,
                    "p95": 278.00077699999997,
                    "p99": 278.00077699999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 485.731748,
                    "min": 402.268515,
                    "p50": 423.416584,
                    "p95": 485.731748,
                    "p99": 485.731748,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1114.999585,
                    "min": 1089.1589709999998,
                    "p50": 1097.877768,
                    "p95": 1114.999585,
                    "p99": 1114.999585,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 619.1691549999999,
                    "min": 590.577312,
                    "p50": 603.8022569999999,
                    "p95": 619.1691549999999,
                    "p99": 619.1691549999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 759.936999,
                    "min": 734.404063,
                    "p50": 749.771519,
                    "p95": 759.936999,
                    "p99": 759.936999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 837.8918239999999,
                    "min": 806.964216,
                    "p50": 826.048854,
                    "p95": 837.8918239999999,
                    "p99": 837.8918239999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1035.6800409999998,
                    "min": 999.939983,
                    "p50": 1032.082878,
                    "p95": 1035.6800409999998,
                    "p99": 1035.6800409999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 973.890858,
                    "min": 921.066928,
                    "p50": 962.349018,
                    "p95": 973.890858,
                    "p99": 973.890858,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 327.862083,
                    "min": 310.02297,
                    "p50": 321.232531,
                    "p95": 327.862083,
                    "p99": 327.862083,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 685.1972609999999,
                    "min": 661.755543,
                    "p50": 681.0161019999999,
                    "p95": 685.1972609999999,
                    "p99": 685.1972609999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 897.7940649999999,
                    "min": 834.616989,
                    "p50": 882.225468,
                    "p95": 897.7940649999999,
                    "p99": 897.7940649999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1295.4747969999999,
                    "min": 1240.7527989999999,
                    "p50": 1280.147048,
                    "p95": 1295.4747969999999,
                    "p99": 1295.4747969999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 403.81463299999996,
                    "min": 389.014187,
                    "p50": 395.671322,
                    "p95": 403.81463299999996,
                    "p99": 403.81463299999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 543.560786,
                    "min": 526.758589,
                    "p50": 536.203438,
                    "p95": 543.560786,
                    "p99": 543.560786,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.53479799999997,
                    "min": 242.268641,
                    "p50": 251.325731,
                    "p95": 256.53479799999997,
                    "p99": 256.53479799999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 474.96421399999997,
                    "min": 459.92672799999997,
                    "p50": 466.59543499999995,
                    "p95": 474.96421399999997,
                    "p99": 474.96421399999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1469.9433139999999,
                    "min": 1429.810949,
                    "p50": 1456.015338,
                    "p95": 1469.9433139999999,
                    "p99": 1469.9433139999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1449.909725,
                    "min": 1430.4685009999998,
                    "p50": 1444.347939,
                    "p95": 1449.909725,
                    "p99": 1449.909725,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1040.659132,
                    "min": 1008.517266,
                    "p50": 1024.879391,
                    "p95": 1040.659132,
                    "p99": 1040.659132,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 883.655724,
                    "min": 835.983206,
                    "p50": 877.5030439999999,
                    "p95": 883.655724,
                    "p99": 883.655724,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 689.8177089999999,
                    "min": 652.674853,
                    "p50": 680.003299,
                    "p95": 689.8177089999999,
                    "p99": 689.8177089999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 617.5741889999999,
                    "min": 589.521711,
                    "p50": 604.282425,
                    "p95": 617.5741889999999,
                    "p99": 617.5741889999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 470.254194,
                    "min": 452.99107999999995,
                    "p50": 463.175685,
                    "p95": 470.254194,
                    "p99": 470.254194,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 977.449081,
                    "min": 903.691032,
                    "p50": 951.662167,
                    "p95": 977.449081,
                    "p99": 977.449081,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 330.486452,
                    "min": 281.179462,
                    "p50": 322.253987,
                    "p95": 330.486452,
                    "p99": 330.486452,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 830.913865,
                    "min": 768.67604,
                    "p50": 817.150435,
                    "p95": 830.913865,
                    "p99": 830.913865,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 393.600754,
                    "min": 384.851721,
                    "p50": 391.433764,
                    "p95": 393.600754,
                    "p99": 393.600754,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1282.834508,
                    "min": 1255.974734,
                    "p50": 1267.9032849999999,
                    "p95": 1282.834508,
                    "p99": 1282.834508,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 254.30383899999998,
                    "min": 211.464609,
                    "p50": 249.392245,
                    "p95": 254.30383899999998,
                    "p99": 254.30383899999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 536.89802,
                    "min": 526.7808679999999,
                    "p50": 530.133982,
                    "p95": 536.89802,
                    "p99": 536.89802,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1107.17151,
                    "min": 1084.667582,
                    "p50": 1098.671245,
                    "p95": 1107.17151,
                    "p99": 1107.17151,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 747.7164369999999,
                    "min": 705.588939,
                    "p50": 740.917504,
                    "p95": 747.7164369999999,
                    "p99": 747.7164369999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 822.541566,
                    "min": 758.977127,
                    "p50": 805.769654,
                    "p95": 822.541566,
                    "p99": 822.541566,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 466.051286,
                    "min": 442.39417699999996,
                    "p50": 458.956458,
                    "p95": 466.051286,
                    "p99": 466.051286,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 403.28882699999997,
                    "min": 361.181766,
                    "p50": 397.274454,
                    "p95": 403.28882699999997,
                    "p99": 403.28882699999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 748.022912,
                    "min": 727.8026629999999,
                    "p50": 746.9927759999999,
                    "p95": 748.022912,
                    "p99": 748.022912,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1461.621273,
                    "min": 1414.735317,
                    "p50": 1436.386487,
                    "p95": 1461.621273,
                    "p99": 1461.621273,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 329.544647,
                    "min": 283.586376,
                    "p50": 317.209207,
                    "p95": 329.544647,
                    "p99": 329.544647,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 542.68089,
                    "min": 510.966503,
                    "p50": 527.999592,
                    "p95": 542.68089,
                    "p99": 542.68089,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.337973,
                    "min": 235.60878399999999,
                    "p50": 254.096305,
                    "p95": 256.337973,
                    "p99": 256.337973,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1114.4534549999998,
                    "min": 1039.186913,
                    "p50": 1093.279783,
                    "p95": 1114.4534549999998,
                    "p99": 1114.4534549999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1042.240518,
                    "min": 1004.52432,
                    "p50": 1020.232947,
                    "p95": 1042.240518,
                    "p99": 1042.240518,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 894.6400309999999,
                    "min": 835.260276,
                    "p50": 879.1268829999999,
                    "p95": 894.6400309999999,
                    "p99": 894.6400309999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 970.187192,
                    "min": 930.6263329999999,
                    "p50": 953.085432,
                    "p95": 970.187192,
                    "p99": 970.187192,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 682.7774559999999,
                    "min": 658.752705,
                    "p50": 676.72975,
                    "p95": 682.7774559999999,
                    "p99": 682.7774559999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1291.261191,
                    "min": 1229.1878219999999,
                    "p50": 1265.284334,
                    "p95": 1291.261191,
                    "p99": 1291.261191,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 605.971514,
                    "min": 593.3099209999999,
                    "p50": 597.81358,
                    "p95": 605.971514,
                    "p99": 605.971514,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 534.2754219999999,
                    "min": 514.086987,
                    "p50": 524.898831,
                    "p95": 534.2754219999999,
                    "p99": 534.2754219999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 304.76043,
                    "min": 284.449262,
                    "p50": 302.242299,
                    "p95": 304.76043,
                    "p99": 304.76043,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 604.337939,
                    "min": 559.991374,
                    "p50": 598.2673599999999,
                    "p95": 604.337939,
                    "p99": 604.337939,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 704.9978219999999,
                    "min": 660.042868,
                    "p50": 690.2507969999999,
                    "p95": 704.9978219999999,
                    "p99": 704.9978219999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.579473,
                    "min": 118.94536699999999,
                    "p50": 150.349826,
                    "p95": 153.579473,
                    "p99": 153.579473,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 492.449548,
                    "min": 448.73361,
                    "p50": 478.19490199999996,
                    "p95": 492.449548,
                    "p99": 492.449548,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 264.899528,
                    "min": 217.549727,
                    "p50": 262.958671,
                    "p95": 264.899528,
                    "p99": 264.899528,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 191.28716699999998,
                    "min": 151.184699,
                    "p50": 188.15773199999998,
                    "p95": 191.28716699999998,
                    "p99": 191.28716699999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1168.019355,
                    "min": 1151.3114799999998,
                    "p50": 1159.382347,
                    "p95": 1168.019355,
                    "p99": 1168.019355,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 380.62846199999996,
                    "min": 337.027477,
                    "p50": 373.841734,
                    "p95": 380.62846199999996,
                    "p99": 380.62846199999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 452.137883,
                    "min": 440.53299499999997,
                    "p50": 449.54774599999996,
                    "p95": 452.137883,
                    "p99": 452.137883,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 572.7869109999999,
                    "min": 523.883994,
                    "p50": 561.420525,
                    "p95": 572.7869109999999,
                    "p99": 572.7869109999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 228.67652099999998,
                    "min": 187.331816,
                    "p50": 227.63098399999998,
                    "p95": 228.67652099999998,
                    "p99": 228.67652099999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1936.690545,
                    "min": 1869.177876,
                    "p50": 1912.16782,
                    "p95": 1936.690545,
                    "p99": 1936.690545,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 807.3173449999999,
                    "min": 748.150044,
                    "p50": 791.257707,
                    "p95": 807.3173449999999,
                    "p99": 807.3173449999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 418.426761,
                    "min": 394.467476,
                    "p50": 410.286546,
                    "p95": 418.426761,
                    "p99": 418.426761,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 342.14205999999996,
                    "min": 332.299312,
                    "p50": 340.398839,
                    "p95": 342.14205999999996,
                    "p99": 342.14205999999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1547.625865,
                    "min": 1500.9106709999999,
                    "p50": 1526.39688,
                    "p95": 1547.625865,
                    "p99": 1547.625865,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 752.64801,
                    "min": 602.496277,
                    "p50": 636.8555779999999,
                    "p95": 752.64801,
                    "p99": 752.64801,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.63658099999998,
                    "min": 178.541677,
                    "p50": 213.52762199999998,
                    "p95": 217.63658099999998,
                    "p99": 217.63658099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 429.213164,
                    "min": 409.862082,
                    "p50": 425.774898,
                    "p95": 429.213164,
                    "p99": 429.213164,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 358.559689,
                    "min": 278.137084,
                    "p50": 306.634768,
                    "p95": 358.559689,
                    "p99": 358.559689,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 386.101141,
                    "min": 297.971339,
                    "p50": 336.353891,
                    "p95": 386.101141,
                    "p99": 386.101141,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.583663,
                    "min": 89.985843,
                    "p50": 127.12478999999999,
                    "p95": 131.583663,
                    "p99": 131.583663,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 424.746757,
                    "min": 326.319781,
                    "p50": 365.539963,
                    "p95": 424.746757,
                    "p99": 424.746757,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 189.35978699999998,
                    "min": 167.18329,
                    "p50": 182.69975,
                    "p95": 189.35978699999998,
                    "p99": 189.35978699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 462.33395199999995,
                    "min": 416.540828,
                    "p50": 453.978643,
                    "p95": 462.33395199999995,
                    "p99": 462.33395199999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 278.93211199999996,
                    "min": 259.154109,
                    "p50": 276.264755,
                    "p95": 278.93211199999996,
                    "p99": 278.93211199999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 643.521743,
                    "min": 544.3855199999999,
                    "p50": 562.327089,
                    "p95": 643.521743,
                    "p99": 643.521743,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 399.819363,
                    "min": 357.51890299999997,
                    "p50": 394.383003,
                    "p95": 399.819363,
                    "p99": 399.819363,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 272.962965,
                    "min": 236.47073899999998,
                    "p50": 248.75550299999998,
                    "p95": 272.962965,
                    "p99": 272.962965,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 161.83387399999998,
                    "min": 119.597376,
                    "p50": 156.227449,
                    "p95": 161.83387399999998,
                    "p99": 161.83387399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 552.317645,
                    "min": 446.436205,
                    "p50": 487.03955199999996,
                    "p95": 552.317645,
                    "p99": 552.317645,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1095.139452,
                    "min": 895.880398,
                    "p50": 933.2574209999999,
                    "p95": 1095.139452,
                    "p99": 1095.139452,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 354.64448799999997,
                    "min": 270.171721,
                    "p50": 311.37309799999997,
                    "p95": 354.64448799999997,
                    "p99": 354.64448799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 396.010603,
                    "min": 326.75591399999996,
                    "p50": 336.180779,
                    "p95": 396.010603,
                    "p99": 396.010603,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 194.166724,
                    "min": 149.885694,
                    "p50": 187.131318,
                    "p95": 194.166724,
                    "p99": 194.166724,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 289.67301599999996,
                    "min": 239.226881,
                    "p50": 276.196097,
                    "p95": 289.67301599999996,
                    "p99": 289.67301599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 470.934238,
                    "min": 421.82260199999996,
                    "p50": 464.308498,
                    "p95": 470.934238,
                    "p99": 470.934238,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.76108499999998,
                    "min": 117.834237,
                    "p50": 129.95314199999999,
                    "p95": 144.76108499999998,
                    "p99": 144.76108499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1093.4334159999999,
                    "min": 924.849611,
                    "p50": 943.840247,
                    "p95": 1093.4334159999999,
                    "p99": 1093.4334159999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 429.88811999999996,
                    "min": 364.979071,
                    "p50": 368.945523,
                    "p95": 429.88811999999996,
                    "p99": 429.88811999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 493.053457,
                    "min": 390.65063,
                    "p50": 429.63728799999996,
                    "p95": 493.053457,
                    "p99": 493.053457,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 227.92664599999998,
                    "min": 193.545365,
                    "p50": 218.569324,
                    "p95": 227.92664599999998,
                    "p99": 227.92664599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 664.669805,
                    "min": 522.197557,
                    "p50": 564.407553,
                    "p95": 664.669805,
                    "p99": 664.669805,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 403.78139799999997,
                    "min": 357.62674499999997,
                    "p50": 395.64221799999996,
                    "p95": 403.78139799999997,
                    "p99": 403.78139799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 253.873581,
                    "min": 227.767922,
                    "p50": 249.78578299999998,
                    "p95": 253.873581,
                    "p99": 253.873581,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1470.9290369999999,
                    "min": 1225.954624,
                    "p50": 1259.426999,
                    "p95": 1470.9290369999999,
                    "p99": 1470.9290369999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.441033,
                    "min": 153.226511,
                    "p50": 158.7844,
                    "p95": 160.441033,
                    "p99": 160.441033,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 562.138831,
                    "min": 482.95715099999995,
                    "p50": 490.52998599999995,
                    "p95": 562.138831,
                    "p99": 562.138831,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 739.9116379999999,
                    "min": 631.628065,
                    "p50": 645.84154,
                    "p95": 739.9116379999999,
                    "p99": 739.9116379999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "erigon": {
            "name": "erigon",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 605.0995409999999,
                    "min": 582.8992529999999,
                    "p50": 589.538773,
                    "p95": 605.0995409999999,
                    "p99": 605.0995409999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 977.7470639999999,
                    "min": 961.802598,
                    "p50": 971.081685,
                    "p95": 977.7470639999999,
                    "p99": 977.7470639999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 853.040579,
                    "min": 837.256612,
                    "p50": 841.346985,
                    "p95": 853.040579,
                    "p99": 853.040579,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 667.713119,
                    "min": 645.9178529999999,
                    "p50": 653.844339,
                    "p95": 667.713119,
                    "p99": 667.713119,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 800.464176,
                    "min": 768.088301,
                    "p50": 783.237633,
                    "p95": 800.464176,
                    "p99": 800.464176,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 958.6459709999999,
                    "min": 889.1270519999999,
                    "p50": 910.621731,
                    "p95": 958.6459709999999,
                    "p99": 958.6459709999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.285898,
                    "min": 204.427052,
                    "p50": 213.13346299999998,
                    "p95": 218.285898,
                    "p99": 218.285898,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 310.56584799999996,
                    "min": 270.619977,
                    "p50": 276.88788999999997,
                    "p95": 310.56584799999996,
                    "p99": 310.56584799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 376.269498,
                    "min": 330.033534,
                    "p50": 351.619458,
                    "p95": 376.269498,
                    "p99": 376.269498,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1307.335646,
                    "min": 1265.712247,
                    "p50": 1285.558421,
                    "p95": 1307.335646,
                    "p99": 1307.335646,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 407.687999,
                    "min": 395.423864,
                    "p50": 402.15772499999997,
                    "p95": 407.687999,
                    "p99": 407.687999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1151.957887,
                    "min": 1114.44626,
                    "p50": 1138.327808,
                    "p95": 1151.957887,
                    "p99": 1151.957887,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 573.221632,
                    "min": 515.974715,
                    "p50": 533.53648,
                    "p95": 573.221632,
                    "p99": 573.221632,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.970401,
                    "min": 456.965784,
                    "p50": 474.275587,
                    "p95": 477.970401,
                    "p99": 477.970401,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 558.924575,
                    "min": 496.31778399999996,
                    "p50": 503.555277,
                    "p95": 558.924575,
                    "p99": 558.924575,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 818.482036,
                    "min": 721.9630179999999,
                    "p50": 784.16732,
                    "p95": 818.482036,
                    "p99": 818.482036,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1051.8847799999999,
                    "min": 0,
                    "p50": 1004.876662,
                    "p95": 1051.8847799999999,
                    "p99": 1051.8847799999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 337.89462699999996,
                    "min": 301.127201,
                    "p50": 325.350646,
                    "p95": 337.89462699999996,
                    "p99": 337.89462699999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 563.064086,
                    "min": 486.410493,
                    "p50": 552.611556,
                    "p95": 563.064086,
                    "p99": 563.064086,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 920.01401,
                    "min": 883.972999,
                    "p50": 895.3117709999999,
                    "p95": 920.01401,
                    "p99": 920.01401,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 282.163091,
                    "min": 251.73640899999998,
                    "p50": 274.31082499999997,
                    "p95": 282.163091,
                    "p99": 282.163091,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 454.50773999999996,
                    "min": 400.895812,
                    "p50": 422.67997099999997,
                    "p95": 454.50773999999996,
                    "p99": 454.50773999999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 482.77025799999996,
                    "min": 391.40486899999996,
                    "p50": 462.866883,
                    "p95": 482.77025799999996,
                    "p99": 482.77025799999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 286.748052,
                    "min": 0,
                    "p50": 266.97148,
                    "p95": 286.748052,
                    "p99": 286.748052,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1527.316288,
                    "min": 1489.2979169999999,
                    "p50": 1503.172797,
                    "p95": 1527.316288,
                    "p99": 1527.316288,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 925.1393889999999,
                    "min": 872.528377,
                    "p50": 887.1817699999999,
                    "p95": 925.1393889999999,
                    "p99": 925.1393889999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 686.0777939999999,
                    "min": 648.9110549999999,
                    "p50": 661.473611,
                    "p95": 686.0777939999999,
                    "p99": 686.0777939999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 641.2529559999999,
                    "min": 604.0337999999999,
                    "p50": 628.207227,
                    "p95": 641.2529559999999,
                    "p99": 641.2529559999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 406.37494,
                    "min": 361.131268,
                    "p50": 375.557437,
                    "p95": 406.37494,
                    "p99": 406.37494,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1022.43535,
                    "min": 993.7932639999999,
                    "p50": 1004.736327,
                    "p95": 1022.43535,
                    "p99": 1022.43535,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.40543499999998,
                    "min": 165.198749,
                    "p50": 178.536624,
                    "p95": 193.40543499999998,
                    "p99": 193.40543499999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 786.095819,
                    "min": 746.962897,
                    "p50": 765.6940589999999,
                    "p95": 786.095819,
                    "p99": 786.095819,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 461.479599,
                    "min": 408.198561,
                    "p50": 420.898012,
                    "p95": 461.479599,
                    "p99": 461.479599,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 339.581881,
                    "min": 316.06564099999997,
                    "p50": 322.107442,
                    "p95": 339.581881,
                    "p99": 339.581881,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 239.221004,
                    "min": 211.64308499999999,
                    "p50": 221.292168,
                    "p95": 239.221004,
                    "p99": 239.221004,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 723.366496,
                    "min": 704.930527,
                    "p50": 715.8133449999999,
                    "p95": 723.366496,
                    "p99": 723.366496,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1160.2968939999998,
                    "min": 1125.557513,
                    "p50": 1133.283919,
                    "p95": 1160.2968939999998,
                    "p99": 1160.2968939999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.08736199999998,
                    "min": 206.28551099999999,
                    "p50": 215.053832,
                    "p95": 228.08736199999998,
                    "p99": 228.08736199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 791.5216499999999,
                    "min": 764.691479,
                    "p50": 785.437091,
                    "p95": 791.5216499999999,
                    "p99": 791.5216499999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 891.3659409999999,
                    "min": 838.326278,
                    "p50": 856.8022599999999,
                    "p95": 891.3659409999999,
                    "p99": 891.3659409999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 313.968592,
                    "min": 268.576376,
                    "p50": 276.952865,
                    "p95": 313.968592,
                    "p99": 313.968592,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 740.5026919999999,
                    "min": 706.04832,
                    "p50": 719.930086,
                    "p95": 740.5026919999999,
                    "p99": 740.5026919999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 990.6549819999999,
                    "min": 957.032781,
                    "p50": 972.485013,
                    "p95": 990.6549819999999,
                    "p99": 990.6549819999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 413.01118099999997,
                    "min": 391.58545899999996,
                    "p50": 405.61837599999996,
                    "p95": 413.01118099999997,
                    "p99": 413.01118099999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 605.071744,
                    "min": 583.9160059999999,
                    "p50": 591.9023639999999,
                    "p95": 605.071744,
                    "p99": 605.071744,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 545.732078,
                    "min": 516.89904,
                    "p50": 525.89585,
                    "p95": 545.732078,
                    "p99": 545.732078,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1296.851555,
                    "min": 1266.782497,
                    "p50": 1288.8444829999999,
                    "p95": 1296.851555,
                    "p99": 1296.851555,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 674.994588,
                    "min": 652.829629,
                    "p50": 664.495515,
                    "p95": 674.994588,
                    "p99": 674.994588,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 475.330041,
                    "min": 457.497797,
                    "p50": 469.155585,
                    "p95": 475.330041,
                    "p99": 475.330041,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 353.347764,
                    "min": 332.692181,
                    "p50": 339.376977,
                    "p95": 353.347764,
                    "p99": 353.347764,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 955.287202,
                    "min": 896.934124,
                    "p50": 917.5361829999999,
                    "p95": 955.287202,
                    "p99": 955.287202,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 142.150968,
                    "min": 114.38561999999999,
                    "p50": 129.513356,
                    "p95": 142.150968,
                    "p99": 142.150968,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 65.627645,
                    "min": 44.376835,
                    "p50": 47.428424,
                    "p95": 65.627645,
                    "p99": 65.627645,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 294.56336699999997,
                    "min": 243.645842,
                    "p50": 256.98069499999997,
                    "p95": 294.56336699999997,
                    "p99": 294.56336699999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 516.67466,
                    "min": 415.36693099999997,
                    "p50": 484.507395,
                    "p95": 516.67466,
                    "p99": 516.67466,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 92.360799,
                    "min": 67.807564,
                    "p50": 87.675749,
                    "p95": 92.360799,
                    "p99": 92.360799,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 106.038558,
                    "min": 65.963235,
                    "p50": 69.396779,
                    "p95": 106.038558,
                    "p99": 106.038558,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 241.026185,
                    "min": 193.53300199999998,
                    "p50": 210.683789,
                    "p95": 241.026185,
                    "p99": 241.026185,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 79.950643,
                    "min": 49.680758,
                    "p50": 50.948496999999996,
                    "p95": 79.950643,
                    "p99": 79.950643,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 99.007967,
                    "min": 73.555341,
                    "p50": 76.50714099999999,
                    "p95": 99.007967,
                    "p99": 99.007967,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 119.85884999999999,
                    "min": 105.42576799999999,
                    "p50": 112.24371699999999,
                    "p95": 119.85884999999999,
                    "p99": 119.85884999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 192.223624,
                    "min": 168.040424,
                    "p50": 174.68957799999998,
                    "p95": 192.223624,
                    "p99": 192.223624,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.790299999999995,
                    "min": 34.681256,
                    "p50": 36.883576999999995,
                    "p95": 47.790299999999995,
                    "p99": 47.790299999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 105.117797,
                    "min": 81.107524,
                    "p50": 83.55392599999999,
                    "p95": 105.117797,
                    "p99": 105.117797,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 101.674651,
                    "min": 95.063982,
                    "p50": 98.15019799999999,
                    "p95": 101.674651,
                    "p99": 101.674651,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 66.400961,
                    "min": 47.082487,
                    "p50": 60.604400999999996,
                    "p95": 66.400961,
                    "p99": 66.400961,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 76.308009,
                    "min": 60.768387,
                    "p50": 66.46404,
                    "p95": 76.308009,
                    "p99": 76.308009,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 100.381766,
                    "min": 64.946752,
                    "p50": 94.355632,
                    "p95": 100.381766,
                    "p99": 100.381766,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 73.602201,
                    "min": 66.508267,
                    "p50": 69.20139999999999,
                    "p95": 73.602201,
                    "p99": 73.602201,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 82.594933,
                    "min": 53.668983,
                    "p50": 72.386527,
                    "p95": 82.594933,
                    "p99": 82.594933,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 318.25419,
                    "min": 282.229689,
                    "p50": 306.108093,
                    "p95": 318.25419,
                    "p99": 318.25419,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 193.62136999999998,
                    "min": 165.97951899999998,
                    "p50": 179.683259,
                    "p95": 193.62136999999998,
                    "p99": 193.62136999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 471.35673399999996,
                    "min": 428.802996,
                    "p50": 442.521096,
                    "p95": 471.35673399999996,
                    "p99": 471.35673399999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.39963,
                    "min": 201.36023699999998,
                    "p50": 206.51958199999999,
                    "p95": 217.39963,
                    "p99": 217.39963,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 364.576574,
                    "min": 340.568496,
                    "p50": 348.905326,
                    "p95": 364.576574,
                    "p99": 364.576574,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1553.879363,
                    "min": 1498.850524,
                    "p50": 1530.172965,
                    "p95": 1553.879363,
                    "p99": 1553.879363,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 331.356566,
                    "min": 311.652829,
                    "p50": 318.314255,
                    "p95": 331.356566,
                    "p99": 331.356566,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 458.263536,
                    "min": 394.04623,
                    "p50": 408.401189,
                    "p95": 458.263536,
                    "p99": 458.263536,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 563.89841,
                    "min": 528.4274819999999,
                    "p50": 547.04309,
                    "p95": 563.89841,
                    "p99": 563.89841,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 290.954763,
                    "min": 258.422037,
                    "p50": 272.895167,
                    "p95": 290.954763,
                    "p99": 290.954763,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1267.425339,
                    "min": 1191.939742,
                    "p50": 1201.300152,
                    "p95": 1267.425339,
                    "p99": 1267.425339,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 257.308722,
                    "min": 228.783719,
                    "p50": 241.347367,
                    "p95": 257.308722,
                    "p99": 257.308722,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 414.46295599999996,
                    "min": 378.282942,
                    "p50": 384.444127,
                    "p95": 414.46295599999996,
                    "p99": 414.46295599999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 941.751091,
                    "min": 891.4969269999999,
                    "p50": 925.8589049999999,
                    "p95": 941.751091,
                    "p99": 941.751091,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 155.588278,
                    "min": 139.144109,
                    "p50": 145.590011,
                    "p95": 155.588278,
                    "p99": 155.588278,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3105.2263949999997,
                    "min": 2941.7720959999997,
                    "p50": 2973.212101,
                    "p95": 3105.2263949999997,
                    "p99": 3105.2263949999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.622799,
                    "min": 106.02910399999999,
                    "p50": 111.52942999999999,
                    "p95": 143.622799,
                    "p99": 143.622799,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 508.472331,
                    "min": 458.459683,
                    "p50": 476.48790499999996,
                    "p95": 508.472331,
                    "p99": 508.472331,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 653.7450729999999,
                    "min": 611.424355,
                    "p50": 646.033239,
                    "p95": 653.7450729999999,
                    "p99": 653.7450729999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 45.628406999999996,
                    "min": 35.927952,
                    "p50": 38.886489,
                    "p95": 45.628406999999996,
                    "p99": 45.628406999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 61.074949999999994,
                    "min": 43.573243999999995,
                    "p50": 54.414452,
                    "p95": 61.074949999999994,
                    "p99": 61.074949999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 36.895027,
                    "min": 33.632304,
                    "p50": 34.936268,
                    "p95": 36.895027,
                    "p99": 36.895027,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 56.277609999999996,
                    "min": 46.353594,
                    "p50": 50.143994,
                    "p95": 56.277609999999996,
                    "p99": 56.277609999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 64.321949,
                    "min": 47.596236999999995,
                    "p50": 57.706635,
                    "p95": 64.321949,
                    "p99": 64.321949,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 122.582785,
                    "min": 94.606618,
                    "p50": 112.72267599999999,
                    "p95": 122.582785,
                    "p99": 122.582785,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 68.183093,
                    "min": 50.195895,
                    "p50": 63.90965,
                    "p95": 68.183093,
                    "p99": 68.183093,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 50.079696999999996,
                    "min": 41.077118,
                    "p50": 43.623791999999995,
                    "p95": 50.079696999999996,
                    "p99": 50.079696999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 185.689498,
                    "min": 155.33609199999998,
                    "p50": 170.71970199999998,
                    "p95": 185.689498,
                    "p99": 185.689498,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 59.596208999999995,
                    "min": 43.106342999999995,
                    "p50": 52.502845,
                    "p95": 59.596208999999995,
                    "p99": 59.596208999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 47.835155,
                    "min": 43.252179,
                    "p50": 45.110546,
                    "p95": 47.835155,
                    "p99": 47.835155,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 65.49362099999999,
                    "min": 55.300058,
                    "p50": 61.703179,
                    "p95": 65.49362099999999,
                    "p99": 65.49362099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 86.125216,
                    "min": 49.97361,
                    "p50": 55.189550999999994,
                    "p95": 86.125216,
                    "p99": 86.125216,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 77.01606,
                    "min": 70.090931,
                    "p50": 71.62530199999999,
                    "p95": 77.01606,
                    "p99": 77.01606,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 349.619035,
                    "min": 242.530894,
                    "p50": 293.116139,
                    "p95": 349.619035,
                    "p99": 349.619035,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 113.95163199999999,
                    "min": 67.437362,
                    "p50": 71.82512799999999,
                    "p95": 113.95163199999999,
                    "p99": 113.95163199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 193.276658,
                    "min": 131.294036,
                    "p50": 145.775371,
                    "p95": 193.276658,
                    "p99": 193.276658,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 85.543106,
                    "min": 78.367173,
                    "p50": 81.857704,
                    "p95": 85.543106,
                    "p99": 85.543106,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 62.144928,
                    "min": 53.729766999999995,
                    "p50": 57.21747,
                    "p95": 62.144928,
                    "p99": 62.144928,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 54.833625,
                    "min": 51.714065999999995,
                    "p50": 53.505348999999995,
                    "p95": 54.833625,
                    "p99": 54.833625,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 31.557713,
                    "min": 25.204846,
                    "p50": 27.006695999999998,
                    "p95": 31.557713,
                    "p99": 31.557713,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 29.970335,
                    "min": 25.893725999999997,
                    "p50": 27.552954,
                    "p95": 29.970335,
                    "p99": 29.970335,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 47.933591,
                    "min": 26.85538,
                    "p50": 30.4731,
                    "p95": 47.933591,
                    "p99": 47.933591,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 32.640862999999996,
                    "min": 26.707124,
                    "p50": 27.539862,
                    "p95": 32.640862999999996,
                    "p99": 32.640862999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.228443,
                    "min": 26.614879,
                    "p50": 26.74512,
                    "p95": 31.228443,
                    "p99": 31.228443,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 32.902107,
                    "min": 25.670992,
                    "p50": 27.420731,
                    "p95": 32.902107,
                    "p99": 32.902107,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 30.480895,
                    "min": 25.937808,
                    "p50": 27.114772,
                    "p95": 30.480895,
                    "p99": 30.480895,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 30.418923999999997,
                    "min": 23.615212,
                    "p50": 27.016087,
                    "p95": 30.418923999999997,
                    "p99": 30.418923999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 56.136255,
                    "min": 44.866727999999995,
                    "p50": 47.950545999999996,
                    "p95": 56.136255,
                    "p99": 56.136255,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 39.448606,
                    "min": 26.58569,
                    "p50": 28.094576999999997,
                    "p95": 39.448606,
                    "p99": 39.448606,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 39.122916,
                    "min": 36.211062999999996,
                    "p50": 37.77357,
                    "p95": 39.122916,
                    "p99": 39.122916,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 34.581441999999996,
                    "min": 30.004144,
                    "p50": 31.390528,
                    "p95": 34.581441999999996,
                    "p99": 34.581441999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 41.794789,
                    "min": 28.554553,
                    "p50": 30.966507999999997,
                    "p95": 41.794789,
                    "p99": 41.794789,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.169228,
                    "min": 22.337844999999998,
                    "p50": 26.777475,
                    "p95": 27.169228,
                    "p99": 27.169228,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 118.524467,
                    "min": 86.66474,
                    "p50": 89.959049,
                    "p95": 118.524467,
                    "p99": 118.524467,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 74.564332,
                    "min": 57.755907,
                    "p50": 61.463958,
                    "p95": 74.564332,
                    "p99": 74.564332,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 42.742416999999996,
                    "min": 27.080664,
                    "p50": 30.797214,
                    "p95": 42.742416999999996,
                    "p99": 42.742416999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 29.624119999999998,
                    "min": 25.792641999999997,
                    "p50": 27.087806999999998,
                    "p95": 29.624119999999998,
                    "p99": 29.624119999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 352.74868799999996,
                    "min": 321.716753,
                    "p50": 340.259439,
                    "p95": 352.74868799999996,
                    "p99": 352.74868799999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.491627,
                    "min": 107.20115899999999,
                    "p50": 108.945878,
                    "p95": 155.491627,
                    "p99": 155.491627,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3126.0564259999996,
                    "min": 3003.4473869999997,
                    "p50": 3067.2158489999997,
                    "p95": 3126.0564259999996,
                    "p99": 3126.0564259999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 662.665127,
                    "min": 620.272572,
                    "p50": 642.2296309999999,
                    "p95": 662.665127,
                    "p99": 662.665127,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 252.842198,
                    "min": 227.788482,
                    "p50": 246.031828,
                    "p95": 252.842198,
                    "p99": 252.842198,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 175.36256799999998,
                    "min": 141.38611799999998,
                    "p50": 158.777402,
                    "p95": 175.36256799999998,
                    "p99": 175.36256799999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 252.59983699999998,
                    "min": 197.712749,
                    "p50": 213.128151,
                    "p95": 252.59983699999998,
                    "p99": 252.59983699999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 951.2611139999999,
                    "min": 913.051292,
                    "p50": 927.1634439999999,
                    "p95": 951.2611139999999,
                    "p99": 951.2611139999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 439.58462599999996,
                    "min": 405.88550499999997,
                    "p50": 424.835363,
                    "p95": 439.58462599999996,
                    "p99": 439.58462599999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 383.320928,
                    "min": 348.769763,
                    "p50": 368.55598,
                    "p95": 383.320928,
                    "p99": 383.320928,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1268.394294,
                    "min": 1211.7375319999999,
                    "p50": 1230.151508,
                    "p95": 1268.394294,
                    "p99": 1268.394294,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1569.758001,
                    "min": 1503.5221119999999,
                    "p50": 1538.383466,
                    "p95": 1569.758001,
                    "p99": 1569.758001,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 481.734879,
                    "min": 433.789388,
                    "p50": 452.96408099999996,
                    "p95": 481.734879,
                    "p99": 481.734879,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 201.92665399999998,
                    "min": 165.78998099999998,
                    "p50": 176.541866,
                    "p95": 201.92665399999998,
                    "p99": 201.92665399999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 583.331644,
                    "min": 539.105021,
                    "p50": 551.345526,
                    "p95": 583.331644,
                    "p99": 583.331644,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 317.980184,
                    "min": 288.303603,
                    "p50": 293.74850299999997,
                    "p95": 317.980184,
                    "p99": 317.980184,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 407.031643,
                    "min": 374.658009,
                    "p50": 388.159877,
                    "p95": 407.031643,
                    "p99": 407.031643,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 516.57285,
                    "min": 470.36533299999996,
                    "p50": 493.012336,
                    "p95": 516.57285,
                    "p99": 516.57285,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 293.49542199999996,
                    "min": 254.16704299999998,
                    "p50": 273.84781599999997,
                    "p95": 293.49542199999996,
                    "p99": 293.49542199999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1951.6136529999999,
                    "min": 1863.306973,
                    "p50": 1898.7525839999998,
                    "p95": 1951.6136529999999,
                    "p99": 1951.6136529999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 299.684651,
                    "min": 260.45151,
                    "p50": 277.86058099999997,
                    "p95": 299.684651,
                    "p99": 299.684651,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 601.967311,
                    "min": 581.662247,
                    "p50": 590.13056,
                    "p95": 601.967311,
                    "p99": 601.967311,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 933.669981,
                    "min": 880.428913,
                    "p50": 904.586467,
                    "p95": 933.669981,
                    "p99": 933.669981,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.367284,
                    "min": 320.59727,
                    "p50": 330.064872,
                    "p95": 350.367284,
                    "p99": 350.367284,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 980.6470089999999,
                    "min": 938.548963,
                    "p50": 957.351189,
                    "p95": 980.6470089999999,
                    "p99": 980.6470089999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 541.62895,
                    "min": 514.485806,
                    "p50": 537.210864,
                    "p95": 541.62895,
                    "p99": 541.62895,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1158.768646,
                    "min": 1097.840285,
                    "p50": 1117.879214,
                    "p95": 1158.768646,
                    "p99": 1158.768646,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 411.73643599999997,
                    "min": 389.39765,
                    "p50": 398.247917,
                    "p95": 411.73643599999997,
                    "p99": 411.73643599999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 685.495107,
                    "min": 640.8785359999999,
                    "p50": 667.189182,
                    "p95": 685.495107,
                    "p99": 685.495107,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2693.22613,
                    "min": 2499.047512,
                    "p50": 2580.1547769999997,
                    "p95": 2693.22613,
                    "p99": 2693.22613,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 736.711332,
                    "min": 688.2929459999999,
                    "p50": 698.590793,
                    "p95": 736.711332,
                    "p99": 736.711332,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 478.715198,
                    "min": 455.145981,
                    "p50": 458.110618,
                    "p95": 478.715198,
                    "p99": 478.715198,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 799.862841,
                    "min": 768.678139,
                    "p50": 791.798949,
                    "p95": 799.862841,
                    "p99": 799.862841,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 233.609211,
                    "min": 203.996054,
                    "p50": 211.724653,
                    "p95": 233.609211,
                    "p99": 233.609211,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 880.377182,
                    "min": 827.10807,
                    "p50": 845.8247829999999,
                    "p95": 880.377182,
                    "p99": 880.377182,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1336.15908,
                    "min": 1240.294725,
                    "p50": 1275.51457,
                    "p95": 1336.15908,
                    "p99": 1336.15908,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3178.2029869999997,
                    "min": 3066.3028489999997,
                    "p50": 3147.49655,
                    "p95": 3178.2029869999997,
                    "p99": 3178.2029869999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 279.14203499999996,
                    "min": 267.156283,
                    "p50": 276.664259,
                    "p95": 279.14203499999996,
                    "p99": 279.14203499999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 530.4502739999999,
                    "min": 510.24979299999995,
                    "p50": 515.883027,
                    "p95": 530.4502739999999,
                    "p99": 530.4502739999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 460.143084,
                    "min": 428.030803,
                    "p50": 441.622142,
                    "p95": 460.143084,
                    "p99": 460.143084,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 857.502801,
                    "min": 839.0159669999999,
                    "p50": 846.120606,
                    "p95": 857.502801,
                    "p99": 857.502801,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 802.971922,
                    "min": 762.5431199999999,
                    "p50": 766.671146,
                    "p95": 802.971922,
                    "p99": 802.971922,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1049.4444859999999,
                    "min": 1004.832808,
                    "p50": 1020.069715,
                    "p95": 1049.4444859999999,
                    "p99": 1049.4444859999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1307.237283,
                    "min": 1246.093058,
                    "p50": 1299.9384969999999,
                    "p95": 1307.237283,
                    "p99": 1307.237283,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1142.497111,
                    "min": 1087.5929059999999,
                    "p50": 1102.576194,
                    "p95": 1142.497111,
                    "p99": 1142.497111,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 944.080708,
                    "min": 928.817765,
                    "p50": 934.6021489999999,
                    "p95": 944.080708,
                    "p99": 944.080708,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1709.119235,
                    "min": 1656.4721849999999,
                    "p50": 1676.393347,
                    "p95": 1709.119235,
                    "p99": 1709.119235,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 636.975631,
                    "min": 595.269534,
                    "p50": 599.902915,
                    "p95": 636.975631,
                    "p99": 636.975631,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 398.664876,
                    "min": 351.378512,
                    "p50": 359.212557,
                    "p95": 398.664876,
                    "p99": 398.664876,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1498.454634,
                    "min": 1447.0790379999999,
                    "p50": 1467.647953,
                    "p95": 1498.454634,
                    "p99": 1498.454634,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 715.557405,
                    "min": 669.679219,
                    "p50": 694.2078349999999,
                    "p95": 715.557405,
                    "p99": 715.557405,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1197.36982,
                    "min": 1167.2456359999999,
                    "p50": 1177.2940549999998,
                    "p95": 1197.36982,
                    "p99": 1197.36982,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 324.4093,
                    "min": 290.348641,
                    "p50": 293.54224999999997,
                    "p95": 324.4093,
                    "p99": 324.4093,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 627.352821,
                    "min": 607.3315789999999,
                    "p50": 617.9846779999999,
                    "p95": 627.352821,
                    "p99": 627.352821,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 883.295407,
                    "min": 852.675653,
                    "p50": 868.0723439999999,
                    "p95": 883.295407,
                    "p99": 883.295407,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1720.3391809999998,
                    "min": 1688.532051,
                    "p50": 1698.1433989999998,
                    "p95": 1720.3391809999998,
                    "p99": 1720.3391809999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 496.50751199999996,
                    "min": 476.096025,
                    "p50": 487.15635199999997,
                    "p95": 496.50751199999996,
                    "p99": 496.50751199999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.65957999999998,
                    "min": 226.72236999999998,
                    "p50": 233.38362099999998,
                    "p95": 253.65957999999998,
                    "p99": 253.65957999999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.700831,
                    "min": 183.844303,
                    "p50": 197.32494499999999,
                    "p95": 214.700831,
                    "p99": 214.700831,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 528.9979069999999,
                    "min": 515.1603269999999,
                    "p50": 524.13218,
                    "p95": 528.9979069999999,
                    "p99": 528.9979069999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1295.5689619999998,
                    "min": 1270.12582,
                    "p50": 1277.0639449999999,
                    "p95": 1295.5689619999998,
                    "p99": 1295.5689619999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 772.505045,
                    "min": 742.942607,
                    "p50": 759.199902,
                    "p95": 772.505045,
                    "p99": 772.505045,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 687.062602,
                    "min": 638.835032,
                    "p50": 652.340335,
                    "p95": 687.062602,
                    "p99": 687.062602,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 370.903457,
                    "min": 349.81541999999996,
                    "p50": 361.01897199999996,
                    "p95": 370.903457,
                    "p99": 370.903457,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 458.637025,
                    "min": 437.43618599999996,
                    "p50": 445.62965299999996,
                    "p95": 458.637025,
                    "p99": 458.637025,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 342.15425,
                    "min": 308.893646,
                    "p50": 316.400039,
                    "p95": 342.15425,
                    "p99": 342.15425,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 176.374678,
                    "min": 142.475497,
                    "p50": 156.301874,
                    "p95": 176.374678,
                    "p99": 176.374678,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 604.171383,
                    "min": 560.064254,
                    "p50": 567.564263,
                    "p95": 604.171383,
                    "p99": 604.171383,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 430.575805,
                    "min": 393.109308,
                    "p50": 411.225311,
                    "p95": 430.575805,
                    "p99": 430.575805,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 629.7695309999999,
                    "min": 612.185057,
                    "p50": 624.403809,
                    "p95": 629.7695309999999,
                    "p99": 629.7695309999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2012.694886,
                    "min": 1975.952444,
                    "p50": 2004.2282089999999,
                    "p95": 2012.694886,
                    "p99": 2012.694886,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4018.088335,
                    "min": 3988.6400179999996,
                    "p50": 4007.937525,
                    "p95": 4018.088335,
                    "p99": 4018.088335,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2233.9647809999997,
                    "min": 2189.376203,
                    "p50": 2209.821841,
                    "p95": 2233.9647809999997,
                    "p99": 2233.9647809999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5931.375774,
                    "min": 5843.39603,
                    "p50": 5884.041584,
                    "p95": 5931.375774,
                    "p99": 5931.375774,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1254.244848,
                    "min": 1206.755582,
                    "p50": 1229.208564,
                    "p95": 1254.244848,
                    "p99": 1254.244848,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1831.851937,
                    "min": 1806.819184,
                    "p50": 1828.141965,
                    "p95": 1831.851937,
                    "p99": 1831.851937,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7832.121192,
                    "min": 7756.115009,
                    "p50": 7781.342772999999,
                    "p95": 7832.121192,
                    "p99": 7832.121192,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1044.5313079999999,
                    "min": 1020.828596,
                    "p50": 1039.334993,
                    "p95": 1044.5313079999999,
                    "p99": 1044.5313079999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2657.1785449999998,
                    "min": 2635.308471,
                    "p50": 2644.797483,
                    "p95": 2657.1785449999998,
                    "p99": 2657.1785449999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1417.3584899999998,
                    "min": 1391.153228,
                    "p50": 1398.4053689999998,
                    "p95": 1417.3584899999998,
                    "p99": 1417.3584899999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 823.300626,
                    "min": 804.2925799999999,
                    "p50": 810.4380269999999,
                    "p95": 823.300626,
                    "p99": 823.300626,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3031.8479469999997,
                    "min": 3006.266141,
                    "p50": 3015.071747,
                    "p95": 3031.8479469999997,
                    "p99": 3031.8479469999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2864.10589,
                    "min": 2804.212403,
                    "p50": 2829.9386689999997,
                    "p95": 2864.10589,
                    "p99": 2864.10589,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3496.167592,
                    "min": 3436.149285,
                    "p50": 3471.407143,
                    "p95": 3496.167592,
                    "p99": 3496.167592,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1620.227204,
                    "min": 1575.073169,
                    "p50": 1603.3911369999998,
                    "p95": 1620.227204,
                    "p99": 1620.227204,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2415.044382,
                    "min": 2385.7050529999997,
                    "p50": 2401.94394,
                    "p95": 2415.044382,
                    "p99": 2415.044382,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 734.43363,
                    "min": 697.380994,
                    "p50": 707.352948,
                    "p95": 734.43363,
                    "p99": 734.43363,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 521.096872,
                    "min": 506.318697,
                    "p50": 511.92554199999995,
                    "p95": 521.096872,
                    "p99": 521.096872,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1015.5833289999999,
                    "min": 986.829714,
                    "p50": 1004.0116999999999,
                    "p95": 1015.5833289999999,
                    "p99": 1015.5833289999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1489.468359,
                    "min": 1460.155802,
                    "p50": 1476.989728,
                    "p95": 1489.468359,
                    "p99": 1489.468359,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4908.7250699999995,
                    "min": 4847.94456,
                    "p50": 4896.541575,
                    "p95": 4908.7250699999995,
                    "p99": 4908.7250699999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2007.158933,
                    "min": 1956.525293,
                    "p50": 1970.337171,
                    "p95": 2007.158933,
                    "p99": 2007.158933,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 592.377661,
                    "min": 546.2985709999999,
                    "p50": 558.522195,
                    "p95": 592.377661,
                    "p99": 592.377661,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.789388,
                    "min": 168.14825199999999,
                    "p50": 172.23421299999998,
                    "p95": 198.789388,
                    "p99": 198.789388,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2478.043703,
                    "min": 2433.5590199999997,
                    "p50": 2447.96556,
                    "p95": 2478.043703,
                    "p99": 2478.043703,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 386.173472,
                    "min": 360.030217,
                    "p50": 369.284651,
                    "p95": 386.173472,
                    "p99": 386.173472,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 450.730616,
                    "min": 406.988316,
                    "p50": 414.367083,
                    "p95": 450.730616,
                    "p99": 450.730616,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 496.13059599999997,
                    "min": 452.95374,
                    "p50": 463.306851,
                    "p95": 496.13059599999997,
                    "p99": 496.13059599999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 912.9732759999999,
                    "min": 860.4847189999999,
                    "p50": 877.0279099999999,
                    "p95": 912.9732759999999,
                    "p99": 912.9732759999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 295.42841599999997,
                    "min": 258.834124,
                    "p50": 269.856555,
                    "p95": 295.42841599999997,
                    "p99": 295.42841599999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 353.238901,
                    "min": 314.90651299999996,
                    "p50": 321.61429699999997,
                    "p95": 353.238901,
                    "p99": 353.238901,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 764.545175,
                    "min": 747.13298,
                    "p50": 753.983704,
                    "p95": 764.545175,
                    "p99": 764.545175,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 627.389285,
                    "min": 597.353289,
                    "p50": 613.7819129999999,
                    "p95": 627.389285,
                    "p99": 627.389285,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 263.166273,
                    "min": 216.53707899999998,
                    "p50": 232.83275899999998,
                    "p95": 263.166273,
                    "p99": 263.166273,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 685.598625,
                    "min": 642.852552,
                    "p50": 658.090813,
                    "p95": 685.598625,
                    "p99": 685.598625,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2096.4982449999998,
                    "min": 2044.15255,
                    "p50": 2056.408631,
                    "p95": 2096.4982449999998,
                    "p99": 2096.4982449999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 871.543651,
                    "min": 829.840618,
                    "p50": 844.6003469999999,
                    "p95": 871.543651,
                    "p99": 871.543651,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 619.985997,
                    "min": 593.89185,
                    "p50": 609.031468,
                    "p95": 619.985997,
                    "p99": 619.985997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1428.4079729999999,
                    "min": 1407.254512,
                    "p50": 1420.4311109999999,
                    "p95": 1428.4079729999999,
                    "p99": 1428.4079729999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 984.871756,
                    "min": 943.202807,
                    "p50": 955.2580539999999,
                    "p95": 984.871756,
                    "p99": 984.871756,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4680.449167,
                    "min": 4624.675652,
                    "p50": 4652.02086,
                    "p95": 4680.449167,
                    "p99": 4680.449167,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1314.556957,
                    "min": 1293.108877,
                    "p50": 1308.404419,
                    "p95": 1314.556957,
                    "p99": 1314.556957,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 744.039011,
                    "min": 712.967993,
                    "p50": 725.219489,
                    "p95": 744.039011,
                    "p99": 744.039011,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1561.272596,
                    "min": 1516.547251,
                    "p50": 1537.819133,
                    "p95": 1561.272596,
                    "p99": 1561.272596,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3534.963835,
                    "min": 3471.3165169999997,
                    "p50": 3498.8795499999997,
                    "p95": 3534.963835,
                    "p99": 3534.963835,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1784.685929,
                    "min": 1757.259069,
                    "p50": 1766.864971,
                    "p95": 1784.685929,
                    "p99": 1784.685929,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2383.745987,
                    "min": 2334.592181,
                    "p50": 2353.690854,
                    "p95": 2383.745987,
                    "p99": 2383.745987,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 390.36972,
                    "min": 376.44248699999997,
                    "p50": 382.985054,
                    "p95": 390.36972,
                    "p99": 390.36972,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1684.962071,
                    "min": 1633.902371,
                    "p50": 1657.5804389999998,
                    "p95": 1684.962071,
                    "p99": 1684.962071,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 514.284624,
                    "min": 481.37214,
                    "p50": 492.75474499999996,
                    "p95": 514.284624,
                    "p99": 514.284624,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1205.715522,
                    "min": 1173.077536,
                    "p50": 1188.501027,
                    "p95": 1205.715522,
                    "p99": 1205.715522,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1077.169727,
                    "min": 1060.7762969999999,
                    "p50": 1068.586484,
                    "p95": 1077.169727,
                    "p99": 1077.169727,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1796.893732,
                    "min": 1749.673358,
                    "p50": 1763.035883,
                    "p95": 1796.893732,
                    "p99": 1796.893732,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 512.454938,
                    "min": 482.58984799999996,
                    "p50": 490.872487,
                    "p95": 512.454938,
                    "p99": 512.454938,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1079.5797559999999,
                    "min": 1053.958292,
                    "p50": 1070.18608,
                    "p95": 1079.5797559999999,
                    "p99": 1079.5797559999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1559.5054499999999,
                    "min": 1521.8147979999999,
                    "p50": 1534.520206,
                    "p95": 1559.5054499999999,
                    "p99": 1559.5054499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1197.841866,
                    "min": 1172.8308829999999,
                    "p50": 1185.833334,
                    "p95": 1197.841866,
                    "p99": 1197.841866,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1331.471677,
                    "min": 1301.8302879999999,
                    "p50": 1314.027582,
                    "p95": 1331.471677,
                    "p99": 1331.471677,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2392.85245,
                    "min": 2341.025087,
                    "p50": 2378.964533,
                    "p95": 2392.85245,
                    "p99": 2392.85245,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3548.412319,
                    "min": 3494.0061229999997,
                    "p50": 3522.901231,
                    "p95": 3548.412319,
                    "p99": 3548.412319,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1436.230517,
                    "min": 1406.096257,
                    "p50": 1417.3363359999998,
                    "p95": 1436.230517,
                    "p99": 1436.230517,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 628.70326,
                    "min": 596.504609,
                    "p50": 615.157348,
                    "p95": 628.70326,
                    "p99": 628.70326,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 387.954184,
                    "min": 369.83340699999997,
                    "p50": 378.37109399999997,
                    "p95": 387.954184,
                    "p99": 387.954184,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 738.24396,
                    "min": 713.604836,
                    "p50": 724.999868,
                    "p95": 738.24396,
                    "p99": 738.24396,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2072.733962,
                    "min": 2029.808755,
                    "p50": 2055.083255,
                    "p95": 2072.733962,
                    "p99": 2072.733962,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 858.811528,
                    "min": 834.6612269999999,
                    "p50": 853.089257,
                    "p95": 858.811528,
                    "p99": 858.811528,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1688.742925,
                    "min": 1642.866564,
                    "p50": 1665.118511,
                    "p95": 1688.742925,
                    "p99": 1688.742925,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 997.1732159999999,
                    "min": 945.55476,
                    "p50": 959.598363,
                    "p95": 997.1732159999999,
                    "p99": 997.1732159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10926.025237,
                    "min": 10795.83287,
                    "p50": 10882.946619999999,
                    "p95": 10926.025237,
                    "p99": 10926.025237,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1569.7839199999999,
                    "min": 1518.955136,
                    "p50": 1545.9271939999999,
                    "p95": 1569.7839199999999,
                    "p99": 1569.7839199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5458.158441,
                    "min": 5407.671084,
                    "p50": 5440.630623999999,
                    "p95": 5458.158441,
                    "p99": 5458.158441,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 799.92273,
                    "min": 771.153052,
                    "p50": 780.629813,
                    "p95": 799.92273,
                    "p99": 799.92273,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 472.97743399999996,
                    "min": 455.054643,
                    "p50": 461.847518,
                    "p95": 472.97743399999996,
                    "p99": 472.97743399999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1352.105393,
                    "min": 1307.4313459999998,
                    "p50": 1329.112374,
                    "p95": 1352.105393,
                    "p99": 1352.105393,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4372.526535999999,
                    "min": 4307.720157,
                    "p50": 4351.5550729999995,
                    "p95": 4372.526535999999,
                    "p99": 4372.526535999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1679.240282,
                    "min": 1635.126401,
                    "p50": 1649.577935,
                    "p95": 1679.240282,
                    "p99": 1679.240282,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1469.659355,
                    "min": 1406.7015,
                    "p50": 1443.5489089999999,
                    "p95": 1469.659355,
                    "p99": 1469.659355,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1955.989957,
                    "min": 1895.9622749999999,
                    "p50": 1935.5666569999999,
                    "p95": 1955.989957,
                    "p99": 1955.989957,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 590.567038,
                    "min": 555.513775,
                    "p50": 568.955426,
                    "p95": 590.567038,
                    "p99": 590.567038,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1239.864848,
                    "min": 1209.825337,
                    "p50": 1220.777954,
                    "p95": 1239.864848,
                    "p99": 1239.864848,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 361.060929,
                    "min": 344.32264699999996,
                    "p50": 348.98808199999996,
                    "p95": 361.060929,
                    "p99": 361.060929,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 910.3691279999999,
                    "min": 879.1495639999999,
                    "p50": 901.777602,
                    "p95": 910.3691279999999,
                    "p99": 910.3691279999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 715.432703,
                    "min": 664.128751,
                    "p50": 678.239456,
                    "p95": 715.432703,
                    "p99": 715.432703,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1027.824902,
                    "min": 996.3187009999999,
                    "p50": 1006.1075529999999,
                    "p95": 1027.824902,
                    "p99": 1027.824902,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1131.524084,
                    "min": 1101.126122,
                    "p50": 1110.047167,
                    "p95": 1131.524084,
                    "p99": 1131.524084,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3299.8551829999997,
                    "min": 3265.821157,
                    "p50": 3287.3226999999997,
                    "p95": 3299.8551829999997,
                    "p99": 3299.8551829999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2193.659382,
                    "min": 2166.8553699999998,
                    "p50": 2186.356661,
                    "p95": 2193.659382,
                    "p99": 2193.659382,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 343.89073199999996,
                    "min": 300.524634,
                    "p50": 311.67849,
                    "p95": 343.89073199999996,
                    "p99": 343.89073199999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1946.4060949999998,
                    "min": 1900.412877,
                    "p50": 1923.565914,
                    "p95": 1946.4060949999998,
                    "p99": 1946.4060949999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1478.196068,
                    "min": 1430.171558,
                    "p50": 1440.056206,
                    "p95": 1478.196068,
                    "p99": 1478.196068,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 989.354419,
                    "min": 969.325302,
                    "p50": 979.165256,
                    "p95": 989.354419,
                    "p99": 989.354419,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 519.652464,
                    "min": 487.689798,
                    "p50": 501.257706,
                    "p95": 519.652464,
                    "p99": 519.652464,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4789.414467,
                    "min": 4707.818976,
                    "p50": 4761.754790999999,
                    "p95": 4789.414467,
                    "p99": 4789.414467,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2419.233922,
                    "min": 2375.504578,
                    "p50": 2398.473072,
                    "p95": 2419.233922,
                    "p99": 2419.233922,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 626.8067169999999,
                    "min": 583.5256059999999,
                    "p50": 596.165079,
                    "p95": 626.8067169999999,
                    "p99": 626.8067169999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 697.559855,
                    "min": 677.329355,
                    "p50": 687.724802,
                    "p95": 697.559855,
                    "p99": 697.559855,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 438.64271499999995,
                    "min": 396.024517,
                    "p50": 404.859125,
                    "p95": 438.64271499999995,
                    "p99": 438.64271499999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 485.961342,
                    "min": 440.29272,
                    "p50": 461.580451,
                    "p95": 485.961342,
                    "p99": 485.961342,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 235.978534,
                    "min": 211.311713,
                    "p50": 220.05675499999998,
                    "p95": 235.978534,
                    "p99": 235.978534,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 885.897086,
                    "min": 843.085596,
                    "p50": 860.612565,
                    "p95": 885.897086,
                    "p99": 885.897086,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 560.920445,
                    "min": 534.401403,
                    "p50": 544.449561,
                    "p95": 560.920445,
                    "p99": 560.920445,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 741.3999259999999,
                    "min": 723.048183,
                    "p50": 731.739427,
                    "p95": 741.3999259999999,
                    "p99": 741.3999259999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 390.16963899999996,
                    "min": 343.293028,
                    "p50": 357.81829899999997,
                    "p95": 390.16963899999996,
                    "p99": 390.16963899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 652.300942,
                    "min": 630.3533739999999,
                    "p50": 638.911199,
                    "p95": 652.300942,
                    "p99": 652.300942,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 283.672702,
                    "min": 253.665066,
                    "p50": 260.98709199999996,
                    "p95": 283.672702,
                    "p99": 283.672702,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.79709499999998,
                    "min": 161.71678799999998,
                    "p50": 168.04189,
                    "p95": 180.79709499999998,
                    "p99": 180.79709499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1932.3221629999998,
                    "min": 1897.03461,
                    "p50": 1919.895945,
                    "p95": 1932.3221629999998,
                    "p99": 1932.3221629999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 906.557813,
                    "min": 879.082514,
                    "p50": 891.720654,
                    "p95": 906.557813,
                    "p99": 906.557813,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2213.104379,
                    "min": 2175.417696,
                    "p50": 2196.4111439999997,
                    "p95": 2213.104379,
                    "p99": 2213.104379,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 801.14657,
                    "min": 782.1771729999999,
                    "p50": 785.787879,
                    "p95": 801.14657,
                    "p99": 801.14657,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 701.661762,
                    "min": 664.3645789999999,
                    "p50": 686.058509,
                    "p95": 701.661762,
                    "p99": 701.661762,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 492.79069499999997,
                    "min": 454.425479,
                    "p50": 468.58554899999996,
                    "p95": 492.79069499999997,
                    "p99": 492.79069499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1556.9508079999998,
                    "min": 1526.495334,
                    "p50": 1551.9164719999999,
                    "p95": 1556.9508079999998,
                    "p99": 1556.9508079999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1234.4380939999999,
                    "min": 1207.459726,
                    "p50": 1220.467832,
                    "p95": 1234.4380939999999,
                    "p99": 1234.4380939999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3306.0626239999997,
                    "min": 3263.743512,
                    "p50": 3280.6332669999997,
                    "p95": 3306.0626239999997,
                    "p99": 3306.0626239999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1013.218277,
                    "min": 992.5829339999999,
                    "p50": 1006.68957,
                    "p95": 1013.218277,
                    "p99": 1013.218277,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10932.591789,
                    "min": 10815.64681,
                    "p50": 10871.079255999999,
                    "p95": 10932.591789,
                    "p99": 10932.591789,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 607.7815499999999,
                    "min": 560.704584,
                    "p50": 573.3317049999999,
                    "p95": 607.7815499999999,
                    "p99": 607.7815499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1456.9757789999999,
                    "min": 1410.465132,
                    "p50": 1429.934667,
                    "p95": 1456.9757789999999,
                    "p99": 1456.9757789999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1342.364503,
                    "min": 1307.1509509999998,
                    "p50": 1325.9810029999999,
                    "p95": 1342.364503,
                    "p99": 1342.364503,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4401.40272,
                    "min": 4333.672004,
                    "p50": 4382.809839,
                    "p95": 4401.40272,
                    "p99": 4401.40272,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 388.00631799999996,
                    "min": 345.32282,
                    "p50": 354.092082,
                    "p95": 388.00631799999996,
                    "p99": 388.00631799999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1658.867738,
                    "min": 1633.682533,
                    "p50": 1654.474015,
                    "p95": 1658.867738,
                    "p99": 1658.867738,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1121.398219,
                    "min": 1095.213559,
                    "p50": 1114.482053,
                    "p95": 1121.398219,
                    "p99": 1121.398219,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5470.106577,
                    "min": 5382.592278,
                    "p50": 5419.320944,
                    "p95": 5470.106577,
                    "p99": 5470.106577,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 683.5575349999999,
                    "min": 645.094028,
                    "p50": 665.9572509999999,
                    "p95": 683.5575349999999,
                    "p99": 683.5575349999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 578.143634,
                    "min": 554.13234,
                    "p50": 567.2491,
                    "p95": 578.143634,
                    "p99": 578.143634,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 850.03289,
                    "min": 827.044978,
                    "p50": 842.066561,
                    "p95": 850.03289,
                    "p99": 850.03289,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 325.319632,
                    "min": 285.991915,
                    "p50": 302.588308,
                    "p95": 325.319632,
                    "p99": 325.319632,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 396.71281899999997,
                    "min": 373.242771,
                    "p50": 385.825669,
                    "p95": 396.71281899999997,
                    "p99": 396.71281899999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 762.211906,
                    "min": 736.659595,
                    "p50": 747.889322,
                    "p95": 762.211906,
                    "p99": 762.211906,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.52646599999997,
                    "min": 462.99710899999997,
                    "p50": 470.274097,
                    "p95": 479.52646599999997,
                    "p99": 479.52646599999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 920.268654,
                    "min": 895.724581,
                    "p50": 913.164276,
                    "p95": 920.268654,
                    "p99": 920.268654,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 309.985056,
                    "min": 280.841272,
                    "p50": 297.752901,
                    "p95": 309.985056,
                    "p99": 309.985056,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 754.2968989999999,
                    "min": 720.779053,
                    "p50": 738.2911879999999,
                    "p95": 754.2968989999999,
                    "p99": 754.2968989999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 579.869011,
                    "min": 546.394325,
                    "p50": 555.408826,
                    "p95": 579.869011,
                    "p99": 579.869011,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 662.6160639999999,
                    "min": 635.541835,
                    "p50": 652.203759,
                    "p95": 662.6160639999999,
                    "p99": 662.6160639999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 834.678423,
                    "min": 814.621497,
                    "p50": 820.799765,
                    "p95": 834.678423,
                    "p99": 834.678423,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 396.48292899999996,
                    "min": 372.16503,
                    "p50": 377.306854,
                    "p95": 396.48292899999996,
                    "p99": 396.48292899999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 490.968444,
                    "min": 456.44943,
                    "p50": 477.285379,
                    "p95": 490.968444,
                    "p99": 490.968444,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 294.15141,
                    "min": 262.717576,
                    "p50": 292.172387,
                    "p95": 294.15141,
                    "p99": 294.15141,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 496.94237599999997,
                    "min": 444.76656699999995,
                    "p50": 451.35171499999996,
                    "p95": 496.94237599999997,
                    "p99": 496.94237599999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 611.534764,
                    "min": 567.970966,
                    "p50": 589.78662,
                    "p95": 611.534764,
                    "p99": 611.534764,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 418.733326,
                    "min": 392.127454,
                    "p50": 409.526146,
                    "p95": 418.733326,
                    "p99": 418.733326,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 792.7600679999999,
                    "min": 765.2701509999999,
                    "p50": 779.7127049999999,
                    "p95": 792.7600679999999,
                    "p99": 792.7600679999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.19852899999998,
                    "min": 198.475471,
                    "p50": 209.910083,
                    "p95": 221.19852899999998,
                    "p99": 221.19852899999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 693.384703,
                    "min": 628.612386,
                    "p50": 659.322366,
                    "p95": 693.384703,
                    "p99": 693.384703,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 556.146316,
                    "min": 499.340331,
                    "p50": 515.6841479999999,
                    "p95": 556.146316,
                    "p99": 556.146316,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.856019,
                    "min": 321.478585,
                    "p50": 330.184943,
                    "p95": 345.856019,
                    "p99": 345.856019,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 748.232037,
                    "min": 696.557054,
                    "p50": 711.041736,
                    "p95": 748.232037,
                    "p99": 748.232037,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 578.3132909999999,
                    "min": 563.944835,
                    "p50": 577.178858,
                    "p95": 578.3132909999999,
                    "p99": 578.3132909999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 764.065238,
                    "min": 746.5936849999999,
                    "p50": 756.8541819999999,
                    "p95": 764.065238,
                    "p99": 764.065238,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.27279299999998,
                    "min": 199.687798,
                    "p50": 207.78713,
                    "p95": 210.27279299999998,
                    "p99": 210.27279299999998,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 415.670062,
                    "min": 381.839276,
                    "p50": 389.899068,
                    "p95": 415.670062,
                    "p99": 415.670062,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 667.391321,
                    "min": 654.5912549999999,
                    "p50": 663.4835049999999,
                    "p95": 667.391321,
                    "p99": 667.391321,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.359156,
                    "min": 294.498208,
                    "p50": 302.524833,
                    "p95": 336.359156,
                    "p99": 336.359156,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 482.250092,
                    "min": 472.634083,
                    "p50": 476.61717899999996,
                    "p95": 482.250092,
                    "p99": 482.250092,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 639.059347,
                    "min": 573.3481939999999,
                    "p50": 620.526606,
                    "p95": 639.059347,
                    "p99": 639.059347,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.419139,
                    "min": 291.929414,
                    "p50": 319.951612,
                    "p95": 352.419139,
                    "p99": 352.419139,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.484376,
                    "min": 169.483822,
                    "p50": 180.579355,
                    "p95": 213.484376,
                    "p99": 213.484376,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 627.636264,
                    "min": 536.284278,
                    "p50": 592.78349,
                    "p95": 627.636264,
                    "p99": 627.636264,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 497.82903799999997,
                    "min": 416.987305,
                    "p50": 448.97697999999997,
                    "p95": 497.82903799999997,
                    "p99": 497.82903799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 354.307309,
                    "min": 328.189177,
                    "p50": 350.266055,
                    "p95": 354.307309,
                    "p99": 354.307309,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 569.1695109999999,
                    "min": 506.647906,
                    "p50": 540.963035,
                    "p95": 569.1695109999999,
                    "p99": 569.1695109999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 290.98571899999996,
                    "min": 224.39015999999998,
                    "p50": 232.854793,
                    "p95": 290.98571899999996,
                    "p99": 290.98571899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.921223,
                    "min": 133.586182,
                    "p50": 154.429612,
                    "p95": 185.921223,
                    "p99": 185.921223,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 805.6821269999999,
                    "min": 753.764094,
                    "p50": 766.926078,
                    "p95": 805.6821269999999,
                    "p99": 805.6821269999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 732.530838,
                    "min": 611.881257,
                    "p50": 649.722484,
                    "p95": 732.530838,
                    "p99": 732.530838,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 901.296382,
                    "min": 808.5784179999999,
                    "p50": 849.893258,
                    "p95": 901.296382,
                    "p99": 901.296382,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 509.29205299999995,
                    "min": 378.27628999999996,
                    "p50": 407.792302,
                    "p95": 509.29205299999995,
                    "p99": 509.29205299999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 518.9761159999999,
                    "min": 484.42175299999997,
                    "p50": 500.16270199999997,
                    "p95": 518.9761159999999,
                    "p99": 518.9761159999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.369467,
                    "min": 256.74763,
                    "p50": 271.16279,
                    "p95": 298.369467,
                    "p99": 298.369467,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 603.060471,
                    "min": 469.01101,
                    "p50": 511.918996,
                    "p95": 603.060471,
                    "p99": 603.060471,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 242.060518,
                    "min": 189.396438,
                    "p50": 212.79532899999998,
                    "p95": 242.060518,
                    "p99": 242.060518,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 621.729884,
                    "min": 577.8538649999999,
                    "p50": 591.845428,
                    "p95": 621.729884,
                    "p99": 621.729884,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 414.90411,
                    "min": 387.785484,
                    "p50": 410.96221399999996,
                    "p95": 414.90411,
                    "p99": 414.90411,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.515307,
                    "min": 153.780331,
                    "p50": 190.47306899999998,
                    "p95": 267.515307,
                    "p99": 267.515307,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 264.219448,
                    "min": 232.236931,
                    "p50": 249.10177299999998,
                    "p95": 264.219448,
                    "p99": 264.219448,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 548.5358689999999,
                    "min": 456.655845,
                    "p50": 489.459611,
                    "p95": 548.5358689999999,
                    "p99": 548.5358689999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 638.3288259999999,
                    "min": 535.730683,
                    "p50": 555.688727,
                    "p95": 638.3288259999999,
                    "p99": 638.3288259999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 848.472993,
                    "min": 756.8454889999999,
                    "p50": 769.133784,
                    "p95": 848.472993,
                    "p99": 848.472993,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 330.308907,
                    "min": 273.584857,
                    "p50": 297.645168,
                    "p95": 330.308907,
                    "p99": 330.308907,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 759.468806,
                    "min": 651.946347,
                    "p50": 705.917019,
                    "p95": 759.468806,
                    "p99": 759.468806,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 340.04087899999996,
                    "min": 310.426884,
                    "p50": 317.294528,
                    "p95": 340.04087899999996,
                    "p99": 340.04087899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 510.67731699999996,
                    "min": 435.484017,
                    "p50": 467.605777,
                    "p95": 510.67731699999996,
                    "p99": 510.67731699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 384.67033399999997,
                    "min": 358.842271,
                    "p50": 374.031793,
                    "p95": 384.67033399999997,
                    "p99": 384.67033399999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.21955,
                    "min": 123.265002,
                    "p50": 133.700762,
                    "p95": 178.21955,
                    "p99": 178.21955,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 270.133174,
                    "min": 217.440687,
                    "p50": 239.98457,
                    "p95": 270.133174,
                    "p99": 270.133174,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 391.093444,
                    "min": 339.575783,
                    "p50": 360.004218,
                    "p95": 391.093444,
                    "p99": 391.093444,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 344.602829,
                    "min": 299.87708,
                    "p50": 325.533669,
                    "p95": 344.602829,
                    "p99": 344.602829,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 810.1669969999999,
                    "min": 734.848704,
                    "p50": 766.3086119999999,
                    "p95": 810.1669969999999,
                    "p99": 810.1669969999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 722.726501,
                    "min": 586.320118,
                    "p50": 640.3029339999999,
                    "p95": 722.726501,
                    "p99": 722.726501,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.98739999999998,
                    "min": 129.318055,
                    "p50": 155.29415,
                    "p95": 173.98739999999998,
                    "p99": 173.98739999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 550.532214,
                    "min": 465.40757399999995,
                    "p50": 483.66775199999995,
                    "p95": 550.532214,
                    "p99": 550.532214,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 477.056246,
                    "min": 423.71598,
                    "p50": 435.32564199999996,
                    "p95": 477.056246,
                    "p99": 477.056246,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 234.603817,
                    "min": 188.300818,
                    "p50": 218.06807999999998,
                    "p95": 234.603817,
                    "p99": 234.603817,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 531.692547,
                    "min": 496.602596,
                    "p50": 506.952067,
                    "p95": 531.692547,
                    "p99": 531.692547,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 482.582366,
                    "min": 374.976378,
                    "p50": 416.05971,
                    "p95": 482.582366,
                    "p99": 482.582366,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 882.7718669999999,
                    "min": 807.956433,
                    "p50": 855.537504,
                    "p95": 882.7718669999999,
                    "p99": 882.7718669999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 659.4064989999999,
                    "min": 564.782061,
                    "p50": 624.9717499999999,
                    "p95": 659.4064989999999,
                    "p99": 659.4064989999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 316.963284,
                    "min": 265.273419,
                    "p50": 272.54929,
                    "p95": 316.963284,
                    "p99": 316.963284,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 619.108087,
                    "min": 537.9890359999999,
                    "p50": 572.7971769999999,
                    "p95": 619.108087,
                    "p99": 619.108087,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 894.823407,
                    "min": 808.3602569999999,
                    "p50": 889.332327,
                    "p95": 894.823407,
                    "p99": 894.823407,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 206.878623,
                    "min": 172.180473,
                    "p50": 188.744865,
                    "p95": 206.878623,
                    "p99": 206.878623,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 428.16605799999996,
                    "min": 374.68650199999996,
                    "p50": 410.412102,
                    "p95": 428.16605799999996,
                    "p99": 428.16605799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 468.120729,
                    "min": 403.967989,
                    "p50": 450.986429,
                    "p95": 468.120729,
                    "p99": 468.120729,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.442993,
                    "min": 471.270291,
                    "p50": 494.455668,
                    "p95": 525.442993,
                    "p99": 525.442993,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 825.64258,
                    "min": 734.443933,
                    "p50": 746.723358,
                    "p95": 825.64258,
                    "p99": 825.64258,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 588.188638,
                    "min": 491.080315,
                    "p50": 519.030789,
                    "p95": 588.188638,
                    "p99": 588.188638,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 580.695474,
                    "min": 517.3916899999999,
                    "p50": 564.857897,
                    "p95": 580.695474,
                    "p99": 580.695474,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.761279,
                    "min": 138.711513,
                    "p50": 163.345268,
                    "p95": 198.761279,
                    "p99": 198.761279,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 289.77183199999996,
                    "min": 253.07717599999998,
                    "p50": 281.775706,
                    "p95": 289.77183199999996,
                    "p99": 289.77183199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 278.330267,
                    "min": 223.560948,
                    "p50": 232.456214,
                    "p95": 278.330267,
                    "p99": 278.330267,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 716.759158,
                    "min": 634.0083999999999,
                    "p50": 657.663687,
                    "p95": 716.759158,
                    "p99": 716.759158,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 384.208332,
                    "min": 339.709881,
                    "p50": 374.41024699999997,
                    "p95": 384.208332,
                    "p99": 384.208332,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 643.67153,
                    "min": 598.4164979999999,
                    "p50": 607.894894,
                    "p95": 643.67153,
                    "p99": 643.67153,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 347.238111,
                    "min": 293.450174,
                    "p50": 320.19116299999996,
                    "p95": 347.238111,
                    "p99": 347.238111,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.56639,
                    "min": 220.03671699999998,
                    "p50": 238.31892599999998,
                    "p95": 270.56639,
                    "p99": 270.56639,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 77.356191,
                    "min": 63.102501,
                    "p50": 67.66181399999999,
                    "p95": 77.356191,
                    "p99": 77.356191,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1196.1206789999999,
                    "min": 1151.203423,
                    "p50": 1163.227427,
                    "p95": 1196.1206789999999,
                    "p99": 1196.1206789999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 291.802108,
                    "min": 246.052323,
                    "p50": 267.372049,
                    "p95": 291.802108,
                    "p99": 291.802108,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 402.10270099999997,
                    "min": 357.80384899999996,
                    "p50": 369.093577,
                    "p95": 402.10270099999997,
                    "p99": 402.10270099999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 155.086263,
                    "min": 134.785654,
                    "p50": 145.904618,
                    "p95": 155.086263,
                    "p99": 155.086263,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 513.204402,
                    "min": 473.923835,
                    "p50": 500.474657,
                    "p95": 513.204402,
                    "p99": 513.204402,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.894219,
                    "min": 84.653993,
                    "p50": 96.48019699999999,
                    "p95": 128.894219,
                    "p99": 128.894219,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 142.84145999999998,
                    "min": 109.088651,
                    "p50": 127.899484,
                    "p95": 142.84145999999998,
                    "p99": 142.84145999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.173878,
                    "min": 52.384406999999996,
                    "p50": 54.598209,
                    "p95": 89.173878,
                    "p99": 89.173878,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.15157399999998,
                    "min": 119.781207,
                    "p50": 128.062073,
                    "p95": 171.15157399999998,
                    "p99": 171.15157399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.212528,
                    "min": 97.01486399999999,
                    "p50": 99.29891599999999,
                    "p95": 140.212528,
                    "p99": 140.212528,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.07317899999998,
                    "min": 143.544938,
                    "p50": 152.59040299999998,
                    "p95": 171.07317899999998,
                    "p99": 171.07317899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 184.947994,
                    "min": 164.439648,
                    "p50": 169.65534399999999,
                    "p95": 184.947994,
                    "p99": 184.947994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 186.986279,
                    "min": 156.295967,
                    "p50": 164.72651,
                    "p95": 186.986279,
                    "p99": 186.986279,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 637.0534819999999,
                    "min": 586.769514,
                    "p50": 593.6405219999999,
                    "p95": 637.0534819999999,
                    "p99": 637.0534819999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.821839,
                    "min": 75.70299,
                    "p50": 88.323059,
                    "p95": 110.821839,
                    "p99": 110.821839,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 205.244473,
                    "min": 178.87630299999998,
                    "p50": 190.806043,
                    "p95": 205.244473,
                    "p99": 205.244473,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 216.654229,
                    "min": 190.045843,
                    "p50": 196.547971,
                    "p95": 216.654229,
                    "p99": 216.654229,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 209.957931,
                    "min": 173.395672,
                    "p50": 193.08974899999998,
                    "p95": 209.957931,
                    "p99": 209.957931,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1267.654112,
                    "min": 1206.910236,
                    "p50": 1215.742409,
                    "p95": 1267.654112,
                    "p99": 1267.654112,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 213.128764,
                    "min": 187.41674999999998,
                    "p50": 198.06811199999999,
                    "p95": 213.128764,
                    "p99": 213.128764,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 146.198338,
                    "min": 124.561827,
                    "p50": 132.805578,
                    "p95": 146.198338,
                    "p99": 146.198338,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 280.04007,
                    "min": 233.81536899999998,
                    "p50": 243.120935,
                    "p95": 280.04007,
                    "p99": 280.04007,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 280.638756,
                    "min": 259.62609,
                    "p50": 269.06028699999996,
                    "p95": 280.638756,
                    "p99": 280.638756,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 116.77686899999999,
                    "min": 77.407465,
                    "p50": 81.04535899999999,
                    "p95": 116.77686899999999,
                    "p99": 116.77686899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.29525999999998,
                    "min": 139.641358,
                    "p50": 147.266574,
                    "p95": 166.29525999999998,
                    "p99": 166.29525999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.89496799999999,
                    "min": 100.765185,
                    "p50": 114.31944399999999,
                    "p95": 117.89496799999999,
                    "p99": 117.89496799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 223.590722,
                    "min": 197.49783499999998,
                    "p50": 206.27928699999998,
                    "p95": 223.590722,
                    "p99": 223.590722,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 172.211791,
                    "min": 159.304072,
                    "p50": 162.092208,
                    "p95": 172.211791,
                    "p99": 172.211791,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 520.1060289999999,
                    "min": 494.41976999999997,
                    "p50": 497.958301,
                    "p95": 520.1060289999999,
                    "p99": 520.1060289999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 388.90455099999997,
                    "min": 375.93233,
                    "p50": 386.144776,
                    "p95": 388.90455099999997,
                    "p99": 388.90455099999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.65044,
                    "min": 149.17003499999998,
                    "p50": 159.49588599999998,
                    "p95": 191.65044,
                    "p99": 191.65044,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 55.998618,
                    "min": 53.791008999999995,
                    "p50": 55.208839999999995,
                    "p95": 55.998618,
                    "p99": 55.998618,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.247973,
                    "min": 111.992477,
                    "p50": 114.840857,
                    "p95": 132.247973,
                    "p99": 132.247973,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.006149,
                    "min": 67.042213,
                    "p50": 70.13373399999999,
                    "p95": 78.006149,
                    "p99": 78.006149,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.307592,
                    "min": 90.18723,
                    "p50": 92.475692,
                    "p95": 128.307592,
                    "p99": 128.307592,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 640.8990749999999,
                    "min": 610.326916,
                    "p50": 619.2708799999999,
                    "p95": 640.8990749999999,
                    "p99": 640.8990749999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.594186,
                    "min": 105.434668,
                    "p50": 110.71798899999999,
                    "p95": 134.594186,
                    "p99": 134.594186,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 209.137777,
                    "min": 182.64218699999998,
                    "p50": 195.975314,
                    "p95": 209.137777,
                    "p99": 209.137777,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 183.22038,
                    "min": 157.5433,
                    "p50": 166.34838299999998,
                    "p95": 183.22038,
                    "p99": 183.22038,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.92463999999998,
                    "min": 93.158765,
                    "p50": 107.07538,
                    "p95": 132.92463999999998,
                    "p99": 132.92463999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 310.136732,
                    "min": 276.33663,
                    "p50": 286.528846,
                    "p95": 310.136732,
                    "p99": 310.136732,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 77.505995,
                    "min": 67.168196,
                    "p50": 68.489436,
                    "p95": 77.505995,
                    "p99": 77.505995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.48873799999998,
                    "min": 117.894178,
                    "p50": 129.731953,
                    "p95": 149.48873799999998,
                    "p99": 149.48873799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 184.052369,
                    "min": 145.60036399999998,
                    "p50": 155.687127,
                    "p95": 184.052369,
                    "p99": 184.052369,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.567579,
                    "min": 210.57442999999998,
                    "p50": 226.991862,
                    "p95": 251.567579,
                    "p99": 251.567579,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 427.971181,
                    "min": 401.04407399999997,
                    "p50": 413.462588,
                    "p95": 427.971181,
                    "p99": 427.971181,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 196.848673,
                    "min": 171.408908,
                    "p50": 183.019462,
                    "p95": 196.848673,
                    "p99": 196.848673,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 179.66727799999998,
                    "min": 131.650015,
                    "p50": 156.963329,
                    "p95": 179.66727799999998,
                    "p99": 179.66727799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 99.530261,
                    "min": 79.41663299999999,
                    "p50": 83.313806,
                    "p95": 99.530261,
                    "p99": 99.530261,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 237.22877799999998,
                    "min": 195.335408,
                    "p50": 205.060644,
                    "p95": 237.22877799999998,
                    "p99": 237.22877799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 256.594557,
                    "min": 235.81412999999998,
                    "p50": 247.675893,
                    "p95": 256.594557,
                    "p99": 256.594557,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 562.285098,
                    "min": 526.312423,
                    "p50": 531.909586,
                    "p95": 562.285098,
                    "p99": 562.285098,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 700.267512,
                    "min": 647.6111189999999,
                    "p50": 664.948837,
                    "p95": 700.267512,
                    "p99": 700.267512,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1329.978443,
                    "min": 1283.140328,
                    "p50": 1293.4360769999998,
                    "p95": 1329.978443,
                    "p99": 1329.978443,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.885774999999995,
                    "min": 55.311322999999994,
                    "p50": 56.453928,
                    "p95": 60.885774999999995,
                    "p99": 60.885774999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 641.294905,
                    "min": 618.968124,
                    "p50": 627.487841,
                    "p95": 641.294905,
                    "p99": 641.294905,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 195.923293,
                    "min": 178.46179999999998,
                    "p50": 185.20038699999998,
                    "p95": 195.923293,
                    "p99": 195.923293,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 159.00428399999998,
                    "min": 140.12699999999998,
                    "p50": 148.50360899999998,
                    "p95": 159.00428399999998,
                    "p99": 159.00428399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 228.83176,
                    "min": 200.612598,
                    "p50": 214.152109,
                    "p95": 228.83176,
                    "p99": 228.83176,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 132.305556,
                    "min": 102.542226,
                    "p50": 114.307307,
                    "p95": 132.305556,
                    "p99": 132.305556,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.012254,
                    "min": 79.61313299999999,
                    "p50": 91.759487,
                    "p95": 114.012254,
                    "p99": 114.012254,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 71.145917,
                    "min": 52.857366999999996,
                    "p50": 54.782972,
                    "p95": 71.145917,
                    "p99": 71.145917,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 186.649157,
                    "min": 151.378326,
                    "p50": 160.506101,
                    "p95": 186.649157,
                    "p99": 186.649157,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 241.64338999999998,
                    "min": 228.32664499999998,
                    "p50": 238.117055,
                    "p95": 241.64338999999998,
                    "p99": 241.64338999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 115.66037299999999,
                    "min": 90.564549,
                    "p50": 95.399334,
                    "p95": 115.66037299999999,
                    "p99": 115.66037299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 166.40492999999998,
                    "min": 112.244588,
                    "p50": 129.33947,
                    "p95": 166.40492999999998,
                    "p99": 166.40492999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 209.701993,
                    "min": 188.07115299999998,
                    "p50": 195.77465099999998,
                    "p95": 209.701993,
                    "p99": 209.701993,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 542.071158,
                    "min": 499.576057,
                    "p50": 513.084393,
                    "p95": 542.071158,
                    "p99": 542.071158,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1278.95148,
                    "min": 1225.8968969999999,
                    "p50": 1246.699449,
                    "p95": 1278.95148,
                    "p99": 1278.95148,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.33451399999998,
                    "min": 128.741793,
                    "p50": 140.473111,
                    "p95": 156.33451399999998,
                    "p99": 156.33451399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 284.324072,
                    "min": 259.63379,
                    "p50": 268.595815,
                    "p95": 284.324072,
                    "p99": 284.324072,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 197.79010399999999,
                    "min": 163.95412199999998,
                    "p50": 173.595786,
                    "p95": 197.79010399999999,
                    "p99": 197.79010399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 70.195219,
                    "min": 65.452028,
                    "p50": 67.57878699999999,
                    "p95": 70.195219,
                    "p99": 70.195219,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 410.11149,
                    "min": 380.62105499999996,
                    "p50": 389.214347,
                    "p95": 410.11149,
                    "p99": 410.11149,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 240.56609899999998,
                    "min": 202.636677,
                    "p50": 211.610837,
                    "p95": 240.56609899999998,
                    "p99": 240.56609899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 188.388108,
                    "min": 156.637916,
                    "p50": 166.90560399999998,
                    "p95": 188.388108,
                    "p99": 188.388108,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 265.206339,
                    "min": 242.92841199999998,
                    "p50": 255.36183699999998,
                    "p95": 265.206339,
                    "p99": 265.206339,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1008.297291,
                    "min": 949.0150239999999,
                    "p50": 981.061254,
                    "p95": 1008.297291,
                    "p99": 1008.297291,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 675.6274,
                    "min": 639.34428,
                    "p50": 647.197533,
                    "p95": 675.6274,
                    "p99": 675.6274,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 780.155777,
                    "min": 709.780902,
                    "p50": 725.674843,
                    "p95": 780.155777,
                    "p99": 780.155777,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 858.610137,
                    "min": 797.146354,
                    "p50": 831.7857859999999,
                    "p95": 858.610137,
                    "p99": 858.610137,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 476.562795,
                    "min": 418.467692,
                    "p50": 441.12798,
                    "p95": 476.562795,
                    "p99": 476.562795,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 328.103337,
                    "min": 292.855751,
                    "p50": 301.515538,
                    "p95": 328.103337,
                    "p99": 328.103337,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 424.296356,
                    "min": 398.412618,
                    "p50": 405.415861,
                    "p95": 424.296356,
                    "p99": 424.296356,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 384.014788,
                    "min": 340.13125199999996,
                    "p50": 360.88492399999996,
                    "p95": 384.014788,
                    "p99": 384.014788,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 516.5981929999999,
                    "min": 480.21637599999997,
                    "p50": 498.39988999999997,
                    "p95": 516.5981929999999,
                    "p99": 516.5981929999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 565.713905,
                    "min": 530.516665,
                    "p50": 549.939361,
                    "p95": 565.713905,
                    "p99": 565.713905,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 707.7395419999999,
                    "min": 658.4198829999999,
                    "p50": 689.415629,
                    "p95": 707.7395419999999,
                    "p99": 707.7395419999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 597.3255849999999,
                    "min": 564.310839,
                    "p50": 571.757244,
                    "p95": 597.3255849999999,
                    "p99": 597.3255849999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 579.413199,
                    "min": 533.49,
                    "p50": 557.311248,
                    "p95": 579.413199,
                    "p99": 579.413199,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 665.129902,
                    "min": 615.134229,
                    "p50": 643.8602139999999,
                    "p95": 665.129902,
                    "p99": 665.129902,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 725.317942,
                    "min": 672.9282569999999,
                    "p50": 691.331242,
                    "p95": 725.317942,
                    "p99": 725.317942,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 238.85857299999998,
                    "min": 197.99374799999998,
                    "p50": 212.524002,
                    "p95": 238.85857299999998,
                    "p99": 238.85857299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 287.888292,
                    "min": 243.81618699999999,
                    "p50": 262.188714,
                    "p95": 287.888292,
                    "p99": 287.888292,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 387.428254,
                    "min": 342.785436,
                    "p50": 353.832443,
                    "p95": 387.428254,
                    "p99": 387.428254,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 317.525557,
                    "min": 296.39615499999996,
                    "p50": 301.022524,
                    "p95": 317.525557,
                    "p99": 317.525557,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 533.462896,
                    "min": 495.351587,
                    "p50": 503.642435,
                    "p95": 533.462896,
                    "p99": 533.462896,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 194.558347,
                    "min": 159.674344,
                    "p50": 168.89415,
                    "p95": 194.558347,
                    "p99": 194.558347,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 421.718053,
                    "min": 392.441155,
                    "p50": 409.04051999999996,
                    "p95": 421.718053,
                    "p99": 421.718053,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 883.292373,
                    "min": 839.102816,
                    "p50": 849.046937,
                    "p95": 883.292373,
                    "p99": 883.292373,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1008.578867,
                    "min": 969.078445,
                    "p50": 979.9486619999999,
                    "p95": 1008.578867,
                    "p99": 1008.578867,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 747.7962259999999,
                    "min": 719.9644169999999,
                    "p50": 733.100328,
                    "p95": 747.7962259999999,
                    "p99": 747.7962259999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 501.710407,
                    "min": 425.81143,
                    "p50": 440.09302299999996,
                    "p95": 501.710407,
                    "p99": 501.710407,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 607.5859429999999,
                    "min": 575.854422,
                    "p50": 596.689032,
                    "p95": 607.5859429999999,
                    "p99": 607.5859429999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 703.557027,
                    "min": 668.361933,
                    "p50": 687.8219439999999,
                    "p95": 703.557027,
                    "p99": 703.557027,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 636.219292,
                    "min": 587.109708,
                    "p50": 616.94792,
                    "p95": 636.219292,
                    "p99": 636.219292,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 753.624071,
                    "min": 708.6260189999999,
                    "p50": 728.375778,
                    "p95": 753.624071,
                    "p99": 753.624071,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 856.062784,
                    "min": 808.421916,
                    "p50": 827.399821,
                    "p95": 856.062784,
                    "p99": 856.062784,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 602.2956469999999,
                    "min": 559.00581,
                    "p50": 590.897704,
                    "p95": 602.2956469999999,
                    "p99": 602.2956469999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 541.075124,
                    "min": 520.8120749999999,
                    "p50": 536.14877,
                    "p95": 541.075124,
                    "p99": 541.075124,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 189.44979899999998,
                    "min": 157.419196,
                    "p50": 164.293976,
                    "p95": 189.44979899999998,
                    "p99": 189.44979899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 957.293822,
                    "min": 926.3273429999999,
                    "p50": 943.147789,
                    "p95": 957.293822,
                    "p99": 957.293822,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 486.79677799999996,
                    "min": 463.14379399999996,
                    "p50": 480.7611,
                    "p95": 486.79677799999996,
                    "p99": 486.79677799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 463.14476099999996,
                    "min": 425.309717,
                    "p50": 444.849923,
                    "p95": 463.14476099999996,
                    "p99": 463.14476099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 312.485049,
                    "min": 280.540307,
                    "p50": 292.576755,
                    "p95": 312.485049,
                    "p99": 312.485049,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 406.478541,
                    "min": 373.884836,
                    "p50": 389.71662,
                    "p95": 406.478541,
                    "p99": 406.478541,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 365.90506,
                    "min": 343.61987899999997,
                    "p50": 348.47545299999996,
                    "p95": 365.90506,
                    "p99": 365.90506,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 239.029775,
                    "min": 197.476383,
                    "p50": 204.558776,
                    "p95": 239.029775,
                    "p99": 239.029775,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.78941299999997,
                    "min": 245.02167999999998,
                    "p50": 249.950957,
                    "p95": 261.78941299999997,
                    "p99": 261.78941299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 709.418428,
                    "min": 665.69166,
                    "p50": 691.220363,
                    "p95": 709.418428,
                    "p99": 709.418428,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 723.716226,
                    "min": 679.539215,
                    "p50": 703.7385949999999,
                    "p95": 723.716226,
                    "p99": 723.716226,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 596.608709,
                    "min": 563.0479,
                    "p50": 576.495147,
                    "p95": 596.608709,
                    "p99": 596.608709,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 840.475004,
                    "min": 810.354785,
                    "p50": 835.994965,
                    "p95": 840.475004,
                    "p99": 840.475004,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 216.486885,
                    "min": 194.14265999999998,
                    "p50": 204.907638,
                    "p95": 216.486885,
                    "p99": 216.486885,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 553.059888,
                    "min": 520.4022659999999,
                    "p50": 542.382554,
                    "p95": 553.059888,
                    "p99": 553.059888,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 987.933495,
                    "min": 938.4373459999999,
                    "p50": 955.663371,
                    "p95": 987.933495,
                    "p99": 987.933495,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.533329,
                    "min": 279.87413,
                    "p50": 297.14105,
                    "p95": 298.533329,
                    "p99": 298.533329,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 419.721858,
                    "min": 383.367476,
                    "p50": 396.076357,
                    "p95": 419.721858,
                    "p99": 419.721858,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 370.44525,
                    "min": 335.435672,
                    "p50": 357.62731399999996,
                    "p95": 370.44525,
                    "p99": 370.44525,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 264.01559199999997,
                    "min": 248.231921,
                    "p50": 254.75072799999998,
                    "p95": 264.01559199999997,
                    "p99": 264.01559199999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 464.02732599999996,
                    "min": 418.920998,
                    "p50": 438.550506,
                    "p95": 464.02732599999996,
                    "p99": 464.02732599999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 541.340769,
                    "min": 472.618719,
                    "p50": 502.90833299999997,
                    "p95": 541.340769,
                    "p99": 541.340769,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 190.215073,
                    "min": 151.59768599999998,
                    "p50": 167.265909,
                    "p95": 190.215073,
                    "p99": 190.215073,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 700.290022,
                    "min": 604.905399,
                    "p50": 626.944659,
                    "p95": 700.290022,
                    "p99": 700.290022,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1712.5635009999999,
                    "min": 1653.129038,
                    "p50": 1677.929418,
                    "p95": 1712.5635009999999,
                    "p99": 1712.5635009999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1031.359809,
                    "min": 999.0244759999999,
                    "p50": 1014.647216,
                    "p95": 1031.359809,
                    "p99": 1031.359809,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1246.938712,
                    "min": 1210.138174,
                    "p50": 1225.540998,
                    "p95": 1246.938712,
                    "p99": 1246.938712,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 796.127533,
                    "min": 781.2350799999999,
                    "p50": 793.4512649999999,
                    "p95": 796.127533,
                    "p99": 796.127533,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 709.6949529999999,
                    "min": 678.0071039999999,
                    "p50": 686.731425,
                    "p95": 709.6949529999999,
                    "p99": 709.6949529999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1126.836272,
                    "min": 1102.004892,
                    "p50": 1120.6602759999998,
                    "p95": 1126.836272,
                    "p99": 1126.836272,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 378.116,
                    "min": 347.03164799999996,
                    "p50": 357.71022999999997,
                    "p95": 378.116,
                    "p99": 378.116,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 497.132888,
                    "min": 455.91747799999996,
                    "p50": 467.28236999999996,
                    "p95": 497.132888,
                    "p99": 497.132888,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 935.238764,
                    "min": 894.5280829999999,
                    "p50": 908.8159509999999,
                    "p95": 935.238764,
                    "p99": 935.238764,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 587.123387,
                    "min": 562.571123,
                    "p50": 572.924816,
                    "p95": 587.123387,
                    "p99": 587.123387,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2233.967122,
                    "min": 2188.670479,
                    "p50": 2215.606064,
                    "p95": 2233.967122,
                    "p99": 2233.967122,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1356.50769,
                    "min": 1324.6488319999999,
                    "p50": 1341.1955719999999,
                    "p95": 1356.50769,
                    "p99": 1356.50769,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1964.963075,
                    "min": 1915.148955,
                    "p50": 1951.0120949999998,
                    "p95": 1964.963075,
                    "p99": 1964.963075,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1567.485941,
                    "min": 1540.587315,
                    "p50": 1553.185301,
                    "p95": 1567.485941,
                    "p99": 1567.485941,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1464.113799,
                    "min": 1431.992276,
                    "p50": 1457.176391,
                    "p95": 1464.113799,
                    "p99": 1464.113799,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3302.1089039999997,
                    "min": 3268.848321,
                    "p50": 3288.0162809999997,
                    "p95": 3302.1089039999997,
                    "p99": 3302.1089039999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1839.875628,
                    "min": 1808.5278489999998,
                    "p50": 1829.848591,
                    "p95": 1839.875628,
                    "p99": 1839.875628,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1368.6464369999999,
                    "min": 1334.052533,
                    "p50": 1355.7412769999999,
                    "p95": 1368.6464369999999,
                    "p99": 1368.6464369999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1614.369144,
                    "min": 1576.904585,
                    "p50": 1603.413707,
                    "p95": 1614.369144,
                    "p99": 1614.369144,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2442.2478579999997,
                    "min": 2405.676852,
                    "p50": 2432.192094,
                    "p95": 2442.2478579999997,
                    "p99": 2442.2478579999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2159.012711,
                    "min": 2095.711794,
                    "p50": 2132.6295379999997,
                    "p95": 2159.012711,
                    "p99": 2159.012711,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1518.256206,
                    "min": 1471.5563009999998,
                    "p50": 1486.268954,
                    "p95": 1518.256206,
                    "p99": 1518.256206,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 389.321938,
                    "min": 379.21540999999996,
                    "p50": 384.50699499999996,
                    "p95": 389.321938,
                    "p99": 389.321938,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 522.3537709999999,
                    "min": 498.275375,
                    "p50": 516.12439,
                    "p95": 522.3537709999999,
                    "p99": 522.3537709999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1297.479159,
                    "min": 1210.333426,
                    "p50": 1241.052756,
                    "p95": 1297.479159,
                    "p99": 1297.479159,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 771.2396659999999,
                    "min": 733.7672249999999,
                    "p50": 753.022085,
                    "p95": 771.2396659999999,
                    "p99": 771.2396659999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1145.139293,
                    "min": 1093.615435,
                    "p50": 1107.418716,
                    "p95": 1145.139293,
                    "p99": 1145.139293,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 644.7975359999999,
                    "min": 618.678709,
                    "p50": 624.748954,
                    "p95": 644.7975359999999,
                    "p99": 644.7975359999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1738.316906,
                    "min": 1688.7928689999999,
                    "p50": 1711.406564,
                    "p95": 1738.316906,
                    "p99": 1738.316906,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1010.1908679999999,
                    "min": 983.850887,
                    "p50": 991.4738179999999,
                    "p95": 1010.1908679999999,
                    "p99": 1010.1908679999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 878.683871,
                    "min": 852.998805,
                    "p50": 870.963032,
                    "p95": 878.683871,
                    "p99": 878.683871,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1385.367407,
                    "min": 1319.904807,
                    "p50": 1348.0490949999999,
                    "p95": 1385.367407,
                    "p99": 1385.367407,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 583.018993,
                    "min": 544.58912,
                    "p50": 554.592142,
                    "p95": 583.018993,
                    "p99": 583.018993,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1100.924973,
                    "min": 1071.465319,
                    "p50": 1095.2200229999999,
                    "p95": 1100.924973,
                    "p99": 1100.924973,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 970.276542,
                    "min": 935.9499619999999,
                    "p50": 958.0411369999999,
                    "p95": 970.276542,
                    "p99": 970.276542,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 839.667392,
                    "min": 797.574843,
                    "p50": 814.141493,
                    "p95": 839.667392,
                    "p99": 839.667392,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2036.690654,
                    "min": 1988.197667,
                    "p50": 2006.783313,
                    "p95": 2036.690654,
                    "p99": 2036.690654,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1749.763823,
                    "min": 1707.071627,
                    "p50": 1733.2411929999998,
                    "p95": 1749.763823,
                    "p99": 1749.763823,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2680.080133,
                    "min": 2609.423164,
                    "p50": 2637.431693,
                    "p95": 2680.080133,
                    "p99": 2680.080133,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3977.2372189999996,
                    "min": 3916.6213719999996,
                    "p50": 3938.638946,
                    "p95": 3977.2372189999996,
                    "p99": 3977.2372189999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1611.778491,
                    "min": 1581.098397,
                    "p50": 1606.996054,
                    "p95": 1611.778491,
                    "p99": 1611.778491,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 714.942853,
                    "min": 677.78964,
                    "p50": 689.315716,
                    "p95": 714.942853,
                    "p99": 714.942853,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1490.68039,
                    "min": 1445.951871,
                    "p50": 1467.768904,
                    "p95": 1490.68039,
                    "p99": 1490.68039,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 455.214678,
                    "min": 423.189195,
                    "p50": 425.673182,
                    "p95": 455.214678,
                    "p99": 455.214678,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1895.578634,
                    "min": 1837.515958,
                    "p50": 1874.1821049999999,
                    "p95": 1895.578634,
                    "p99": 1895.578634,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2385.631951,
                    "min": 2318.510049,
                    "p50": 2330.215151,
                    "p95": 2385.631951,
                    "p99": 2385.631951,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1228.876751,
                    "min": 1181.794164,
                    "p50": 1207.17913,
                    "p95": 1228.876751,
                    "p99": 1228.876751,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3372.838242,
                    "min": 3335.397763,
                    "p50": 3367.155069,
                    "p95": 3372.838242,
                    "p99": 3372.838242,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 799.1752429999999,
                    "min": 765.658468,
                    "p50": 779.0013749999999,
                    "p95": 799.1752429999999,
                    "p99": 799.1752429999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 551.682151,
                    "min": 519.227436,
                    "p50": 534.949199,
                    "p95": 551.682151,
                    "p99": 551.682151,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1047.613784,
                    "min": 1013.677197,
                    "p50": 1031.374003,
                    "p95": 1047.613784,
                    "p99": 1047.613784,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 396.510604,
                    "min": 352.056295,
                    "p50": 362.3179,
                    "p95": 396.510604,
                    "p99": 396.510604,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1721.5427399999999,
                    "min": 1674.931688,
                    "p50": 1696.292305,
                    "p95": 1721.5427399999999,
                    "p99": 1721.5427399999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1292.128074,
                    "min": 1260.442931,
                    "p50": 1280.321019,
                    "p95": 1292.128074,
                    "p99": 1292.128074,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1224.993105,
                    "min": 1180.256228,
                    "p50": 1192.27145,
                    "p95": 1224.993105,
                    "p99": 1224.993105,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 294.342633,
                    "min": 270.22499,
                    "p50": 278.903983,
                    "p95": 294.342633,
                    "p99": 294.342633,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 465.811913,
                    "min": 436.34178499999996,
                    "p50": 441.539379,
                    "p95": 465.811913,
                    "p99": 465.811913,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1514.248451,
                    "min": 1468.854317,
                    "p50": 1486.076718,
                    "p95": 1514.248451,
                    "p99": 1514.248451,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 725.212799,
                    "min": 682.565149,
                    "p50": 700.044809,
                    "p95": 725.212799,
                    "p99": 725.212799,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 980.904319,
                    "min": 932.263015,
                    "p50": 946.644824,
                    "p95": 980.904319,
                    "p99": 980.904319,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 625.521698,
                    "min": 602.8950219999999,
                    "p50": 613.2892519999999,
                    "p95": 625.521698,
                    "p99": 625.521698,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1242.4799249999999,
                    "min": 1090.965445,
                    "p50": 1130.762579,
                    "p95": 1242.4799249999999,
                    "p99": 1242.4799249999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2561.963617,
                    "min": 2505.262218,
                    "p50": 2525.373955,
                    "p95": 2561.963617,
                    "p99": 2561.963617,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 4227.301554,
                    "min": 4162.837122,
                    "p50": 4208.159665,
                    "p95": 4227.301554,
                    "p99": 4227.301554,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 888.601594,
                    "min": 850.722031,
                    "p50": 871.510812,
                    "p95": 888.601594,
                    "p99": 888.601594,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 448.321075,
                    "min": 413.10000499999995,
                    "p50": 423.39622499999996,
                    "p95": 448.321075,
                    "p99": 448.321075,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1165.1537349999999,
                    "min": 1123.81772,
                    "p50": 1153.4731239999999,
                    "p95": 1165.1537349999999,
                    "p99": 1165.1537349999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1739.8945039999999,
                    "min": 1682.5722879999998,
                    "p50": 1710.428884,
                    "p95": 1739.8945039999999,
                    "p99": 1739.8945039999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2830.886457,
                    "min": 2789.666808,
                    "p50": 2818.348971,
                    "p95": 2830.886457,
                    "p99": 2830.886457,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2299.862601,
                    "min": 2243.587796,
                    "p50": 2268.799046,
                    "p95": 2299.862601,
                    "p99": 2299.862601,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 487.496835,
                    "min": 463.586959,
                    "p50": 478.086027,
                    "p95": 487.496835,
                    "p99": 487.496835,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1020.752039,
                    "min": 989.668091,
                    "p50": 1006.281027,
                    "p95": 1020.752039,
                    "p99": 1020.752039,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 388.323262,
                    "min": 354.811941,
                    "p50": 365.86884299999997,
                    "p95": 388.323262,
                    "p99": 388.323262,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 840.386841,
                    "min": 803.119113,
                    "p50": 822.5516799999999,
                    "p95": 840.386841,
                    "p99": 840.386841,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 876.2415649999999,
                    "min": 859.384287,
                    "p50": 868.580167,
                    "p95": 876.2415649999999,
                    "p99": 876.2415649999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 276.18516,
                    "min": 240.12747199999998,
                    "p50": 254.18277999999998,
                    "p95": 276.18516,
                    "p99": 276.18516,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 672.497673,
                    "min": 633.83845,
                    "p50": 646.891353,
                    "p95": 672.497673,
                    "p99": 672.497673,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 725.437986,
                    "min": 682.993447,
                    "p50": 708.756391,
                    "p95": 725.437986,
                    "p99": 725.437986,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 333.599509,
                    "min": 302.637288,
                    "p50": 309.03713799999997,
                    "p95": 333.599509,
                    "p99": 333.599509,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.49737399999998,
                    "min": 190.01011699999998,
                    "p50": 194.611416,
                    "p95": 210.49737399999998,
                    "p99": 210.49737399999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 801.5170079999999,
                    "min": 741.7673139999999,
                    "p50": 757.22848,
                    "p95": 801.5170079999999,
                    "p99": 801.5170079999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 621.561302,
                    "min": 574.448034,
                    "p50": 580.765598,
                    "p95": 621.561302,
                    "p99": 621.561302,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 536.310566,
                    "min": 523.0862099999999,
                    "p50": 532.738104,
                    "p95": 536.310566,
                    "p99": 536.310566,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 807.3702099999999,
                    "min": 748.0632019999999,
                    "p50": 767.3972229999999,
                    "p95": 807.3702099999999,
                    "p99": 807.3702099999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1191.1601269999999,
                    "min": 1168.363077,
                    "p50": 1178.221359,
                    "p95": 1191.1601269999999,
                    "p99": 1191.1601269999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1024.436498,
                    "min": 995.180042,
                    "p50": 1007.424187,
                    "p95": 1024.436498,
                    "p99": 1024.436498,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 304.74557999999996,
                    "min": 263.133825,
                    "p50": 271.868021,
                    "p95": 304.74557999999996,
                    "p99": 304.74557999999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1684.786111,
                    "min": 1645.580405,
                    "p50": 1676.8224229999998,
                    "p95": 1684.786111,
                    "p99": 1684.786111,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 700.7871309999999,
                    "min": 667.643426,
                    "p50": 682.084897,
                    "p95": 700.7871309999999,
                    "p99": 700.7871309999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 464.913677,
                    "min": 432.198553,
                    "p50": 443.402241,
                    "p95": 464.913677,
                    "p99": 464.913677,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 937.546662,
                    "min": 915.473533,
                    "p50": 927.1457379999999,
                    "p95": 937.546662,
                    "p99": 937.546662,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 520.661205,
                    "min": 509.113811,
                    "p50": 514.3668749999999,
                    "p95": 520.661205,
                    "p99": 520.661205,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1472.3202219999998,
                    "min": 1439.0479269999998,
                    "p50": 1466.415152,
                    "p95": 1472.3202219999998,
                    "p99": 1472.3202219999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 360.68505899999997,
                    "min": 347.074103,
                    "p50": 353.80913999999996,
                    "p95": 360.68505899999997,
                    "p99": 360.68505899999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1282.294932,
                    "min": 1237.20414,
                    "p50": 1257.698179,
                    "p95": 1282.294932,
                    "p99": 1282.294932,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 619.757932,
                    "min": 589.9160539999999,
                    "p50": 605.9124909999999,
                    "p95": 619.757932,
                    "p99": 619.757932,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1117.408897,
                    "min": 1069.742928,
                    "p50": 1089.364249,
                    "p95": 1117.408897,
                    "p99": 1117.408897,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 862.8294209999999,
                    "min": 828.328057,
                    "p50": 843.2510219999999,
                    "p95": 862.8294209999999,
                    "p99": 862.8294209999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 318.591967,
                    "min": 297.620616,
                    "p50": 308.213062,
                    "p95": 318.591967,
                    "p99": 318.591967,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 896.998804,
                    "min": 850.060752,
                    "p50": 876.746056,
                    "p95": 896.998804,
                    "p99": 896.998804,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 577.198629,
                    "min": 527.678122,
                    "p50": 540.477143,
                    "p95": 577.198629,
                    "p99": 577.198629,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 817.220481,
                    "min": 744.746005,
                    "p50": 760.3311229999999,
                    "p95": 817.220481,
                    "p99": 817.220481,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1156.687222,
                    "min": 1127.34054,
                    "p50": 1140.91735,
                    "p95": 1156.687222,
                    "p99": 1156.687222,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 662.626522,
                    "min": 633.650749,
                    "p50": 646.805832,
                    "p95": 662.626522,
                    "p99": 662.626522,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 839.111053,
                    "min": 795.412659,
                    "p50": 822.9876969999999,
                    "p95": 839.111053,
                    "p99": 839.111053,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1826.577036,
                    "min": 1700.4295479999998,
                    "p50": 1712.416964,
                    "p95": 1826.577036,
                    "p99": 1826.577036,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 493.83525699999996,
                    "min": 405.41826799999996,
                    "p50": 418.49819299999996,
                    "p95": 493.83525699999996,
                    "p99": 493.83525699999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 225.289707,
                    "min": 186.69683999999998,
                    "p50": 197.108351,
                    "p95": 225.289707,
                    "p99": 225.289707,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 608.02987,
                    "min": 574.48529,
                    "p50": 592.260725,
                    "p95": 608.02987,
                    "p99": 608.02987,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 385.216431,
                    "min": 357.22700299999997,
                    "p50": 374.295996,
                    "p95": 385.216431,
                    "p99": 385.216431,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 266.703924,
                    "min": 241.022179,
                    "p50": 259.425788,
                    "p95": 266.703924,
                    "p99": 266.703924,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 506.521299,
                    "min": 465.154246,
                    "p50": 474.155147,
                    "p95": 506.521299,
                    "p99": 506.521299,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1029.266283,
                    "min": 986.443594,
                    "p50": 1006.8599379999999,
                    "p95": 1029.266283,
                    "p99": 1029.266283,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 747.5131379999999,
                    "min": 690.7278729999999,
                    "p50": 701.656788,
                    "p95": 747.5131379999999,
                    "p99": 747.5131379999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 820.37968,
                    "min": 762.516247,
                    "p50": 779.804956,
                    "p95": 820.37968,
                    "p99": 820.37968,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 925.762613,
                    "min": 892.3437799999999,
                    "p50": 903.225453,
                    "p95": 925.762613,
                    "p99": 925.762613,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1001.5328519999999,
                    "min": 956.551172,
                    "p50": 972.743395,
                    "p95": 1001.5328519999999,
                    "p99": 1001.5328519999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 632.732595,
                    "min": 575.7379,
                    "p50": 593.178269,
                    "p95": 632.732595,
                    "p99": 632.732595,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 421.201974,
                    "min": 390.09550099999996,
                    "p50": 399.38530099999997,
                    "p95": 421.201974,
                    "p99": 421.201974,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 559.677208,
                    "min": 515.922475,
                    "p50": 526.033829,
                    "p95": 559.677208,
                    "p99": 559.677208,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.760838,
                    "min": 266.772041,
                    "p50": 278.800394,
                    "p95": 302.760838,
                    "p99": 302.760838,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 359.157013,
                    "min": 331.15619799999996,
                    "p50": 339.712359,
                    "p95": 359.157013,
                    "p99": 359.157013,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 657.4683679999999,
                    "min": 637.37231,
                    "p50": 647.414856,
                    "p95": 657.4683679999999,
                    "p99": 657.4683679999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 468.985977,
                    "min": 455.493385,
                    "p50": 463.921201,
                    "p95": 468.985977,
                    "p99": 468.985977,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1296.8910309999999,
                    "min": 1258.743661,
                    "p50": 1278.0621429999999,
                    "p95": 1296.8910309999999,
                    "p99": 1296.8910309999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 742.622026,
                    "min": 703.7258449999999,
                    "p50": 718.547598,
                    "p95": 742.622026,
                    "p99": 742.622026,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1144.410944,
                    "min": 1098.490967,
                    "p50": 1119.31334,
                    "p95": 1144.410944,
                    "p99": 1144.410944,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.98048699999998,
                    "min": 205.777191,
                    "p50": 214.653008,
                    "p95": 226.98048699999998,
                    "p99": 226.98048699999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 860.615608,
                    "min": 836.600831,
                    "p50": 843.685528,
                    "p95": 860.615608,
                    "p99": 860.615608,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 734.164367,
                    "min": 698.934683,
                    "p50": 707.91165,
                    "p95": 734.164367,
                    "p99": 734.164367,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 381.962116,
                    "min": 355.510972,
                    "p50": 372.19800299999997,
                    "p95": 381.962116,
                    "p99": 381.962116,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.9853,
                    "min": 244.22777599999998,
                    "p50": 253.76197,
                    "p95": 286.9853,
                    "p99": 286.9853,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 225.78659399999998,
                    "min": 187.563969,
                    "p50": 208.65338799999998,
                    "p95": 225.78659399999998,
                    "p99": 225.78659399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 783.122879,
                    "min": 757.7986,
                    "p50": 763.347574,
                    "p95": 783.122879,
                    "p99": 783.122879,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 916.0699649999999,
                    "min": 860.1752749999999,
                    "p50": 872.557548,
                    "p95": 916.0699649999999,
                    "p99": 916.0699649999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 564.183498,
                    "min": 528.9657149999999,
                    "p50": 537.500828,
                    "p95": 564.183498,
                    "p99": 564.183498,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1159.6953819999999,
                    "min": 1138.3965369999999,
                    "p50": 1149.731651,
                    "p95": 1159.6953819999999,
                    "p99": 1159.6953819999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 605.376817,
                    "min": 584.716283,
                    "p50": 594.782235,
                    "p95": 605.376817,
                    "p99": 605.376817,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 440.856413,
                    "min": 412.657248,
                    "p50": 423.761934,
                    "p95": 440.856413,
                    "p99": 440.856413,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1020.1144519999999,
                    "min": 997.4060069999999,
                    "p50": 1009.9284299999999,
                    "p95": 1020.1144519999999,
                    "p99": 1020.1144519999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 837.604963,
                    "min": 803.013289,
                    "p50": 823.902257,
                    "p95": 837.604963,
                    "p99": 837.604963,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 323.60560699999996,
                    "min": 305.87609499999996,
                    "p50": 311.996235,
                    "p95": 323.60560699999996,
                    "p99": 323.60560699999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 508.58782099999996,
                    "min": 471.73691599999995,
                    "p50": 479.55956299999997,
                    "p95": 508.58782099999996,
                    "p99": 508.58782099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1733.460772,
                    "min": 1699.2167499999998,
                    "p50": 1710.950977,
                    "p95": 1733.460772,
                    "p99": 1733.460772,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 654.10619,
                    "min": 631.7998259999999,
                    "p50": 649.350832,
                    "p95": 654.10619,
                    "p99": 654.10619,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2281.7718569999997,
                    "min": 2258.5899449999997,
                    "p50": 2271.537033,
                    "p95": 2281.7718569999997,
                    "p99": 2281.7718569999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1130.937534,
                    "min": 1107.2009289999999,
                    "p50": 1115.830948,
                    "p95": 1130.937534,
                    "p99": 1130.937534,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 609.7876,
                    "min": 567.870726,
                    "p50": 575.096601,
                    "p95": 609.7876,
                    "p99": 609.7876,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2236.0703399999998,
                    "min": 2195.49091,
                    "p50": 2219.192462,
                    "p95": 2236.0703399999998,
                    "p99": 2236.0703399999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1582.0896289999998,
                    "min": 1539.879951,
                    "p50": 1554.156549,
                    "p95": 1582.0896289999998,
                    "p99": 1582.0896289999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 691.79347,
                    "min": 676.805888,
                    "p50": 688.4427039999999,
                    "p95": 691.79347,
                    "p99": 691.79347,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1688.579129,
                    "min": 1635.384266,
                    "p50": 1673.907552,
                    "p95": 1688.579129,
                    "p99": 1688.579129,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 816.447219,
                    "min": 776.478943,
                    "p50": 794.034643,
                    "p95": 816.447219,
                    "p99": 816.447219,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1336.01012,
                    "min": 1313.61087,
                    "p50": 1330.49283,
                    "p95": 1336.01012,
                    "p99": 1336.01012,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1035.276437,
                    "min": 998.8634579999999,
                    "p50": 1011.671794,
                    "p95": 1035.276437,
                    "p99": 1035.276437,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1472.1319469999999,
                    "min": 1432.140864,
                    "p50": 1437.313046,
                    "p95": 1472.1319469999999,
                    "p99": 1472.1319469999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1945.879812,
                    "min": 1918.3193079999999,
                    "p50": 1923.60935,
                    "p95": 1945.879812,
                    "p99": 1945.879812,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 929.991582,
                    "min": 894.044318,
                    "p50": 900.7474699999999,
                    "p95": 929.991582,
                    "p99": 929.991582,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1243.6646389999999,
                    "min": 1211.973184,
                    "p50": 1232.796979,
                    "p95": 1243.6646389999999,
                    "p99": 1243.6646389999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 374.442319,
                    "min": 346.187885,
                    "p50": 353.09885499999996,
                    "p95": 374.442319,
                    "p99": 374.442319,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 482.84106299999996,
                    "min": 454.740973,
                    "p50": 465.857171,
                    "p95": 482.84106299999996,
                    "p99": 482.84106299999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 691.4040259999999,
                    "min": 645.222948,
                    "p50": 658.6206179999999,
                    "p95": 691.4040259999999,
                    "p99": 691.4040259999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.67679,
                    "min": 271.180104,
                    "p50": 278.535232,
                    "p95": 302.67679,
                    "p99": 302.67679,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 799.817094,
                    "min": 772.7501149999999,
                    "p50": 787.700743,
                    "p95": 799.817094,
                    "p99": 799.817094,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 917.411035,
                    "min": 896.643825,
                    "p50": 905.3292389999999,
                    "p95": 917.411035,
                    "p99": 917.411035,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 372.857705,
                    "min": 336.33837,
                    "p50": 350.50654199999997,
                    "p95": 372.857705,
                    "p99": 372.857705,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 617.692353,
                    "min": 585.336293,
                    "p50": 606.153343,
                    "p95": 617.692353,
                    "p99": 617.692353,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 553.7011,
                    "min": 519.952262,
                    "p50": 530.215598,
                    "p95": 553.7011,
                    "p99": 553.7011,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 428.78468899999996,
                    "min": 396.391756,
                    "p50": 403.874344,
                    "p95": 428.78468899999996,
                    "p99": 428.78468899999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 238.39410099999998,
                    "min": 207.006724,
                    "p50": 216.54539799999998,
                    "p95": 238.39410099999998,
                    "p99": 238.39410099999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1140.074697,
                    "min": 1116.378185,
                    "p50": 1127.2239829999999,
                    "p95": 1140.074697,
                    "p99": 1140.074697,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 754.4686489999999,
                    "min": 706.4124009999999,
                    "p50": 725.418383,
                    "p95": 754.4686489999999,
                    "p99": 754.4686489999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 886.8262569999999,
                    "min": 840.271607,
                    "p50": 855.0953109999999,
                    "p95": 886.8262569999999,
                    "p99": 886.8262569999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1300.410119,
                    "min": 1272.159977,
                    "p50": 1291.4317589999998,
                    "p95": 1300.410119,
                    "p99": 1300.410119,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 992.785948,
                    "min": 958.113487,
                    "p50": 970.336384,
                    "p95": 992.785948,
                    "p99": 992.785948,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 498.70453799999996,
                    "min": 456.69120999999996,
                    "p50": 473.627075,
                    "p95": 498.70453799999996,
                    "p99": 498.70453799999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1376.144924,
                    "min": 1340.3734359999999,
                    "p50": 1354.056224,
                    "p95": 1376.144924,
                    "p99": 1376.144924,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 846.5464079999999,
                    "min": 771.552743,
                    "p50": 792.4257749999999,
                    "p95": 846.5464079999999,
                    "p99": 846.5464079999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1095.940857,
                    "min": 1081.426546,
                    "p50": 1089.421633,
                    "p95": 1095.940857,
                    "p99": 1095.940857,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1198.07934,
                    "min": 1167.317613,
                    "p50": 1175.904613,
                    "p95": 1198.07934,
                    "p99": 1198.07934,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1553.1789919999999,
                    "min": 1523.694266,
                    "p50": 1546.0448549999999,
                    "p95": 1553.1789919999999,
                    "p99": 1553.1789919999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 872.034456,
                    "min": 856.5643779999999,
                    "p50": 869.380418,
                    "p95": 872.034456,
                    "p99": 872.034456,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 509.094092,
                    "min": 472.95887,
                    "p50": 488.338266,
                    "p95": 509.094092,
                    "p99": 509.094092,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 663.583951,
                    "min": 630.2345819999999,
                    "p50": 642.01937,
                    "p95": 663.583951,
                    "p99": 663.583951,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1048.079513,
                    "min": 1003.6297179999999,
                    "p50": 1023.296786,
                    "p95": 1048.079513,
                    "p99": 1048.079513,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 947.018333,
                    "min": 925.747166,
                    "p50": 940.1234569999999,
                    "p95": 947.018333,
                    "p99": 947.018333,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2318.5871589999997,
                    "min": 2285.333315,
                    "p50": 2301.364773,
                    "p95": 2318.5871589999997,
                    "p99": 2318.5871589999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 576.414824,
                    "min": 550.9613919999999,
                    "p50": 560.735863,
                    "p95": 576.414824,
                    "p99": 576.414824,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 267.90171799999996,
                    "min": 252.45083499999998,
                    "p50": 256.04071999999996,
                    "p95": 267.90171799999996,
                    "p99": 267.90171799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 418.86936099999997,
                    "min": 397.75712899999996,
                    "p50": 407.71559099999996,
                    "p95": 418.86936099999997,
                    "p99": 418.86936099999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 731.8626419999999,
                    "min": 706.592707,
                    "p50": 710.813137,
                    "p95": 731.8626419999999,
                    "p99": 731.8626419999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 358.63597999999996,
                    "min": 320.762122,
                    "p50": 334.51588499999997,
                    "p95": 358.63597999999996,
                    "p99": 358.63597999999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1276.0249959999999,
                    "min": 1249.4978509999999,
                    "p50": 1260.768188,
                    "p95": 1276.0249959999999,
                    "p99": 1276.0249959999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 638.14902,
                    "min": 596.006357,
                    "p50": 621.0696909999999,
                    "p95": 638.14902,
                    "p99": 638.14902,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 306.22943399999997,
                    "min": 266.085585,
                    "p50": 268.544804,
                    "p95": 306.22943399999997,
                    "p99": 306.22943399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 371.998714,
                    "min": 355.838526,
                    "p50": 366.120981,
                    "p95": 371.998714,
                    "p99": 371.998714,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 874.288292,
                    "min": 837.588447,
                    "p50": 853.646362,
                    "p95": 874.288292,
                    "p99": 874.288292,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 543.251506,
                    "min": 512.586018,
                    "p50": 527.0954439999999,
                    "p95": 543.251506,
                    "p99": 543.251506,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1694.671318,
                    "min": 1664.702591,
                    "p50": 1669.4501329999998,
                    "p95": 1694.671318,
                    "p99": 1694.671318,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 458.949795,
                    "min": 432.232806,
                    "p50": 449.47835299999997,
                    "p95": 458.949795,
                    "p99": 458.949795,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 961.438558,
                    "min": 922.156518,
                    "p50": 932.2300399999999,
                    "p95": 961.438558,
                    "p99": 961.438558,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 703.335466,
                    "min": 676.3054599999999,
                    "p50": 685.640455,
                    "p95": 703.335466,
                    "p99": 703.335466,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1022.3080659999999,
                    "min": 1005.8262149999999,
                    "p50": 1018.6808149999999,
                    "p95": 1022.3080659999999,
                    "p99": 1022.3080659999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1130.180005,
                    "min": 1075.252734,
                    "p50": 1098.042227,
                    "p95": 1130.180005,
                    "p99": 1130.180005,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1495.097468,
                    "min": 1458.9572369999999,
                    "p50": 1484.034028,
                    "p95": 1495.097468,
                    "p99": 1495.097468,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1198.439333,
                    "min": 1168.3723189999998,
                    "p50": 1180.9890659999999,
                    "p95": 1198.439333,
                    "p99": 1198.439333,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 792.0645139999999,
                    "min": 761.349608,
                    "p50": 773.4231669999999,
                    "p95": 792.0645139999999,
                    "p99": 792.0645139999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 309.57365799999997,
                    "min": 277.62629699999997,
                    "p50": 285.04058599999996,
                    "p95": 309.57365799999997,
                    "p99": 309.57365799999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 988.856332,
                    "min": 965.347912,
                    "p50": 977.43484,
                    "p95": 988.856332,
                    "p99": 988.856332,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 734.666733,
                    "min": 719.7854719999999,
                    "p50": 726.030764,
                    "p95": 734.666733,
                    "p99": 734.666733,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 621.8589949999999,
                    "min": 587.8905139999999,
                    "p50": 600.236031,
                    "p95": 621.8589949999999,
                    "p99": 621.8589949999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 421.205108,
                    "min": 397.837203,
                    "p50": 411.014413,
                    "p95": 421.205108,
                    "p99": 421.205108,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.47102199999998,
                    "min": 207.594272,
                    "p50": 216.00835899999998,
                    "p95": 248.47102199999998,
                    "p99": 248.47102199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 352.246082,
                    "min": 333.934156,
                    "p50": 345.29236699999996,
                    "p95": 352.246082,
                    "p99": 352.246082,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 949.4521279999999,
                    "min": 907.813467,
                    "p50": 912.0867549999999,
                    "p95": 949.4521279999999,
                    "p99": 949.4521279999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1153.390423,
                    "min": 1118.7346479999999,
                    "p50": 1142.541105,
                    "p95": 1153.390423,
                    "p99": 1153.390423,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 489.699048,
                    "min": 461.34081,
                    "p50": 469.774119,
                    "p95": 489.699048,
                    "p99": 489.699048,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 682.254554,
                    "min": 647.049795,
                    "p50": 670.9600379999999,
                    "p95": 682.254554,
                    "p99": 682.254554,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1315.3958579999999,
                    "min": 1267.577798,
                    "p50": 1291.422633,
                    "p95": 1315.3958579999999,
                    "p99": 1315.3958579999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 791.5624899999999,
                    "min": 775.744932,
                    "p50": 782.119664,
                    "p95": 791.5624899999999,
                    "p99": 791.5624899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 557.027891,
                    "min": 522.2743899999999,
                    "p50": 537.475717,
                    "p95": 557.027891,
                    "p99": 557.027891,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 865.455416,
                    "min": 838.704669,
                    "p50": 847.693891,
                    "p95": 865.455416,
                    "p99": 865.455416,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2349.678222,
                    "min": 2296.5292919999997,
                    "p50": 2336.752047,
                    "p95": 2349.678222,
                    "p99": 2349.678222,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1273.966947,
                    "min": 1252.874488,
                    "p50": 1260.472257,
                    "p95": 1273.966947,
                    "p99": 1273.966947,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1578.0926929999998,
                    "min": 1546.7691049999999,
                    "p50": 1562.526351,
                    "p95": 1578.0926929999998,
                    "p99": 1578.0926929999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1741.8679519999998,
                    "min": 1699.966168,
                    "p50": 1721.2178239999998,
                    "p95": 1741.8679519999998,
                    "p99": 1741.8679519999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2208.7441329999997,
                    "min": 2155.7031739999998,
                    "p50": 2174.13192,
                    "p95": 2208.7441329999997,
                    "p99": 2208.7441329999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2067.011678,
                    "min": 2017.9624729999998,
                    "p50": 2033.2643209999999,
                    "p95": 2067.011678,
                    "p99": 2067.011678,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 675.906033,
                    "min": 636.351308,
                    "p50": 650.416487,
                    "p95": 675.906033,
                    "p99": 675.906033,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1437.6930989999998,
                    "min": 1394.859494,
                    "p50": 1415.718606,
                    "p95": 1437.6930989999998,
                    "p99": 1437.6930989999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1887.29505,
                    "min": 1850.863824,
                    "p50": 1874.4279119999999,
                    "p95": 1887.29505,
                    "p99": 1887.29505,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2769.501487,
                    "min": 2685.18614,
                    "p50": 2719.972479,
                    "p95": 2769.501487,
                    "p99": 2769.501487,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 821.8943489999999,
                    "min": 781.812826,
                    "p50": 796.416782,
                    "p95": 821.8943489999999,
                    "p99": 821.8943489999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1151.155675,
                    "min": 1093.76846,
                    "p50": 1104.032522,
                    "p95": 1151.155675,
                    "p99": 1151.155675,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 509.94993,
                    "min": 481.494599,
                    "p50": 500.556134,
                    "p95": 509.94993,
                    "p99": 509.94993,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 982.339793,
                    "min": 937.8854379999999,
                    "p50": 957.8937239999999,
                    "p95": 982.339793,
                    "p99": 982.339793,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3153.2967639999997,
                    "min": 3064.357657,
                    "p50": 3130.511798,
                    "p95": 3153.2967639999997,
                    "p99": 3153.2967639999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3088.3973229999997,
                    "min": 3021.337196,
                    "p50": 3063.5990709999996,
                    "p95": 3088.3973229999997,
                    "p99": 3088.3973229999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2156.639079,
                    "min": 2134.212758,
                    "p50": 2143.168133,
                    "p95": 2156.639079,
                    "p99": 2156.639079,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1859.6385329999998,
                    "min": 1819.316191,
                    "p50": 1839.381482,
                    "p95": 1859.6385329999998,
                    "p99": 1859.6385329999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1386.627303,
                    "min": 1370.217441,
                    "p50": 1385.0434169999999,
                    "p95": 1386.627303,
                    "p99": 1386.627303,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1268.21793,
                    "min": 1224.585577,
                    "p50": 1245.466931,
                    "p95": 1268.21793,
                    "p99": 1268.21793,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 950.123757,
                    "min": 920.8577799999999,
                    "p50": 935.147986,
                    "p95": 950.123757,
                    "p99": 950.123757,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2021.49253,
                    "min": 1953.20551,
                    "p50": 1986.005668,
                    "p95": 2021.49253,
                    "p99": 2021.49253,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 645.745871,
                    "min": 617.539414,
                    "p50": 628.5149349999999,
                    "p95": 645.745871,
                    "p99": 645.745871,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1701.3818159999998,
                    "min": 1659.544291,
                    "p50": 1680.821404,
                    "p95": 1701.3818159999998,
                    "p99": 1701.3818159999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 803.549412,
                    "min": 771.924449,
                    "p50": 783.612936,
                    "p95": 803.549412,
                    "p99": 803.549412,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2721.624961,
                    "min": 2632.1612299999997,
                    "p50": 2689.30608,
                    "p95": 2721.624961,
                    "p99": 2721.624961,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 497.909948,
                    "min": 478.55537599999997,
                    "p50": 480.60698499999995,
                    "p95": 497.909948,
                    "p99": 497.909948,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1105.0725889999999,
                    "min": 1073.827528,
                    "p50": 1087.8286839999998,
                    "p95": 1105.0725889999999,
                    "p99": 1105.0725889999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2304.820105,
                    "min": 2254.782506,
                    "p50": 2287.806928,
                    "p95": 2304.820105,
                    "p99": 2304.820105,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1556.8845139999999,
                    "min": 1526.6627589999998,
                    "p50": 1542.181952,
                    "p95": 1556.8845139999999,
                    "p99": 1556.8845139999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1637.392482,
                    "min": 1585.249946,
                    "p50": 1615.159573,
                    "p95": 1637.392482,
                    "p99": 1637.392482,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 897.640598,
                    "min": 867.6617769999999,
                    "p50": 890.055496,
                    "p95": 897.640598,
                    "p99": 897.640598,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 764.4311779999999,
                    "min": 739.386924,
                    "p50": 749.8024889999999,
                    "p95": 764.4311779999999,
                    "p99": 764.4311779999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1487.885935,
                    "min": 1431.512292,
                    "p50": 1468.697267,
                    "p95": 1487.885935,
                    "p99": 1487.885935,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2928.570263,
                    "min": 2879.458835,
                    "p50": 2913.5605229999996,
                    "p95": 2928.570263,
                    "p99": 2928.570263,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 609.943797,
                    "min": 590.152054,
                    "p50": 604.519544,
                    "p95": 609.943797,
                    "p99": 609.943797,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1044.635476,
                    "min": 1014.060928,
                    "p50": 1034.470532,
                    "p95": 1044.635476,
                    "p99": 1044.635476,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 462.88746199999997,
                    "min": 445.82368199999996,
                    "p50": 456.318496,
                    "p95": 462.88746199999997,
                    "p99": 462.88746199999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2191.895685,
                    "min": 2152.178767,
                    "p50": 2172.193883,
                    "p95": 2191.895685,
                    "p99": 2191.895685,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2055.025887,
                    "min": 2020.5376509999999,
                    "p50": 2042.728971,
                    "p95": 2055.025887,
                    "p99": 2055.025887,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1784.6632439999998,
                    "min": 1728.529754,
                    "p50": 1743.179064,
                    "p95": 1784.6632439999998,
                    "p99": 1784.6632439999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1941.52009,
                    "min": 1875.732301,
                    "p50": 1896.873848,
                    "p95": 1941.52009,
                    "p99": 1941.52009,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1348.505786,
                    "min": 1301.599448,
                    "p50": 1319.763632,
                    "p95": 1348.505786,
                    "p99": 1348.505786,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2551.233581,
                    "min": 2510.3617409999997,
                    "p50": 2526.253777,
                    "p95": 2551.233581,
                    "p99": 2551.233581,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1198.221405,
                    "min": 1156.532892,
                    "p50": 1171.9120249999999,
                    "p95": 1198.221405,
                    "p99": 1198.221405,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1010.237933,
                    "min": 938.3964709999999,
                    "p50": 947.424235,
                    "p95": 1010.237933,
                    "p99": 1010.237933,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 542.3235159999999,
                    "min": 510.875393,
                    "p50": 521.224436,
                    "p95": 542.3235159999999,
                    "p99": 542.3235159999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1174.465526,
                    "min": 1075.433257,
                    "p50": 1100.090177,
                    "p95": 1174.465526,
                    "p99": 1174.465526,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1323.243518,
                    "min": 1245.638947,
                    "p50": 1266.700953,
                    "p95": 1323.243518,
                    "p99": 1323.243518,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 258.106424,
                    "min": 231.414866,
                    "p50": 242.173276,
                    "p95": 258.106424,
                    "p99": 258.106424,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 952.058379,
                    "min": 868.09502,
                    "p50": 890.318582,
                    "p95": 952.058379,
                    "p99": 952.058379,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 494.940359,
                    "min": 441.10781799999995,
                    "p50": 455.171761,
                    "p95": 494.940359,
                    "p99": 494.940359,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 353.46595299999996,
                    "min": 303.389008,
                    "p50": 312.963217,
                    "p95": 353.46595299999996,
                    "p99": 353.46595299999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3089.456835,
                    "min": 2128.4900119999998,
                    "p50": 2163.445076,
                    "p95": 3089.456835,
                    "p99": 3089.456835,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 679.320217,
                    "min": 654.119952,
                    "p50": 665.297184,
                    "p95": 679.320217,
                    "p99": 679.320217,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 856.773875,
                    "min": 800.718485,
                    "p50": 810.172798,
                    "p95": 856.773875,
                    "p99": 856.773875,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1072.7062489999998,
                    "min": 1010.6402949999999,
                    "p50": 1030.338459,
                    "p95": 1072.7062489999998,
                    "p99": 1072.7062489999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.682015,
                    "min": 373.47606099999996,
                    "p50": 395.883291,
                    "p95": 413.682015,
                    "p99": 413.682015,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3803.8398359999997,
                    "min": 3553.83816,
                    "p50": 3600.053883,
                    "p95": 3803.8398359999997,
                    "p99": 3803.8398359999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1486.192529,
                    "min": 1426.442251,
                    "p50": 1446.7089799999999,
                    "p95": 1486.192529,
                    "p99": 1486.192529,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 756.802643,
                    "min": 727.295614,
                    "p50": 732.498012,
                    "p95": 756.802643,
                    "p99": 756.802643,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 613.402604,
                    "min": 583.0131,
                    "p50": 597.711228,
                    "p95": 613.402604,
                    "p99": 613.402604,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2957.6430849999997,
                    "min": 2819.188343,
                    "p50": 2879.700308,
                    "p95": 2957.6430849999997,
                    "p99": 2957.6430849999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1324.67455,
                    "min": 1269.450679,
                    "p50": 1283.786235,
                    "p95": 1324.67455,
                    "p99": 1324.67455,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 423.187031,
                    "min": 393.49344299999996,
                    "p50": 406.686686,
                    "p95": 423.187031,
                    "p99": 423.187031,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 879.817812,
                    "min": 830.226138,
                    "p50": 839.318315,
                    "p95": 879.817812,
                    "p99": 879.817812,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 620.8622819999999,
                    "min": 579.49966,
                    "p50": 598.642335,
                    "p95": 620.8622819999999,
                    "p99": 620.8622819999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 687.5366869999999,
                    "min": 644.134058,
                    "p50": 662.887869,
                    "p95": 687.5366869999999,
                    "p99": 687.5366869999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 251.29985299999998,
                    "min": 209.837293,
                    "p50": 224.735145,
                    "p95": 251.29985299999998,
                    "p99": 251.29985299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 755.310569,
                    "min": 714.566689,
                    "p50": 723.723576,
                    "p95": 755.310569,
                    "p99": 755.310569,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 363.42458999999997,
                    "min": 330.589115,
                    "p50": 339.567229,
                    "p95": 363.42458999999997,
                    "p99": 363.42458999999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 916.3226199999999,
                    "min": 890.841277,
                    "p50": 905.376367,
                    "p95": 916.3226199999999,
                    "p99": 916.3226199999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 559.4956619999999,
                    "min": 521.383381,
                    "p50": 532.9823,
                    "p95": 559.4956619999999,
                    "p99": 559.4956619999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1144.599277,
                    "min": 1103.658161,
                    "p50": 1132.948251,
                    "p95": 1144.599277,
                    "p99": 1144.599277,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 838.345789,
                    "min": 769.29535,
                    "p50": 785.8432429999999,
                    "p95": 838.345789,
                    "p99": 838.345789,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 510.458536,
                    "min": 457.902951,
                    "p50": 466.34009499999996,
                    "p95": 510.458536,
                    "p99": 510.458536,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 306.316325,
                    "min": 270.077628,
                    "p50": 277.320063,
                    "p95": 306.316325,
                    "p99": 306.316325,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 984.070983,
                    "min": 964.234344,
                    "p50": 976.793827,
                    "p95": 984.070983,
                    "p99": 984.070983,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1948.301689,
                    "min": 1896.2261039999999,
                    "p50": 1919.7671879999998,
                    "p95": 1948.301689,
                    "p99": 1948.301689,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 606.79097,
                    "min": 570.9541459999999,
                    "p50": 588.182509,
                    "p95": 606.79097,
                    "p99": 606.79097,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 674.913817,
                    "min": 638.854712,
                    "p50": 659.155433,
                    "p95": 674.913817,
                    "p99": 674.913817,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 347.033931,
                    "min": 323.718138,
                    "p50": 333.745992,
                    "p95": 347.033931,
                    "p99": 347.033931,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 533.0699549999999,
                    "min": 515.692672,
                    "p50": 523.8106329999999,
                    "p95": 533.0699549999999,
                    "p99": 533.0699549999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 926.3724719999999,
                    "min": 878.82769,
                    "p50": 900.26927,
                    "p95": 926.3724719999999,
                    "p99": 926.3724719999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.816779,
                    "min": 203.940415,
                    "p50": 214.54879599999998,
                    "p95": 224.816779,
                    "p99": 224.816779,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1921.8304939999998,
                    "min": 1863.0819999999999,
                    "p50": 1892.837086,
                    "p95": 1921.8304939999998,
                    "p99": 1921.8304939999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 733.674311,
                    "min": 696.867001,
                    "p50": 713.166121,
                    "p95": 733.674311,
                    "p99": 733.674311,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 871.8829139999999,
                    "min": 825.343357,
                    "p50": 838.3477399999999,
                    "p95": 871.8829139999999,
                    "p99": 871.8829139999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 437.664015,
                    "min": 397.429539,
                    "p50": 411.478991,
                    "p95": 437.664015,
                    "p99": 437.664015,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1132.590179,
                    "min": 1091.552854,
                    "p50": 1110.981244,
                    "p95": 1132.590179,
                    "p99": 1132.590179,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 781.43529,
                    "min": 756.893242,
                    "p50": 772.704311,
                    "p95": 781.43529,
                    "p99": 781.43529,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 481.07109099999997,
                    "min": 456.000433,
                    "p50": 461.59608799999995,
                    "p95": 481.07109099999997,
                    "p99": 481.07109099999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2515.327778,
                    "min": 2479.465972,
                    "p50": 2488.632752,
                    "p95": 2515.327778,
                    "p99": 2515.327778,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.006974,
                    "min": 264.805519,
                    "p50": 277.678497,
                    "p95": 288.006974,
                    "p99": 288.006974,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 990.352727,
                    "min": 949.6624089999999,
                    "p50": 963.982183,
                    "p95": 990.352727,
                    "p99": 990.352727,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1273.196987,
                    "min": 1248.39887,
                    "p50": 1261.342995,
                    "p95": 1273.196987,
                    "p99": 1273.196987,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1812.581547,
                    "min": 1740.28594,
                    "p50": 1803.1097499999998,
                    "p95": 1812.581547,
                    "p99": 1812.581547,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1291.234869,
                    "min": 1149.948466,
                    "p50": 1242.46725,
                    "p95": 1291.234869,
                    "p99": 1291.234869,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1870.413269,
                    "min": 1829.419514,
                    "p50": 1848.4348009999999,
                    "p95": 1870.413269,
                    "p99": 1870.413269,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1592.878316,
                    "min": 1564.6825529999999,
                    "p50": 1579.254438,
                    "p95": 1592.878316,
                    "p99": 1592.878316,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1244.0959149999999,
                    "min": 1222.1403309999998,
                    "p50": 1233.685102,
                    "p95": 1244.0959149999999,
                    "p99": 1244.0959149999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1484.714154,
                    "min": 1441.3843009999998,
                    "p50": 1466.7001779999998,
                    "p95": 1484.714154,
                    "p99": 1484.714154,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1713.5201339999999,
                    "min": 1685.189918,
                    "p50": 1708.3847819999999,
                    "p95": 1713.5201339999999,
                    "p99": 1713.5201339999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 398.51726099999996,
                    "min": 378.80752,
                    "p50": 394.97643,
                    "p95": 398.51726099999996,
                    "p99": 398.51726099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 520.560509,
                    "min": 497.161593,
                    "p50": 515.4116819999999,
                    "p95": 520.560509,
                    "p99": 520.560509,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 659.906433,
                    "min": 608.712589,
                    "p50": 641.48073,
                    "p95": 659.906433,
                    "p99": 659.906433,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2460.417304,
                    "min": 2376.734656,
                    "p50": 2439.044074,
                    "p95": 2460.417304,
                    "p99": 2460.417304,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 953.647703,
                    "min": 742.684672,
                    "p50": 757.956924,
                    "p95": 953.647703,
                    "p99": 953.647703,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2324.832911,
                    "min": 2084.146617,
                    "p50": 2199.052437,
                    "p95": 2324.832911,
                    "p99": 2324.832911,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1066.340265,
                    "min": 975.2401749999999,
                    "p50": 1034.517139,
                    "p95": 1066.340265,
                    "p99": 1066.340265,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 915.69088,
                    "min": 870.022474,
                    "p50": 882.1214769999999,
                    "p95": 915.69088,
                    "p99": 915.69088,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 466.77075399999995,
                    "min": 435.17781499999995,
                    "p50": 453.558503,
                    "p95": 466.77075399999995,
                    "p99": 466.77075399999995,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 460.43030799999997,
                    "min": 428.97792899999996,
                    "p50": 437.835766,
                    "p95": 460.43030799999997,
                    "p99": 460.43030799999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 579.51438,
                    "min": 485.729715,
                    "p50": 507.517587,
                    "p95": 579.51438,
                    "p99": 579.51438,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 128.12420799999998,
                    "min": 84.988676,
                    "p50": 117.85895199999999,
                    "p95": 128.12420799999998,
                    "p99": 128.12420799999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 212.19784299999998,
                    "min": 191.684497,
                    "p50": 205.749379,
                    "p95": 212.19784299999998,
                    "p99": 212.19784299999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 356.860916,
                    "min": 309.54549499999996,
                    "p50": 324.824931,
                    "p95": 356.860916,
                    "p99": 356.860916,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 108.990196,
                    "min": 97.524126,
                    "p50": 104.231555,
                    "p95": 108.990196,
                    "p99": 108.990196,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 167.16595999999998,
                    "min": 114.66661599999999,
                    "p50": 145.749751,
                    "p95": 167.16595999999998,
                    "p99": 167.16595999999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 177.740847,
                    "min": 142.616426,
                    "p50": 168.504429,
                    "p95": 177.740847,
                    "p99": 177.740847,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 836.7528599999999,
                    "min": 773.0279089999999,
                    "p50": 804.4066389999999,
                    "p95": 836.7528599999999,
                    "p99": 836.7528599999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1043.280281,
                    "min": 950.401355,
                    "p50": 989.454482,
                    "p95": 1043.280281,
                    "p99": 1043.280281,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 225.809094,
                    "min": 199.955143,
                    "p50": 215.93608799999998,
                    "p95": 225.809094,
                    "p99": 225.809094,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3496.021597,
                    "min": 3320.5912719999997,
                    "p50": 3394.920714,
                    "p95": 3496.021597,
                    "p99": 3496.021597,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 93.95227899999999,
                    "min": 52.360859999999995,
                    "p50": 91.933371,
                    "p95": 93.95227899999999,
                    "p99": 93.95227899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 162.183276,
                    "min": 139.933253,
                    "p50": 155.74962399999998,
                    "p95": 162.183276,
                    "p99": 162.183276,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1028.531522,
                    "min": 934.494389,
                    "p50": 991.3471109999999,
                    "p95": 1028.531522,
                    "p99": 1028.531522,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 910.2009569999999,
                    "min": 820.697283,
                    "p50": 863.236738,
                    "p95": 910.2009569999999,
                    "p99": 910.2009569999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 715.3348209999999,
                    "min": 667.797816,
                    "p50": 689.9291,
                    "p95": 715.3348209999999,
                    "p99": 715.3348209999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 782.167795,
                    "min": 753.9023189999999,
                    "p50": 765.417654,
                    "p95": 782.167795,
                    "p99": 782.167795,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 424.326278,
                    "min": 392.01405,
                    "p50": 398.041834,
                    "p95": 424.326278,
                    "p99": 424.326278,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2282.2635809999997,
                    "min": 2173.4367119999997,
                    "p50": 2204.873693,
                    "p95": 2282.2635809999997,
                    "p99": 2282.2635809999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1300.499644,
                    "min": 1275.9432769999999,
                    "p50": 1295.223789,
                    "p95": 1300.499644,
                    "p99": 1300.499644,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 981.8996989999999,
                    "min": 963.7862849999999,
                    "p50": 971.7555309999999,
                    "p95": 981.8996989999999,
                    "p99": 981.8996989999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 912.368161,
                    "min": 891.7001329999999,
                    "p50": 895.029722,
                    "p95": 912.368161,
                    "p99": 912.368161,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 554.328682,
                    "min": 527.804925,
                    "p50": 542.570646,
                    "p95": 554.328682,
                    "p99": 554.328682,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1483.9472289999999,
                    "min": 1463.6950379999998,
                    "p50": 1476.657127,
                    "p95": 1483.9472289999999,
                    "p99": 1483.9472289999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.534135,
                    "min": 241.993425,
                    "p50": 254.51397899999998,
                    "p95": 261.534135,
                    "p99": 261.534135,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1125.7139319999999,
                    "min": 1106.632045,
                    "p50": 1119.156698,
                    "p95": 1125.7139319999999,
                    "p99": 1125.7139319999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 617.594375,
                    "min": 597.544436,
                    "p50": 610.646857,
                    "p95": 617.594375,
                    "p99": 617.594375,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 478.931696,
                    "min": 463.194207,
                    "p50": 469.822345,
                    "p95": 478.931696,
                    "p99": 478.931696,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 329.823025,
                    "min": 312.241273,
                    "p50": 325.995772,
                    "p95": 329.823025,
                    "p99": 329.823025,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1053.198304,
                    "min": 1023.202134,
                    "p50": 1048.2654559999999,
                    "p95": 1053.198304,
                    "p99": 1053.198304,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2606.5634219999997,
                    "min": 2009.6171219999999,
                    "p50": 2533.3309019999997,
                    "p95": 2606.5634219999997,
                    "p99": 2606.5634219999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 467.44556,
                    "min": 375.582675,
                    "p50": 458.44316699999996,
                    "p95": 467.44556,
                    "p99": 467.44556,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1747.035752,
                    "min": 1398.852198,
                    "p50": 1723.005219,
                    "p95": 1747.035752,
                    "p99": 1747.035752,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1899.599286,
                    "min": 1511.0335719999998,
                    "p50": 1869.680835,
                    "p95": 1899.599286,
                    "p99": 1899.599286,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 611.9482009999999,
                    "min": 451.502568,
                    "p50": 601.156737,
                    "p95": 611.9482009999999,
                    "p99": 611.9482009999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1617.222998,
                    "min": 1283.889737,
                    "p50": 1571.348462,
                    "p95": 1617.222998,
                    "p99": 1617.222998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2175.824334,
                    "min": 1717.0454829999999,
                    "p50": 2150.885631,
                    "p95": 2175.824334,
                    "p99": 2175.824334,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 892.081656,
                    "min": 707.120273,
                    "p50": 880.3067259999999,
                    "p95": 892.081656,
                    "p99": 892.081656,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1320.273195,
                    "min": 1048.863396,
                    "p50": 1299.306646,
                    "p95": 1320.273195,
                    "p99": 1320.273195,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1170.638544,
                    "min": 939.813141,
                    "p50": 1149.21058,
                    "p95": 1170.638544,
                    "p99": 1170.638544,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2872.5435279999997,
                    "min": 2278.656142,
                    "p50": 2836.4586569999997,
                    "p95": 2872.5435279999997,
                    "p99": 2872.5435279999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1470.679785,
                    "min": 1161.99238,
                    "p50": 1436.435912,
                    "p95": 1470.679785,
                    "p99": 1470.679785,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1042.127605,
                    "min": 820.284276,
                    "p50": 1024.090504,
                    "p95": 1042.127605,
                    "p99": 1042.127605,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 750.4044359999999,
                    "min": 596.6408789999999,
                    "p50": 734.417797,
                    "p95": 750.4044359999999,
                    "p99": 750.4044359999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2026.857268,
                    "min": 1575.595949,
                    "p50": 2009.808716,
                    "p95": 2026.857268,
                    "p99": 2026.857268,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 127.471593,
                    "min": 103.305678,
                    "p50": 119.57056399999999,
                    "p95": 127.471593,
                    "p99": 127.471593,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 45.220616,
                    "min": 36.465599999999995,
                    "p50": 41.673497,
                    "p95": 45.220616,
                    "p99": 45.220616,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 222.043851,
                    "min": 196.075198,
                    "p50": 213.427178,
                    "p95": 222.043851,
                    "p99": 222.043851,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 486.807935,
                    "min": 406.296431,
                    "p50": 473.42776,
                    "p95": 486.807935,
                    "p99": 486.807935,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 55.918214,
                    "min": 50.014635,
                    "p50": 52.555533999999994,
                    "p95": 55.918214,
                    "p99": 55.918214,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 54.701384999999995,
                    "min": 40.192426,
                    "p50": 51.497943,
                    "p95": 54.701384999999995,
                    "p99": 54.701384999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 199.290889,
                    "min": 143.358037,
                    "p50": 172.144782,
                    "p95": 199.290889,
                    "p99": 199.290889,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 75.076763,
                    "min": 38.634252,
                    "p50": 48.345582,
                    "p95": 75.076763,
                    "p99": 75.076763,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 36.446988999999995,
                    "min": 26.542445999999998,
                    "p50": 31.214249,
                    "p95": 36.446988999999995,
                    "p99": 36.446988999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 100.25939199999999,
                    "min": 70.59631,
                    "p50": 74.84098999999999,
                    "p95": 100.25939199999999,
                    "p99": 100.25939199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 153.24756499999998,
                    "min": 120.884413,
                    "p50": 131.514128,
                    "p95": 153.24756499999998,
                    "p99": 153.24756499999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.114773,
                    "min": 23.767583,
                    "p50": 27.201272,
                    "p95": 28.114773,
                    "p99": 28.114773,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 86.147808,
                    "min": 50.847434,
                    "p50": 56.312993999999996,
                    "p95": 86.147808,
                    "p99": 86.147808,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 76.025249,
                    "min": 61.908860999999995,
                    "p50": 64.546533,
                    "p95": 76.025249,
                    "p99": 76.025249,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 54.87442,
                    "min": 44.762418,
                    "p50": 52.270044,
                    "p95": 54.87442,
                    "p99": 54.87442,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 54.090700999999996,
                    "min": 49.427181999999995,
                    "p50": 52.878854999999994,
                    "p95": 54.090700999999996,
                    "p99": 54.090700999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 110.011928,
                    "min": 53.506462,
                    "p50": 57.937895999999995,
                    "p95": 110.011928,
                    "p99": 110.011928,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 55.720819999999996,
                    "min": 47.259439,
                    "p50": 52.447596999999995,
                    "p95": 55.720819999999996,
                    "p99": 55.720819999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 63.656772999999994,
                    "min": 48.843593999999996,
                    "p50": 56.884713999999995,
                    "p95": 63.656772999999994,
                    "p99": 63.656772999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 409.66511299999996,
                    "min": 340.940855,
                    "p50": 372.84609,
                    "p95": 409.66511299999996,
                    "p99": 409.66511299999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 212.673555,
                    "min": 165.6435,
                    "p50": 206.878502,
                    "p95": 212.673555,
                    "p99": 212.673555,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 693.7629559999999,
                    "min": 541.044656,
                    "p50": 570.915001,
                    "p95": 693.7629559999999,
                    "p99": 693.7629559999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 287.99620899999996,
                    "min": 234.406802,
                    "p50": 244.224929,
                    "p95": 287.99620899999996,
                    "p99": 287.99620899999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 638.015008,
                    "min": 412.204551,
                    "p50": 459.672711,
                    "p95": 638.015008,
                    "p99": 638.015008,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2174.292008,
                    "min": 1871.066146,
                    "p50": 2013.931488,
                    "p95": 2174.292008,
                    "p99": 2174.292008,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 497.38829799999996,
                    "min": 375.97641799999997,
                    "p50": 438.14248999999995,
                    "p95": 497.38829799999996,
                    "p99": 497.38829799999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 587.851191,
                    "min": 473.689668,
                    "p50": 530.483445,
                    "p95": 587.851191,
                    "p99": 587.851191,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 735.6478189999999,
                    "min": 643.121355,
                    "p50": 695.703073,
                    "p95": 735.6478189999999,
                    "p99": 735.6478189999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 403.78414,
                    "min": 271.23688999999996,
                    "p50": 313.173629,
                    "p95": 403.78414,
                    "p99": 403.78414,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1642.0215389999998,
                    "min": 1424.951485,
                    "p50": 1576.2970619999999,
                    "p95": 1642.0215389999998,
                    "p99": 1642.0215389999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 371.071693,
                    "min": 241.46817299999998,
                    "p50": 292.316772,
                    "p95": 371.071693,
                    "p99": 371.071693,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 498.01543799999996,
                    "min": 432.76176599999997,
                    "p50": 438.106468,
                    "p95": 498.01543799999996,
                    "p99": 498.01543799999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1183.914624,
                    "min": 1090.1234829999999,
                    "p50": 1151.590894,
                    "p95": 1183.914624,
                    "p99": 1183.914624,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 250.86834299999998,
                    "min": 137.141962,
                    "p50": 176.324004,
                    "p95": 250.86834299999998,
                    "p99": 250.86834299999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4070.226386,
                    "min": 3852.1506959999997,
                    "p50": 3935.5546889999996,
                    "p95": 4070.226386,
                    "p99": 4070.226386,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 162.248175,
                    "min": 138.816001,
                    "p50": 143.83368,
                    "p95": 162.248175,
                    "p99": 162.248175,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 632.467231,
                    "min": 545.3509819999999,
                    "p50": 607.76123,
                    "p95": 632.467231,
                    "p99": 632.467231,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 952.8978549999999,
                    "min": 748.4728799999999,
                    "p50": 805.418019,
                    "p95": 952.8978549999999,
                    "p99": 952.8978549999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 78.92894799999999,
                    "min": 44.922613999999996,
                    "p50": 69.64041399999999,
                    "p95": 78.92894799999999,
                    "p99": 78.92894799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 98.266796,
                    "min": 69.84385,
                    "p50": 87.057802,
                    "p95": 98.266796,
                    "p99": 98.266796,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 54.585829,
                    "min": 42.829971,
                    "p50": 48.764841,
                    "p95": 54.585829,
                    "p99": 54.585829,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 76.903421,
                    "min": 63.906554,
                    "p50": 68.317574,
                    "p95": 76.903421,
                    "p99": 76.903421,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 43.438826999999996,
                    "min": 30.950854,
                    "p50": 33.685089999999995,
                    "p95": 43.438826999999996,
                    "p99": 43.438826999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 198.155139,
                    "min": 160.527051,
                    "p50": 182.34800199999998,
                    "p95": 198.155139,
                    "p99": 198.155139,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 111.788204,
                    "min": 101.51994499999999,
                    "p50": 106.19526599999999,
                    "p95": 111.788204,
                    "p99": 111.788204,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 77.288024,
                    "min": 52.176384,
                    "p50": 67.563352,
                    "p95": 77.288024,
                    "p99": 77.288024,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 297.379379,
                    "min": 253.595443,
                    "p50": 269.663171,
                    "p95": 297.379379,
                    "p99": 297.379379,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 65.79741899999999,
                    "min": 53.329285,
                    "p50": 58.476779,
                    "p95": 65.79741899999999,
                    "p99": 65.79741899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.99060899999999,
                    "min": 55.559081,
                    "p50": 66.450971,
                    "p95": 74.99060899999999,
                    "p99": 74.99060899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 109.639253,
                    "min": 91.74324399999999,
                    "p50": 104.737027,
                    "p95": 109.639253,
                    "p99": 109.639253,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 73.141958,
                    "min": 58.740676,
                    "p50": 69.953935,
                    "p95": 73.141958,
                    "p99": 73.141958,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 151.881821,
                    "min": 111.079928,
                    "p50": 118.027441,
                    "p95": 151.881821,
                    "p99": 151.881821,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 612.3197749999999,
                    "min": 489.616138,
                    "p50": 523.160275,
                    "p95": 612.3197749999999,
                    "p99": 612.3197749999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.101376,
                    "min": 76.043868,
                    "p50": 85.223333,
                    "p95": 93.101376,
                    "p99": 93.101376,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 235.029035,
                    "min": 210.741152,
                    "p50": 225.268351,
                    "p95": 235.029035,
                    "p99": 235.029035,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 126.55222699999999,
                    "min": 105.181032,
                    "p50": 120.65957999999999,
                    "p95": 126.55222699999999,
                    "p99": 126.55222699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 97.69277,
                    "min": 82.402869,
                    "p50": 92.343279,
                    "p95": 97.69277,
                    "p99": 97.69277,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 74.036943,
                    "min": 51.757818,
                    "p50": 69.169258,
                    "p95": 74.036943,
                    "p99": 74.036943,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.859150999999997,
                    "min": 24.050798999999998,
                    "p50": 26.618897,
                    "p95": 26.859150999999997,
                    "p99": 26.859150999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.253639,
                    "min": 24.106137,
                    "p50": 27.100500999999998,
                    "p95": 27.253639,
                    "p99": 27.253639,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 40.345594999999996,
                    "min": 26.526401,
                    "p50": 27.070083999999998,
                    "p95": 40.345594999999996,
                    "p99": 40.345594999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.035186,
                    "min": 23.61799,
                    "p50": 26.786194,
                    "p95": 27.035186,
                    "p99": 27.035186,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.289648999999997,
                    "min": 24.702776999999998,
                    "p50": 26.707565,
                    "p95": 27.289648999999997,
                    "p99": 27.289648999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.799211,
                    "min": 24.910905999999997,
                    "p50": 26.803494999999998,
                    "p95": 27.799211,
                    "p99": 27.799211,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.109833,
                    "min": 25.225447,
                    "p50": 26.667924,
                    "p95": 27.109833,
                    "p99": 27.109833,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.944288999999998,
                    "min": 18.835131999999998,
                    "p50": 26.840467,
                    "p95": 26.944288999999998,
                    "p99": 26.944288999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 46.374744,
                    "min": 26.943876,
                    "p50": 36.227363,
                    "p95": 46.374744,
                    "p99": 46.374744,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.305929,
                    "min": 25.876405,
                    "p50": 27.211781,
                    "p95": 27.305929,
                    "p99": 27.305929,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 40.068428,
                    "min": 26.819844,
                    "p50": 32.472502,
                    "p95": 40.068428,
                    "p99": 40.068428,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 28.261931999999998,
                    "min": 25.968125999999998,
                    "p50": 26.525729,
                    "p95": 28.261931999999998,
                    "p99": 28.261931999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.069613,
                    "min": 25.565122,
                    "p50": 26.745604999999998,
                    "p95": 27.069613,
                    "p99": 27.069613,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.250109,
                    "min": 19.088055999999998,
                    "p50": 26.659292999999998,
                    "p95": 27.250109,
                    "p99": 27.250109,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 98.976447,
                    "min": 57.049659,
                    "p50": 85.586704,
                    "p95": 98.976447,
                    "p99": 98.976447,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 35.608007,
                    "min": 26.048263,
                    "p50": 27.103111,
                    "p95": 35.608007,
                    "p99": 35.608007,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.678155,
                    "min": 26.423441,
                    "p50": 26.787263,
                    "p95": 27.678155,
                    "p99": 27.678155,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.907121999999998,
                    "min": 25.246637,
                    "p50": 26.810472999999998,
                    "p95": 27.907121999999998,
                    "p99": 27.907121999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 374.004928,
                    "min": 343.656756,
                    "p50": 366.913951,
                    "p95": 374.004928,
                    "p99": 374.004928,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.58789099999998,
                    "min": 118.862209,
                    "p50": 144.211862,
                    "p95": 152.58789099999998,
                    "p99": 152.58789099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4442.717095999999,
                    "min": 4188.901476,
                    "p50": 4300.851872,
                    "p95": 4442.717095999999,
                    "p99": 4442.717095999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 926.7433589999999,
                    "min": 822.603583,
                    "p50": 877.424184,
                    "p95": 926.7433589999999,
                    "p99": 926.7433589999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 412.271869,
                    "min": 277.35105799999997,
                    "p50": 345.433433,
                    "p95": 412.271869,
                    "p99": 412.271869,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 203.881252,
                    "min": 159.113853,
                    "p50": 171.89441,
                    "p95": 203.881252,
                    "p99": 203.881252,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 264.661999,
                    "min": 243.88067099999998,
                    "p50": 254.81872399999997,
                    "p95": 264.661999,
                    "p99": 264.661999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1385.116617,
                    "min": 1155.9968199999998,
                    "p50": 1224.873212,
                    "p95": 1385.116617,
                    "p99": 1385.116617,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 669.505552,
                    "min": 495.46446499999996,
                    "p50": 581.062733,
                    "p95": 669.505552,
                    "p99": 669.505552,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 552.089121,
                    "min": 411.976586,
                    "p50": 473.421739,
                    "p95": 552.089121,
                    "p99": 552.089121,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1691.07412,
                    "min": 1514.637949,
                    "p50": 1589.574774,
                    "p95": 1691.07412,
                    "p99": 1691.07412,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2128.5359949999997,
                    "min": 1927.727115,
                    "p50": 2098.482712,
                    "p95": 2128.5359949999997,
                    "p99": 2128.5359949999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 652.504857,
                    "min": 524.48835,
                    "p50": 575.846395,
                    "p95": 652.504857,
                    "p99": 652.504857,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 292.747865,
                    "min": 202.865083,
                    "p50": 214.183147,
                    "p95": 292.747865,
                    "p99": 292.747865,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 836.2001759999999,
                    "min": 673.9622539999999,
                    "p50": 742.561168,
                    "p95": 836.2001759999999,
                    "p99": 836.2001759999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 426.14806899999996,
                    "min": 344.466477,
                    "p50": 393.909624,
                    "p95": 426.14806899999996,
                    "p99": 426.14806899999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 592.7235999999999,
                    "min": 455.78543099999996,
                    "p50": 519.1841019999999,
                    "p95": 592.7235999999999,
                    "p99": 592.7235999999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 733.887835,
                    "min": 573.952349,
                    "p50": 650.540583,
                    "p95": 733.887835,
                    "p99": 733.887835,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 379.612777,
                    "min": 311.38749,
                    "p50": 346.174196,
                    "p95": 379.612777,
                    "p99": 379.612777,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1525.9568419999998,
                    "min": 1391.191681,
                    "p50": 1485.917786,
                    "p95": 1525.9568419999998,
                    "p99": 1525.9568419999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 317.921558,
                    "min": 179.77605699999998,
                    "p50": 274.233897,
                    "p95": 317.921558,
                    "p99": 317.921558,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 655.854824,
                    "min": 418.39304799999996,
                    "p50": 496.33782599999995,
                    "p95": 655.854824,
                    "p99": 655.854824,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 744.224571,
                    "min": 631.488708,
                    "p50": 678.302055,
                    "p95": 744.224571,
                    "p99": 744.224571,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 325.638616,
                    "min": 246.341478,
                    "p50": 257.475515,
                    "p95": 325.638616,
                    "p99": 325.638616,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 909.2175599999999,
                    "min": 706.809207,
                    "p50": 755.3831,
                    "p95": 909.2175599999999,
                    "p99": 909.2175599999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 506.710018,
                    "min": 364.276295,
                    "p50": 485.87641499999995,
                    "p95": 506.710018,
                    "p99": 506.710018,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 884.333856,
                    "min": 762.9535619999999,
                    "p50": 817.537736,
                    "p95": 884.333856,
                    "p99": 884.333856,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 368.411023,
                    "min": 278.812391,
                    "p50": 323.106861,
                    "p95": 368.411023,
                    "p99": 368.411023,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 643.5065969999999,
                    "min": 516.735372,
                    "p50": 564.3218509999999,
                    "p95": 643.5065969999999,
                    "p99": 643.5065969999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2119.0581819999998,
                    "min": 1852.35424,
                    "p50": 1901.0253799999998,
                    "p95": 2119.0581819999998,
                    "p99": 2119.0581819999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 582.32445,
                    "min": 494.76595,
                    "p50": 550.015176,
                    "p95": 582.32445,
                    "p99": 582.32445,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.166252,
                    "min": 334.837764,
                    "p50": 408.97358199999996,
                    "p95": 461.166252,
                    "p99": 461.166252,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 736.856955,
                    "min": 542.960333,
                    "p50": 659.733117,
                    "p95": 736.856955,
                    "p99": 736.856955,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.38616,
                    "min": 153.20690299999998,
                    "p50": 170.64190499999998,
                    "p95": 175.38616,
                    "p99": 175.38616,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 654.942983,
                    "min": 585.785882,
                    "p50": 613.1286709999999,
                    "p95": 654.942983,
                    "p99": 654.942983,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1167.753637,
                    "min": 888.938042,
                    "p50": 962.969152,
                    "p95": 1167.753637,
                    "p99": 1167.753637,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2712.0364729999997,
                    "min": 2369.4420609999997,
                    "p50": 2572.261208,
                    "p95": 2712.0364729999997,
                    "p99": 2712.0364729999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 552.185181,
                    "min": 344.013507,
                    "p50": 396.519271,
                    "p95": 552.185181,
                    "p99": 552.185181,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 850.9259599999999,
                    "min": 656.2832569999999,
                    "p50": 724.1153079999999,
                    "p95": 850.9259599999999,
                    "p99": 850.9259599999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 603.034762,
                    "min": 514.0473989999999,
                    "p50": 551.924579,
                    "p95": 603.034762,
                    "p99": 603.034762,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1331.208003,
                    "min": 1050.1490509999999,
                    "p50": 1080.956308,
                    "p95": 1331.208003,
                    "p99": 1331.208003,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1003.0586529999999,
                    "min": 941.926254,
                    "p50": 961.522064,
                    "p95": 1003.0586529999999,
                    "p99": 1003.0586529999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1414.524457,
                    "min": 1233.096618,
                    "p50": 1268.0174479999998,
                    "p95": 1414.524457,
                    "p99": 1414.524457,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1612.693341,
                    "min": 1556.789513,
                    "p50": 1588.509715,
                    "p95": 1612.693341,
                    "p99": 1612.693341,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1398.5353269999998,
                    "min": 1361.174248,
                    "p50": 1386.4082349999999,
                    "p95": 1398.5353269999998,
                    "p99": 1398.5353269999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1204.252209,
                    "min": 1161.669343,
                    "p50": 1181.293125,
                    "p95": 1204.252209,
                    "p99": 1204.252209,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2147.8576909999997,
                    "min": 2071.218542,
                    "p50": 2123.449802,
                    "p95": 2147.8576909999997,
                    "p99": 2147.8576909999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 807.1181409999999,
                    "min": 745.7152159999999,
                    "p50": 769.426736,
                    "p95": 807.1181409999999,
                    "p99": 807.1181409999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 475.128207,
                    "min": 441.12735399999997,
                    "p50": 447.620071,
                    "p95": 475.128207,
                    "p99": 475.128207,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1951.9199079999999,
                    "min": 1824.171058,
                    "p50": 1890.782095,
                    "p95": 1951.9199079999999,
                    "p99": 1951.9199079999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 917.901088,
                    "min": 835.797708,
                    "p50": 889.8300039999999,
                    "p95": 917.901088,
                    "p99": 917.901088,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1589.477698,
                    "min": 1459.182599,
                    "p50": 1556.394629,
                    "p95": 1589.477698,
                    "p99": 1589.477698,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 902.4601359999999,
                    "min": 880.4268589999999,
                    "p50": 898.4105199999999,
                    "p95": 902.4601359999999,
                    "p99": 902.4601359999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2039.891363,
                    "min": 2007.9309549999998,
                    "p50": 2033.5336929999999,
                    "p95": 2039.891363,
                    "p99": 2039.891363,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2909.939997,
                    "min": 2838.1285009999997,
                    "p50": 2890.142603,
                    "p95": 2909.939997,
                    "p99": 2909.939997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5754.056154,
                    "min": 5638.252369,
                    "p50": 5703.353034,
                    "p95": 5754.056154,
                    "p99": 5754.056154,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1602.577585,
                    "min": 1583.688567,
                    "p50": 1594.339278,
                    "p95": 1602.577585,
                    "p99": 1602.577585,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 756.244769,
                    "min": 701.367405,
                    "p50": 749.7960489999999,
                    "p95": 756.244769,
                    "p99": 756.244769,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 619.5704549999999,
                    "min": 564.7231419999999,
                    "p50": 608.175214,
                    "p95": 619.5704549999999,
                    "p99": 619.5704549999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1761.870559,
                    "min": 1714.5154149999998,
                    "p50": 1734.776394,
                    "p95": 1761.870559,
                    "p99": 1761.870559,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4312.371988,
                    "min": 4219.145063,
                    "p50": 4291.0813929999995,
                    "p95": 4312.371988,
                    "p99": 4312.371988,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2548.76412,
                    "min": 2477.603753,
                    "p50": 2503.5489359999997,
                    "p95": 2548.76412,
                    "p99": 2548.76412,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2174.129771,
                    "min": 2139.4839899999997,
                    "p50": 2160.571693,
                    "p95": 2174.129771,
                    "p99": 2174.129771,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1199.474693,
                    "min": 1155.1313129999999,
                    "p50": 1173.242794,
                    "p95": 1199.474693,
                    "p99": 1199.474693,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1476.270921,
                    "min": 1433.514105,
                    "p50": 1453.497424,
                    "p95": 1476.270921,
                    "p99": 1476.270921,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1044.7981379999999,
                    "min": 1002.8495859999999,
                    "p50": 1031.53217,
                    "p95": 1044.7981379999999,
                    "p99": 1044.7981379999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 472.851412,
                    "min": 447.52520599999997,
                    "p50": 461.188353,
                    "p95": 472.851412,
                    "p99": 472.851412,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1877.7288959999998,
                    "min": 1831.947265,
                    "p50": 1860.9041479999999,
                    "p95": 1877.7288959999998,
                    "p99": 1877.7288959999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1305.205978,
                    "min": 1282.9096459999998,
                    "p50": 1299.877168,
                    "p95": 1305.205978,
                    "p99": 1305.205978,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 606.199747,
                    "min": 569.221668,
                    "p50": 597.398415,
                    "p95": 606.199747,
                    "p99": 606.199747,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1908.134723,
                    "min": 1854.5075,
                    "p50": 1882.0194259999998,
                    "p95": 1908.134723,
                    "p99": 1908.134723,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3819.663733,
                    "min": 3748.6676479999996,
                    "p50": 3793.632725,
                    "p95": 3819.663733,
                    "p99": 3819.663733,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2140.570844,
                    "min": 2050.7430059999997,
                    "p50": 2105.679788,
                    "p95": 2140.570844,
                    "p99": 2140.570844,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5727.011622999999,
                    "min": 5481.8017709999995,
                    "p50": 5542.024157,
                    "p95": 5727.011622999999,
                    "p99": 5727.011622999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1174.9293229999998,
                    "min": 1128.4493559999999,
                    "p50": 1156.188298,
                    "p95": 1174.9293229999998,
                    "p99": 1174.9293229999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1754.2208289999999,
                    "min": 1686.435976,
                    "p50": 1724.5104769999998,
                    "p95": 1754.2208289999999,
                    "p99": 1754.2208289999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7425.573033,
                    "min": 7279.036921,
                    "p50": 7375.450274,
                    "p95": 7425.573033,
                    "p99": 7425.573033,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1226.376763,
                    "min": 950.226777,
                    "p50": 987.5633879999999,
                    "p95": 1226.376763,
                    "p99": 1226.376763,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2547.605935,
                    "min": 2447.516091,
                    "p50": 2517.505642,
                    "p95": 2547.605935,
                    "p99": 2547.605935,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1349.13846,
                    "min": 1296.9656909999999,
                    "p50": 1319.27544,
                    "p95": 1349.13846,
                    "p99": 1349.13846,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 796.3348589999999,
                    "min": 745.564428,
                    "p50": 792.215843,
                    "p95": 796.3348589999999,
                    "p99": 796.3348589999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2908.842329,
                    "min": 2800.031016,
                    "p50": 2847.077657,
                    "p95": 2908.842329,
                    "p99": 2908.842329,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2726.031676,
                    "min": 2599.2416869999997,
                    "p50": 2680.040833,
                    "p95": 2726.031676,
                    "p99": 2726.031676,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3333.984654,
                    "min": 3256.207309,
                    "p50": 3275.292995,
                    "p95": 3333.984654,
                    "p99": 3333.984654,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1533.323242,
                    "min": 1460.653572,
                    "p50": 1520.617508,
                    "p95": 1533.323242,
                    "p99": 1533.323242,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2302.037101,
                    "min": 2233.881649,
                    "p50": 2264.380185,
                    "p95": 2302.037101,
                    "p99": 2302.037101,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 212.96959999999999,
                    "min": 155.232291,
                    "p50": 175.046114,
                    "p95": 212.96959999999999,
                    "p99": 212.96959999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 190.182708,
                    "min": 112.439358,
                    "p50": 129.629933,
                    "p95": 190.182708,
                    "p99": 190.182708,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 233.614906,
                    "min": 204.881574,
                    "p50": 218.53653599999998,
                    "p95": 233.614906,
                    "p99": 233.614906,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 443.829211,
                    "min": 299.666759,
                    "p50": 358.34092499999997,
                    "p95": 443.829211,
                    "p99": 443.829211,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1162.6904769999999,
                    "min": 1038.392943,
                    "p50": 1124.626481,
                    "p95": 1162.6904769999999,
                    "p99": 1162.6904769999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 481.347089,
                    "min": 389.544804,
                    "p50": 455.06445399999996,
                    "p95": 481.347089,
                    "p99": 481.347089,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 222.752615,
                    "min": 125.945304,
                    "p50": 143.22421599999998,
                    "p95": 222.752615,
                    "p99": 222.752615,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.814172,
                    "min": 27.866688,
                    "p50": 55.361953,
                    "p95": 112.814172,
                    "p99": 112.814172,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 570.638737,
                    "min": 443.197618,
                    "p50": 557.934458,
                    "p95": 570.638737,
                    "p99": 570.638737,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 118.739069,
                    "min": 91.172152,
                    "p50": 103.44012699999999,
                    "p95": 118.739069,
                    "p99": 118.739069,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 144.57344799999998,
                    "min": 95.67331999999999,
                    "p50": 124.96459899999999,
                    "p95": 144.57344799999998,
                    "p99": 144.57344799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.186669,
                    "min": 79.101574,
                    "p50": 120.109708,
                    "p95": 156.186669,
                    "p99": 156.186669,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 223.20500199999998,
                    "min": 173.400141,
                    "p50": 199.96872499999998,
                    "p95": 223.20500199999998,
                    "p99": 223.20500199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.996331,
                    "min": 63.534625,
                    "p50": 84.125303,
                    "p95": 105.996331,
                    "p99": 105.996331,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 118.485614,
                    "min": 71.40155,
                    "p50": 90.669825,
                    "p95": 118.485614,
                    "p99": 118.485614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 283.99476799999997,
                    "min": 167.767493,
                    "p50": 177.74533,
                    "p95": 283.99476799999997,
                    "p99": 283.99476799999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 187.603524,
                    "min": 116.615606,
                    "p50": 144.044133,
                    "p95": 187.603524,
                    "p99": 187.603524,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.957928,
                    "min": 54.478021999999996,
                    "p50": 71.64708399999999,
                    "p95": 78.957928,
                    "p99": 78.957928,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 203.379182,
                    "min": 139.640968,
                    "p50": 154.14319799999998,
                    "p95": 203.379182,
                    "p99": 203.379182,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2882.523089,
                    "min": 2672.3007749999997,
                    "p50": 2728.744882,
                    "p95": 2882.523089,
                    "p99": 2882.523089,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1210.7844579999999,
                    "min": 1088.2293829999999,
                    "p50": 1099.812889,
                    "p95": 1210.7844579999999,
                    "p99": 1210.7844579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 850.336147,
                    "min": 781.312905,
                    "p50": 829.288875,
                    "p95": 850.336147,
                    "p99": 850.336147,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1944.201494,
                    "min": 1838.70579,
                    "p50": 1853.521757,
                    "p95": 1944.201494,
                    "p99": 1944.201494,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1383.048605,
                    "min": 1218.769879,
                    "p50": 1245.181635,
                    "p95": 1383.048605,
                    "p99": 1383.048605,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6572.323335,
                    "min": 5992.204237,
                    "p50": 6076.1093949999995,
                    "p95": 6572.323335,
                    "p99": 6572.323335,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1812.167334,
                    "min": 1670.103059,
                    "p50": 1687.4629419999999,
                    "p95": 1812.167334,
                    "p99": 1812.167334,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1014.014925,
                    "min": 926.257582,
                    "p50": 943.698144,
                    "p95": 1014.014925,
                    "p99": 1014.014925,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2096.377682,
                    "min": 1987.583678,
                    "p50": 2005.766316,
                    "p95": 2096.377682,
                    "p99": 2096.377682,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4744.251773,
                    "min": 4482.744012,
                    "p50": 4557.163289,
                    "p95": 4744.251773,
                    "p99": 4744.251773,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2419.494033,
                    "min": 2268.4772949999997,
                    "p50": 2320.601983,
                    "p95": 2419.494033,
                    "p99": 2419.494033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3276.7574489999997,
                    "min": 3049.1980209999997,
                    "p50": 3083.2290599999997,
                    "p95": 3276.7574489999997,
                    "p99": 3276.7574489999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 525.1427709999999,
                    "min": 483.13091499999996,
                    "p50": 491.24391599999996,
                    "p95": 525.1427709999999,
                    "p99": 525.1427709999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2327.332748,
                    "min": 2121.4751269999997,
                    "p50": 2164.93437,
                    "p95": 2327.332748,
                    "p99": 2327.332748,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 701.423857,
                    "min": 630.044688,
                    "p50": 640.724938,
                    "p95": 701.423857,
                    "p99": 701.423857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1617.049022,
                    "min": 1505.7621299999998,
                    "p50": 1557.374623,
                    "p95": 1617.049022,
                    "p99": 1617.049022,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1514.001507,
                    "min": 1377.487377,
                    "p50": 1408.7002659999998,
                    "p95": 1514.001507,
                    "p99": 1514.001507,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2498.963671,
                    "min": 2285.587662,
                    "p50": 2306.828469,
                    "p95": 2498.963671,
                    "p99": 2498.963671,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 700.3474219999999,
                    "min": 637.1245769999999,
                    "p50": 651.814345,
                    "p95": 700.3474219999999,
                    "p99": 700.3474219999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1540.6601349999999,
                    "min": 1377.012149,
                    "p50": 1416.36778,
                    "p95": 1540.6601349999999,
                    "p99": 1540.6601349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2176.545759,
                    "min": 1966.775985,
                    "p50": 1993.149753,
                    "p95": 2176.545759,
                    "p99": 2176.545759,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1677.104065,
                    "min": 1523.689934,
                    "p50": 1547.157104,
                    "p95": 1677.104065,
                    "p99": 1677.104065,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1809.8666959999998,
                    "min": 1681.405433,
                    "p50": 1694.199713,
                    "p95": 1809.8666959999998,
                    "p99": 1809.8666959999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3330.240773,
                    "min": 3002.088872,
                    "p50": 3055.284205,
                    "p95": 3330.240773,
                    "p99": 3330.240773,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4908.421819,
                    "min": 4549.364291,
                    "p50": 4577.267656,
                    "p95": 4908.421819,
                    "p99": 4908.421819,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1952.666708,
                    "min": 1796.687837,
                    "p50": 1834.500354,
                    "p95": 1952.666708,
                    "p99": 1952.666708,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 890.6657379999999,
                    "min": 770.9374889999999,
                    "p50": 807.604825,
                    "p95": 890.6657379999999,
                    "p99": 890.6657379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 534.3518,
                    "min": 488.482604,
                    "p50": 504.745183,
                    "p95": 534.3518,
                    "p99": 534.3518,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1042.191648,
                    "min": 922.97055,
                    "p50": 950.00403,
                    "p95": 1042.191648,
                    "p99": 1042.191648,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2920.356377,
                    "min": 2645.479344,
                    "p50": 2702.5945429999997,
                    "p95": 2920.356377,
                    "p99": 2920.356377,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1168.416959,
                    "min": 1075.8516439999999,
                    "p50": 1099.899696,
                    "p95": 1168.416959,
                    "p99": 1168.416959,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2340.225493,
                    "min": 2129.64688,
                    "p50": 2153.402642,
                    "p95": 2340.225493,
                    "p99": 2340.225493,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1327.5079349999999,
                    "min": 1216.455177,
                    "p50": 1264.480321,
                    "p95": 1327.5079349999999,
                    "p99": 1327.5079349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1412.7493399999998,
                    "min": 1319.1075879999999,
                    "p50": 1345.872461,
                    "p95": 1412.7493399999998,
                    "p99": 1412.7493399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 244.98821999999998,
                    "min": 193.610455,
                    "p50": 218.869338,
                    "p95": 244.98821999999998,
                    "p99": 244.98821999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 720.413952,
                    "min": 646.478213,
                    "p50": 698.229166,
                    "p95": 720.413952,
                    "p99": 720.413952,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 188.274789,
                    "min": 83.356681,
                    "p50": 122.41698299999999,
                    "p95": 188.274789,
                    "p99": 188.274789,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.85583,
                    "min": 53.04801,
                    "p50": 84.11450599999999,
                    "p95": 96.85583,
                    "p99": 96.85583,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 258.215347,
                    "min": 177.053499,
                    "p50": 194.698162,
                    "p95": 258.215347,
                    "p99": 258.215347,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 585.654904,
                    "min": 494.508756,
                    "p50": 546.536353,
                    "p95": 585.654904,
                    "p99": 585.654904,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 239.14424499999998,
                    "min": 206.29706399999998,
                    "p50": 221.714115,
                    "p95": 239.14424499999998,
                    "p99": 239.14424499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 251.65491999999998,
                    "min": 153.50321599999998,
                    "p50": 199.847093,
                    "p95": 251.65491999999998,
                    "p99": 251.65491999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 322.835065,
                    "min": 219.91056,
                    "p50": 294.49983,
                    "p95": 322.835065,
                    "p99": 322.835065,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 177.757907,
                    "min": 88.747912,
                    "p50": 99.06685399999999,
                    "p95": 177.757907,
                    "p99": 177.757907,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 219.233867,
                    "min": 133.523216,
                    "p50": 163.35955199999998,
                    "p95": 219.233867,
                    "p99": 219.233867,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.73566199999999,
                    "min": 35.100021999999996,
                    "p50": 69.415641,
                    "p95": 76.73566199999999,
                    "p99": 76.73566199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 157.732541,
                    "min": 125.77379599999999,
                    "p50": 128.12051599999998,
                    "p95": 157.732541,
                    "p99": 157.732541,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 169.88244699999998,
                    "min": 106.327328,
                    "p50": 108.978078,
                    "p95": 169.88244699999998,
                    "p99": 169.88244699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 174.36715099999998,
                    "min": 106.839963,
                    "p50": 142.789312,
                    "p95": 174.36715099999998,
                    "p99": 174.36715099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 223.778448,
                    "min": 112.711085,
                    "p50": 157.078608,
                    "p95": 223.778448,
                    "p99": 223.778448,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 474.07082399999996,
                    "min": 363.788498,
                    "p50": 382.60292599999997,
                    "p95": 474.07082399999996,
                    "p99": 474.07082399999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 364.118759,
                    "min": 245.76178299999998,
                    "p50": 267.12632099999996,
                    "p95": 364.118759,
                    "p99": 364.118759,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.04008499999999,
                    "min": 65.01249899999999,
                    "p50": 82.139314,
                    "p95": 86.04008499999999,
                    "p99": 86.04008499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 428.810771,
                    "min": 321.143425,
                    "p50": 392.939187,
                    "p95": 428.810771,
                    "p99": 428.810771,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 345.176881,
                    "min": 257.488617,
                    "p50": 315.16720499999997,
                    "p95": 345.176881,
                    "p99": 345.176881,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 255.41276,
                    "min": 178.74709199999998,
                    "p50": 232.397159,
                    "p95": 255.41276,
                    "p99": 255.41276,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.506767,
                    "min": 92.884439,
                    "p50": 115.78417599999999,
                    "p95": 177.506767,
                    "p99": 177.506767,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1027.458278,
                    "min": 895.440743,
                    "p50": 965.1803209999999,
                    "p95": 1027.458278,
                    "p99": 1027.458278,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 520.968346,
                    "min": 410.164317,
                    "p50": 461.300329,
                    "p95": 520.968346,
                    "p99": 520.968346,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.45562099999998,
                    "min": 91.647099,
                    "p50": 175.6859,
                    "p95": 198.45562099999998,
                    "p99": 198.45562099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 203.107033,
                    "min": 103.22188299999999,
                    "p50": 147.815562,
                    "p95": 203.107033,
                    "p99": 203.107033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 177.016897,
                    "min": 79.053782,
                    "p50": 100.363069,
                    "p95": 177.016897,
                    "p99": 177.016897,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 161.19794299999998,
                    "min": 95.63116199999999,
                    "p50": 106.229388,
                    "p95": 161.19794299999998,
                    "p99": 161.19794299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 90.94165199999999,
                    "min": 51.491053,
                    "p50": 61.913577,
                    "p95": 90.94165199999999,
                    "p99": 90.94165199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 224.330571,
                    "min": 160.928741,
                    "p50": 170.07526099999998,
                    "p95": 224.330571,
                    "p99": 224.330571,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 152.149183,
                    "min": 106.933413,
                    "p50": 148.62416,
                    "p95": 152.149183,
                    "p99": 152.149183,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 215.969548,
                    "min": 142.107634,
                    "p50": 156.51062299999998,
                    "p95": 215.969548,
                    "p99": 215.969548,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.750585,
                    "min": 87.001381,
                    "p50": 91.211981,
                    "p95": 93.750585,
                    "p99": 93.750585,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 185.371637,
                    "min": 120.499546,
                    "p50": 139.87434199999998,
                    "p95": 185.371637,
                    "p99": 185.371637,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.41531499999999,
                    "min": 72.79517,
                    "p50": 74.432022,
                    "p95": 97.41531499999999,
                    "p99": 97.41531499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 49.050720999999996,
                    "min": 43.445197,
                    "p50": 45.047425999999994,
                    "p95": 49.050720999999996,
                    "p99": 49.050720999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 300.926987,
                    "min": 223.765671,
                    "p50": 236.077428,
                    "p95": 300.926987,
                    "p99": 300.926987,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 165.706988,
                    "min": 109.404174,
                    "p50": 126.36059399999999,
                    "p95": 165.706988,
                    "p99": 165.706988,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 342.04330799999997,
                    "min": 253.881248,
                    "p50": 306.555321,
                    "p95": 342.04330799999997,
                    "p99": 342.04330799999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 166.968204,
                    "min": 96.211811,
                    "p50": 111.7147,
                    "p95": 166.968204,
                    "p99": 166.968204,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.23477699999998,
                    "min": 75.34951199999999,
                    "p50": 123.064346,
                    "p95": 194.23477699999998,
                    "p99": 194.23477699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 166.016842,
                    "min": 71.579836,
                    "p50": 83.26338299999999,
                    "p95": 166.016842,
                    "p99": 166.016842,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 251.70405399999999,
                    "min": 182.43689999999998,
                    "p50": 195.69186499999998,
                    "p95": 251.70405399999999,
                    "p99": 251.70405399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 247.490221,
                    "min": 161.036428,
                    "p50": 208.143386,
                    "p95": 247.490221,
                    "p99": 247.490221,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 459.78241499999996,
                    "min": 357.911431,
                    "p50": 421.000437,
                    "p95": 459.78241499999996,
                    "p99": 459.78241499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 187.171088,
                    "min": 101.573376,
                    "p50": 136.459562,
                    "p95": 187.171088,
                    "p99": 187.171088,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1361.2539749999999,
                    "min": 1234.922134,
                    "p50": 1302.5794059999998,
                    "p95": 1361.2539749999999,
                    "p99": 1361.2539749999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.636151,
                    "min": 79.96012999999999,
                    "p50": 93.307396,
                    "p95": 94.636151,
                    "p99": 94.636151,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 220.10754899999998,
                    "min": 157.461678,
                    "p50": 191.61310899999998,
                    "p95": 220.10754899999998,
                    "p99": 220.10754899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 219.72757299999998,
                    "min": 140.622931,
                    "p50": 169.427528,
                    "p95": 219.72757299999998,
                    "p99": 219.72757299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 592.153691,
                    "min": 449.880064,
                    "p50": 520.232385,
                    "p95": 592.153691,
                    "p99": 592.153691,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 80.619985,
                    "min": 35.69264,
                    "p50": 66.83974599999999,
                    "p95": 80.619985,
                    "p99": 80.619985,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 255.367483,
                    "min": 190.72379899999999,
                    "p50": 202.71187899999998,
                    "p95": 255.367483,
                    "p99": 255.367483,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 176.05916299999998,
                    "min": 134.870851,
                    "p50": 150.403067,
                    "p95": 176.05916299999998,
                    "p99": 176.05916299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 735.022298,
                    "min": 672.005799,
                    "p50": 694.9386499999999,
                    "p95": 735.022298,
                    "p99": 735.022298,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 981.3692649999999,
                    "min": 938.612986,
                    "p50": 943.420216,
                    "p95": 981.3692649999999,
                    "p99": 981.3692649999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 818.0976089999999,
                    "min": 806.911939,
                    "p50": 812.0657279999999,
                    "p95": 818.0976089999999,
                    "p99": 818.0976089999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1221.183916,
                    "min": 1190.830548,
                    "p50": 1207.678964,
                    "p95": 1221.183916,
                    "p99": 1221.183916,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 424.52047999999996,
                    "min": 387.619958,
                    "p50": 418.743974,
                    "p95": 424.52047999999996,
                    "p99": 424.52047999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 554.945413,
                    "min": 514.615823,
                    "p50": 551.8793949999999,
                    "p95": 554.945413,
                    "p99": 554.945413,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1083.5540879999999,
                    "min": 1042.043549,
                    "p50": 1081.634059,
                    "p95": 1083.5540879999999,
                    "p99": 1083.5540879999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 683.921619,
                    "min": 647.966101,
                    "p50": 681.121433,
                    "p95": 683.921619,
                    "p99": 683.921619,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1556.10144,
                    "min": 1433.6146689999998,
                    "p50": 1493.7121909999998,
                    "p95": 1556.10144,
                    "p99": 1556.10144,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 478.879333,
                    "min": 433.28427899999997,
                    "p50": 471.228802,
                    "p95": 478.879333,
                    "p99": 478.879333,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1208.177346,
                    "min": 1176.98821,
                    "p50": 1196.324277,
                    "p95": 1208.177346,
                    "p99": 1208.177346,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 915.578083,
                    "min": 880.958568,
                    "p50": 899.114155,
                    "p95": 915.578083,
                    "p99": 915.578083,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1068.252002,
                    "min": 1012.5609969999999,
                    "p50": 1046.6797139999999,
                    "p95": 1068.252002,
                    "p99": 1068.252002,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1374.9948009999998,
                    "min": 1301.439187,
                    "p50": 1322.487101,
                    "p95": 1374.9948009999998,
                    "p99": 1374.9948009999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 623.859062,
                    "min": 594.723089,
                    "p50": 615.100958,
                    "p95": 623.859062,
                    "p99": 623.859062,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 771.733753,
                    "min": 726.629543,
                    "p50": 751.0069639999999,
                    "p95": 771.733753,
                    "p99": 771.733753,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1137.540959,
                    "min": 967.838772,
                    "p50": 1040.779989,
                    "p95": 1137.540959,
                    "p99": 1137.540959,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1985.7266829999999,
                    "min": 1724.888054,
                    "p50": 1822.497874,
                    "p95": 1985.7266829999999,
                    "p99": 1985.7266829999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2514.653061,
                    "min": 2195.971307,
                    "p50": 2324.8885929999997,
                    "p95": 2514.653061,
                    "p99": 2514.653061,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1699.8957389999998,
                    "min": 1466.018206,
                    "p50": 1586.3620489999998,
                    "p95": 1699.8957389999998,
                    "p99": 1699.8957389999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3357.544861,
                    "min": 2942.1419699999997,
                    "p50": 3068.8696029999996,
                    "p95": 3357.544861,
                    "p99": 3357.544861,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 863.2822,
                    "min": 755.3493229999999,
                    "p50": 782.625499,
                    "p95": 863.2822,
                    "p99": 863.2822,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2815.8983519999997,
                    "min": 2427.58582,
                    "p50": 2568.6695339999997,
                    "p95": 2815.8983519999997,
                    "p99": 2815.8983519999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2231.486407,
                    "min": 1955.9594129999998,
                    "p50": 2019.0109619999998,
                    "p95": 2231.486407,
                    "p99": 2231.486407,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1438.631747,
                    "min": 1220.0710259999998,
                    "p50": 1274.1271279999999,
                    "p95": 1438.631747,
                    "p99": 1438.631747,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3119.648315,
                    "min": 2663.770072,
                    "p50": 2757.2926939999998,
                    "p95": 3119.648315,
                    "p99": 3119.648315,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 829.570063,
                    "min": 810.825832,
                    "p50": 824.158996,
                    "p95": 829.570063,
                    "p99": 829.570063,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1108.064908,
                    "min": 1049.23011,
                    "p50": 1085.0466059999999,
                    "p95": 1108.064908,
                    "p99": 1108.064908,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 306.76966699999997,
                    "min": 280.407406,
                    "p50": 298.801057,
                    "p95": 306.76966699999997,
                    "p99": 306.76966699999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 568.631796,
                    "min": 524.79575,
                    "p50": 561.373692,
                    "p95": 568.631796,
                    "p99": 568.631796,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 971.116912,
                    "min": 915.176103,
                    "p50": 953.068955,
                    "p95": 971.116912,
                    "p99": 971.116912,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 435.075586,
                    "min": 406.10276799999997,
                    "p50": 431.46808899999996,
                    "p95": 435.075586,
                    "p99": 435.075586,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 700.292299,
                    "min": 659.210729,
                    "p50": 690.426396,
                    "p95": 700.292299,
                    "p99": 700.292299,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2381.893019,
                    "min": 2088.932002,
                    "p50": 2161.045626,
                    "p95": 2381.893019,
                    "p99": 2381.893019,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1202.751053,
                    "min": 1059.651061,
                    "p50": 1100.977856,
                    "p95": 1202.751053,
                    "p99": 1202.751053,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 694.470004,
                    "min": 612.685792,
                    "p50": 632.669074,
                    "p95": 694.470004,
                    "p99": 694.470004,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2203.5140659999997,
                    "min": 1876.651486,
                    "p50": 2001.1689339999998,
                    "p95": 2203.5140659999997,
                    "p99": 2203.5140659999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1698.4307239999998,
                    "min": 1470.3700959999999,
                    "p50": 1544.6532399999999,
                    "p95": 1698.4307239999998,
                    "p99": 1698.4307239999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1349.7307429999998,
                    "min": 1176.873288,
                    "p50": 1261.378135,
                    "p95": 1349.7307429999998,
                    "p99": 1349.7307429999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1998.56809,
                    "min": 1752.748411,
                    "p50": 1844.0503709999998,
                    "p95": 1998.56809,
                    "p99": 1998.56809,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 846.690064,
                    "min": 754.857566,
                    "p50": 793.683017,
                    "p95": 846.690064,
                    "p99": 846.690064,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 557.367799,
                    "min": 470.117913,
                    "p50": 493.421229,
                    "p95": 557.367799,
                    "p99": 557.367799,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2889.591247,
                    "min": 2544.279043,
                    "p50": 2674.233179,
                    "p95": 2889.591247,
                    "p99": 2889.591247,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2476.0584989999998,
                    "min": 2174.23539,
                    "p50": 2305.545264,
                    "p95": 2476.0584989999998,
                    "p99": 2476.0584989999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3272.579754,
                    "min": 2892.5769579999996,
                    "p50": 3050.869577,
                    "p95": 3272.579754,
                    "p99": 3272.579754,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1492.766704,
                    "min": 1325.97266,
                    "p50": 1395.960734,
                    "p95": 1492.766704,
                    "p99": 1492.766704,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1839.5408029999999,
                    "min": 1607.895515,
                    "p50": 1688.1363649999998,
                    "p95": 1839.5408029999999,
                    "p99": 1839.5408029999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1014.473002,
                    "min": 892.0478049999999,
                    "p50": 937.338848,
                    "p95": 1014.473002,
                    "p99": 1014.473002,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2276.8344429999997,
                    "min": 2015.610224,
                    "p50": 2078.097074,
                    "p95": 2276.8344429999997,
                    "p99": 2276.8344429999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 875.272651,
                    "min": 775.179436,
                    "p50": 820.227663,
                    "p95": 875.272651,
                    "p99": 875.272651,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2605.459421,
                    "min": 2291.618983,
                    "p50": 2378.9032709999997,
                    "p95": 2605.459421,
                    "p99": 2605.459421,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1712.841467,
                    "min": 1552.525036,
                    "p50": 1611.173259,
                    "p95": 1712.841467,
                    "p99": 1712.841467,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 705.002936,
                    "min": 643.2481809999999,
                    "p50": 667.421927,
                    "p95": 705.002936,
                    "p99": 705.002936,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1044.4111149999999,
                    "min": 922.887887,
                    "p50": 986.178636,
                    "p95": 1044.4111149999999,
                    "p99": 1044.4111149999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2043.2640359999998,
                    "min": 1819.994849,
                    "p50": 1928.703389,
                    "p95": 2043.2640359999998,
                    "p99": 2043.2640359999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2366.085149,
                    "min": 2144.751661,
                    "p50": 2221.2116889999998,
                    "p95": 2366.085149,
                    "p99": 2366.085149,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3377.556885,
                    "min": 3044.6630999999998,
                    "p50": 3165.065244,
                    "p95": 3377.556885,
                    "p99": 3377.556885,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1195.638911,
                    "min": 1091.889432,
                    "p50": 1134.2629379999998,
                    "p95": 1195.638911,
                    "p99": 1195.638911,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2948.737601,
                    "min": 2668.457477,
                    "p50": 2759.439359,
                    "p95": 2948.737601,
                    "p99": 2948.737601,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1369.497652,
                    "min": 1252.64168,
                    "p50": 1296.2289449999998,
                    "p95": 1369.497652,
                    "p99": 1369.497652,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1887.9759829999998,
                    "min": 1705.229562,
                    "p50": 1763.5586959999998,
                    "p95": 1887.9759829999998,
                    "p99": 1887.9759829999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1536.483031,
                    "min": 1400.436811,
                    "p50": 1471.5965899999999,
                    "p95": 1536.483031,
                    "p99": 1536.483031,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 537.780268,
                    "min": 486.211505,
                    "p50": 509.23650899999996,
                    "p95": 537.780268,
                    "p99": 537.780268,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 888.4130279999999,
                    "min": 751.961204,
                    "p50": 811.223666,
                    "p95": 888.4130279999999,
                    "p99": 888.4130279999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1359.850755,
                    "min": 1154.5139239999999,
                    "p50": 1257.2227779999998,
                    "p95": 1359.850755,
                    "p99": 1359.850755,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1199.975733,
                    "min": 1025.423881,
                    "p50": 1108.215542,
                    "p95": 1199.975733,
                    "p99": 1199.975733,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2907.604766,
                    "min": 2584.091713,
                    "p50": 2702.705553,
                    "p95": 2907.604766,
                    "p99": 2907.604766,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2483.8599569999997,
                    "min": 2202.0315,
                    "p50": 2328.214392,
                    "p95": 2483.8599569999997,
                    "p99": 2483.8599569999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 533.0944569999999,
                    "min": 473.62961199999995,
                    "p50": 497.371263,
                    "p95": 533.0944569999999,
                    "p99": 533.0944569999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1851.769041,
                    "min": 1627.539294,
                    "p50": 1715.605758,
                    "p95": 1851.769041,
                    "p99": 1851.769041,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1674.207536,
                    "min": 1473.6809329999999,
                    "p50": 1557.382676,
                    "p95": 1674.207536,
                    "p99": 1674.207536,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 691.489301,
                    "min": 609.674312,
                    "p50": 648.651672,
                    "p95": 691.489301,
                    "p99": 691.489301,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2014.680993,
                    "min": 1768.538008,
                    "p50": 1845.7842489999998,
                    "p95": 2014.680993,
                    "p99": 2014.680993,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1506.360387,
                    "min": 1341.676326,
                    "p50": 1411.234135,
                    "p95": 1506.360387,
                    "p99": 1506.360387,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3331.357432,
                    "min": 2946.792787,
                    "p50": 3042.050469,
                    "p95": 3331.357432,
                    "p99": 3331.357432,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2320.5627999999997,
                    "min": 2026.236412,
                    "p50": 2145.47132,
                    "p95": 2320.5627999999997,
                    "p99": 2320.5627999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1019.3539179999999,
                    "min": 912.4211469999999,
                    "p50": 951.689901,
                    "p95": 1019.3539179999999,
                    "p99": 1019.3539179999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2160.848916,
                    "min": 1931.966248,
                    "p50": 1993.220609,
                    "p95": 2160.848916,
                    "p99": 2160.848916,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3399.5640409999996,
                    "min": 2968.882099,
                    "p50": 3060.001993,
                    "p95": 3399.5640409999996,
                    "p99": 3399.5640409999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 717.1148529999999,
                    "min": 613.670789,
                    "p50": 635.455097,
                    "p95": 717.1148529999999,
                    "p99": 717.1148529999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1527.3407559999998,
                    "min": 1338.040511,
                    "p50": 1387.233326,
                    "p95": 1527.3407559999998,
                    "p99": 1527.3407559999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1692.764068,
                    "min": 1462.871968,
                    "p50": 1538.0966139999998,
                    "p95": 1692.764068,
                    "p99": 1692.764068,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1847.131641,
                    "min": 1610.418126,
                    "p50": 1699.84097,
                    "p95": 1847.131641,
                    "p99": 1847.131641,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2909.027435,
                    "min": 2558.230002,
                    "p50": 2694.255715,
                    "p95": 2909.027435,
                    "p99": 2909.027435,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2003.4069279999999,
                    "min": 1766.7188429999999,
                    "p50": 1852.566766,
                    "p95": 2003.4069279999999,
                    "p99": 2003.4069279999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2167.264793,
                    "min": 1887.832439,
                    "p50": 2010.3240979999998,
                    "p95": 2167.264793,
                    "p99": 2167.264793,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 522.817957,
                    "min": 452.599948,
                    "p50": 493.65446399999996,
                    "p95": 522.817957,
                    "p99": 522.817957,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1014.5509579999999,
                    "min": 894.0492869999999,
                    "p50": 953.1149939999999,
                    "p95": 1014.5509579999999,
                    "p99": 1014.5509579999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 849.6697049999999,
                    "min": 750.508171,
                    "p50": 793.391936,
                    "p95": 849.6697049999999,
                    "p99": 849.6697049999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2517.494049,
                    "min": 2196.278953,
                    "p50": 2299.7557189999998,
                    "p95": 2517.494049,
                    "p99": 2517.494049,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1327.840786,
                    "min": 1175.2302419999999,
                    "p50": 1255.7072429999998,
                    "p95": 1327.840786,
                    "p99": 1327.840786,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2311.4504469999997,
                    "min": 2035.1700739999999,
                    "p50": 2135.286434,
                    "p95": 2311.4504469999997,
                    "p99": 2311.4504469999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1186.107975,
                    "min": 1039.076907,
                    "p50": 1104.4434609999998,
                    "p95": 1186.107975,
                    "p99": 1186.107975,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 833.2452589999999,
                    "min": 753.9495559999999,
                    "p50": 789.170137,
                    "p95": 833.2452589999999,
                    "p99": 833.2452589999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.76535199999998,
                    "min": 187.056242,
                    "p50": 203.792208,
                    "p95": 213.76535199999998,
                    "p99": 213.76535199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4380.517680999999,
                    "min": 3981.7148349999998,
                    "p50": 4177.06835,
                    "p95": 4380.517680999999,
                    "p99": 4380.517680999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 915.876709,
                    "min": 823.527829,
                    "p50": 860.9521709999999,
                    "p95": 915.876709,
                    "p99": 915.876709,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1347.506033,
                    "min": 1208.4774949999999,
                    "p50": 1272.350297,
                    "p95": 1347.506033,
                    "p99": 1347.506033,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 476.82006099999995,
                    "min": 436.339294,
                    "p50": 448.993626,
                    "p95": 476.82006099999995,
                    "p99": 476.82006099999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1782.8365999999999,
                    "min": 1597.064567,
                    "p50": 1669.0102669999999,
                    "p95": 1782.8365999999999,
                    "p99": 1782.8365999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 289.107934,
                    "min": 237.081504,
                    "p50": 281.058772,
                    "p95": 289.107934,
                    "p99": 289.107934,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 389.784331,
                    "min": 341.52583,
                    "p50": 364.571536,
                    "p95": 389.784331,
                    "p99": 389.784331,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 166.02146199999999,
                    "min": 123.945788,
                    "p50": 160.34236199999998,
                    "p95": 166.02146199999999,
                    "p99": 166.02146199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 429.646773,
                    "min": 390.754469,
                    "p50": 402.50212,
                    "p95": 429.646773,
                    "p99": 429.646773,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 343.056342,
                    "min": 287.119552,
                    "p50": 320.096889,
                    "p95": 343.056342,
                    "p99": 343.056342,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 514.951245,
                    "min": 454.82586699999996,
                    "p50": 488.549469,
                    "p95": 514.951245,
                    "p99": 514.951245,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 613.1462769999999,
                    "min": 532.28158,
                    "p50": 568.930918,
                    "p95": 613.1462769999999,
                    "p99": 613.1462769999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 565.9288379999999,
                    "min": 509.773775,
                    "p50": 529.46769,
                    "p95": 565.9288379999999,
                    "p99": 565.9288379999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2234.438682,
                    "min": 1995.286067,
                    "p50": 2092.093753,
                    "p95": 2234.438682,
                    "p99": 2234.438682,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.417371,
                    "min": 228.05412199999998,
                    "p50": 243.073467,
                    "p95": 256.417371,
                    "p99": 256.417371,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 649.356172,
                    "min": 581.1760419999999,
                    "p50": 611.081679,
                    "p95": 649.356172,
                    "p99": 649.356172,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 696.8671529999999,
                    "min": 629.397717,
                    "p50": 655.2863629999999,
                    "p95": 696.8671529999999,
                    "p99": 696.8671529999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 603.2533169999999,
                    "min": 546.921355,
                    "p50": 568.253669,
                    "p95": 603.2533169999999,
                    "p99": 603.2533169999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4388.075451,
                    "min": 3945.31537,
                    "p50": 4126.388435,
                    "p95": 4388.075451,
                    "p99": 4388.075451,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 646.702491,
                    "min": 565.899962,
                    "p50": 606.312135,
                    "p95": 646.702491,
                    "p99": 646.702491,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 428.41387499999996,
                    "min": 373.89854099999997,
                    "p50": 404.03031999999996,
                    "p95": 428.41387499999996,
                    "p99": 428.41387499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 798.1792489999999,
                    "min": 720.512302,
                    "p50": 755.778383,
                    "p95": 798.1792489999999,
                    "p99": 798.1792489999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 900.365502,
                    "min": 804.7350769999999,
                    "p50": 853.3656,
                    "p95": 900.365502,
                    "p99": 900.365502,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.849772,
                    "min": 220.803415,
                    "p50": 239.06792299999998,
                    "p95": 257.849772,
                    "p99": 257.849772,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 469.575973,
                    "min": 427.411843,
                    "p50": 447.169756,
                    "p95": 469.575973,
                    "p99": 469.575973,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 330.619035,
                    "min": 302.625964,
                    "p50": 321.303527,
                    "p95": 330.619035,
                    "p99": 330.619035,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 705.697697,
                    "min": 608.879995,
                    "p50": 642.524508,
                    "p95": 705.697697,
                    "p99": 705.697697,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 558.380436,
                    "min": 491.213646,
                    "p50": 522.1227339999999,
                    "p95": 558.380436,
                    "p99": 558.380436,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1760.42994,
                    "min": 1609.628107,
                    "p50": 1665.194108,
                    "p95": 1760.42994,
                    "p99": 1760.42994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1342.800941,
                    "min": 1191.623012,
                    "p50": 1269.495971,
                    "p95": 1342.800941,
                    "p99": 1342.800941,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.682341,
                    "min": 463.619134,
                    "p50": 484.120661,
                    "p95": 522.682341,
                    "p99": 522.682341,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.70206199999998,
                    "min": 147.04052,
                    "p50": 160.299109,
                    "p95": 184.70206199999998,
                    "p99": 184.70206199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 385.555407,
                    "min": 354.80742799999996,
                    "p50": 363.77119,
                    "p95": 385.555407,
                    "p99": 385.555407,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.10373099999998,
                    "min": 190.755228,
                    "p50": 200.11364799999998,
                    "p95": 213.10373099999998,
                    "p99": 213.10373099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.12224,
                    "min": 248.70544199999998,
                    "p50": 281.434798,
                    "p95": 299.12224,
                    "p99": 299.12224,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2207.893688,
                    "min": 1984.640257,
                    "p50": 2068.742435,
                    "p95": 2207.893688,
                    "p99": 2207.893688,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.954475,
                    "min": 297.054505,
                    "p50": 331.23312699999997,
                    "p95": 348.954475,
                    "p99": 348.954475,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 612.968559,
                    "min": 566.452236,
                    "p50": 582.362367,
                    "p95": 612.968559,
                    "p99": 612.968559,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 529.582107,
                    "min": 481.297172,
                    "p50": 503.26530399999996,
                    "p95": 529.582107,
                    "p99": 529.582107,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.968332,
                    "min": 282.877795,
                    "p50": 293.12337199999996,
                    "p95": 306.968332,
                    "p99": 306.968332,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 922.582809,
                    "min": 853.141363,
                    "p50": 886.5533449999999,
                    "p95": 922.582809,
                    "p99": 922.582809,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.63004899999999,
                    "min": 192.59793,
                    "p50": 208.010508,
                    "p95": 215.63004899999999,
                    "p99": 215.63004899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 391.567982,
                    "min": 361.317011,
                    "p50": 380.983317,
                    "p95": 391.567982,
                    "p99": 391.567982,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 485.911811,
                    "min": 443.85217,
                    "p50": 459.287199,
                    "p95": 485.911811,
                    "p99": 485.911811,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 698.847176,
                    "min": 650.407999,
                    "p50": 672.7325159999999,
                    "p95": 698.847176,
                    "p99": 698.847176,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1369.989636,
                    "min": 1263.400678,
                    "p50": 1295.609164,
                    "p95": 1369.989636,
                    "p99": 1369.989636,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 564.9236159999999,
                    "min": 527.387397,
                    "p50": 544.194291,
                    "p95": 564.9236159999999,
                    "p99": 564.9236159999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 433.76989299999997,
                    "min": 399.47639399999997,
                    "p50": 417.87938099999997,
                    "p95": 433.76989299999997,
                    "p99": 433.76989299999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 250.85983399999998,
                    "min": 236.775829,
                    "p50": 244.940138,
                    "p95": 250.85983399999998,
                    "p99": 250.85983399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 655.504781,
                    "min": 591.0834209999999,
                    "p50": 632.674686,
                    "p95": 655.504781,
                    "p99": 655.504781,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 820.925713,
                    "min": 722.0523929999999,
                    "p50": 766.745489,
                    "p95": 820.925713,
                    "p99": 820.925713,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1824.301702,
                    "min": 1656.534379,
                    "p50": 1727.167013,
                    "p95": 1824.301702,
                    "p99": 1824.301702,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2265.913748,
                    "min": 2050.517137,
                    "p50": 2137.209818,
                    "p95": 2265.913748,
                    "p99": 2265.913748,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4483.02952,
                    "min": 4116.743457,
                    "p50": 4247.835497,
                    "p95": 4483.02952,
                    "p99": 4483.02952,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.31973,
                    "min": 136.691015,
                    "p50": 164.106711,
                    "p95": 175.31973,
                    "p99": 175.31973,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2193.4488699999997,
                    "min": 1996.631823,
                    "p50": 2052.751131,
                    "p95": 2193.4488699999997,
                    "p99": 2193.4488699999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 595.910582,
                    "min": 530.0991379999999,
                    "p50": 557.647378,
                    "p95": 595.910582,
                    "p99": 595.910582,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 469.70113799999996,
                    "min": 416.040459,
                    "p50": 437.09531499999997,
                    "p95": 469.70113799999996,
                    "p99": 469.70113799999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 682.914943,
                    "min": 608.6048539999999,
                    "p50": 651.258067,
                    "p95": 682.914943,
                    "p99": 682.914943,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.49992,
                    "min": 315.234062,
                    "p50": 326.57755499999996,
                    "p95": 341.49992,
                    "p99": 341.49992,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.31873399999998,
                    "min": 204.06510699999998,
                    "p50": 239.361255,
                    "p95": 252.31873399999998,
                    "p99": 252.31873399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.760921,
                    "min": 156.14603,
                    "p50": 159.788077,
                    "p95": 168.760921,
                    "p99": 168.760921,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 510.03306,
                    "min": 448.18762799999996,
                    "p50": 479.425186,
                    "p95": 510.03306,
                    "p99": 510.03306,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 785.512397,
                    "min": 713.608106,
                    "p50": 742.975779,
                    "p95": 785.512397,
                    "p99": 785.512397,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 294.88829499999997,
                    "min": 268.394786,
                    "p50": 281.907035,
                    "p95": 294.88829499999997,
                    "p99": 294.88829499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 378.600647,
                    "min": 345.99994599999997,
                    "p50": 360.082943,
                    "p95": 378.600647,
                    "p99": 378.600647,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 642.25569,
                    "min": 561.557641,
                    "p50": 604.157745,
                    "p95": 642.25569,
                    "p99": 642.25569,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1765.4049719999998,
                    "min": 1568.489486,
                    "p50": 1655.30272,
                    "p95": 1765.4049719999998,
                    "p99": 1765.4049719999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4406.066497,
                    "min": 3893.5676569999996,
                    "p50": 4083.6632959999997,
                    "p95": 4406.066497,
                    "p99": 4406.066497,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 432.447699,
                    "min": 393.92069999999995,
                    "p50": 403.60027399999996,
                    "p95": 432.447699,
                    "p99": 432.447699,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 899.9924659999999,
                    "min": 812.661585,
                    "p50": 847.4241099999999,
                    "p95": 899.9924659999999,
                    "p99": 899.9924659999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 550.005013,
                    "min": 497.67400799999996,
                    "p50": 522.7560119999999,
                    "p95": 550.005013,
                    "p99": 550.005013,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.881348,
                    "min": 185.748102,
                    "p50": 201.192368,
                    "p95": 209.881348,
                    "p99": 209.881348,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1337.318051,
                    "min": 1193.469776,
                    "p50": 1253.474633,
                    "p95": 1337.318051,
                    "p99": 1337.318051,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 815.752888,
                    "min": 700.9883639999999,
                    "p50": 754.463266,
                    "p95": 815.752888,
                    "p99": 815.752888,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 625.413063,
                    "min": 539.6218289999999,
                    "p50": 569.153462,
                    "p95": 625.413063,
                    "p99": 625.413063,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1010.622751,
                    "min": 871.330882,
                    "p50": 926.666071,
                    "p95": 1010.622751,
                    "p99": 1010.622751,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3969.730135,
                    "min": 3374.5459149999997,
                    "p50": 3585.0844439999996,
                    "p95": 3969.730135,
                    "p99": 3969.730135,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2590.000368,
                    "min": 2232.6483599999997,
                    "p50": 2362.46646,
                    "p95": 2590.000368,
                    "p99": 2590.000368,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2947.750032,
                    "min": 2526.081116,
                    "p50": 2705.110946,
                    "p95": 2947.750032,
                    "p99": 2947.750032,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3452.780355,
                    "min": 2973.316649,
                    "p50": 3123.637966,
                    "p95": 3452.780355,
                    "p99": 3452.780355,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1813.855454,
                    "min": 1558.3375919999999,
                    "p50": 1638.300759,
                    "p95": 1813.855454,
                    "p99": 1813.855454,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1219.551332,
                    "min": 1046.604594,
                    "p50": 1097.508327,
                    "p95": 1219.551332,
                    "p99": 1219.551332,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1626.8343659999998,
                    "min": 1381.769086,
                    "p50": 1448.1111389999999,
                    "p95": 1626.8343659999998,
                    "p99": 1626.8343659999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1406.455006,
                    "min": 1226.507286,
                    "p50": 1271.488361,
                    "p95": 1406.455006,
                    "p99": 1406.455006,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2000.437508,
                    "min": 1721.026069,
                    "p50": 1799.3893469999998,
                    "p95": 2000.437508,
                    "p99": 2000.437508,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2177.049285,
                    "min": 1915.156861,
                    "p50": 1988.30982,
                    "p95": 2177.049285,
                    "p99": 2177.049285,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2768.541945,
                    "min": 2374.261527,
                    "p50": 2497.0465799999997,
                    "p95": 2768.541945,
                    "p99": 2768.541945,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2371.615281,
                    "min": 2057.4311789999997,
                    "p50": 2155.276908,
                    "p95": 2371.615281,
                    "p99": 2371.615281,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2192.577222,
                    "min": 1881.751826,
                    "p50": 1998.980918,
                    "p95": 2192.577222,
                    "p99": 2192.577222,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2612.423007,
                    "min": 2208.365949,
                    "p50": 2332.724784,
                    "p95": 2612.423007,
                    "p99": 2612.423007,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2792.629314,
                    "min": 2377.276793,
                    "p50": 2535.813307,
                    "p95": 2792.629314,
                    "p99": 2792.629314,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 803.684899,
                    "min": 705.563767,
                    "p50": 743.332944,
                    "p95": 803.684899,
                    "p99": 803.684899,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1017.4317739999999,
                    "min": 886.4771119999999,
                    "p50": 921.840207,
                    "p95": 1017.4317739999999,
                    "p99": 1017.4317739999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1408.7588289999999,
                    "min": 1218.052144,
                    "p50": 1276.759045,
                    "p95": 1408.7588289999999,
                    "p99": 1408.7588289999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1207.627229,
                    "min": 1046.903697,
                    "p50": 1097.994027,
                    "p95": 1207.627229,
                    "p99": 1207.627229,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1998.938312,
                    "min": 1676.9369,
                    "p50": 1811.553193,
                    "p95": 1998.938312,
                    "p99": 1998.938312,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 628.240276,
                    "min": 544.632511,
                    "p50": 571.6458759999999,
                    "p95": 628.240276,
                    "p99": 628.240276,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1587.990746,
                    "min": 1396.392816,
                    "p50": 1445.770513,
                    "p95": 1587.990746,
                    "p99": 1587.990746,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3476.572475,
                    "min": 2971.846388,
                    "p50": 3128.7028259999997,
                    "p95": 3476.572475,
                    "p99": 3476.572475,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3978.588293,
                    "min": 3389.907698,
                    "p50": 3572.378824,
                    "p95": 3978.588293,
                    "p99": 3978.588293,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2964.690287,
                    "min": 2537.404874,
                    "p50": 2693.781923,
                    "p95": 2964.690287,
                    "p99": 2964.690287,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1795.121172,
                    "min": 1537.586947,
                    "p50": 1636.7422339999998,
                    "p95": 1795.121172,
                    "p99": 1795.121172,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2375.538553,
                    "min": 2047.461764,
                    "p50": 2149.845727,
                    "p95": 2375.538553,
                    "p99": 2375.538553,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2652.0617549999997,
                    "min": 2265.2804309999997,
                    "p50": 2397.645326,
                    "p95": 2652.0617549999997,
                    "p99": 2652.0617549999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2477.503898,
                    "min": 2151.691569,
                    "p50": 2223.366138,
                    "p95": 2477.503898,
                    "p99": 2477.503898,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2859.990563,
                    "min": 2474.130768,
                    "p50": 2564.317538,
                    "p95": 2859.990563,
                    "p99": 2859.990563,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3272.845163,
                    "min": 2855.476859,
                    "p50": 2981.3146079999997,
                    "p95": 3272.845163,
                    "p99": 3272.845163,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2271.7452989999997,
                    "min": 1992.0985719999999,
                    "p50": 2074.879187,
                    "p95": 2271.7452989999997,
                    "p99": 2271.7452989999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2079.7032289999997,
                    "min": 1809.3667599999999,
                    "p50": 1895.168718,
                    "p95": 2079.7032289999997,
                    "p99": 2079.7032289999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 595.045131,
                    "min": 504.13161699999995,
                    "p50": 540.679444,
                    "p95": 595.045131,
                    "p99": 595.045131,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3746.121335,
                    "min": 3220.4112149999996,
                    "p50": 3395.119206,
                    "p95": 3746.121335,
                    "p99": 3746.121335,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1906.7651919999998,
                    "min": 1626.682179,
                    "p50": 1721.740828,
                    "p95": 1906.7651919999998,
                    "p99": 1906.7651919999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1721.295003,
                    "min": 1494.529607,
                    "p50": 1548.460101,
                    "p95": 1721.295003,
                    "p99": 1721.295003,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1154.6331209999998,
                    "min": 1010.738387,
                    "p50": 1031.152822,
                    "p95": 1154.6331209999998,
                    "p99": 1154.6331209999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1556.9577359999998,
                    "min": 1266.9168029999998,
                    "p50": 1380.01469,
                    "p95": 1556.9577359999998,
                    "p99": 1556.9577359999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1345.43706,
                    "min": 1157.703642,
                    "p50": 1204.482634,
                    "p95": 1345.43706,
                    "p99": 1345.43706,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 784.75263,
                    "min": 678.06051,
                    "p50": 708.666714,
                    "p95": 784.75263,
                    "p99": 784.75263,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 970.6512899999999,
                    "min": 839.097775,
                    "p50": 877.8984079999999,
                    "p95": 970.6512899999999,
                    "p99": 970.6512899999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2780.061761,
                    "min": 2374.724962,
                    "p50": 2530.0821539999997,
                    "p95": 2780.061761,
                    "p99": 2780.061761,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2945.126344,
                    "min": 2573.544371,
                    "p50": 2691.938184,
                    "p95": 2945.126344,
                    "p99": 2945.126344,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2391.535805,
                    "min": 2037.729928,
                    "p50": 2165.161112,
                    "p95": 2391.535805,
                    "p99": 2391.535805,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3458.4277199999997,
                    "min": 2990.6325939999997,
                    "p50": 3138.0036959999998,
                    "p95": 3458.4277199999997,
                    "p99": 3458.4277199999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 817.310616,
                    "min": 712.838896,
                    "p50": 746.7087379999999,
                    "p95": 817.310616,
                    "p99": 817.310616,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2164.344867,
                    "min": 1877.685487,
                    "p50": 1977.006373,
                    "p95": 2164.344867,
                    "p99": 2164.344867,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3943.753668,
                    "min": 3389.546176,
                    "p50": 3587.3535829999996,
                    "p95": 3943.753668,
                    "p99": 3943.753668,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1208.060307,
                    "min": 1050.264489,
                    "p50": 1095.6790509999998,
                    "p95": 1208.060307,
                    "p99": 1208.060307,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1617.090634,
                    "min": 1385.615767,
                    "p50": 1442.192811,
                    "p95": 1617.090634,
                    "p99": 1617.090634,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1411.598074,
                    "min": 1207.656105,
                    "p50": 1264.5981749999999,
                    "p95": 1411.598074,
                    "p99": 1411.598074,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1011.93896,
                    "min": 879.599835,
                    "p50": 923.2121589999999,
                    "p95": 1011.93896,
                    "p99": 1011.93896,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1798.896294,
                    "min": 1541.1937149999999,
                    "p50": 1615.624221,
                    "p95": 1798.896294,
                    "p99": 1798.896294,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1992.691523,
                    "min": 1671.613232,
                    "p50": 1806.060861,
                    "p95": 1992.691523,
                    "p99": 1992.691523,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 618.27848,
                    "min": 537.692141,
                    "p50": 570.0553719999999,
                    "p95": 618.27848,
                    "p99": 618.27848,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2589.225649,
                    "min": 2216.7887849999997,
                    "p50": 2340.8127879999997,
                    "p95": 2589.225649,
                    "p99": 2589.225649,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1615.0020359999999,
                    "min": 1516.643267,
                    "p50": 1565.796815,
                    "p95": 1615.0020359999999,
                    "p99": 1615.0020359999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 961.0506919999999,
                    "min": 893.862298,
                    "p50": 957.89603,
                    "p95": 961.0506919999999,
                    "p99": 961.0506919999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1177.059,
                    "min": 1096.375969,
                    "p50": 1157.82296,
                    "p95": 1177.059,
                    "p99": 1177.059,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 751.705439,
                    "min": 712.428964,
                    "p50": 747.36267,
                    "p95": 751.705439,
                    "p99": 751.705439,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 673.444748,
                    "min": 630.512115,
                    "p50": 649.899283,
                    "p95": 673.444748,
                    "p99": 673.444748,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1055.313736,
                    "min": 999.61065,
                    "p50": 1052.290741,
                    "p95": 1055.313736,
                    "p99": 1055.313736,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 343.302218,
                    "min": 315.16216399999996,
                    "p50": 341.082537,
                    "p95": 343.302218,
                    "p99": 343.302218,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 448.81850699999995,
                    "min": 436.338547,
                    "p50": 443.06392999999997,
                    "p95": 448.81850699999995,
                    "p99": 448.81850699999995,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 858.109283,
                    "min": 813.7122499999999,
                    "p50": 850.3737299999999,
                    "p95": 858.109283,
                    "p99": 858.109283,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 554.737262,
                    "min": 515.991184,
                    "p50": 543.687645,
                    "p95": 554.737262,
                    "p99": 554.737262,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2092.4979829999997,
                    "min": 1999.2303789999999,
                    "p50": 2065.221916,
                    "p95": 2092.4979829999997,
                    "p99": 2092.4979829999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1264.241571,
                    "min": 1226.760243,
                    "p50": 1255.936952,
                    "p95": 1264.241571,
                    "p99": 1264.241571,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1814.365586,
                    "min": 1782.0866429999999,
                    "p50": 1810.770981,
                    "p95": 1814.365586,
                    "p99": 1814.365586,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1460.407514,
                    "min": 1437.2741999999998,
                    "p50": 1457.656131,
                    "p95": 1460.407514,
                    "p99": 1460.407514,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1370.528361,
                    "min": 1338.602991,
                    "p50": 1352.9496159999999,
                    "p95": 1370.528361,
                    "p99": 1370.528361,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3111.6271819999997,
                    "min": 3015.381934,
                    "p50": 3066.16171,
                    "p95": 3111.6271819999997,
                    "p99": 3111.6271819999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2150.930078,
                    "min": 1880.0309479999999,
                    "p50": 2063.643986,
                    "p95": 2150.930078,
                    "p99": 2150.930078,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1706.577,
                    "min": 1370.454338,
                    "p50": 1438.469995,
                    "p95": 1706.577,
                    "p99": 1706.577,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1986.8172339999999,
                    "min": 1623.0535089999998,
                    "p50": 1709.5460699999999,
                    "p95": 1986.8172339999999,
                    "p99": 1986.8172339999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3006.304769,
                    "min": 2524.5102589999997,
                    "p50": 2639.392426,
                    "p95": 3006.304769,
                    "p99": 3006.304769,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2630.7141619999998,
                    "min": 2176.677654,
                    "p50": 2299.149763,
                    "p95": 2630.7141619999998,
                    "p99": 2630.7141619999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1799.086865,
                    "min": 1492.53952,
                    "p50": 1581.774768,
                    "p95": 1799.086865,
                    "p99": 1799.086865,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 491.053392,
                    "min": 392.634489,
                    "p50": 429.535504,
                    "p95": 491.053392,
                    "p99": 491.053392,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 628.780352,
                    "min": 492.17521999999997,
                    "p50": 559.9958839999999,
                    "p95": 628.780352,
                    "p99": 628.780352,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1502.128968,
                    "min": 1247.87233,
                    "p50": 1339.0105409999999,
                    "p95": 1502.128968,
                    "p99": 1502.128968,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 917.576646,
                    "min": 768.1396249999999,
                    "p50": 830.514316,
                    "p95": 917.576646,
                    "p99": 917.576646,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1371.1424,
                    "min": 1141.352981,
                    "p50": 1183.856347,
                    "p95": 1371.1424,
                    "p99": 1371.1424,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 766.5053929999999,
                    "min": 652.150909,
                    "p50": 683.705071,
                    "p95": 766.5053929999999,
                    "p99": 766.5053929999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2079.619056,
                    "min": 1776.4577789999998,
                    "p50": 1843.925886,
                    "p95": 2079.619056,
                    "p99": 2079.619056,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1239.814912,
                    "min": 1025.348292,
                    "p50": 1075.910785,
                    "p95": 1239.814912,
                    "p99": 1239.814912,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1078.551895,
                    "min": 880.589294,
                    "p50": 949.3732669999999,
                    "p95": 1078.551895,
                    "p99": 1078.551895,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1461.762866,
                    "min": 1271.758384,
                    "p50": 1385.400692,
                    "p95": 1461.762866,
                    "p99": 1461.762866,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.986216,
                    "min": 490.328174,
                    "p50": 577.024512,
                    "p95": 616.986216,
                    "p99": 616.986216,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1194.559617,
                    "min": 1018.545986,
                    "p50": 1115.454681,
                    "p95": 1194.559617,
                    "p99": 1194.559617,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1051.846462,
                    "min": 893.566145,
                    "p50": 974.525226,
                    "p95": 1051.846462,
                    "p99": 1051.846462,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 863.445566,
                    "min": 757.2300309999999,
                    "p50": 846.5927439999999,
                    "p95": 863.445566,
                    "p99": 863.445566,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2149.307241,
                    "min": 1888.2949589999998,
                    "p50": 2054.423068,
                    "p95": 2149.307241,
                    "p99": 2149.307241,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1888.0212589999999,
                    "min": 1635.687698,
                    "p50": 1770.6377129999998,
                    "p95": 1888.0212589999999,
                    "p99": 1888.0212589999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2867.8318139999997,
                    "min": 2516.9826279999997,
                    "p50": 2725.668106,
                    "p95": 2867.8318139999997,
                    "p99": 2867.8318139999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4285.032225,
                    "min": 3740.765144,
                    "p50": 4085.392167,
                    "p95": 4285.032225,
                    "p99": 4285.032225,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1738.2100409999998,
                    "min": 1489.8565859999999,
                    "p50": 1654.4289729999998,
                    "p95": 1738.2100409999998,
                    "p99": 1738.2100409999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 757.853212,
                    "min": 641.901332,
                    "p50": 706.0862999999999,
                    "p95": 757.853212,
                    "p99": 757.853212,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1593.9562799999999,
                    "min": 1398.581156,
                    "p50": 1500.2542329999999,
                    "p95": 1593.9562799999999,
                    "p99": 1593.9562799999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 469.756877,
                    "min": 409.131735,
                    "p50": 432.613882,
                    "p95": 469.756877,
                    "p99": 469.756877,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2053.156437,
                    "min": 1763.713483,
                    "p50": 1900.95732,
                    "p95": 2053.156437,
                    "p99": 2053.156437,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2535.572615,
                    "min": 2192.8017409999998,
                    "p50": 2376.098637,
                    "p95": 2535.572615,
                    "p99": 2535.572615,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1320.23605,
                    "min": 1149.354853,
                    "p50": 1231.418313,
                    "p95": 1320.23605,
                    "p99": 1320.23605,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2396.747822,
                    "min": 2301.413904,
                    "p50": 2341.155933,
                    "p95": 2396.747822,
                    "p99": 2396.747822,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 567.368124,
                    "min": 532.944246,
                    "p50": 558.239595,
                    "p95": 567.368124,
                    "p99": 567.368124,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 388.45811399999997,
                    "min": 379.183831,
                    "p50": 385.751517,
                    "p95": 388.45811399999997,
                    "p99": 388.45811399999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 785.9214109999999,
                    "min": 714.1708219999999,
                    "p50": 733.959026,
                    "p95": 785.9214109999999,
                    "p99": 785.9214109999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.210517,
                    "min": 227.80217499999998,
                    "p50": 260.30181699999997,
                    "p95": 271.210517,
                    "p99": 271.210517,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1212.900733,
                    "min": 1155.361179,
                    "p50": 1201.296756,
                    "p95": 1212.900733,
                    "p99": 1212.900733,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 915.5324539999999,
                    "min": 861.214789,
                    "p50": 906.9811669999999,
                    "p95": 915.5324539999999,
                    "p99": 915.5324539999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 877.163363,
                    "min": 830.275484,
                    "p50": 848.057368,
                    "p95": 877.163363,
                    "p99": 877.163363,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.412441,
                    "min": 203.230473,
                    "p50": 210.989896,
                    "p95": 214.412441,
                    "p99": 214.412441,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 333.014819,
                    "min": 301.83303,
                    "p50": 327.736854,
                    "p95": 333.014819,
                    "p99": 333.014819,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1077.387065,
                    "min": 1002.6932029999999,
                    "p50": 1052.074522,
                    "p95": 1077.387065,
                    "p99": 1077.387065,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 503.35979199999997,
                    "min": 454.685972,
                    "p50": 495.71869999999996,
                    "p95": 503.35979199999997,
                    "p99": 503.35979199999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 685.724381,
                    "min": 660.085576,
                    "p50": 676.921117,
                    "p95": 685.724381,
                    "p99": 685.724381,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 449.83834099999996,
                    "min": 400.398176,
                    "p50": 441.086307,
                    "p95": 449.83834099999996,
                    "p99": 449.83834099999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 804.556787,
                    "min": 736.672068,
                    "p50": 791.6501989999999,
                    "p95": 804.556787,
                    "p99": 804.556787,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1801.56299,
                    "min": 1715.1140369999998,
                    "p50": 1774.481942,
                    "p95": 1801.56299,
                    "p99": 1801.56299,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2995.731182,
                    "min": 2816.955353,
                    "p50": 2941.0150599999997,
                    "p95": 2995.731182,
                    "p99": 2995.731182,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 626.488355,
                    "min": 596.180292,
                    "p50": 623.104293,
                    "p95": 626.488355,
                    "p99": 626.488355,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 468.619221,
                    "min": 441.39162899999997,
                    "p50": 463.63463099999996,
                    "p95": 468.619221,
                    "p99": 468.619221,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1267.72804,
                    "min": 1223.410819,
                    "p50": 1247.8998589999999,
                    "p95": 1267.72804,
                    "p99": 1267.72804,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1877.527987,
                    "min": 1798.678988,
                    "p50": 1849.8870259999999,
                    "p95": 1877.527987,
                    "p99": 1877.527987,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3110.623005,
                    "min": 3005.216241,
                    "p50": 3059.161498,
                    "p95": 3110.623005,
                    "p99": 3110.623005,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2506.614497,
                    "min": 2394.578093,
                    "p50": 2476.545957,
                    "p95": 2506.614497,
                    "p99": 2506.614497,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 529.584301,
                    "min": 485.65700899999996,
                    "p50": 526.318438,
                    "p95": 529.584301,
                    "p99": 529.584301,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1119.232392,
                    "min": 1059.182165,
                    "p50": 1106.577573,
                    "p95": 1119.232392,
                    "p99": 1119.232392,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 407.250433,
                    "min": 371.276054,
                    "p50": 403.378433,
                    "p95": 407.250433,
                    "p99": 407.250433,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 920.8963799999999,
                    "min": 839.2953339999999,
                    "p50": 891.363062,
                    "p95": 920.8963799999999,
                    "p99": 920.8963799999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 964.071382,
                    "min": 904.5152919999999,
                    "p50": 943.644743,
                    "p95": 964.071382,
                    "p99": 964.071382,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 282.587873,
                    "min": 270.433604,
                    "p50": 280.084122,
                    "p95": 282.587873,
                    "p99": 282.587873,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 720.7199059999999,
                    "min": 678.84829,
                    "p50": 705.1848289999999,
                    "p95": 720.7199059999999,
                    "p99": 720.7199059999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 776.496854,
                    "min": 744.61329,
                    "p50": 768.0451429999999,
                    "p95": 776.496854,
                    "p99": 776.496854,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.677331,
                    "min": 304.083798,
                    "p50": 341.10141999999996,
                    "p95": 345.677331,
                    "p99": 345.677331,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.752977,
                    "min": 202.356473,
                    "p50": 220.42229899999998,
                    "p95": 222.752977,
                    "p99": 222.752977,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 832.65351,
                    "min": 777.2009929999999,
                    "p50": 823.6452499999999,
                    "p95": 832.65351,
                    "p99": 832.65351,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 740.905186,
                    "min": 610.849192,
                    "p50": 648.869139,
                    "p95": 740.905186,
                    "p99": 740.905186,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 590.4073159999999,
                    "min": 534.024818,
                    "p50": 587.207393,
                    "p95": 590.4073159999999,
                    "p99": 590.4073159999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 979.179533,
                    "min": 932.831417,
                    "p50": 961.9568539999999,
                    "p95": 979.179533,
                    "p99": 979.179533,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1529.9873949999999,
                    "min": 1467.8873879999999,
                    "p50": 1497.44055,
                    "p95": 1529.9873949999999,
                    "p99": 1529.9873949999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1305.488509,
                    "min": 1268.1816019999999,
                    "p50": 1289.402987,
                    "p95": 1305.488509,
                    "p99": 1305.488509,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 355.207814,
                    "min": 339.947369,
                    "p50": 348.94694899999996,
                    "p95": 355.207814,
                    "p99": 355.207814,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2166.2444419999997,
                    "min": 2085.06567,
                    "p50": 2122.6522219999997,
                    "p95": 2166.2444419999997,
                    "p99": 2166.2444419999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 881.888912,
                    "min": 853.53503,
                    "p50": 867.842224,
                    "p95": 881.888912,
                    "p99": 881.888912,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 561.203681,
                    "min": 548.730071,
                    "p50": 554.002655,
                    "p95": 561.203681,
                    "p99": 561.203681,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1209.788678,
                    "min": 1135.068244,
                    "p50": 1180.3543519999998,
                    "p95": 1209.788678,
                    "p99": 1209.788678,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 668.460392,
                    "min": 642.017282,
                    "p50": 654.9364469999999,
                    "p95": 668.460392,
                    "p99": 668.460392,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1873.669655,
                    "min": 1829.3842929999998,
                    "p50": 1852.310855,
                    "p95": 1873.669655,
                    "p99": 1873.669655,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 455.57154699999995,
                    "min": 437.972065,
                    "p50": 450.893348,
                    "p95": 455.57154699999995,
                    "p99": 455.57154699999995,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1627.667391,
                    "min": 1565.526226,
                    "p50": 1596.6965149999999,
                    "p95": 1627.667391,
                    "p99": 1627.667391,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 781.482851,
                    "min": 741.1967539999999,
                    "p50": 768.7638,
                    "p95": 781.482851,
                    "p99": 781.482851,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1428.536752,
                    "min": 1366.00944,
                    "p50": 1400.7278179999998,
                    "p95": 1428.536752,
                    "p99": 1428.536752,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1101.262354,
                    "min": 1055.5505739999999,
                    "p50": 1078.726852,
                    "p95": 1101.262354,
                    "p99": 1101.262354,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 706.051069,
                    "min": 606.1502439999999,
                    "p50": 656.353483,
                    "p95": 706.051069,
                    "p99": 706.051069,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1928.886887,
                    "min": 1772.5394609999998,
                    "p50": 1867.551066,
                    "p95": 1928.886887,
                    "p99": 1928.886887,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1180.311046,
                    "min": 1090.20695,
                    "p50": 1143.166269,
                    "p95": 1180.311046,
                    "p99": 1180.311046,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1691.080248,
                    "min": 1555.618997,
                    "p50": 1641.9474679999998,
                    "p95": 1691.080248,
                    "p99": 1691.080248,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2577.275679,
                    "min": 2365.2509809999997,
                    "p50": 2492.20763,
                    "p95": 2577.275679,
                    "p99": 2577.275679,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1460.14084,
                    "min": 1316.579612,
                    "p50": 1395.1161029999998,
                    "p95": 1460.14084,
                    "p99": 1460.14084,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1827.557169,
                    "min": 1662.357515,
                    "p50": 1766.079771,
                    "p95": 1827.557169,
                    "p99": 1827.557169,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3864.9003009999997,
                    "min": 3536.055744,
                    "p50": 3727.052087,
                    "p95": 3864.9003009999997,
                    "p99": 3864.9003009999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 927.518592,
                    "min": 874.2504289999999,
                    "p50": 913.8167159999999,
                    "p95": 927.518592,
                    "p99": 927.518592,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 415.008761,
                    "min": 389.560651,
                    "p50": 400.087116,
                    "p95": 415.008761,
                    "p99": 415.008761,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1307.3546609999999,
                    "min": 1199.4318779999999,
                    "p50": 1268.252796,
                    "p95": 1307.3546609999999,
                    "p99": 1307.3546609999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 812.8116,
                    "min": 733.9592719999999,
                    "p50": 774.761722,
                    "p95": 812.8116,
                    "p99": 812.8116,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.099468,
                    "min": 500.918293,
                    "p50": 535.241616,
                    "p95": 555.099468,
                    "p99": 555.099468,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1070.173748,
                    "min": 970.886184,
                    "p50": 1024.597257,
                    "p95": 1070.173748,
                    "p99": 1070.173748,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2296.420526,
                    "min": 2056.695722,
                    "p50": 2216.587933,
                    "p95": 2296.420526,
                    "p99": 2296.420526,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1582.254906,
                    "min": 1426.48526,
                    "p50": 1528.844239,
                    "p95": 1582.254906,
                    "p99": 1582.254906,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1403.2721709999998,
                    "min": 1360.629411,
                    "p50": 1388.8980669999999,
                    "p95": 1403.2721709999998,
                    "p99": 1403.2721709999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1647.589288,
                    "min": 1594.935008,
                    "p50": 1626.7094009999998,
                    "p95": 1647.589288,
                    "p99": 1647.589288,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1770.297863,
                    "min": 1714.443088,
                    "p50": 1739.700396,
                    "p95": 1770.297863,
                    "p99": 1770.297863,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1070.7633799999999,
                    "min": 1047.668479,
                    "p50": 1062.483775,
                    "p95": 1070.7633799999999,
                    "p99": 1070.7633799999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 729.243555,
                    "min": 708.69252,
                    "p50": 719.6828429999999,
                    "p95": 729.243555,
                    "p99": 729.243555,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 958.1938739999999,
                    "min": 932.288375,
                    "p50": 945.2664189999999,
                    "p95": 958.1938739999999,
                    "p99": 958.1938739999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 500.15358799999996,
                    "min": 478.05283,
                    "p50": 493.479266,
                    "p95": 500.15358799999996,
                    "p99": 500.15358799999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 616.051399,
                    "min": 576.1741089999999,
                    "p50": 605.851042,
                    "p95": 616.051399,
                    "p99": 616.051399,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1185.234375,
                    "min": 1155.909429,
                    "p50": 1173.9566829999999,
                    "p95": 1185.234375,
                    "p99": 1185.234375,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 865.55868,
                    "min": 808.5676249999999,
                    "p50": 832.365092,
                    "p95": 865.55868,
                    "p99": 865.55868,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2330.957215,
                    "min": 2266.78642,
                    "p50": 2311.765957,
                    "p95": 2330.957215,
                    "p99": 2330.957215,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1304.1320779999999,
                    "min": 1261.970523,
                    "p50": 1288.560052,
                    "p95": 1304.1320779999999,
                    "p99": 1304.1320779999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2028.3349329999999,
                    "min": 1974.578526,
                    "p50": 2024.835192,
                    "p95": 2028.3349329999999,
                    "p99": 2028.3349329999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 388.99447499999997,
                    "min": 367.667586,
                    "p50": 378.1416,
                    "p95": 388.99447499999997,
                    "p99": 388.99447499999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1522.8334089999998,
                    "min": 1463.144828,
                    "p50": 1512.270714,
                    "p95": 1522.8334089999998,
                    "p99": 1522.8334089999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1036.197662,
                    "min": 953.2312979999999,
                    "p50": 986.47789,
                    "p95": 1036.197662,
                    "p99": 1036.197662,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 531.148511,
                    "min": 496.18346099999997,
                    "p50": 510.04769699999997,
                    "p95": 531.148511,
                    "p99": 531.148511,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 367.334527,
                    "min": 337.969807,
                    "p50": 351.16042999999996,
                    "p95": 367.334527,
                    "p99": 367.334527,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 284.720381,
                    "min": 256.72815099999997,
                    "p50": 271.040254,
                    "p95": 284.720381,
                    "p99": 284.720381,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1092.174202,
                    "min": 1041.284068,
                    "p50": 1058.768329,
                    "p95": 1092.174202,
                    "p99": 1092.174202,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1265.5768,
                    "min": 1177.819058,
                    "p50": 1213.943031,
                    "p95": 1265.5768,
                    "p99": 1265.5768,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 779.677611,
                    "min": 710.405416,
                    "p50": 745.525253,
                    "p95": 779.677611,
                    "p99": 779.677611,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1684.331929,
                    "min": 1553.915332,
                    "p50": 1617.2323649999998,
                    "p95": 1684.331929,
                    "p99": 1684.331929,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 860.532697,
                    "min": 791.920804,
                    "p50": 824.907214,
                    "p95": 860.532697,
                    "p99": 860.532697,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 611.903688,
                    "min": 579.6916219999999,
                    "p50": 588.225224,
                    "p95": 611.903688,
                    "p99": 611.903688,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1462.951134,
                    "min": 1374.358741,
                    "p50": 1431.951351,
                    "p95": 1462.951134,
                    "p99": 1462.951134,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1183.913927,
                    "min": 1120.010869,
                    "p50": 1142.785737,
                    "p95": 1183.913927,
                    "p99": 1183.913927,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 451.394054,
                    "min": 424.497842,
                    "p50": 433.062733,
                    "p95": 451.394054,
                    "p99": 451.394054,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 696.039053,
                    "min": 636.775803,
                    "p50": 675.593454,
                    "p95": 696.039053,
                    "p99": 696.039053,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2479.291997,
                    "min": 2339.206678,
                    "p50": 2438.041468,
                    "p95": 2479.291997,
                    "p99": 2479.291997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 948.15869,
                    "min": 883.6382199999999,
                    "p50": 906.320151,
                    "p95": 948.15869,
                    "p99": 948.15869,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3310.04942,
                    "min": 3121.9299349999997,
                    "p50": 3243.868329,
                    "p95": 3310.04942,
                    "p99": 3310.04942,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1076.190638,
                    "min": 1003.416566,
                    "p50": 1055.630882,
                    "p95": 1076.190638,
                    "p99": 1076.190638,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 556.298138,
                    "min": 518.7505629999999,
                    "p50": 547.354428,
                    "p95": 556.298138,
                    "p99": 556.298138,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2123.910675,
                    "min": 2044.614584,
                    "p50": 2100.227885,
                    "p95": 2123.910675,
                    "p99": 2123.910675,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1508.71688,
                    "min": 1413.41782,
                    "p50": 1479.78541,
                    "p95": 1508.71688,
                    "p99": 1508.71688,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 672.892797,
                    "min": 636.46903,
                    "p50": 656.7565149999999,
                    "p95": 672.892797,
                    "p99": 672.892797,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1593.7759159999998,
                    "min": 1531.118919,
                    "p50": 1573.9441749999999,
                    "p95": 1593.7759159999998,
                    "p99": 1593.7759159999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 767.6078299999999,
                    "min": 725.63668,
                    "p50": 754.661982,
                    "p95": 767.6078299999999,
                    "p99": 767.6078299999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1287.4365659999999,
                    "min": 1232.322489,
                    "p50": 1267.385781,
                    "p95": 1287.4365659999999,
                    "p99": 1287.4365659999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 980.9939989999999,
                    "min": 927.148645,
                    "p50": 960.829076,
                    "p95": 980.9939989999999,
                    "p99": 980.9939989999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1401.140661,
                    "min": 1345.947621,
                    "p50": 1364.910044,
                    "p95": 1401.140661,
                    "p99": 1401.140661,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1863.238609,
                    "min": 1782.079784,
                    "p50": 1824.717672,
                    "p95": 1863.238609,
                    "p99": 1863.238609,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 869.575651,
                    "min": 808.547886,
                    "p50": 849.916717,
                    "p95": 869.575651,
                    "p99": 869.575651,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1182.247687,
                    "min": 1134.596597,
                    "p50": 1159.59775,
                    "p95": 1182.247687,
                    "p99": 1182.247687,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 349.606139,
                    "min": 319.06931299999997,
                    "p50": 343.60517999999996,
                    "p95": 349.606139,
                    "p99": 349.606139,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 456.799834,
                    "min": 419.56271899999996,
                    "p50": 447.023535,
                    "p95": 456.799834,
                    "p99": 456.799834,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1433.759904,
                    "min": 1332.903063,
                    "p50": 1372.123443,
                    "p95": 1433.759904,
                    "p99": 1433.759904,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 635.864387,
                    "min": 552.16709,
                    "p50": 573.766097,
                    "p95": 635.864387,
                    "p99": 635.864387,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1696.3561579999998,
                    "min": 1608.987126,
                    "p50": 1653.9123969999998,
                    "p95": 1696.3561579999998,
                    "p99": 1696.3561579999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1954.4060579999998,
                    "min": 1881.5781769999999,
                    "p50": 1927.8723229999998,
                    "p95": 1954.4060579999998,
                    "p99": 1954.4060579999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 727.076316,
                    "min": 696.180538,
                    "p50": 710.5223119999999,
                    "p95": 727.076316,
                    "p99": 727.076316,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1266.191625,
                    "min": 1226.057901,
                    "p50": 1247.117341,
                    "p95": 1266.191625,
                    "p99": 1266.191625,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1140.171773,
                    "min": 1095.2565,
                    "p50": 1120.045913,
                    "p95": 1140.171773,
                    "p99": 1140.171773,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 856.562952,
                    "min": 828.9917449999999,
                    "p50": 846.466911,
                    "p95": 856.562952,
                    "p99": 856.562952,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 448.682623,
                    "min": 431.44618099999997,
                    "p50": 443.367575,
                    "p95": 448.682623,
                    "p99": 448.682623,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2443.562238,
                    "min": 2341.7592179999997,
                    "p50": 2396.637089,
                    "p95": 2443.562238,
                    "p99": 2443.562238,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1549.4008919999999,
                    "min": 1476.0267139999999,
                    "p50": 1520.170963,
                    "p95": 1549.4008919999999,
                    "p99": 1549.4008919999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1840.2919419999998,
                    "min": 1742.439815,
                    "p50": 1795.297748,
                    "p95": 1840.2919419999998,
                    "p99": 1840.2919419999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2784.343144,
                    "min": 2655.939405,
                    "p50": 2725.5311269999997,
                    "p95": 2784.343144,
                    "p99": 2784.343144,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2094.563724,
                    "min": 2002.690995,
                    "p50": 2049.294532,
                    "p95": 2094.563724,
                    "p99": 2094.563724,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 996.157612,
                    "min": 958.1519209999999,
                    "p50": 971.269012,
                    "p95": 996.157612,
                    "p99": 996.157612,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1852.1273219999998,
                    "min": 1786.7566259999999,
                    "p50": 1815.7827029999999,
                    "p95": 1852.1273219999998,
                    "p99": 1852.1273219999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1076.2454189999999,
                    "min": 1043.1641769999999,
                    "p50": 1053.100726,
                    "p95": 1076.2454189999999,
                    "p99": 1076.2454189999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1513.510615,
                    "min": 1458.961482,
                    "p50": 1475.771225,
                    "p95": 1513.510615,
                    "p99": 1513.510615,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1613.0192729999999,
                    "min": 1556.86175,
                    "p50": 1581.7493949999998,
                    "p95": 1613.0192729999999,
                    "p99": 1613.0192729999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2106.610196,
                    "min": 2050.2172419999997,
                    "p50": 2079.1003929999997,
                    "p95": 2106.610196,
                    "p99": 2106.610196,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1171.8578599999998,
                    "min": 1136.315658,
                    "p50": 1164.422065,
                    "p95": 1171.8578599999998,
                    "p99": 1171.8578599999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 652.777802,
                    "min": 638.6321909999999,
                    "p50": 645.874699,
                    "p95": 652.777802,
                    "p99": 652.777802,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 869.13328,
                    "min": 823.708897,
                    "p50": 858.959967,
                    "p95": 869.13328,
                    "p99": 869.13328,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1407.47941,
                    "min": 1343.3423599999999,
                    "p50": 1376.9859979999999,
                    "p95": 1407.47941,
                    "p99": 1407.47941,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1284.69841,
                    "min": 1245.100616,
                    "p50": 1268.715692,
                    "p95": 1284.69841,
                    "p99": 1284.69841,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3150.9242959999997,
                    "min": 3051.655168,
                    "p50": 3107.340052,
                    "p95": 3150.9242959999997,
                    "p99": 3150.9242959999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 762.227324,
                    "min": 739.201856,
                    "p50": 746.4735969999999,
                    "p95": 762.227324,
                    "p99": 762.227324,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 348.891289,
                    "min": 312.248476,
                    "p50": 344.732121,
                    "p95": 348.891289,
                    "p99": 348.891289,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 557.684347,
                    "min": 526.599833,
                    "p50": 550.779376,
                    "p95": 557.684347,
                    "p99": 557.684347,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 976.697784,
                    "min": 937.10312,
                    "p50": 958.2565229999999,
                    "p95": 976.697784,
                    "p99": 976.697784,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 449.443048,
                    "min": 415.439998,
                    "p50": 446.94451599999996,
                    "p95": 449.443048,
                    "p99": 449.443048,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1577.37032,
                    "min": 1523.790611,
                    "p50": 1561.576554,
                    "p95": 1577.37032,
                    "p99": 1577.37032,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 761.955459,
                    "min": 721.811616,
                    "p50": 750.7314389999999,
                    "p95": 761.955459,
                    "p99": 761.955459,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 352.127617,
                    "min": 313.20678899999996,
                    "p50": 339.99213,
                    "p95": 352.127617,
                    "p99": 352.127617,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 452.058564,
                    "min": 415.900912,
                    "p50": 446.438106,
                    "p95": 452.058564,
                    "p99": 452.058564,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1078.978786,
                    "min": 1037.791186,
                    "p50": 1062.509452,
                    "p95": 1078.978786,
                    "p99": 1078.978786,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 671.040451,
                    "min": 635.38131,
                    "p50": 653.035396,
                    "p95": 671.040451,
                    "p99": 671.040451,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2125.919167,
                    "min": 2048.310007,
                    "p50": 2089.498824,
                    "p95": 2125.919167,
                    "p99": 2125.919167,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 561.45226,
                    "min": 536.9644,
                    "p50": 549.382295,
                    "p95": 561.45226,
                    "p99": 561.45226,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1181.240588,
                    "min": 1133.9416489999999,
                    "p50": 1169.2268629999999,
                    "p95": 1181.240588,
                    "p99": 1181.240588,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 871.2778559999999,
                    "min": 839.592984,
                    "p50": 859.771767,
                    "p95": 871.2778559999999,
                    "p99": 871.2778559999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1281.448249,
                    "min": 1239.293021,
                    "p50": 1268.006079,
                    "p95": 1281.448249,
                    "p99": 1281.448249,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1421.236385,
                    "min": 1334.993184,
                    "p50": 1375.8105819999998,
                    "p95": 1421.236385,
                    "p99": 1421.236385,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1871.936557,
                    "min": 1792.188389,
                    "p50": 1843.968005,
                    "p95": 1871.936557,
                    "p99": 1871.936557,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1504.515442,
                    "min": 1439.87188,
                    "p50": 1473.4578159999999,
                    "p95": 1504.515442,
                    "p99": 1504.515442,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 978.9909779999999,
                    "min": 936.4199279999999,
                    "p50": 962.064214,
                    "p95": 978.9909779999999,
                    "p99": 978.9909779999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 535.420438,
                    "min": 518.508665,
                    "p50": 534.017352,
                    "p95": 535.420438,
                    "p99": 535.420438,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1929.571943,
                    "min": 1858.26468,
                    "p50": 1909.53946,
                    "p95": 1929.571943,
                    "p99": 1929.571943,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1424.200546,
                    "min": 1372.320995,
                    "p50": 1402.112739,
                    "p95": 1424.200546,
                    "p99": 1424.200546,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1165.139152,
                    "min": 1093.16692,
                    "p50": 1160.3482139999999,
                    "p95": 1165.139152,
                    "p99": 1165.139152,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 794.8206399999999,
                    "min": 754.5289,
                    "p50": 782.0140719999999,
                    "p95": 794.8206399999999,
                    "p99": 794.8206399999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 417.423661,
                    "min": 391.217287,
                    "p50": 412.525356,
                    "p95": 417.423661,
                    "p99": 417.423661,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 668.356755,
                    "min": 639.853116,
                    "p50": 659.823308,
                    "p95": 668.356755,
                    "p99": 668.356755,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1805.642038,
                    "min": 1750.562982,
                    "p50": 1780.0775219999998,
                    "p95": 1805.642038,
                    "p99": 1805.642038,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2244.153927,
                    "min": 2157.335346,
                    "p50": 2219.664876,
                    "p95": 2244.153927,
                    "p99": 2244.153927,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 924.965922,
                    "min": 880.3471639999999,
                    "p50": 907.6260249999999,
                    "p95": 924.965922,
                    "p99": 924.965922,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1298.194254,
                    "min": 1240.50187,
                    "p50": 1284.179562,
                    "p95": 1298.194254,
                    "p99": 1298.194254,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2562.061299,
                    "min": 2458.435638,
                    "p50": 2532.672806,
                    "p95": 2562.061299,
                    "p99": 2562.061299,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1560.563412,
                    "min": 1480.30858,
                    "p50": 1527.311064,
                    "p95": 1560.563412,
                    "p99": 1560.563412,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1054.061751,
                    "min": 1015.4971439999999,
                    "p50": 1038.53813,
                    "p95": 1054.061751,
                    "p99": 1054.061751,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1686.986457,
                    "min": 1613.9271509999999,
                    "p50": 1677.155742,
                    "p95": 1686.986457,
                    "p99": 1686.986457,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2515.815675,
                    "min": 2420.601695,
                    "p50": 2493.773642,
                    "p95": 2515.815675,
                    "p99": 2515.815675,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1388.656119,
                    "min": 1312.9215609999999,
                    "p50": 1346.7408719999999,
                    "p95": 1388.656119,
                    "p99": 1388.656119,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1722.5421629999998,
                    "min": 1614.069694,
                    "p50": 1682.765686,
                    "p95": 1722.5421629999998,
                    "p99": 1722.5421629999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1895.9116179999999,
                    "min": 1762.2428479999999,
                    "p50": 1836.773225,
                    "p95": 1895.9116179999999,
                    "p99": 1895.9116179999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2388.596568,
                    "min": 2272.3939969999997,
                    "p50": 2337.466598,
                    "p95": 2388.596568,
                    "p99": 2388.596568,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2210.5519099999997,
                    "min": 2076.535736,
                    "p50": 2163.795681,
                    "p95": 2210.5519099999997,
                    "p99": 2210.5519099999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 699.479788,
                    "min": 666.204782,
                    "p50": 687.4912449999999,
                    "p95": 699.479788,
                    "p99": 699.479788,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1560.433204,
                    "min": 1458.554402,
                    "p50": 1522.0043349999999,
                    "p95": 1560.433204,
                    "p99": 1560.433204,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2061.645299,
                    "min": 1917.387158,
                    "p50": 2018.977028,
                    "p95": 2061.645299,
                    "p99": 2061.645299,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2986.290046,
                    "min": 2773.685723,
                    "p50": 2910.0057629999997,
                    "p95": 2986.290046,
                    "p99": 2986.290046,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 878.835217,
                    "min": 813.1840649999999,
                    "p50": 848.8797539999999,
                    "p95": 878.835217,
                    "p99": 878.835217,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1221.3374529999999,
                    "min": 1153.551835,
                    "p50": 1181.591495,
                    "p95": 1221.3374529999999,
                    "p99": 1221.3374529999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 545.4499089999999,
                    "min": 484.52126,
                    "p50": 529.0133139999999,
                    "p95": 545.4499089999999,
                    "p99": 545.4499089999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1050.863107,
                    "min": 957.427279,
                    "p50": 1029.5771949999998,
                    "p95": 1050.863107,
                    "p99": 1050.863107,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3398.429374,
                    "min": 3215.8578909999997,
                    "p50": 3309.020341,
                    "p95": 3398.429374,
                    "p99": 3398.429374,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3405.7943,
                    "min": 3225.3513869999997,
                    "p50": 3344.258605,
                    "p95": 3405.7943,
                    "p99": 3405.7943,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2409.804709,
                    "min": 2251.59434,
                    "p50": 2365.220673,
                    "p95": 2409.804709,
                    "p99": 2409.804709,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2050.746605,
                    "min": 1959.849393,
                    "p50": 2026.9268339999999,
                    "p95": 2050.746605,
                    "p99": 2050.746605,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1563.123028,
                    "min": 1482.6194859999998,
                    "p50": 1513.035977,
                    "p95": 1563.123028,
                    "p99": 1563.123028,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1389.278932,
                    "min": 1315.9077089999998,
                    "p50": 1361.057486,
                    "p95": 1389.278932,
                    "p99": 1389.278932,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1058.52856,
                    "min": 990.9914359999999,
                    "p50": 1021.2780759999999,
                    "p95": 1058.52856,
                    "p99": 1058.52856,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2230.702346,
                    "min": 2086.947677,
                    "p50": 2168.807766,
                    "p95": 2230.702346,
                    "p99": 2230.702346,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 717.081543,
                    "min": 649.666936,
                    "p50": 698.7112189999999,
                    "p95": 717.081543,
                    "p99": 717.081543,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1924.1833789999998,
                    "min": 1773.577042,
                    "p50": 1847.8199149999998,
                    "p95": 1924.1833789999998,
                    "p99": 1924.1833789999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 895.43727,
                    "min": 822.2602969999999,
                    "p50": 863.3210909999999,
                    "p95": 895.43727,
                    "p99": 895.43727,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3008.018658,
                    "min": 2815.210106,
                    "p50": 2929.343641,
                    "p95": 3008.018658,
                    "p99": 3008.018658,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 546.1448399999999,
                    "min": 497.310112,
                    "p50": 532.633701,
                    "p95": 546.1448399999999,
                    "p99": 546.1448399999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1200.151302,
                    "min": 1135.246414,
                    "p50": 1188.147544,
                    "p95": 1200.151302,
                    "p99": 1200.151302,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2583.5696009999997,
                    "min": 2408.827099,
                    "p50": 2515.2468759999997,
                    "p95": 2583.5696009999997,
                    "p99": 2583.5696009999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1731.1716589999999,
                    "min": 1633.9486689999999,
                    "p50": 1679.5827669999999,
                    "p95": 1731.1716589999999,
                    "p99": 1731.1716589999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1916.9911299999999,
                    "min": 1813.8985539999999,
                    "p50": 1876.593334,
                    "p95": 1916.9911299999999,
                    "p99": 1916.9911299999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1062.1572919999999,
                    "min": 1002.270667,
                    "p50": 1040.681869,
                    "p95": 1062.1572919999999,
                    "p99": 1062.1572919999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 890.790501,
                    "min": 828.532649,
                    "p50": 873.7967709999999,
                    "p95": 890.790501,
                    "p99": 890.790501,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1745.4649519999998,
                    "min": 1643.410408,
                    "p50": 1692.363016,
                    "p95": 1745.4649519999998,
                    "p99": 1745.4649519999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3427.313522,
                    "min": 3237.804181,
                    "p50": 3354.8312379999998,
                    "p95": 3427.313522,
                    "p99": 3427.313522,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 730.856814,
                    "min": 657.4345509999999,
                    "p50": 702.721778,
                    "p95": 730.856814,
                    "p99": 730.856814,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1244.327202,
                    "min": 1149.668074,
                    "p50": 1198.197893,
                    "p95": 1244.327202,
                    "p99": 1244.327202,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 542.459246,
                    "min": 514.167649,
                    "p50": 538.397646,
                    "p95": 542.459246,
                    "p99": 542.459246,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2589.667909,
                    "min": 2456.3169519999997,
                    "p50": 2518.34012,
                    "p95": 2589.667909,
                    "p99": 2589.667909,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2433.4112529999998,
                    "min": 2281.834539,
                    "p50": 2353.7524009999997,
                    "p95": 2433.4112529999998,
                    "p99": 2433.4112529999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2095.271246,
                    "min": 1914.0510769999999,
                    "p50": 2054.828252,
                    "p95": 2095.271246,
                    "p99": 2095.271246,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2265.441108,
                    "min": 2104.487286,
                    "p50": 2191.043981,
                    "p95": 2265.441108,
                    "p99": 2265.441108,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1595.148729,
                    "min": 1507.572473,
                    "p50": 1536.5672869999999,
                    "p95": 1595.148729,
                    "p99": 1595.148729,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3026.905938,
                    "min": 2817.668949,
                    "p50": 2937.632748,
                    "p95": 3026.905938,
                    "p99": 3026.905938,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1410.386816,
                    "min": 1342.045921,
                    "p50": 1360.6006439999999,
                    "p95": 1410.386816,
                    "p99": 1410.386816,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 822.500783,
                    "min": 761.341767,
                    "p50": 810.6397039999999,
                    "p95": 822.500783,
                    "p99": 822.500783,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.19217,
                    "min": 434.780684,
                    "p50": 452.431422,
                    "p95": 461.19217,
                    "p99": 461.19217,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 951.6040519999999,
                    "min": 891.531035,
                    "p50": 936.368847,
                    "p95": 951.6040519999999,
                    "p99": 951.6040519999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1089.6373999999998,
                    "min": 1050.899296,
                    "p50": 1084.491564,
                    "p95": 1089.6373999999998,
                    "p99": 1089.6373999999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.63446299999998,
                    "min": 181.893229,
                    "p50": 214.224326,
                    "p95": 221.63446299999998,
                    "p99": 221.63446299999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 758.805114,
                    "min": 727.3139199999999,
                    "p50": 750.9144289999999,
                    "p95": 758.805114,
                    "p99": 758.805114,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 400.079529,
                    "min": 381.217611,
                    "p50": 397.05557699999997,
                    "p95": 400.079529,
                    "p99": 400.079529,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 295.048776,
                    "min": 259.03515999999996,
                    "p50": 272.937472,
                    "p95": 295.048776,
                    "p99": 295.048776,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1920.346853,
                    "min": 1771.594725,
                    "p50": 1826.153343,
                    "p95": 1920.346853,
                    "p99": 1920.346853,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 580.5620279999999,
                    "min": 560.424297,
                    "p50": 573.73676,
                    "p95": 580.5620279999999,
                    "p99": 580.5620279999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 700.7618749999999,
                    "min": 656.774375,
                    "p50": 694.086246,
                    "p95": 700.7618749999999,
                    "p99": 700.7618749999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 886.282015,
                    "min": 839.465277,
                    "p50": 873.952188,
                    "p95": 886.282015,
                    "p99": 886.282015,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 336.956595,
                    "min": 297.555952,
                    "p50": 335.119434,
                    "p95": 336.956595,
                    "p99": 336.956595,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3059.50681,
                    "min": 2985.275534,
                    "p50": 3035.229307,
                    "p95": 3059.50681,
                    "p99": 3059.50681,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1248.5537319999999,
                    "min": 1214.732432,
                    "p50": 1222.222765,
                    "p95": 1248.5537319999999,
                    "p99": 1248.5537319999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 643.973717,
                    "min": 609.466044,
                    "p50": 631.731229,
                    "p95": 643.973717,
                    "p99": 643.973717,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 525.140211,
                    "min": 488.768894,
                    "p50": 516.0719379999999,
                    "p95": 525.140211,
                    "p99": 525.140211,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2456.3124009999997,
                    "min": 2363.220244,
                    "p50": 2417.399774,
                    "p95": 2456.3124009999997,
                    "p99": 2456.3124009999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2763.905557,
                    "min": 2663.109888,
                    "p50": 2741.040298,
                    "p95": 2763.905557,
                    "p99": 2763.905557,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 863.509337,
                    "min": 818.362206,
                    "p50": 838.281901,
                    "p95": 863.509337,
                    "p99": 863.509337,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1821.929526,
                    "min": 1761.227109,
                    "p50": 1801.110604,
                    "p95": 1821.929526,
                    "p99": 1821.929526,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1270.0363089999998,
                    "min": 1217.470911,
                    "p50": 1240.8050349999999,
                    "p95": 1270.0363089999998,
                    "p99": 1270.0363089999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1406.0331979999999,
                    "min": 1346.117009,
                    "p50": 1380.497758,
                    "p95": 1406.0331979999999,
                    "p99": 1406.0331979999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 454.694409,
                    "min": 413.97178099999996,
                    "p50": 439.402994,
                    "p95": 454.694409,
                    "p99": 454.694409,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1542.8286269999999,
                    "min": 1490.317992,
                    "p50": 1521.44714,
                    "p95": 1542.8286269999999,
                    "p99": 1542.8286269999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 731.258553,
                    "min": 684.281711,
                    "p50": 706.738304,
                    "p95": 731.258553,
                    "p99": 731.258553,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1962.4410209999999,
                    "min": 1888.1258579999999,
                    "p50": 1930.1644749999998,
                    "p95": 1962.4410209999999,
                    "p99": 1962.4410209999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1129.062926,
                    "min": 1097.0014119999998,
                    "p50": 1117.087158,
                    "p95": 1129.062926,
                    "p99": 1129.062926,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2440.054879,
                    "min": 2357.631223,
                    "p50": 2418.158727,
                    "p95": 2440.054879,
                    "p99": 2440.054879,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1687.815212,
                    "min": 1630.46308,
                    "p50": 1664.584911,
                    "p95": 1687.815212,
                    "p99": 1687.815212,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 996.205344,
                    "min": 932.0498409999999,
                    "p50": 980.701422,
                    "p95": 996.205344,
                    "p99": 996.205344,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 584.211403,
                    "min": 545.073533,
                    "p50": 573.978672,
                    "p95": 584.211403,
                    "p99": 584.211403,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2094.029885,
                    "min": 2031.854539,
                    "p50": 2066.623648,
                    "p95": 2094.029885,
                    "p99": 2094.029885,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4128.270749,
                    "min": 4022.116658,
                    "p50": 4071.8277129999997,
                    "p95": 4128.270749,
                    "p99": 4128.270749,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 919.391049,
                    "min": 890.3975449999999,
                    "p50": 898.493034,
                    "p95": 919.391049,
                    "p99": 919.391049,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1030.348457,
                    "min": 997.181931,
                    "p50": 1005.636755,
                    "p95": 1030.348457,
                    "p99": 1030.348457,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 537.31674,
                    "min": 515.638119,
                    "p50": 519.0517209999999,
                    "p95": 537.31674,
                    "p99": 537.31674,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 835.673506,
                    "min": 806.487703,
                    "p50": 814.927231,
                    "p95": 835.673506,
                    "p99": 835.673506,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1449.058284,
                    "min": 1384.0811199999998,
                    "p50": 1400.856513,
                    "p95": 1449.058284,
                    "p99": 1449.058284,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 334.995253,
                    "min": 316.262277,
                    "p50": 326.85855799999996,
                    "p95": 334.995253,
                    "p99": 334.995253,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3025.1045489999997,
                    "min": 2927.670338,
                    "p50": 2962.998211,
                    "p95": 3025.1045489999997,
                    "p99": 3025.1045489999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1130.159473,
                    "min": 1089.369109,
                    "p50": 1112.7434879999998,
                    "p95": 1130.159473,
                    "p99": 1130.159473,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1340.2303709999999,
                    "min": 1288.701061,
                    "p50": 1304.64916,
                    "p95": 1340.2303709999999,
                    "p99": 1340.2303709999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 632.205476,
                    "min": 609.108758,
                    "p50": 621.029909,
                    "p95": 632.205476,
                    "p99": 632.205476,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1779.348325,
                    "min": 1722.188095,
                    "p50": 1750.812285,
                    "p95": 1779.348325,
                    "p99": 1779.348325,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1225.318812,
                    "min": 1189.852961,
                    "p50": 1206.100316,
                    "p95": 1225.318812,
                    "p99": 1225.318812,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 745.011002,
                    "min": 696.604476,
                    "p50": 717.330691,
                    "p95": 745.011002,
                    "p99": 745.011002,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3990.593039,
                    "min": 3890.796458,
                    "p50": 3946.1253939999997,
                    "p95": 3990.593039,
                    "p99": 3990.593039,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 431.546784,
                    "min": 410.481837,
                    "p50": 425.460114,
                    "p95": 431.546784,
                    "p99": 431.546784,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1515.7885469999999,
                    "min": 1477.29033,
                    "p50": 1495.47841,
                    "p95": 1515.7885469999999,
                    "p99": 1515.7885469999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2021.955466,
                    "min": 1957.4305009999998,
                    "p50": 1981.409442,
                    "p95": 2021.955466,
                    "p99": 2021.955466,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom8Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}