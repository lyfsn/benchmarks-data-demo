{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1040.652938,
                    "min": 626.458702,
                    "p50": 715.452696,
                    "p95": 1040.652938,
                    "p99": 1040.652938,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 307.112486,
                    "min": 292.381661,
                    "p50": 298.75728799999996,
                    "p95": 307.112486,
                    "p99": 307.112486,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 482.783523,
                    "min": 447.292427,
                    "p50": 479.13755,
                    "p95": 482.783523,
                    "p99": 482.783523,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 428.543045,
                    "min": 411.806983,
                    "p50": 414.854871,
                    "p95": 428.543045,
                    "p99": 428.543045,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 352.14928499999996,
                    "min": 313.629828,
                    "p50": 323.86597,
                    "p95": 352.14928499999996,
                    "p99": 352.14928499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 394.459637,
                    "min": 354.478505,
                    "p50": 381.99172599999997,
                    "p95": 394.459637,
                    "p99": 394.459637,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 452.757055,
                    "min": 411.3381,
                    "p50": 446.660989,
                    "p95": 452.757055,
                    "p99": 452.757055,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 128.996827,
                    "min": 89.131632,
                    "p50": 116.993246,
                    "p95": 128.996827,
                    "p99": 128.996827,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.376362,
                    "min": 116.98344999999999,
                    "p50": 147.659884,
                    "p95": 159.376362,
                    "p99": 159.376362,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.794871,
                    "min": 144.260956,
                    "p50": 173.73137799999998,
                    "p95": 186.794871,
                    "p99": 186.794871,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 639.228739,
                    "min": 588.953317,
                    "p50": 622.67011,
                    "p95": 639.228739,
                    "p99": 639.228739,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.76899999999998,
                    "min": 176.030833,
                    "p50": 201.98054299999998,
                    "p95": 217.76899999999998,
                    "p99": 217.76899999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 549.25122,
                    "min": 534.8687659999999,
                    "p50": 546.0019169999999,
                    "p95": 549.25122,
                    "p99": 549.25122,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.546751,
                    "min": 258.159443,
                    "p50": 263.126143,
                    "p95": 276.546751,
                    "p99": 276.546751,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 253.68090199999997,
                    "min": 218.67236,
                    "p50": 246.29343999999998,
                    "p95": 253.68090199999997,
                    "p99": 253.68090199999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 144.12735,
                    "min": 113.901871,
                    "p50": 138.029147,
                    "p95": 144.12735,
                    "p99": 144.12735,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 230.003917,
                    "min": 181.35437,
                    "p50": 204.833427,
                    "p95": 230.003917,
                    "p99": 230.003917,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 282.877685,
                    "min": 215.70010599999998,
                    "p50": 263.08201199999996,
                    "p95": 282.877685,
                    "p99": 282.877685,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 86.553569,
                    "min": 63.122893999999995,
                    "p50": 81.79865,
                    "p95": 86.553569,
                    "p99": 86.553569,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.09348699999998,
                    "min": 118.45124799999999,
                    "p50": 151.771781,
                    "p95": 166.09348699999998,
                    "p99": 166.09348699999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 250.028934,
                    "min": 174.679196,
                    "p50": 227.196409,
                    "p95": 250.028934,
                    "p99": 250.028934,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 70.875173,
                    "min": 54.270132,
                    "p50": 66.441527,
                    "p95": 70.875173,
                    "p99": 70.875173,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 119.04557199999999,
                    "min": 92.83257599999999,
                    "p50": 114.51243199999999,
                    "p95": 119.04557199999999,
                    "p99": 119.04557199999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 139.83633799999998,
                    "min": 101.487971,
                    "p50": 122.451014,
                    "p95": 139.83633799999998,
                    "p99": 139.83633799999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 397.815177,
                    "min": 357.583463,
                    "p50": 376.43481199999997,
                    "p95": 397.815177,
                    "p99": 397.815177,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 490.349607,
                    "min": 455.639767,
                    "p50": 474.749193,
                    "p95": 490.349607,
                    "p99": 490.349607,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 183.483062,
                    "min": 132.140021,
                    "p50": 143.478047,
                    "p95": 183.483062,
                    "p99": 183.483062,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1164.543121,
                    "min": 1062.507063,
                    "p50": 1125.044776,
                    "p95": 1164.543121,
                    "p99": 1164.543121,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 52.863842,
                    "min": 39.496147,
                    "p50": 45.383086999999996,
                    "p95": 52.863842,
                    "p99": 52.863842,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.889521,
                    "min": 79.452016,
                    "p50": 102.345663,
                    "p95": 103.889521,
                    "p99": 103.889521,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 647.018421,
                    "min": 552.852612,
                    "p50": 591.7556999999999,
                    "p95": 647.018421,
                    "p99": 647.018421,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 288.861759,
                    "min": 272.084934,
                    "p50": 278.893628,
                    "p95": 288.861759,
                    "p99": 288.861759,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 241.363882,
                    "min": 198.37234899999999,
                    "p50": 234.785856,
                    "p95": 241.363882,
                    "p99": 241.363882,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 264.503915,
                    "min": 219.863427,
                    "p50": 262.14795799999996,
                    "p95": 264.503915,
                    "p99": 264.503915,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 152.15551399999998,
                    "min": 110.142972,
                    "p50": 146.524916,
                    "p95": 152.15551399999998,
                    "p99": 152.15551399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 713.402435,
                    "min": 676.0143979999999,
                    "p50": 691.0011559999999,
                    "p95": 713.402435,
                    "p99": 713.402435,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 433.370071,
                    "min": 390.63208299999997,
                    "p50": 419.17756199999997,
                    "p95": 433.370071,
                    "p99": 433.370071,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 333.491903,
                    "min": 289.48831,
                    "p50": 318.343512,
                    "p95": 333.491903,
                    "p99": 333.491903,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 307.384252,
                    "min": 267.066731,
                    "p50": 302.354499,
                    "p95": 307.384252,
                    "p99": 307.384252,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 196.043616,
                    "min": 153.62071899999998,
                    "p50": 190.535368,
                    "p95": 196.043616,
                    "p99": 196.043616,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 484.25775899999996,
                    "min": 458.839391,
                    "p50": 473.323785,
                    "p95": 484.25775899999996,
                    "p99": 484.25775899999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 108.93609599999999,
                    "min": 66.499753,
                    "p50": 100.874546,
                    "p95": 108.93609599999999,
                    "p99": 108.93609599999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 374.709912,
                    "min": 330.93839399999996,
                    "p50": 363.481211,
                    "p95": 374.709912,
                    "p99": 374.709912,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 217.773415,
                    "min": 177.093864,
                    "p50": 204.74060799999998,
                    "p95": 217.773415,
                    "p99": 217.773415,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 182.141246,
                    "min": 132.625313,
                    "p50": 169.939429,
                    "p95": 182.141246,
                    "p99": 182.141246,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 131.482103,
                    "min": 88.09538099999999,
                    "p50": 128.055481,
                    "p95": 131.482103,
                    "p99": 131.482103,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 364.61668299999997,
                    "min": 307.176839,
                    "p50": 345.410151,
                    "p95": 364.61668299999997,
                    "p99": 364.61668299999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 727.646574,
                    "min": 655.277908,
                    "p50": 706.0338479999999,
                    "p95": 727.646574,
                    "p99": 727.646574,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.064122,
                    "min": 141.622471,
                    "p50": 148.23487699999998,
                    "p95": 157.064122,
                    "p99": 157.064122,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 513.335692,
                    "min": 478.323509,
                    "p50": 498.702636,
                    "p95": 513.335692,
                    "p99": 513.335692,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 559.605566,
                    "min": 525.8627779999999,
                    "p50": 536.447574,
                    "p95": 559.605566,
                    "p99": 559.605566,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 196.693931,
                    "min": 176.99237599999998,
                    "p50": 184.340116,
                    "p95": 196.693931,
                    "p99": 196.693931,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 474.825219,
                    "min": 410.651025,
                    "p50": 451.279275,
                    "p95": 474.825219,
                    "p99": 474.825219,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 622.883698,
                    "min": 582.487482,
                    "p50": 598.361006,
                    "p95": 622.883698,
                    "p99": 622.883698,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 275.126734,
                    "min": 247.273734,
                    "p50": 261.80316,
                    "p95": 275.126734,
                    "p99": 275.126734,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 395.079706,
                    "min": 340.909815,
                    "p50": 385.813761,
                    "p95": 395.079706,
                    "p99": 395.079706,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 349.62017499999996,
                    "min": 311.205116,
                    "p50": 340.927664,
                    "p95": 349.62017499999996,
                    "p99": 349.62017499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 825.234259,
                    "min": 767.2588999999999,
                    "p50": 802.421519,
                    "p95": 825.234259,
                    "p99": 825.234259,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 425.410661,
                    "min": 396.44378,
                    "p50": 415.290276,
                    "p95": 425.410661,
                    "p99": 425.410661,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 311.61488499999996,
                    "min": 261.527467,
                    "p50": 301.53560999999996,
                    "p95": 311.61488499999996,
                    "p99": 311.61488499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 232.46029299999998,
                    "min": 214.376935,
                    "p50": 220.190088,
                    "p95": 232.46029299999998,
                    "p99": 232.46029299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 581.452065,
                    "min": 531.063413,
                    "p50": 575.738641,
                    "p95": 581.452065,
                    "p99": 581.452065,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 59.353617,
                    "min": 29.686971,
                    "p50": 57.670108,
                    "p95": 59.353617,
                    "p99": 59.353617,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.242248,
                    "min": 26.063129,
                    "p50": 27.161747,
                    "p95": 27.242248,
                    "p99": 27.242248,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 65.717702,
                    "min": 59.634381,
                    "p50": 62.191646,
                    "p95": 65.717702,
                    "p99": 65.717702,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 134.875741,
                    "min": 96.503754,
                    "p50": 116.34974799999999,
                    "p95": 134.875741,
                    "p99": 134.875741,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.656919,
                    "min": 26.045389,
                    "p50": 27.262356,
                    "p95": 27.656919,
                    "p99": 27.656919,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 29.895974,
                    "min": 26.144161,
                    "p50": 27.559447,
                    "p95": 29.895974,
                    "p99": 29.895974,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 57.028931,
                    "min": 34.706517,
                    "p50": 54.252908999999995,
                    "p95": 57.028931,
                    "p99": 57.028931,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 29.539088,
                    "min": 23.093532999999997,
                    "p50": 27.162211,
                    "p95": 29.539088,
                    "p99": 29.539088,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 31.129126999999997,
                    "min": 25.677985999999997,
                    "p50": 26.966974999999998,
                    "p95": 31.129126999999997,
                    "p99": 31.129126999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 43.520418,
                    "min": 24.986691,
                    "p50": 26.804956999999998,
                    "p95": 43.520418,
                    "p99": 43.520418,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 38.809869,
                    "min": 35.47724,
                    "p50": 36.707820999999996,
                    "p95": 38.809869,
                    "p99": 38.809869,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.955301,
                    "min": 25.705561,
                    "p50": 27.143508999999998,
                    "p95": 27.955301,
                    "p99": 27.955301,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.492539999999998,
                    "min": 25.860875,
                    "p50": 27.322588,
                    "p95": 27.492539999999998,
                    "p99": 27.492539999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.584291,
                    "min": 21.863025999999998,
                    "p50": 27.217821999999998,
                    "p95": 27.584291,
                    "p99": 27.584291,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 29.63062,
                    "min": 26.034945999999998,
                    "p50": 27.26194,
                    "p95": 29.63062,
                    "p99": 29.63062,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.899009,
                    "min": 25.923897999999998,
                    "p50": 26.872698,
                    "p95": 27.899009,
                    "p99": 27.899009,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.552218,
                    "min": 24.99655,
                    "p50": 27.158075999999998,
                    "p95": 27.552218,
                    "p99": 27.552218,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.338269,
                    "min": 21.756089,
                    "p50": 27.16938,
                    "p95": 27.338269,
                    "p99": 27.338269,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.439902,
                    "min": 25.497325,
                    "p50": 27.19096,
                    "p95": 27.439902,
                    "p99": 27.439902,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 188.612616,
                    "min": 173.967467,
                    "p50": 185.439819,
                    "p95": 188.612616,
                    "p99": 188.612616,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.11392599999999,
                    "min": 71.632735,
                    "p50": 82.821362,
                    "p95": 94.11392599999999,
                    "p99": 94.11392599999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 194.16709899999998,
                    "min": 142.53990299999998,
                    "p50": 179.802665,
                    "p95": 194.16709899999998,
                    "p99": 194.16709899999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.55281699999999,
                    "min": 64.661474,
                    "p50": 93.18094599999999,
                    "p95": 104.55281699999999,
                    "p99": 104.55281699999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 166.22540999999998,
                    "min": 141.01314299999999,
                    "p50": 149.663357,
                    "p95": 166.22540999999998,
                    "p99": 166.22540999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 579.17922,
                    "min": 525.525328,
                    "p50": 566.0179459999999,
                    "p95": 579.17922,
                    "p99": 579.17922,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.412119,
                    "min": 105.882341,
                    "p50": 146.804393,
                    "p95": 149.412119,
                    "p99": 149.412119,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 182.586175,
                    "min": 134.12255199999998,
                    "p50": 178.690454,
                    "p95": 182.586175,
                    "p99": 182.586175,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 230.012352,
                    "min": 176.35678,
                    "p50": 218.495834,
                    "p95": 230.012352,
                    "p99": 230.012352,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 127.704319,
                    "min": 86.124329,
                    "p50": 124.01955099999999,
                    "p95": 127.704319,
                    "p99": 127.704319,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 473.849603,
                    "min": 422.296517,
                    "p50": 455.08525299999997,
                    "p95": 473.849603,
                    "p99": 473.849603,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 116.624073,
                    "min": 99.888587,
                    "p50": 113.006783,
                    "p95": 116.624073,
                    "p99": 116.624073,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 171.350649,
                    "min": 130.808142,
                    "p50": 163.902443,
                    "p95": 171.350649,
                    "p99": 171.350649,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.441056,
                    "min": 315.156981,
                    "p50": 350.15961,
                    "p95": 365.441056,
                    "p99": 365.441056,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 83.79402,
                    "min": 44.004493,
                    "p50": 66.297708,
                    "p95": 83.79402,
                    "p99": 83.79402,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1123.980004,
                    "min": 1022.877666,
                    "p50": 1079.3955799999999,
                    "p95": 1123.980004,
                    "p99": 1123.980004,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 65.90820599999999,
                    "min": 62.186693,
                    "p50": 64.828992,
                    "p95": 65.90820599999999,
                    "p99": 65.90820599999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 204.192699,
                    "min": 153.52562799999998,
                    "p50": 189.455345,
                    "p95": 204.192699,
                    "p99": 204.192699,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 258.45652,
                    "min": 205.422058,
                    "p50": 223.417217,
                    "p95": 258.45652,
                    "p99": 258.45652,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 31.302038999999997,
                    "min": 21.808315,
                    "p50": 26.709502,
                    "p95": 31.302038999999997,
                    "p99": 31.302038999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.902732999999998,
                    "min": 22.483449999999998,
                    "p50": 27.241744999999998,
                    "p95": 27.902732999999998,
                    "p99": 27.902732999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.891821,
                    "min": 26.648024,
                    "p50": 27.221677,
                    "p95": 27.891821,
                    "p99": 27.891821,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 30.888621999999998,
                    "min": 26.611044,
                    "p50": 27.157293,
                    "p95": 30.888621999999998,
                    "p99": 30.888621999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.515537,
                    "min": 21.651491999999998,
                    "p50": 26.923869,
                    "p95": 27.515537,
                    "p99": 27.515537,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.528502999999997,
                    "min": 25.914813,
                    "p50": 26.89718,
                    "p95": 27.528502999999997,
                    "p99": 27.528502999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.815113999999998,
                    "min": 26.702253,
                    "p50": 27.211495,
                    "p95": 27.815113999999998,
                    "p99": 27.815113999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 32.378575999999995,
                    "min": 26.399608999999998,
                    "p50": 26.86057,
                    "p95": 32.378575999999995,
                    "p99": 32.378575999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 64.33359,
                    "min": 34.085595,
                    "p50": 62.837962,
                    "p95": 64.33359,
                    "p99": 64.33359,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.787412999999997,
                    "min": 24.200708,
                    "p50": 27.032097,
                    "p95": 27.787412999999997,
                    "p99": 27.787412999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.424197,
                    "min": 20.452655,
                    "p50": 27.192536999999998,
                    "p95": 28.424197,
                    "p99": 28.424197,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.583098999999997,
                    "min": 23.733732999999997,
                    "p50": 27.477111999999998,
                    "p95": 27.583098999999997,
                    "p99": 27.583098999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.382547,
                    "min": 26.701065999999997,
                    "p50": 27.131871999999998,
                    "p95": 27.382547,
                    "p99": 27.382547,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.51785,
                    "min": 25.354589999999998,
                    "p50": 27.012304,
                    "p95": 27.51785,
                    "p99": 27.51785,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 82.614978,
                    "min": 77.708624,
                    "p50": 79.184445,
                    "p95": 82.614978,
                    "p99": 82.614978,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 84.487993,
                    "min": 26.525986999999997,
                    "p50": 26.990738999999998,
                    "p95": 84.487993,
                    "p99": 84.487993,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 57.23357,
                    "min": 45.445035,
                    "p50": 56.526835999999996,
                    "p95": 57.23357,
                    "p99": 57.23357,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 32.086614,
                    "min": 26.476734,
                    "p50": 27.18533,
                    "p95": 32.086614,
                    "p99": 32.086614,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.622268,
                    "min": 23.781292999999998,
                    "p50": 26.796003,
                    "p95": 27.622268,
                    "p99": 27.622268,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.731977999999998,
                    "min": 25.274873,
                    "p50": 27.250018999999998,
                    "p95": 27.731977999999998,
                    "p99": 27.731977999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.311275,
                    "min": 25.480926,
                    "p50": 26.970018,
                    "p95": 27.311275,
                    "p99": 27.311275,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.738508,
                    "min": 26.733940999999998,
                    "p50": 27.364746,
                    "p95": 27.738508,
                    "p99": 27.738508,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.516651,
                    "min": 20.510752999999998,
                    "p50": 26.895913999999998,
                    "p95": 27.516651,
                    "p99": 27.516651,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 35.025691,
                    "min": 22.376946999999998,
                    "p50": 26.937642999999998,
                    "p95": 35.025691,
                    "p99": 35.025691,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.893976,
                    "min": 25.437352999999998,
                    "p50": 26.908818,
                    "p95": 27.893976,
                    "p99": 27.893976,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.728848,
                    "min": 25.999069,
                    "p50": 26.670313,
                    "p95": 27.728848,
                    "p99": 27.728848,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.54373,
                    "min": 24.742924,
                    "p50": 26.651702999999998,
                    "p95": 27.54373,
                    "p99": 27.54373,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.280058999999998,
                    "min": 26.478787999999998,
                    "p50": 26.701535999999997,
                    "p95": 27.280058999999998,
                    "p99": 27.280058999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 30.089602,
                    "min": 23.737864,
                    "p50": 26.978485,
                    "p95": 30.089602,
                    "p99": 30.089602,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.263474,
                    "min": 25.568984999999998,
                    "p50": 26.979943,
                    "p95": 27.263474,
                    "p99": 27.263474,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.716786,
                    "min": 26.064418999999997,
                    "p50": 27.239561,
                    "p95": 27.716786,
                    "p99": 27.716786,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 28.047214,
                    "min": 20.925203,
                    "p50": 26.835901999999997,
                    "p95": 28.047214,
                    "p99": 28.047214,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.474652,
                    "min": 26.449161999999998,
                    "p50": 27.023194,
                    "p95": 28.474652,
                    "p99": 28.474652,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.588988,
                    "min": 25.02891,
                    "p50": 27.301256,
                    "p95": 27.588988,
                    "p99": 27.588988,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 53.635388,
                    "min": 27.30096,
                    "p50": 48.165178,
                    "p95": 53.635388,
                    "p99": 53.635388,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.375747999999998,
                    "min": 22.420063,
                    "p50": 26.650071999999998,
                    "p95": 27.375747999999998,
                    "p99": 27.375747999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 29.489863999999997,
                    "min": 26.557622,
                    "p50": 27.41434,
                    "p95": 29.489863999999997,
                    "p99": 29.489863999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.537827,
                    "min": 14.406079,
                    "p50": 27.318932999999998,
                    "p95": 27.537827,
                    "p99": 27.537827,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.364116,
                    "min": 94.551791,
                    "p50": 132.609128,
                    "p95": 139.364116,
                    "p99": 139.364116,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.609669,
                    "min": 28.737381,
                    "p50": 57.90788,
                    "p95": 60.609669,
                    "p99": 60.609669,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1003.4257329999999,
                    "min": 941.8162299999999,
                    "p50": 993.245186,
                    "p95": 1003.4257329999999,
                    "p99": 1003.4257329999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 234.656071,
                    "min": 220.314775,
                    "p50": 229.02720499999998,
                    "p95": 234.656071,
                    "p99": 234.656071,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 113.83568799999999,
                    "min": 67.068671,
                    "p50": 105.98763699999999,
                    "p95": 113.83568799999999,
                    "p99": 113.83568799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.51222,
                    "min": 39.549855,
                    "p50": 69.901501,
                    "p95": 80.51222,
                    "p99": 80.51222,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.566412,
                    "min": 80.321748,
                    "p50": 98.409371,
                    "p95": 102.566412,
                    "p99": 102.566412,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 381.697146,
                    "min": 293.61233899999996,
                    "p50": 328.52115399999997,
                    "p95": 381.697146,
                    "p99": 381.697146,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 165.438011,
                    "min": 126.733359,
                    "p50": 155.750584,
                    "p95": 165.438011,
                    "p99": 165.438011,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 148.542072,
                    "min": 104.900291,
                    "p50": 140.602157,
                    "p95": 148.542072,
                    "p99": 148.542072,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 424.299627,
                    "min": 387.360218,
                    "p50": 417.431378,
                    "p95": 424.299627,
                    "p99": 424.299627,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 522.315352,
                    "min": 472.268784,
                    "p50": 512.8438219999999,
                    "p95": 522.315352,
                    "p99": 522.315352,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 176.086784,
                    "min": 153.786506,
                    "p50": 167.48020699999998,
                    "p95": 176.086784,
                    "p99": 176.086784,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 90.735827,
                    "min": 48.952745,
                    "p50": 88.543235,
                    "p95": 90.735827,
                    "p99": 90.735827,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 211.562537,
                    "min": 169.56214599999998,
                    "p50": 206.847937,
                    "p95": 211.562537,
                    "p99": 211.562537,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 127.97319599999999,
                    "min": 120.383659,
                    "p50": 126.431124,
                    "p95": 127.97319599999999,
                    "p99": 127.97319599999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 192.817973,
                    "min": 121.523432,
                    "p50": 157.33499799999998,
                    "p95": 192.817973,
                    "p99": 192.817973,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 188.166282,
                    "min": 140.21873399999998,
                    "p50": 175.911633,
                    "p95": 188.166282,
                    "p99": 188.166282,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 122.25316799999999,
                    "min": 115.538749,
                    "p50": 119.1614,
                    "p95": 122.25316799999999,
                    "p99": 122.25316799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 777.5563639999999,
                    "min": 755.7398499999999,
                    "p50": 767.869193,
                    "p95": 777.5563639999999,
                    "p99": 777.5563639999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.20862599999998,
                    "min": 95.895826,
                    "p50": 136.07057,
                    "p95": 137.20862599999998,
                    "p99": 137.20862599999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 260.261672,
                    "min": 229.622382,
                    "p50": 256.04186,
                    "p95": 260.261672,
                    "p99": 260.261672,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 386.401948,
                    "min": 332.43623199999996,
                    "p50": 373.93347,
                    "p95": 386.401948,
                    "p99": 386.401948,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 159.93058399999998,
                    "min": 120.57785,
                    "p50": 149.16651299999998,
                    "p95": 159.93058399999998,
                    "p99": 159.93058399999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 403.967382,
                    "min": 362.009484,
                    "p50": 396.236322,
                    "p95": 403.967382,
                    "p99": 403.967382,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 237.43003499999998,
                    "min": 189.20233199999998,
                    "p50": 230.63684099999998,
                    "p95": 237.43003499999998,
                    "p99": 237.43003499999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 478.379776,
                    "min": 460.799191,
                    "p50": 466.31192899999996,
                    "p95": 478.379776,
                    "p99": 478.379776,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 184.52311699999998,
                    "min": 145.146596,
                    "p50": 179.428642,
                    "p95": 184.52311699999998,
                    "p99": 184.52311699999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 282.871396,
                    "min": 257.266656,
                    "p50": 276.14219099999997,
                    "p95": 282.871396,
                    "p99": 282.871396,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1007.332717,
                    "min": 956.024822,
                    "p50": 1002.406218,
                    "p95": 1007.332717,
                    "p99": 1007.332717,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 308.396128,
                    "min": 259.459597,
                    "p50": 300.38737,
                    "p95": 308.396128,
                    "p99": 308.396128,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 222.662308,
                    "min": 170.668297,
                    "p50": 204.748753,
                    "p95": 222.662308,
                    "p99": 222.662308,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 335.680763,
                    "min": 292.556291,
                    "p50": 327.420981,
                    "p95": 335.680763,
                    "p99": 335.680763,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.226844,
                    "min": 79.59728199999999,
                    "p50": 119.38072799999999,
                    "p95": 122.226844,
                    "p99": 122.226844,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 393.628644,
                    "min": 340.57977,
                    "p50": 383.018034,
                    "p95": 393.628644,
                    "p99": 393.628644,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 576.827734,
                    "min": 552.104334,
                    "p50": 565.2277869999999,
                    "p95": 576.827734,
                    "p99": 576.827734,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1653.91365,
                    "min": 1396.591795,
                    "p50": 1489.0806969999999,
                    "p95": 1653.91365,
                    "p99": 1653.91365,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 176.775806,
                    "min": 129.176684,
                    "p50": 155.577407,
                    "p95": 176.775806,
                    "p99": 176.775806,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 278.445421,
                    "min": 253.34720199999998,
                    "p50": 265.972055,
                    "p95": 278.445421,
                    "p99": 278.445421,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.683692,
                    "min": 219.237734,
                    "p50": 237.25864099999998,
                    "p95": 260.683692,
                    "p99": 260.683692,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.51920099999995,
                    "min": 415.62688399999996,
                    "p50": 449.726515,
                    "p95": 478.51920099999995,
                    "p99": 478.51920099999995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 434.72941599999996,
                    "min": 389.96628499999997,
                    "p50": 399.513512,
                    "p95": 434.72941599999996,
                    "p99": 434.72941599999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 565.903469,
                    "min": 498.59793399999995,
                    "p50": 561.1587569999999,
                    "p95": 565.903469,
                    "p99": 565.903469,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 703.9132179999999,
                    "min": 650.7925809999999,
                    "p50": 677.5632539999999,
                    "p95": 703.9132179999999,
                    "p99": 703.9132179999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 611.187735,
                    "min": 541.922839,
                    "p50": 565.361461,
                    "p95": 611.187735,
                    "p99": 611.187735,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.092901,
                    "min": 459.259683,
                    "p50": 497.76304,
                    "p95": 525.092901,
                    "p99": 525.092901,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 917.49334,
                    "min": 829.8014539999999,
                    "p50": 891.52409,
                    "p95": 917.49334,
                    "p99": 917.49334,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 350.81114299999996,
                    "min": 299.312646,
                    "p50": 323.58275299999997,
                    "p95": 350.81114299999996,
                    "p99": 350.81114299999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.845113,
                    "min": 169.252604,
                    "p50": 180.50080599999998,
                    "p95": 215.845113,
                    "p99": 215.845113,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 794.729702,
                    "min": 754.737221,
                    "p50": 785.5130869999999,
                    "p95": 794.729702,
                    "p99": 794.729702,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 399.60580999999996,
                    "min": 333.848502,
                    "p50": 376.41863,
                    "p95": 399.60580999999996,
                    "p99": 399.60580999999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 657.46255,
                    "min": 582.0010609999999,
                    "p50": 640.9942609999999,
                    "p95": 657.46255,
                    "p99": 657.46255,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 905.1593479999999,
                    "min": 850.6448929999999,
                    "p50": 875.467449,
                    "p95": 905.1593479999999,
                    "p99": 905.1593479999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2041.8617649999999,
                    "min": 1975.412965,
                    "p50": 2021.7406939999998,
                    "p95": 2041.8617649999999,
                    "p99": 2041.8617649999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2897.649951,
                    "min": 2823.481292,
                    "p50": 2866.0620639999997,
                    "p95": 2897.649951,
                    "p99": 2897.649951,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5722.01668,
                    "min": 5662.423815,
                    "p50": 5685.736213,
                    "p95": 5722.01668,
                    "p99": 5722.01668,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1614.3303389999999,
                    "min": 1562.177207,
                    "p50": 1590.722041,
                    "p95": 1614.3303389999999,
                    "p99": 1614.3303389999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 760.389101,
                    "min": 712.512374,
                    "p50": 725.0063389999999,
                    "p95": 760.389101,
                    "p99": 760.389101,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 608.5238979999999,
                    "min": 569.200757,
                    "p50": 592.1121079999999,
                    "p95": 608.5238979999999,
                    "p99": 608.5238979999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1744.056586,
                    "min": 1706.443302,
                    "p50": 1720.642069,
                    "p95": 1744.056586,
                    "p99": 1744.056586,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4301.096388,
                    "min": 4238.021204,
                    "p50": 4263.612519,
                    "p95": 4301.096388,
                    "p99": 4301.096388,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2534.461136,
                    "min": 2457.9406,
                    "p50": 2505.6958879999997,
                    "p95": 2534.461136,
                    "p99": 2534.461136,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2164.916394,
                    "min": 2125.09658,
                    "p50": 2148.851317,
                    "p95": 2164.916394,
                    "p99": 2164.916394,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1174.377939,
                    "min": 1126.0547219999999,
                    "p50": 1148.424888,
                    "p95": 1174.377939,
                    "p99": 1174.377939,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1462.495189,
                    "min": 1407.7457749999999,
                    "p50": 1432.923538,
                    "p95": 1462.495189,
                    "p99": 1462.495189,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1033.6573369999999,
                    "min": 987.0576,
                    "p50": 1010.3460849999999,
                    "p95": 1033.6573369999999,
                    "p99": 1033.6573369999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 456.62606999999997,
                    "min": 428.370998,
                    "p50": 435.41794899999996,
                    "p95": 456.62606999999997,
                    "p99": 456.62606999999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1904.433159,
                    "min": 1826.748778,
                    "p50": 1878.7919789999999,
                    "p95": 1904.433159,
                    "p99": 1904.433159,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1331.637516,
                    "min": 1268.408193,
                    "p50": 1310.17768,
                    "p95": 1331.637516,
                    "p99": 1331.637516,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 433.52709999999996,
                    "min": 392.28673,
                    "p50": 397.450447,
                    "p95": 433.52709999999996,
                    "p99": 433.52709999999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1314.93886,
                    "min": 1259.044391,
                    "p50": 1291.807484,
                    "p95": 1314.93886,
                    "p99": 1314.93886,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2617.081358,
                    "min": 2560.634886,
                    "p50": 2603.2573509999997,
                    "p95": 2617.081358,
                    "p99": 2617.081358,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1465.999922,
                    "min": 1408.1035849999998,
                    "p50": 1437.3848839999998,
                    "p95": 1465.999922,
                    "p99": 1465.999922,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3817.267272,
                    "min": 3739.883943,
                    "p50": 3788.963926,
                    "p95": 3817.267272,
                    "p99": 3817.267272,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 813.8188379999999,
                    "min": 768.433762,
                    "p50": 791.607347,
                    "p95": 813.8188379999999,
                    "p99": 813.8188379999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1208.3712209999999,
                    "min": 1157.340913,
                    "p50": 1189.981338,
                    "p95": 1208.3712209999999,
                    "p99": 1208.3712209999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5059.515552,
                    "min": 4938.372917,
                    "p50": 4993.439561,
                    "p95": 5059.515552,
                    "p99": 5059.515552,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 692.43809,
                    "min": 656.289642,
                    "p50": 670.691075,
                    "p95": 692.43809,
                    "p99": 692.43809,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1735.2079709999998,
                    "min": 1688.612713,
                    "p50": 1714.0265259999999,
                    "p95": 1735.2079709999998,
                    "p99": 1735.2079709999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 935.773191,
                    "min": 880.135509,
                    "p50": 902.69143,
                    "p95": 935.773191,
                    "p99": 935.773191,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 551.3304949999999,
                    "min": 513.916792,
                    "p50": 536.130526,
                    "p95": 551.3304949999999,
                    "p99": 551.3304949999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1983.164284,
                    "min": 1926.2696509999998,
                    "p50": 1954.8452699999998,
                    "p95": 1983.164284,
                    "p99": 1983.164284,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1851.8574219999998,
                    "min": 1810.2877349999999,
                    "p50": 1843.309838,
                    "p95": 1851.8574219999998,
                    "p99": 1851.8574219999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2256.2999649999997,
                    "min": 2203.076634,
                    "p50": 2233.202288,
                    "p95": 2256.2999649999997,
                    "p99": 2256.2999649999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1060.944365,
                    "min": 1009.345864,
                    "p50": 1037.640502,
                    "p95": 1060.944365,
                    "p99": 1060.944365,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1581.785054,
                    "min": 1529.4937969999999,
                    "p50": 1564.312898,
                    "p95": 1581.785054,
                    "p99": 1581.785054,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 93.743881,
                    "min": 67.16018199999999,
                    "p50": 69.268816,
                    "p95": 93.743881,
                    "p99": 93.743881,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 87.346826,
                    "min": 49.082159,
                    "p50": 73.781706,
                    "p95": 87.346826,
                    "p99": 87.346826,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 129.316607,
                    "min": 89.274839,
                    "p50": 107.77338499999999,
                    "p95": 129.316607,
                    "p99": 129.316607,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 163.644592,
                    "min": 132.306089,
                    "p50": 156.87281,
                    "p95": 163.644592,
                    "p99": 163.644592,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 475.838999,
                    "min": 430.723937,
                    "p50": 461.161056,
                    "p95": 475.838999,
                    "p99": 475.838999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 216.161945,
                    "min": 175.49160999999998,
                    "p50": 208.528779,
                    "p95": 216.161945,
                    "p99": 216.161945,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 93.903331,
                    "min": 84.77972,
                    "p50": 88.25068399999999,
                    "p95": 93.903331,
                    "p99": 93.903331,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 30.367669,
                    "min": 25.685980999999998,
                    "p50": 27.228527,
                    "p95": 30.367669,
                    "p99": 30.367669,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 258.92008599999997,
                    "min": 214.181108,
                    "p50": 239.90462599999998,
                    "p95": 258.92008599999997,
                    "p99": 258.92008599999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 63.606736999999995,
                    "min": 34.080192,
                    "p50": 34.841836,
                    "p95": 63.606736999999995,
                    "p99": 63.606736999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 82.905774,
                    "min": 57.645298999999994,
                    "p50": 71.43461599999999,
                    "p95": 82.905774,
                    "p99": 82.905774,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 79.571456,
                    "min": 42.413441999999996,
                    "p50": 45.573308999999995,
                    "p95": 79.571456,
                    "p99": 79.571456,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 120.135717,
                    "min": 78.81331999999999,
                    "p50": 91.35281499999999,
                    "p95": 120.135717,
                    "p99": 120.135717,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 55.174506,
                    "min": 47.159096,
                    "p50": 49.201147999999996,
                    "p95": 55.174506,
                    "p99": 55.174506,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 57.797605999999995,
                    "min": 29.930235,
                    "p50": 45.950168999999995,
                    "p95": 57.797605999999995,
                    "p99": 57.797605999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 108.785039,
                    "min": 85.59031999999999,
                    "p50": 108.52653199999999,
                    "p95": 108.785039,
                    "p99": 108.785039,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 96.894176,
                    "min": 55.441196,
                    "p50": 91.430562,
                    "p95": 96.894176,
                    "p99": 96.894176,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 40.062982999999996,
                    "min": 26.619148,
                    "p50": 31.057710999999998,
                    "p95": 40.062982999999996,
                    "p99": 40.062982999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 102.10788199999999,
                    "min": 84.085472,
                    "p50": 98.534576,
                    "p95": 102.10788199999999,
                    "p99": 102.10788199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2563.0204519999998,
                    "min": 2504.01145,
                    "p50": 2526.1785449999998,
                    "p95": 2563.0204519999998,
                    "p99": 2563.0204519999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1052.62366,
                    "min": 1002.3083019999999,
                    "p50": 1025.055324,
                    "p95": 1052.62366,
                    "p99": 1052.62366,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 763.261768,
                    "min": 717.7495399999999,
                    "p50": 725.769369,
                    "p95": 763.261768,
                    "p99": 763.261768,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1774.047414,
                    "min": 1697.614,
                    "p50": 1751.4715509999999,
                    "p95": 1774.047414,
                    "p99": 1774.047414,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1179.047286,
                    "min": 1143.4277789999999,
                    "p50": 1171.447924,
                    "p95": 1179.047286,
                    "p99": 1179.047286,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5790.673559,
                    "min": 5614.121689,
                    "p50": 5695.953361,
                    "p95": 5790.673559,
                    "p99": 5790.673559,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1627.107219,
                    "min": 1553.454131,
                    "p50": 1590.571528,
                    "p95": 1627.107219,
                    "p99": 1627.107219,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 909.5753629999999,
                    "min": 860.787329,
                    "p50": 888.364561,
                    "p95": 909.5753629999999,
                    "p99": 909.5753629999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1915.534755,
                    "min": 1860.177404,
                    "p50": 1900.939563,
                    "p95": 1915.534755,
                    "p99": 1915.534755,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4373.968578,
                    "min": 4227.718199,
                    "p50": 4305.214671,
                    "p95": 4373.968578,
                    "p99": 4373.968578,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2187.971271,
                    "min": 2126.771304,
                    "p50": 2163.579796,
                    "p95": 2187.971271,
                    "p99": 2187.971271,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2898.7956449999997,
                    "min": 2843.198889,
                    "p50": 2873.163571,
                    "p95": 2898.7956449999997,
                    "p99": 2898.7956449999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 479.985433,
                    "min": 436.690527,
                    "p50": 474.79709399999996,
                    "p95": 479.985433,
                    "p99": 479.985433,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2052.945592,
                    "min": 1992.874308,
                    "p50": 2038.08712,
                    "p95": 2052.945592,
                    "p99": 2052.945592,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.695911,
                    "min": 577.6641579999999,
                    "p50": 611.195821,
                    "p95": 616.695911,
                    "p99": 616.695911,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1486.8763649999999,
                    "min": 1431.833844,
                    "p50": 1458.404765,
                    "p95": 1486.8763649999999,
                    "p99": 1486.8763649999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1341.690613,
                    "min": 1287.3703309999999,
                    "p50": 1325.954227,
                    "p95": 1341.690613,
                    "p99": 1341.690613,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2182.63956,
                    "min": 2146.3252239999997,
                    "p50": 2171.3038429999997,
                    "p95": 2182.63956,
                    "p99": 2182.63956,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 621.306516,
                    "min": 574.359962,
                    "p50": 617.855925,
                    "p95": 621.306516,
                    "p99": 621.306516,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1335.248429,
                    "min": 1285.165296,
                    "p50": 1321.7586199999998,
                    "p95": 1335.248429,
                    "p99": 1335.248429,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1916.636742,
                    "min": 1867.999435,
                    "p50": 1889.871706,
                    "p95": 1916.636742,
                    "p99": 1916.636742,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1492.322107,
                    "min": 1415.017877,
                    "p50": 1473.6714259999999,
                    "p95": 1492.322107,
                    "p99": 1492.322107,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1612.8479889999999,
                    "min": 1573.756782,
                    "p50": 1589.644576,
                    "p95": 1612.8479889999999,
                    "p99": 1612.8479889999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2925.221062,
                    "min": 2853.658904,
                    "p50": 2883.0197479999997,
                    "p95": 2925.221062,
                    "p99": 2925.221062,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4346.839557,
                    "min": 4239.930298,
                    "p50": 4292.993312,
                    "p95": 4346.839557,
                    "p99": 4346.839557,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1766.105576,
                    "min": 1730.640568,
                    "p50": 1737.6859539999998,
                    "p95": 1766.105576,
                    "p99": 1766.105576,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 758.4417569999999,
                    "min": 720.073587,
                    "p50": 754.7315179999999,
                    "p95": 758.4417569999999,
                    "p99": 758.4417569999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 474.51645399999995,
                    "min": 453.176429,
                    "p50": 469.084732,
                    "p95": 474.51645399999995,
                    "p99": 474.51645399999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 904.9731539999999,
                    "min": 870.755129,
                    "p50": 900.8833179999999,
                    "p95": 904.9731539999999,
                    "p99": 904.9731539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2553.990727,
                    "min": 2473.388339,
                    "p50": 2537.3027279999997,
                    "p95": 2553.990727,
                    "p99": 2553.990727,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1052.4163389999999,
                    "min": 998.265272,
                    "p50": 1032.032629,
                    "p95": 1052.4163389999999,
                    "p99": 1052.4163389999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2036.0805349999998,
                    "min": 1983.732818,
                    "p50": 2023.9995259999998,
                    "p95": 2036.0805349999998,
                    "p99": 2036.0805349999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1191.5105839999999,
                    "min": 1150.7360609999998,
                    "p50": 1186.365202,
                    "p95": 1191.5105839999999,
                    "p99": 1191.5105839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 751.435217,
                    "min": 689.397617,
                    "p50": 723.278317,
                    "p95": 751.435217,
                    "p99": 751.435217,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 139.443853,
                    "min": 100.42505799999999,
                    "p50": 111.39048199999999,
                    "p95": 139.443853,
                    "p99": 139.443853,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 386.661972,
                    "min": 347.125923,
                    "p50": 375.80375499999997,
                    "p95": 386.661972,
                    "p99": 386.661972,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 89.82623199999999,
                    "min": 52.087402999999995,
                    "p50": 57.371572,
                    "p95": 89.82623199999999,
                    "p99": 89.82623199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 62.919408999999995,
                    "min": 31.979153,
                    "p50": 38.125301,
                    "p95": 62.919408999999995,
                    "p99": 62.919408999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 125.21267499999999,
                    "min": 86.391571,
                    "p50": 100.91461799999999,
                    "p95": 125.21267499999999,
                    "p99": 125.21267499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 309.88019199999997,
                    "min": 277.636886,
                    "p50": 301.847093,
                    "p95": 309.88019199999997,
                    "p99": 309.88019199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 148.155455,
                    "min": 106.239645,
                    "p50": 130.062154,
                    "p95": 148.155455,
                    "p99": 148.155455,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 131.17731,
                    "min": 92.542163,
                    "p50": 121.10833199999999,
                    "p95": 131.17731,
                    "p99": 131.17731,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 150.174935,
                    "min": 123.677589,
                    "p50": 127.27227099999999,
                    "p95": 150.174935,
                    "p99": 150.174935,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 73.796177,
                    "min": 38.208008,
                    "p50": 57.104074,
                    "p95": 73.796177,
                    "p99": 73.796177,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 118.695229,
                    "min": 78.608035,
                    "p50": 115.675024,
                    "p95": 118.695229,
                    "p99": 118.695229,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.734981999999995,
                    "min": 26.453581999999997,
                    "p50": 36.762076,
                    "p95": 47.734981999999995,
                    "p99": 47.734981999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 99.239161,
                    "min": 59.011813,
                    "p50": 92.077874,
                    "p95": 99.239161,
                    "p99": 99.239161,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.422859,
                    "min": 45.598251999999995,
                    "p50": 83.630066,
                    "p95": 85.422859,
                    "p99": 85.422859,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 107.794736,
                    "min": 86.57035599999999,
                    "p50": 102.80911499999999,
                    "p95": 107.794736,
                    "p99": 107.794736,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 113.001116,
                    "min": 73.82615799999999,
                    "p50": 95.973242,
                    "p95": 113.001116,
                    "p99": 113.001116,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 250.20890899999998,
                    "min": 212.85089,
                    "p50": 237.536644,
                    "p95": 250.20890899999998,
                    "p99": 250.20890899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 177.51401099999998,
                    "min": 141.55183399999999,
                    "p50": 167.976048,
                    "p95": 177.51401099999998,
                    "p99": 177.51401099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 38.464999,
                    "min": 25.989960999999997,
                    "p50": 27.519781,
                    "p95": 38.464999,
                    "p99": 38.464999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 159.73934,
                    "min": 113.717117,
                    "p50": 149.602592,
                    "p95": 159.73934,
                    "p99": 159.73934,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 128.104805,
                    "min": 85.89701199999999,
                    "p50": 113.202191,
                    "p95": 128.104805,
                    "p99": 128.104805,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 98.50672899999999,
                    "min": 59.458476,
                    "p50": 90.57291,
                    "p95": 98.50672899999999,
                    "p99": 98.50672899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 60.323639,
                    "min": 31.591887999999997,
                    "p50": 49.410326,
                    "p95": 60.323639,
                    "p99": 60.323639,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 322.90493499999997,
                    "min": 277.12066999999996,
                    "p50": 311.57314299999996,
                    "p95": 322.90493499999997,
                    "p99": 322.90493499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 182.73485,
                    "min": 159.819939,
                    "p50": 175.322292,
                    "p95": 182.73485,
                    "p99": 182.73485,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 64.949583,
                    "min": 36.965458999999996,
                    "p50": 38.186924,
                    "p95": 64.949583,
                    "p99": 64.949583,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 79.04285899999999,
                    "min": 42.188327,
                    "p50": 63.323834999999995,
                    "p95": 79.04285899999999,
                    "p99": 79.04285899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 51.076724,
                    "min": 26.882908,
                    "p50": 47.463341,
                    "p95": 51.076724,
                    "p99": 51.076724,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 52.781324999999995,
                    "min": 28.651550999999998,
                    "p50": 29.574078,
                    "p95": 52.781324999999995,
                    "p99": 52.781324999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.914973,
                    "min": 22.259131,
                    "p50": 27.53839,
                    "p95": 27.914973,
                    "p99": 27.914973,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 90.803986,
                    "min": 51.430944,
                    "p50": 77.93566299999999,
                    "p95": 90.803986,
                    "p99": 90.803986,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 67.335497,
                    "min": 34.360348,
                    "p50": 64.113348,
                    "p95": 67.335497,
                    "p99": 67.335497,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 83.06436699999999,
                    "min": 44.859004999999996,
                    "p50": 67.08088,
                    "p95": 83.06436699999999,
                    "p99": 83.06436699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 47.323259,
                    "min": 25.284962,
                    "p50": 43.35064,
                    "p95": 47.323259,
                    "p99": 47.323259,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 79.23666899999999,
                    "min": 39.342687999999995,
                    "p50": 74.220653,
                    "p95": 79.23666899999999,
                    "p99": 79.23666899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 34.591477,
                    "min": 26.505419,
                    "p50": 33.663798,
                    "p95": 34.591477,
                    "p99": 34.591477,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.876929,
                    "min": 23.020668999999998,
                    "p50": 27.300558,
                    "p95": 27.876929,
                    "p99": 27.876929,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 161.858525,
                    "min": 121.204414,
                    "p50": 152.720886,
                    "p95": 161.858525,
                    "p99": 161.858525,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 95.56333099999999,
                    "min": 57.167753999999995,
                    "p50": 84.73276899999999,
                    "p95": 95.56333099999999,
                    "p99": 95.56333099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 177.930153,
                    "min": 161.833935,
                    "p50": 175.683595,
                    "p95": 177.930153,
                    "p99": 177.930153,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 89.02492,
                    "min": 51.113628999999996,
                    "p50": 51.769830999999996,
                    "p95": 89.02492,
                    "p99": 89.02492,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.88713,
                    "min": 44.602424,
                    "p50": 66.106285,
                    "p95": 82.88713,
                    "p99": 82.88713,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 60.849916,
                    "min": 52.12623,
                    "p50": 58.039974,
                    "p95": 60.849916,
                    "p99": 60.849916,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 137.024721,
                    "min": 99.68355199999999,
                    "p50": 134.595639,
                    "p95": 137.024721,
                    "p99": 137.024721,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 108.45776599999999,
                    "min": 77.522874,
                    "p50": 78.18547,
                    "p95": 108.45776599999999,
                    "p99": 108.45776599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 241.61005699999998,
                    "min": 203.564324,
                    "p50": 217.941585,
                    "p95": 241.61005699999998,
                    "p99": 241.61005699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.630946,
                    "min": 63.887321,
                    "p50": 81.194501,
                    "p95": 102.630946,
                    "p99": 102.630946,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 704.544985,
                    "min": 670.0898599999999,
                    "p50": 691.53927,
                    "p95": 704.544985,
                    "p99": 704.544985,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 74.765783,
                    "min": 56.862376999999995,
                    "p50": 69.70991099999999,
                    "p95": 74.765783,
                    "p99": 74.765783,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 132.321021,
                    "min": 113.14334099999999,
                    "p50": 130.558957,
                    "p95": 132.321021,
                    "p99": 132.321021,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 129.18877,
                    "min": 106.64531199999999,
                    "p50": 124.005805,
                    "p95": 129.18877,
                    "p99": 129.18877,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 317.143712,
                    "min": 268.83892,
                    "p50": 302.677445,
                    "p95": 317.143712,
                    "p99": 317.143712,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.893781,
                    "min": 26.594376,
                    "p50": 27.186435,
                    "p95": 45.893781,
                    "p99": 45.893781,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 145.42066599999998,
                    "min": 107.166349,
                    "p50": 137.098319,
                    "p95": 145.42066599999998,
                    "p99": 145.42066599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 110.303873,
                    "min": 71.618973,
                    "p50": 99.20142799999999,
                    "p95": 110.303873,
                    "p99": 110.303873,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 382.370096,
                    "min": 338.776412,
                    "p50": 373.010807,
                    "p95": 382.370096,
                    "p99": 382.370096,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 566.770057,
                    "min": 557.157639,
                    "p50": 562.801744,
                    "p95": 566.770057,
                    "p99": 566.770057,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 483.203461,
                    "min": 445.283862,
                    "p50": 447.49043,
                    "p95": 483.203461,
                    "p99": 483.203461,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 708.894495,
                    "min": 666.537994,
                    "p50": 694.567782,
                    "p95": 708.894495,
                    "p99": 708.894495,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 263.128245,
                    "min": 220.755202,
                    "p50": 247.67032899999998,
                    "p95": 263.128245,
                    "p99": 263.128245,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 331.778762,
                    "min": 292.983911,
                    "p50": 315.778903,
                    "p95": 331.778762,
                    "p99": 331.778762,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 634.216368,
                    "min": 592.676464,
                    "p50": 619.397573,
                    "p95": 634.216368,
                    "p99": 634.216368,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.337042,
                    "min": 368.85665,
                    "p50": 375.318921,
                    "p95": 413.337042,
                    "p99": 413.337042,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 759.802388,
                    "min": 725.3604429999999,
                    "p50": 737.26072,
                    "p95": 759.802388,
                    "p99": 759.802388,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 264.73845,
                    "min": 219.56632,
                    "p50": 248.707292,
                    "p95": 264.73845,
                    "p99": 264.73845,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 629.672437,
                    "min": 579.953145,
                    "p50": 612.6084569999999,
                    "p95": 629.672437,
                    "p99": 629.672437,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 479.106294,
                    "min": 441.97574199999997,
                    "p50": 471.69566199999997,
                    "p95": 479.106294,
                    "p99": 479.106294,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 560.684205,
                    "min": 505.536279,
                    "p50": 547.489014,
                    "p95": 560.684205,
                    "p99": 560.684205,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 697.8065889999999,
                    "min": 658.666933,
                    "p50": 690.649605,
                    "p95": 697.8065889999999,
                    "p99": 697.8065889999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.03761399999996,
                    "min": 293.61813,
                    "p50": 299.521634,
                    "p95": 336.03761399999996,
                    "p99": 336.03761399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 409.50415799999996,
                    "min": 368.09077199999996,
                    "p50": 400.96547599999997,
                    "p95": 409.50415799999996,
                    "p99": 409.50415799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.205594,
                    "min": 229.65211499999998,
                    "p50": 238.69340599999998,
                    "p95": 243.205594,
                    "p99": 243.205594,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 423.01509599999997,
                    "min": 345.86418499999996,
                    "p50": 397.788433,
                    "p95": 423.01509599999997,
                    "p99": 423.01509599999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 544.932652,
                    "min": 479.45352499999996,
                    "p50": 494.41186799999997,
                    "p95": 544.932652,
                    "p99": 544.932652,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 390.34765799999997,
                    "min": 296.086098,
                    "p50": 373.434687,
                    "p95": 390.34765799999997,
                    "p99": 390.34765799999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 707.995039,
                    "min": 597.873671,
                    "p50": 690.854022,
                    "p95": 707.995039,
                    "p99": 707.995039,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 219.61914299999998,
                    "min": 162.52710299999998,
                    "p50": 176.334354,
                    "p95": 219.61914299999998,
                    "p99": 219.61914299999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 619.1084989999999,
                    "min": 532.3438659999999,
                    "p50": 567.247653,
                    "p95": 619.1084989999999,
                    "p99": 619.1084989999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 499.04270099999997,
                    "min": 454.108368,
                    "p50": 474.016465,
                    "p95": 499.04270099999997,
                    "p99": 499.04270099999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 343.570423,
                    "min": 264.778396,
                    "p50": 314.90968899999996,
                    "p95": 343.570423,
                    "p99": 343.570423,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 698.6476389999999,
                    "min": 632.487358,
                    "p50": 657.3811079999999,
                    "p95": 698.6476389999999,
                    "p99": 698.6476389999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 491.02188099999995,
                    "min": 452.378021,
                    "p50": 457.11560199999997,
                    "p95": 491.02188099999995,
                    "p99": 491.02188099999995,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 647.8168019999999,
                    "min": 600.0047549999999,
                    "p50": 625.049301,
                    "p95": 647.8168019999999,
                    "p99": 647.8168019999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 186.229322,
                    "min": 152.430277,
                    "p50": 155.7561,
                    "p95": 186.229322,
                    "p99": 186.229322,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 342.427554,
                    "min": 302.881832,
                    "p50": 306.917852,
                    "p95": 342.427554,
                    "p99": 342.427554,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 572.6934749999999,
                    "min": 525.1163839999999,
                    "p50": 561.727325,
                    "p95": 572.6934749999999,
                    "p99": 572.6934749999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 269.473079,
                    "min": 227.731352,
                    "p50": 263.12417899999997,
                    "p95": 269.473079,
                    "p99": 269.473079,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 419.85506,
                    "min": 379.920814,
                    "p50": 415.670799,
                    "p95": 419.85506,
                    "p99": 419.85506,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1145.710163,
                    "min": 1087.816217,
                    "p50": 1128.872093,
                    "p95": 1145.710163,
                    "p99": 1145.710163,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 594.518661,
                    "min": 536.159534,
                    "p50": 562.301571,
                    "p95": 594.518661,
                    "p99": 594.518661,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 359.797929,
                    "min": 317.59711899999996,
                    "p50": 348.42326099999997,
                    "p95": 359.797929,
                    "p99": 359.797929,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1078.777589,
                    "min": 1009.3372569999999,
                    "p50": 1038.455493,
                    "p95": 1078.777589,
                    "p99": 1078.777589,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 843.360274,
                    "min": 785.468795,
                    "p50": 822.173641,
                    "p95": 843.360274,
                    "p99": 843.360274,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 647.285899,
                    "min": 626.91567,
                    "p50": 637.192586,
                    "p95": 647.285899,
                    "p99": 647.285899,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 999.715248,
                    "min": 934.879515,
                    "p50": 951.335883,
                    "p95": 999.715248,
                    "p99": 999.715248,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 444.122938,
                    "min": 383.050001,
                    "p50": 399.922889,
                    "p95": 444.122938,
                    "p99": 444.122938,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 270.916051,
                    "min": 238.37608,
                    "p50": 247.92557499999998,
                    "p95": 270.916051,
                    "p99": 270.916051,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1437.30123,
                    "min": 1360.8823149999998,
                    "p50": 1404.2138989999999,
                    "p95": 1437.30123,
                    "p99": 1437.30123,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1220.372595,
                    "min": 1162.4008939999999,
                    "p50": 1186.701454,
                    "p95": 1220.372595,
                    "p99": 1220.372595,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1630.1688279999998,
                    "min": 1558.460995,
                    "p50": 1603.133236,
                    "p95": 1630.1688279999998,
                    "p99": 1630.1688279999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 748.8778189999999,
                    "min": 684.836734,
                    "p50": 722.748128,
                    "p95": 748.8778189999999,
                    "p99": 748.8778189999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 893.631033,
                    "min": 868.170671,
                    "p50": 885.714852,
                    "p95": 893.631033,
                    "p99": 893.631033,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 511.356204,
                    "min": 464.9849,
                    "p50": 506.722654,
                    "p95": 511.356204,
                    "p99": 511.356204,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 939.5693349999999,
                    "min": 887.016676,
                    "p50": 915.8534179999999,
                    "p95": 939.5693349999999,
                    "p99": 939.5693349999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 369.63195199999996,
                    "min": 332.18843999999996,
                    "p50": 351.131132,
                    "p95": 369.63195199999996,
                    "p99": 369.63195199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1034.638989,
                    "min": 988.6472279999999,
                    "p50": 1021.315973,
                    "p95": 1034.638989,
                    "p99": 1034.638989,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 731.584647,
                    "min": 677.8655779999999,
                    "p50": 720.4454929999999,
                    "p95": 731.584647,
                    "p99": 731.584647,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 317.977629,
                    "min": 273.367256,
                    "p50": 289.084932,
                    "p95": 317.977629,
                    "p99": 317.977629,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 443.422469,
                    "min": 395.18596199999996,
                    "p50": 412.734678,
                    "p95": 443.422469,
                    "p99": 443.422469,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 837.839967,
                    "min": 798.740946,
                    "p50": 828.1977129999999,
                    "p95": 837.839967,
                    "p99": 837.839967,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 984.730007,
                    "min": 941.1838469999999,
                    "p50": 957.038151,
                    "p95": 984.730007,
                    "p99": 984.730007,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1411.7685729999998,
                    "min": 1339.845975,
                    "p50": 1359.9000019999999,
                    "p95": 1411.7685729999998,
                    "p99": 1411.7685729999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 509.27743999999996,
                    "min": 458.512055,
                    "p50": 489.411545,
                    "p95": 509.27743999999996,
                    "p99": 509.27743999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1247.766151,
                    "min": 1182.191554,
                    "p50": 1212.990443,
                    "p95": 1247.766151,
                    "p99": 1247.766151,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 569.531386,
                    "min": 514.3699879999999,
                    "p50": 547.495273,
                    "p95": 569.531386,
                    "p99": 569.531386,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 777.1312839999999,
                    "min": 731.0392959999999,
                    "p50": 750.790972,
                    "p95": 777.1312839999999,
                    "p99": 777.1312839999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 667.1066959999999,
                    "min": 605.1383539999999,
                    "p50": 629.4119059999999,
                    "p95": 667.1066959999999,
                    "p99": 667.1066959999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 245.20419099999998,
                    "min": 202.60225,
                    "p50": 235.97811399999998,
                    "p95": 245.20419099999998,
                    "p99": 245.20419099999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 446.69156499999997,
                    "min": 395.442427,
                    "p50": 422.827701,
                    "p95": 446.69156499999997,
                    "p99": 446.69156499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 677.170481,
                    "min": 628.688509,
                    "p50": 642.5678889999999,
                    "p95": 677.170481,
                    "p99": 677.170481,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 602.9533349999999,
                    "min": 548.0037229999999,
                    "p50": 569.0899049999999,
                    "p95": 602.9533349999999,
                    "p99": 602.9533349999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1437.446355,
                    "min": 1367.222519,
                    "p50": 1402.8819349999999,
                    "p95": 1437.446355,
                    "p99": 1437.446355,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1240.439326,
                    "min": 1174.7871949999999,
                    "p50": 1207.162466,
                    "p95": 1240.439326,
                    "p99": 1240.439326,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.603643,
                    "min": 237.75806899999998,
                    "p50": 245.60305499999998,
                    "p95": 283.603643,
                    "p99": 283.603643,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 926.485914,
                    "min": 860.6455109999999,
                    "p50": 890.719669,
                    "p95": 926.485914,
                    "p99": 926.485914,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 834.0579429999999,
                    "min": 777.1429899999999,
                    "p50": 818.543042,
                    "p95": 834.0579429999999,
                    "p99": 834.0579429999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 319.738593,
                    "min": 301.98384799999997,
                    "p50": 316.6004,
                    "p95": 319.738593,
                    "p99": 319.738593,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 983.9274909999999,
                    "min": 938.741179,
                    "p50": 958.348135,
                    "p95": 983.9274909999999,
                    "p99": 983.9274909999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 755.527847,
                    "min": 678.084627,
                    "p50": 716.617988,
                    "p95": 755.527847,
                    "p99": 755.527847,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1612.3033619999999,
                    "min": 1537.916555,
                    "p50": 1579.942004,
                    "p95": 1612.3033619999999,
                    "p99": 1612.3033619999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1115.042619,
                    "min": 1054.96751,
                    "p50": 1079.276151,
                    "p95": 1115.042619,
                    "p99": 1115.042619,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 513.536821,
                    "min": 468.72502099999997,
                    "p50": 483.226685,
                    "p95": 513.536821,
                    "p99": 513.536821,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1057.061123,
                    "min": 1004.594257,
                    "p50": 1043.72852,
                    "p95": 1057.061123,
                    "p99": 1057.061123,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1626.672149,
                    "min": 1565.344666,
                    "p50": 1583.632435,
                    "p95": 1626.672149,
                    "p99": 1626.672149,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 357.41038399999996,
                    "min": 316.901351,
                    "p50": 344.0184,
                    "p95": 357.41038399999996,
                    "p99": 357.41038399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 751.3109109999999,
                    "min": 709.134152,
                    "p50": 734.063348,
                    "p95": 751.3109109999999,
                    "p99": 751.3109109999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 838.018779,
                    "min": 750.86371,
                    "p50": 804.211817,
                    "p95": 838.018779,
                    "p99": 838.018779,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 899.112411,
                    "min": 861.378027,
                    "p50": 889.1368799999999,
                    "p95": 899.112411,
                    "p99": 899.112411,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1422.7554519999999,
                    "min": 1377.4771269999999,
                    "p50": 1407.7971459999999,
                    "p95": 1422.7554519999999,
                    "p99": 1422.7554519999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1005.925225,
                    "min": 936.8554399999999,
                    "p50": 977.571284,
                    "p95": 1005.925225,
                    "p99": 1005.925225,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1075.754756,
                    "min": 1005.2599439999999,
                    "p50": 1023.9971999999999,
                    "p95": 1075.754756,
                    "p99": 1075.754756,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.318687,
                    "min": 229.670582,
                    "p50": 242.206248,
                    "p95": 283.318687,
                    "p99": 283.318687,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 478.718793,
                    "min": 461.25040199999995,
                    "p50": 472.14343599999995,
                    "p95": 478.718793,
                    "p99": 478.718793,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 429.735059,
                    "min": 394.21369,
                    "p50": 405.742305,
                    "p95": 429.735059,
                    "p99": 429.735059,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1203.4444819999999,
                    "min": 1137.0363579999998,
                    "p50": 1175.225128,
                    "p95": 1203.4444819999999,
                    "p99": 1203.4444819999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 685.644809,
                    "min": 626.165706,
                    "p50": 661.811771,
                    "p95": 685.644809,
                    "p99": 685.644809,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1123.256598,
                    "min": 1077.051021,
                    "p50": 1090.195778,
                    "p95": 1123.256598,
                    "p99": 1123.256598,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 590.0563119999999,
                    "min": 544.524915,
                    "p50": 577.869498,
                    "p95": 590.0563119999999,
                    "p99": 590.0563119999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 349.18665899999996,
                    "min": 311.598743,
                    "p50": 342.182282,
                    "p95": 349.18665899999996,
                    "p99": 349.18665899999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.818686,
                    "min": 55.995866,
                    "p50": 80.66002,
                    "p95": 94.818686,
                    "p99": 94.818686,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1332.131698,
                    "min": 1227.308286,
                    "p50": 1270.319329,
                    "p95": 1332.131698,
                    "p99": 1332.131698,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 305.749014,
                    "min": 262.803317,
                    "p50": 286.96476,
                    "p95": 305.749014,
                    "p99": 305.749014,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 430.170961,
                    "min": 389.403829,
                    "p50": 419.707255,
                    "p95": 430.170961,
                    "p99": 430.170961,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 164.597249,
                    "min": 134.301413,
                    "p50": 148.238335,
                    "p95": 164.597249,
                    "p99": 164.597249,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 551.98475,
                    "min": 485.206142,
                    "p50": 522.799052,
                    "p95": 551.98475,
                    "p99": 551.98475,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 120.403814,
                    "min": 80.527433,
                    "p50": 110.455514,
                    "p95": 120.403814,
                    "p99": 120.403814,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.53824699999998,
                    "min": 105.72430299999999,
                    "p50": 133.578158,
                    "p95": 149.53824699999998,
                    "p99": 149.53824699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.848046,
                    "min": 40.798795,
                    "p50": 76.591476,
                    "p95": 82.848046,
                    "p99": 82.848046,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 155.75544299999999,
                    "min": 114.90578599999999,
                    "p50": 147.053668,
                    "p95": 155.75544299999999,
                    "p99": 155.75544299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.219212,
                    "min": 87.499338,
                    "p50": 115.832616,
                    "p95": 134.219212,
                    "p99": 134.219212,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 189.08272599999998,
                    "min": 146.399951,
                    "p50": 172.165192,
                    "p95": 189.08272599999998,
                    "p99": 189.08272599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 215.977835,
                    "min": 170.10466,
                    "p50": 174.39782699999998,
                    "p95": 215.977835,
                    "p99": 215.977835,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 846.409148,
                    "min": 155.426065,
                    "p50": 184.301264,
                    "p95": 846.409148,
                    "p99": 846.409148,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 707.443934,
                    "min": 618.978568,
                    "p50": 658.1427269999999,
                    "p95": 707.443934,
                    "p99": 707.443934,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 107.11423699999999,
                    "min": 67.545517,
                    "p50": 103.79631099999999,
                    "p95": 107.11423699999999,
                    "p99": 107.11423699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 217.708528,
                    "min": 183.510124,
                    "p50": 198.97922,
                    "p95": 217.708528,
                    "p99": 217.708528,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 811.1907739999999,
                    "min": 182.069987,
                    "p50": 221.19428299999998,
                    "p95": 811.1907739999999,
                    "p99": 811.1907739999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 433.57118399999996,
                    "min": 389.793836,
                    "p50": 395.72488999999996,
                    "p95": 433.57118399999996,
                    "p99": 433.57118399999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.438296,
                    "min": 79.74079499999999,
                    "p50": 107.11579499999999,
                    "p95": 121.438296,
                    "p99": 121.438296,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 567.69441,
                    "min": 512.3407629999999,
                    "p50": 550.346553,
                    "p95": 567.69441,
                    "p99": 567.69441,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 305.808678,
                    "min": 282.428897,
                    "p50": 294.955287,
                    "p95": 305.808678,
                    "p99": 305.808678,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.487797,
                    "min": 184.379854,
                    "p50": 210.29519399999998,
                    "p95": 227.487797,
                    "p99": 227.487797,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 233.61620399999998,
                    "min": 193.898328,
                    "p50": 221.61516699999999,
                    "p95": 233.61620399999998,
                    "p99": 233.61620399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 212.948221,
                    "min": 171.48891799999998,
                    "p50": 208.552119,
                    "p95": 212.948221,
                    "p99": 212.948221,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.26099899999997,
                    "min": 226.51290699999998,
                    "p50": 246.13539899999998,
                    "p95": 270.26099899999997,
                    "p99": 270.26099899999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.975201,
                    "min": 42.205737,
                    "p50": 62.892250999999995,
                    "p95": 64.975201,
                    "p99": 64.975201,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1371.300327,
                    "min": 1267.3155299999999,
                    "p50": 1306.047222,
                    "p95": 1371.300327,
                    "p99": 1371.300327,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.263477,
                    "min": 56.207240999999996,
                    "p50": 92.707315,
                    "p95": 95.263477,
                    "p99": 95.263477,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.91135,
                    "min": 69.051722,
                    "p50": 98.593683,
                    "p95": 106.91135,
                    "p99": 106.91135,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 147.81588,
                    "min": 108.834403,
                    "p50": 140.974326,
                    "p95": 147.81588,
                    "p99": 147.81588,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.91026599999998,
                    "min": 159.93132799999998,
                    "p50": 165.199525,
                    "p95": 198.91026599999998,
                    "p99": 198.91026599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 162.584387,
                    "min": 120.03678699999999,
                    "p50": 122.287133,
                    "p95": 162.584387,
                    "p99": 162.584387,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 188.45223299999998,
                    "min": 143.230862,
                    "p50": 147.50784,
                    "p95": 188.45223299999998,
                    "p99": 188.45223299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 132.943965,
                    "min": 93.09032599999999,
                    "p50": 121.565798,
                    "p95": 132.943965,
                    "p99": 132.943965,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 171.424407,
                    "min": 131.500384,
                    "p50": 163.49633599999999,
                    "p95": 171.424407,
                    "p99": 171.424407,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 680.471634,
                    "min": 639.4626069999999,
                    "p50": 674.3365749999999,
                    "p95": 680.471634,
                    "p99": 680.471634,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 206.89793899999998,
                    "min": 169.74383899999998,
                    "p50": 193.251868,
                    "p95": 206.89793899999998,
                    "p99": 206.89793899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1263.037474,
                    "min": 1178.3599609999999,
                    "p50": 1234.253375,
                    "p95": 1263.037474,
                    "p99": 1263.037474,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 214.80683299999998,
                    "min": 176.159799,
                    "p50": 203.390742,
                    "p95": 214.80683299999998,
                    "p99": 214.80683299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 162.854408,
                    "min": 118.04019699999999,
                    "p50": 144.992051,
                    "p95": 162.854408,
                    "p99": 162.854408,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 257.10033599999997,
                    "min": 219.13589499999998,
                    "p50": 226.687489,
                    "p95": 257.10033599999997,
                    "p99": 257.10033599999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.786547,
                    "min": 239.921076,
                    "p50": 279.446798,
                    "p95": 288.786547,
                    "p99": 288.786547,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.26923199999999,
                    "min": 67.88038399999999,
                    "p50": 105.60069999999999,
                    "p95": 106.26923199999999,
                    "p99": 106.26923199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 174.328993,
                    "min": 131.81405999999998,
                    "p50": 168.07847999999998,
                    "p95": 174.328993,
                    "p99": 174.328993,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 129.397593,
                    "min": 94.05042499999999,
                    "p50": 114.16498,
                    "p95": 129.397593,
                    "p99": 129.397593,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.485392,
                    "min": 193.991039,
                    "p50": 223.724276,
                    "p95": 237.485392,
                    "p99": 237.485392,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.851552,
                    "min": 148.621667,
                    "p50": 187.184427,
                    "p95": 201.851552,
                    "p99": 201.851552,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 543.778466,
                    "min": 488.638199,
                    "p50": 526.130822,
                    "p95": 543.778466,
                    "p99": 543.778466,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 406.979308,
                    "min": 356.533481,
                    "p50": 378.116767,
                    "p95": 406.979308,
                    "p99": 406.979308,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 181.206298,
                    "min": 144.122521,
                    "p50": 178.45577899999998,
                    "p95": 181.206298,
                    "p99": 181.206298,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.15218999999999,
                    "min": 40.121955,
                    "p50": 62.404908999999996,
                    "p95": 76.15218999999999,
                    "p99": 76.15218999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 142.70178099999998,
                    "min": 101.791693,
                    "p50": 130.246621,
                    "p95": 142.70178099999998,
                    "p99": 142.70178099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.878973,
                    "min": 52.920761,
                    "p50": 85.965665,
                    "p95": 93.878973,
                    "p99": 93.878973,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.113115,
                    "min": 77.827794,
                    "p50": 80.646391,
                    "p95": 119.113115,
                    "p99": 119.113115,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 671.0573459999999,
                    "min": 620.87295,
                    "p50": 662.861847,
                    "p95": 671.0573459999999,
                    "p99": 671.0573459999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 651.869799,
                    "min": 143.938634,
                    "p50": 192.77307499999998,
                    "p95": 651.869799,
                    "p99": 651.869799,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 123.228724,
                    "min": 95.383674,
                    "p50": 98.156047,
                    "p95": 123.228724,
                    "p99": 123.228724,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.87572899999999,
                    "min": 57.359229,
                    "p50": 84.137532,
                    "p95": 96.87572899999999,
                    "p99": 96.87572899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.865332,
                    "min": 108.075088,
                    "p50": 145.23779399999998,
                    "p95": 148.865332,
                    "p99": 148.865332,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 313.32332099999996,
                    "min": 269.641524,
                    "p50": 296.51059499999997,
                    "p95": 313.32332099999996,
                    "p99": 313.32332099999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.083913,
                    "min": 43.939147,
                    "p50": 70.013059,
                    "p95": 84.083913,
                    "p99": 84.083913,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1379.804029,
                    "min": 1317.659757,
                    "p50": 1349.549726,
                    "p95": 1379.804029,
                    "p99": 1379.804029,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 276.875072,
                    "min": 235.00947,
                    "p50": 272.333911,
                    "p95": 276.875072,
                    "p99": 276.875072,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.01234699999999,
                    "min": 71.39793399999999,
                    "p50": 108.67353399999999,
                    "p95": 110.01234699999999,
                    "p99": 110.01234699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.339092,
                    "min": 134.004338,
                    "p50": 174.404244,
                    "p95": 178.339092,
                    "p99": 178.339092,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 230.41369,
                    "min": 189.033921,
                    "p50": 195.18050499999998,
                    "p95": 230.41369,
                    "p99": 230.41369,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.394515,
                    "min": 83.85449899999999,
                    "p50": 121.469315,
                    "p95": 123.394515,
                    "p99": 123.394515,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 207.248191,
                    "min": 161.166439,
                    "p50": 186.4965,
                    "p95": 207.248191,
                    "p99": 207.248191,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 722.427019,
                    "min": 662.817601,
                    "p50": 699.233924,
                    "p95": 722.427019,
                    "p99": 722.427019,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 450.05113,
                    "min": 398.15291199999996,
                    "p50": 438.727609,
                    "p95": 450.05113,
                    "p99": 450.05113,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 213.26007099999998,
                    "min": 171.166946,
                    "p50": 210.33556,
                    "p95": 213.26007099999998,
                    "p99": 213.26007099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 160.72678399999998,
                    "min": 123.78951099999999,
                    "p50": 151.581472,
                    "p95": 160.72678399999998,
                    "p99": 160.72678399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.35629699999998,
                    "min": 202.494499,
                    "p50": 213.574267,
                    "p95": 246.35629699999998,
                    "p99": 246.35629699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 555.413985,
                    "min": 515.520149,
                    "p50": 544.9306419999999,
                    "p95": 555.413985,
                    "p99": 555.413985,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 150.148776,
                    "min": 102.748285,
                    "p50": 139.640579,
                    "p95": 150.148776,
                    "p99": 150.148776,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 232.591106,
                    "min": 189.865771,
                    "p50": 219.17276999999999,
                    "p95": 232.591106,
                    "p99": 232.591106,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 204.176478,
                    "min": 157.465691,
                    "p50": 196.37189999999998,
                    "p95": 204.176478,
                    "p99": 204.176478,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.67960199999999,
                    "min": 91.690142,
                    "p50": 114.950914,
                    "p95": 121.67960199999999,
                    "p99": 121.67960199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 312.439965,
                    "min": 280.912308,
                    "p50": 304.232636,
                    "p95": 312.439965,
                    "p99": 312.439965,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.71215099999999,
                    "min": 83.683315,
                    "p50": 97.866922,
                    "p95": 100.71215099999999,
                    "p99": 100.71215099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 156.336213,
                    "min": 110.36418599999999,
                    "p50": 148.401916,
                    "p95": 156.336213,
                    "p99": 156.336213,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 191.289687,
                    "min": 145.563324,
                    "p50": 181.553822,
                    "p95": 191.289687,
                    "p99": 191.289687,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 258.69393199999996,
                    "min": 238.96298299999998,
                    "p50": 249.93029199999998,
                    "p95": 258.69393199999996,
                    "p99": 258.69393199999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 467.548323,
                    "min": 402.009014,
                    "p50": 429.99701699999997,
                    "p95": 467.548323,
                    "p99": 467.548323,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 215.351552,
                    "min": 174.895354,
                    "p50": 201.56837399999998,
                    "p95": 215.351552,
                    "p99": 215.351552,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.849159,
                    "min": 130.634792,
                    "p50": 148.98026099999998,
                    "p95": 171.849159,
                    "p99": 171.849159,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.248696,
                    "min": 74.098028,
                    "p50": 105.628856,
                    "p95": 113.248696,
                    "p99": 113.248696,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 237.741527,
                    "min": 200.77342399999998,
                    "p50": 213.147302,
                    "p95": 237.741527,
                    "p99": 237.741527,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 288.169846,
                    "min": 247.90000999999998,
                    "p50": 273.627481,
                    "p95": 288.169846,
                    "p99": 288.169846,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 607.8979899999999,
                    "min": 557.5994099999999,
                    "p50": 593.035717,
                    "p95": 607.8979899999999,
                    "p99": 607.8979899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 734.287863,
                    "min": 666.036374,
                    "p50": 700.369254,
                    "p95": 734.287863,
                    "p99": 734.287863,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1457.17014,
                    "min": 1359.570753,
                    "p50": 1406.6266229999999,
                    "p95": 1457.17014,
                    "p99": 1457.17014,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.511521,
                    "min": 46.535588999999995,
                    "p50": 48.061335,
                    "p95": 84.511521,
                    "p99": 84.511521,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 677.181199,
                    "min": 609.615181,
                    "p50": 643.037261,
                    "p95": 677.181199,
                    "p99": 677.181199,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 211.188147,
                    "min": 167.80782,
                    "p50": 192.19427299999998,
                    "p95": 211.188147,
                    "p99": 211.188147,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 168.47981199999998,
                    "min": 121.237798,
                    "p50": 155.992913,
                    "p95": 168.47981199999998,
                    "p99": 168.47981199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 227.207135,
                    "min": 184.59757399999998,
                    "p50": 221.005555,
                    "p95": 227.207135,
                    "p99": 227.207135,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.676819,
                    "min": 92.63027699999999,
                    "p50": 121.453932,
                    "p95": 139.676819,
                    "p99": 139.676819,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.361307,
                    "min": 67.820323,
                    "p50": 99.865656,
                    "p95": 106.361307,
                    "p99": 106.361307,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 79.354903,
                    "min": 41.331207,
                    "p50": 69.96661399999999,
                    "p95": 79.354903,
                    "p99": 79.354903,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 185.149745,
                    "min": 139.613782,
                    "p50": 180.193618,
                    "p95": 185.149745,
                    "p99": 185.149745,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 255.985422,
                    "min": 208.123328,
                    "p50": 251.07304,
                    "p95": 255.985422,
                    "p99": 255.985422,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 110.21689099999999,
                    "min": 73.513626,
                    "p50": 100.907186,
                    "p95": 110.21689099999999,
                    "p99": 110.21689099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 146.458792,
                    "min": 95.42358999999999,
                    "p50": 136.768618,
                    "p95": 146.458792,
                    "p99": 146.458792,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 209.03649,
                    "min": 169.43081999999998,
                    "p50": 195.995812,
                    "p95": 209.03649,
                    "p99": 209.03649,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 559.048395,
                    "min": 499.81755,
                    "p50": 540.393867,
                    "p95": 559.048395,
                    "p99": 559.048395,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 158.21327499999998,
                    "min": 113.636855,
                    "p50": 154.724953,
                    "p95": 158.21327499999998,
                    "p99": 158.21327499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 302.96349699999996,
                    "min": 250.99271399999998,
                    "p50": 287.35091,
                    "p95": 302.96349699999996,
                    "p99": 302.96349699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 191.112586,
                    "min": 152.75843899999998,
                    "p50": 177.51723199999998,
                    "p95": 191.112586,
                    "p99": 191.112586,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.138807,
                    "min": 53.393577,
                    "p50": 83.04888,
                    "p95": 94.138807,
                    "p99": 94.138807,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 415.02178499999997,
                    "min": 346.872579,
                    "p50": 380.026544,
                    "p95": 415.02178499999997,
                    "p99": 415.02178499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.14296299999998,
                    "min": 213.499427,
                    "p50": 229.193152,
                    "p95": 243.14296299999998,
                    "p99": 243.14296299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.729448,
                    "min": 138.259686,
                    "p50": 167.101303,
                    "p95": 184.729448,
                    "p99": 184.729448,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.046292,
                    "min": 206.623024,
                    "p50": 240.928103,
                    "p95": 253.046292,
                    "p99": 253.046292,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1067.811915,
                    "min": 829.002181,
                    "p50": 891.465425,
                    "p95": 1067.811915,
                    "p99": 1067.811915,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 627.413826,
                    "min": 589.747904,
                    "p50": 612.7601579999999,
                    "p95": 627.413826,
                    "p99": 627.413826,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 706.676825,
                    "min": 677.867679,
                    "p50": 692.226006,
                    "p95": 706.676825,
                    "p99": 706.676825,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 795.58726,
                    "min": 734.298316,
                    "p50": 775.866285,
                    "p95": 795.58726,
                    "p99": 795.58726,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 431.732671,
                    "min": 372.995165,
                    "p50": 394.503876,
                    "p95": 431.732671,
                    "p99": 431.732671,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 314.57291,
                    "min": 269.995176,
                    "p50": 305.2332,
                    "p95": 314.57291,
                    "p99": 314.57291,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 411.87152,
                    "min": 359.06380099999996,
                    "p50": 403.314357,
                    "p95": 411.87152,
                    "p99": 411.87152,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 363.662467,
                    "min": 306.487785,
                    "p50": 325.85276899999997,
                    "p95": 363.662467,
                    "p99": 363.662467,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 497.251452,
                    "min": 445.88714699999997,
                    "p50": 457.191807,
                    "p95": 497.251452,
                    "p99": 497.251452,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 514.370096,
                    "min": 469.77079699999996,
                    "p50": 490.385479,
                    "p95": 514.370096,
                    "p99": 514.370096,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 683.3957369999999,
                    "min": 627.550927,
                    "p50": 655.953256,
                    "p95": 683.3957369999999,
                    "p99": 683.3957369999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 599.6370549999999,
                    "min": 516.112799,
                    "p50": 559.138066,
                    "p95": 599.6370549999999,
                    "p99": 599.6370549999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 551.394802,
                    "min": 458.64505699999995,
                    "p50": 486.98297299999996,
                    "p95": 551.394802,
                    "p99": 551.394802,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 638.732143,
                    "min": 590.1481679999999,
                    "p50": 610.366262,
                    "p95": 638.732143,
                    "p99": 638.732143,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 658.313129,
                    "min": 621.742489,
                    "p50": 656.2997379999999,
                    "p95": 658.313129,
                    "p99": 658.313129,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.336164,
                    "min": 167.846642,
                    "p50": 200.36782699999998,
                    "p95": 213.336164,
                    "p99": 213.336164,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.432732,
                    "min": 212.79117,
                    "p50": 245.54342499999998,
                    "p95": 261.432732,
                    "p99": 261.432732,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 366.045591,
                    "min": 298.86744999999996,
                    "p50": 329.09113199999996,
                    "p95": 366.045591,
                    "p99": 366.045591,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 310.248625,
                    "min": 267.018343,
                    "p50": 294.321086,
                    "p95": 310.248625,
                    "p99": 310.248625,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 501.61965,
                    "min": 453.096009,
                    "p50": 475.613319,
                    "p95": 501.61965,
                    "p99": 501.61965,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.870848,
                    "min": 139.03529699999999,
                    "p50": 143.98522599999998,
                    "p95": 175.870848,
                    "p99": 175.870848,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 414.718972,
                    "min": 329.138845,
                    "p50": 367.57834499999996,
                    "p95": 414.718972,
                    "p99": 414.718972,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 817.555222,
                    "min": 766.5082179999999,
                    "p50": 800.712496,
                    "p95": 817.555222,
                    "p99": 817.555222,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 933.02666,
                    "min": 849.4371689999999,
                    "p50": 900.476775,
                    "p95": 933.02666,
                    "p99": 933.02666,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 736.249191,
                    "min": 652.238571,
                    "p50": 695.568175,
                    "p95": 736.249191,
                    "p99": 736.249191,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 433.822705,
                    "min": 382.219265,
                    "p50": 405.066964,
                    "p95": 433.822705,
                    "p99": 433.822705,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 600.017486,
                    "min": 559.214822,
                    "p50": 570.737533,
                    "p95": 600.017486,
                    "p99": 600.017486,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 665.994003,
                    "min": 609.297014,
                    "p50": 655.830872,
                    "p95": 665.994003,
                    "p99": 665.994003,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 633.373012,
                    "min": 531.861446,
                    "p50": 596.104012,
                    "p95": 633.373012,
                    "p99": 633.373012,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 668.376144,
                    "min": 611.241916,
                    "p50": 643.916118,
                    "p95": 668.376144,
                    "p99": 668.376144,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 771.0200739999999,
                    "min": 709.286916,
                    "p50": 748.983396,
                    "p95": 771.0200739999999,
                    "p99": 771.0200739999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 580.355045,
                    "min": 540.0188929999999,
                    "p50": 554.748119,
                    "p95": 580.355045,
                    "p99": 580.355045,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 723.541204,
                    "min": 485.644702,
                    "p50": 504.98107699999997,
                    "p95": 723.541204,
                    "p99": 723.541204,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.902659,
                    "min": 131.428544,
                    "p50": 140.714383,
                    "p95": 178.902659,
                    "p99": 178.902659,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 873.031987,
                    "min": 811.931376,
                    "p50": 835.267118,
                    "p95": 873.031987,
                    "p99": 873.031987,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 492.398413,
                    "min": 439.777294,
                    "p50": 456.16691799999995,
                    "p95": 492.398413,
                    "p99": 492.398413,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 431.232217,
                    "min": 383.642321,
                    "p50": 414.941081,
                    "p95": 431.232217,
                    "p99": 431.232217,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.26173,
                    "min": 267.196574,
                    "p50": 274.397511,
                    "p95": 304.26173,
                    "p99": 304.26173,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.328446,
                    "min": 353.78033,
                    "p50": 364.631742,
                    "p95": 394.328446,
                    "p99": 394.328446,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 349.573871,
                    "min": 282.923904,
                    "p50": 321.168589,
                    "p95": 349.573871,
                    "p99": 349.573871,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 218.19644,
                    "min": 164.123436,
                    "p50": 207.744855,
                    "p95": 218.19644,
                    "p99": 218.19644,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 267.103169,
                    "min": 215.667173,
                    "p50": 252.88090699999998,
                    "p95": 267.103169,
                    "p99": 267.103169,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 671.728975,
                    "min": 613.7608359999999,
                    "p50": 639.256668,
                    "p95": 671.728975,
                    "p99": 671.728975,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 736.035661,
                    "min": 631.9445499999999,
                    "p50": 705.864435,
                    "p95": 736.035661,
                    "p99": 736.035661,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 584.936617,
                    "min": 518.190566,
                    "p50": 551.312099,
                    "p95": 584.936617,
                    "p99": 584.936617,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 893.0574449999999,
                    "min": 749.689223,
                    "p50": 790.334709,
                    "p95": 893.0574449999999,
                    "p99": 893.0574449999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 218.10037799999998,
                    "min": 187.10597099999998,
                    "p50": 203.52410899999998,
                    "p95": 218.10037799999998,
                    "p99": 218.10037799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 548.148789,
                    "min": 469.461318,
                    "p50": 513.782973,
                    "p95": 548.148789,
                    "p99": 548.148789,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 925.236629,
                    "min": 874.207272,
                    "p50": 905.9494699999999,
                    "p95": 925.236629,
                    "p99": 925.236629,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 307.948766,
                    "min": 254.205347,
                    "p50": 264.470067,
                    "p95": 307.948766,
                    "p99": 307.948766,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1014.231822,
                    "min": 340.988253,
                    "p50": 364.885758,
                    "p95": 1014.231822,
                    "p99": 1014.231822,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 379.490486,
                    "min": 287.73114799999996,
                    "p50": 346.002254,
                    "p95": 379.490486,
                    "p99": 379.490486,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 685.137629,
                    "min": 213.56070799999998,
                    "p50": 239.654653,
                    "p95": 685.137629,
                    "p99": 685.137629,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 442.74643499999996,
                    "min": 393.52362899999997,
                    "p50": 432.488587,
                    "p95": 442.74643499999996,
                    "p99": 442.74643499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 511.45665599999995,
                    "min": 448.887545,
                    "p50": 502.42884599999996,
                    "p95": 511.45665599999995,
                    "p99": 511.45665599999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 179.658439,
                    "min": 135.050263,
                    "p50": 157.194245,
                    "p95": 179.658439,
                    "p99": 179.658439,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 631.964933,
                    "min": 597.072714,
                    "p50": 611.789571,
                    "p95": 631.964933,
                    "p99": 631.964933,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 692.851936,
                    "min": 642.54457,
                    "p50": 666.0820749999999,
                    "p95": 692.851936,
                    "p99": 692.851936,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 426.15709599999997,
                    "min": 388.109466,
                    "p50": 416.02684999999997,
                    "p95": 426.15709599999997,
                    "p99": 426.15709599999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 512.783651,
                    "min": 472.19373099999996,
                    "p50": 497.01347899999996,
                    "p95": 512.783651,
                    "p99": 512.783651,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 343.98967999999996,
                    "min": 294.714759,
                    "p50": 308.363948,
                    "p95": 343.98967999999996,
                    "p99": 343.98967999999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 296.28797399999996,
                    "min": 257.664283,
                    "p50": 270.34515,
                    "p95": 296.28797399999996,
                    "p99": 296.28797399999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 471.231793,
                    "min": 432.763472,
                    "p50": 450.534445,
                    "p95": 471.231793,
                    "p99": 471.231793,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 160.503071,
                    "min": 132.163083,
                    "p50": 137.269397,
                    "p95": 160.503071,
                    "p99": 160.503071,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.89827499999998,
                    "min": 174.59800099999998,
                    "p50": 178.690484,
                    "p95": 217.89827499999998,
                    "p99": 217.89827499999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 381.496226,
                    "min": 343.396737,
                    "p50": 367.422108,
                    "p95": 381.496226,
                    "p99": 381.496226,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 250.090091,
                    "min": 215.92354899999998,
                    "p50": 226.162107,
                    "p95": 250.090091,
                    "p99": 250.090091,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 926.566203,
                    "min": 857.516924,
                    "p50": 876.679187,
                    "p95": 926.566203,
                    "p99": 926.566203,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 567.94961,
                    "min": 516.530807,
                    "p50": 546.302192,
                    "p95": 567.94961,
                    "p99": 567.94961,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 802.5560409999999,
                    "min": 744.934539,
                    "p50": 782.749617,
                    "p95": 802.5560409999999,
                    "p99": 802.5560409999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 650.919402,
                    "min": 599.454891,
                    "p50": 640.743426,
                    "p95": 650.919402,
                    "p99": 650.919402,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 615.0657279999999,
                    "min": 559.6491209999999,
                    "p50": 598.099693,
                    "p95": 615.0657279999999,
                    "p99": 615.0657279999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1345.964348,
                    "min": 1275.945976,
                    "p50": 1311.738656,
                    "p95": 1345.964348,
                    "p99": 1345.964348,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 575.77987,
                    "min": 528.581926,
                    "p50": 562.581342,
                    "p95": 575.77987,
                    "p99": 575.77987,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 504.96971199999996,
                    "min": 376.698259,
                    "p50": 421.034362,
                    "p95": 504.96971199999996,
                    "p99": 504.96971199999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 498.67986499999995,
                    "min": 457.91171399999996,
                    "p50": 483.91911999999996,
                    "p95": 498.67986499999995,
                    "p99": 498.67986499999995,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 756.3484229999999,
                    "min": 702.541958,
                    "p50": 743.7229229999999,
                    "p95": 756.3484229999999,
                    "p99": 756.3484229999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 667.650257,
                    "min": 626.124653,
                    "p50": 643.164946,
                    "p95": 667.650257,
                    "p99": 667.650257,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 474.850041,
                    "min": 422.122256,
                    "p50": 446.369218,
                    "p95": 474.850041,
                    "p99": 474.850041,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 146.25279899999998,
                    "min": 109.669046,
                    "p50": 137.26397699999998,
                    "p95": 146.25279899999998,
                    "p99": 146.25279899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 187.341489,
                    "min": 141.334781,
                    "p50": 170.593426,
                    "p95": 187.341489,
                    "p99": 187.341489,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 397.054828,
                    "min": 341.58597599999996,
                    "p50": 370.01034999999996,
                    "p95": 397.054828,
                    "p99": 397.054828,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 259.634303,
                    "min": 209.998237,
                    "p50": 234.42901999999998,
                    "p95": 259.634303,
                    "p99": 259.634303,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 368.847002,
                    "min": 306.571309,
                    "p50": 358.093147,
                    "p95": 368.847002,
                    "p99": 368.847002,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 216.22448799999998,
                    "min": 172.440588,
                    "p50": 211.772502,
                    "p95": 216.22448799999998,
                    "p99": 216.22448799999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 554.5532029999999,
                    "min": 474.32692799999995,
                    "p50": 530.481714,
                    "p95": 554.5532029999999,
                    "p99": 554.5532029999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 329.545395,
                    "min": 288.885584,
                    "p50": 321.08586399999996,
                    "p95": 329.545395,
                    "p99": 329.545395,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.410062,
                    "min": 240.302237,
                    "p50": 260.658834,
                    "p95": 286.410062,
                    "p99": 286.410062,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 371.818532,
                    "min": 328.121146,
                    "p50": 355.24334999999996,
                    "p95": 371.818532,
                    "p99": 371.818532,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 171.594158,
                    "min": 130.219799,
                    "p50": 153.977455,
                    "p95": 171.594158,
                    "p99": 171.594158,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 303.737391,
                    "min": 262.32766499999997,
                    "p50": 296.25352499999997,
                    "p95": 303.737391,
                    "p99": 303.737391,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 273.07608,
                    "min": 230.81141599999998,
                    "p50": 253.587573,
                    "p95": 273.07608,
                    "p99": 273.07608,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 238.405936,
                    "min": 191.82563299999998,
                    "p50": 224.29735399999998,
                    "p95": 238.405936,
                    "p99": 238.405936,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 537.995401,
                    "min": 487.46036799999996,
                    "p50": 515.12499,
                    "p95": 537.995401,
                    "p99": 537.995401,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 464.366467,
                    "min": 425.79729399999997,
                    "p50": 444.191066,
                    "p95": 464.366467,
                    "p99": 464.366467,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 708.6663259999999,
                    "min": 630.516458,
                    "p50": 695.070805,
                    "p95": 708.6663259999999,
                    "p99": 708.6663259999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1043.104286,
                    "min": 940.101821,
                    "p50": 1015.0317,
                    "p95": 1043.104286,
                    "p99": 1043.104286,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 427.989944,
                    "min": 387.181228,
                    "p50": 417.437169,
                    "p95": 427.989944,
                    "p99": 427.989944,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 205.638791,
                    "min": 165.46228399999998,
                    "p50": 171.47579399999998,
                    "p95": 205.638791,
                    "p99": 205.638791,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 408.239687,
                    "min": 347.77777299999997,
                    "p50": 377.936067,
                    "p95": 408.239687,
                    "p99": 408.239687,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.69157799999999,
                    "min": 97.883647,
                    "p50": 102.18674299999999,
                    "p95": 122.69157799999999,
                    "p99": 122.69157799999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 509.27125099999995,
                    "min": 441.35950099999997,
                    "p50": 474.025811,
                    "p95": 509.27125099999995,
                    "p99": 509.27125099999995,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 606.6134539999999,
                    "min": 551.087167,
                    "p50": 594.8851099999999,
                    "p95": 606.6134539999999,
                    "p99": 606.6134539999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 338.117656,
                    "min": 297.883161,
                    "p50": 318.005548,
                    "p95": 338.117656,
                    "p99": 338.117656,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1017.770413,
                    "min": 962.8286129999999,
                    "p50": 1004.434706,
                    "p95": 1017.770413,
                    "p99": 1017.770413,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 267.444095,
                    "min": 220.23233199999999,
                    "p50": 253.39062299999998,
                    "p95": 267.444095,
                    "p99": 267.444095,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 187.54477799999998,
                    "min": 148.231653,
                    "p50": 183.058091,
                    "p95": 187.54477799999998,
                    "p99": 187.54477799999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 333.757947,
                    "min": 294.547005,
                    "p50": 328.476415,
                    "p95": 333.757947,
                    "p99": 333.757947,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 138.407274,
                    "min": 101.760234,
                    "p50": 130.418893,
                    "p95": 138.407274,
                    "p99": 138.407274,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 527.459915,
                    "min": 486.368539,
                    "p50": 506.79630799999995,
                    "p95": 527.459915,
                    "p99": 527.459915,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 394.33930599999997,
                    "min": 365.882224,
                    "p50": 389.154671,
                    "p95": 394.33930599999997,
                    "p99": 394.33930599999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 382.772335,
                    "min": 342.80517299999997,
                    "p50": 367.83705699999996,
                    "p95": 382.772335,
                    "p99": 382.772335,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 115.247292,
                    "min": 76.798788,
                    "p50": 102.169944,
                    "p95": 115.247292,
                    "p99": 115.247292,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 162.785852,
                    "min": 121.495336,
                    "p50": 126.09544299999999,
                    "p95": 162.785852,
                    "p99": 162.785852,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 468.364258,
                    "min": 429.449999,
                    "p50": 457.228456,
                    "p95": 468.364258,
                    "p99": 468.364258,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 236.618195,
                    "min": 195.495849,
                    "p50": 198.663543,
                    "p95": 236.618195,
                    "p99": 236.618195,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 309.381738,
                    "min": 268.357855,
                    "p50": 300.826576,
                    "p95": 309.381738,
                    "p99": 309.381738,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 226.473546,
                    "min": 172.599696,
                    "p50": 198.420562,
                    "p95": 226.473546,
                    "p99": 226.473546,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 357.92191099999997,
                    "min": 316.321572,
                    "p50": 343.417807,
                    "p95": 357.92191099999997,
                    "p99": 357.92191099999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 766.366305,
                    "min": 724.279291,
                    "p50": 761.011091,
                    "p95": 766.366305,
                    "p99": 766.366305,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1263.429709,
                    "min": 1201.251968,
                    "p50": 1230.099201,
                    "p95": 1263.429709,
                    "p99": 1263.429709,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 282.253356,
                    "min": 244.18532599999998,
                    "p50": 247.612144,
                    "p95": 282.253356,
                    "p99": 282.253356,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 164.561963,
                    "min": 113.024906,
                    "p50": 144.71311599999999,
                    "p95": 164.561963,
                    "p99": 164.561963,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 413.592397,
                    "min": 318.30096499999996,
                    "p50": 348.72453099999996,
                    "p95": 413.592397,
                    "p99": 413.592397,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 574.679325,
                    "min": 471.007887,
                    "p50": 510.695076,
                    "p95": 574.679325,
                    "p99": 574.679325,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 947.316072,
                    "min": 780.47996,
                    "p50": 818.6244049999999,
                    "p95": 947.316072,
                    "p99": 947.316072,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 778.281651,
                    "min": 623.8630989999999,
                    "p50": 661.877166,
                    "p95": 778.281651,
                    "p99": 778.281651,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 185.769068,
                    "min": 128.50721199999998,
                    "p50": 154.952799,
                    "p95": 185.769068,
                    "p99": 185.769068,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 336.076194,
                    "min": 276.147291,
                    "p50": 280.83426199999997,
                    "p95": 336.076194,
                    "p99": 336.076194,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 156.50662599999998,
                    "min": 98.323281,
                    "p50": 133.52971,
                    "p95": 156.50662599999998,
                    "p99": 156.50662599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 300.934832,
                    "min": 221.40215899999998,
                    "p50": 243.394019,
                    "p95": 300.934832,
                    "p99": 300.934832,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 288.39941799999997,
                    "min": 237.367616,
                    "p50": 240.830267,
                    "p95": 288.39941799999997,
                    "p99": 288.39941799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 105.48770999999999,
                    "min": 66.791837,
                    "p50": 97.74397499999999,
                    "p95": 105.48770999999999,
                    "p99": 105.48770999999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 215.656143,
                    "min": 176.617327,
                    "p50": 202.791425,
                    "p95": 215.656143,
                    "p99": 215.656143,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 231.84456699999998,
                    "min": 192.62435399999998,
                    "p50": 225.502492,
                    "p95": 231.84456699999998,
                    "p99": 231.84456699999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 573.751476,
                    "min": 81.773326,
                    "p50": 119.258161,
                    "p95": 573.751476,
                    "p99": 573.751476,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 93.256348,
                    "min": 50.78453,
                    "p50": 81.589146,
                    "p95": 93.256348,
                    "p99": 93.256348,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 251.312862,
                    "min": 208.573411,
                    "p50": 240.09858599999998,
                    "p95": 251.312862,
                    "p99": 251.312862,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 199.411195,
                    "min": 159.90941999999998,
                    "p50": 186.573632,
                    "p95": 199.411195,
                    "p99": 199.411195,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 206.835457,
                    "min": 145.56972,
                    "p50": 173.356999,
                    "p95": 206.835457,
                    "p99": 206.835457,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 397.91567399999997,
                    "min": 321.035506,
                    "p50": 336.30880199999996,
                    "p95": 397.91567399999997,
                    "p99": 397.91567399999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 586.3556219999999,
                    "min": 498.540711,
                    "p50": 521.811498,
                    "p95": 586.3556219999999,
                    "p99": 586.3556219999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 504.98790199999996,
                    "min": 422.719855,
                    "p50": 460.44834,
                    "p95": 504.98790199999996,
                    "p99": 504.98790199999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 160.53897999999998,
                    "min": 110.112183,
                    "p50": 148.081956,
                    "p95": 160.53897999999998,
                    "p99": 160.53897999999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 840.330279,
                    "min": 704.901434,
                    "p50": 734.401427,
                    "p95": 840.330279,
                    "p99": 840.330279,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 343.682895,
                    "min": 290.08950699999997,
                    "p50": 320.57294099999996,
                    "p95": 343.682895,
                    "p99": 343.682895,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 229.71972599999998,
                    "min": 181.55342299999998,
                    "p50": 214.095697,
                    "p95": 229.71972599999998,
                    "p99": 229.71972599999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 467.700385,
                    "min": 390.649876,
                    "p50": 423.92389099999997,
                    "p95": 467.700385,
                    "p99": 467.700385,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 257.940341,
                    "min": 214.558292,
                    "p50": 242.921361,
                    "p95": 257.940341,
                    "p99": 257.940341,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 725.4971939999999,
                    "min": 617.033656,
                    "p50": 668.253203,
                    "p95": 725.4971939999999,
                    "p99": 725.4971939999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 183.41615199999998,
                    "min": 142.968248,
                    "p50": 151.45936899999998,
                    "p95": 183.41615199999998,
                    "p99": 183.41615199999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 606.289032,
                    "min": 545.3021709999999,
                    "p50": 574.783068,
                    "p95": 606.289032,
                    "p99": 606.289032,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 319.68638799999997,
                    "min": 247.80463799999998,
                    "p50": 292.109204,
                    "p95": 319.68638799999997,
                    "p99": 319.68638799999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 522.596996,
                    "min": 464.484172,
                    "p50": 499.692571,
                    "p95": 522.596996,
                    "p99": 522.596996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 402.216125,
                    "min": 357.128981,
                    "p50": 386.048363,
                    "p95": 402.216125,
                    "p99": 402.216125,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 238.26219899999998,
                    "min": 200.284708,
                    "p50": 203.42346999999998,
                    "p95": 238.26219899999998,
                    "p99": 238.26219899999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 665.922324,
                    "min": 592.797295,
                    "p50": 632.779199,
                    "p95": 665.922324,
                    "p99": 665.922324,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 383.79008,
                    "min": 360.105871,
                    "p50": 368.025827,
                    "p95": 383.79008,
                    "p99": 383.79008,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 579.87927,
                    "min": 519.295658,
                    "p50": 544.265493,
                    "p95": 579.87927,
                    "p99": 579.87927,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 840.58877,
                    "min": 790.7805979999999,
                    "p50": 811.786205,
                    "p95": 840.58877,
                    "p99": 840.58877,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 489.158985,
                    "min": 432.701469,
                    "p50": 449.34185099999996,
                    "p95": 489.158985,
                    "p99": 489.158985,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 607.272301,
                    "min": 554.144901,
                    "p50": 591.729554,
                    "p95": 607.272301,
                    "p99": 607.272301,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1265.4648929999998,
                    "min": 1175.458218,
                    "p50": 1221.29486,
                    "p95": 1265.4648929999998,
                    "p99": 1265.4648929999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 324.57813799999997,
                    "min": 282.144259,
                    "p50": 297.544551,
                    "p95": 324.57813799999997,
                    "p99": 324.57813799999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 409.035012,
                    "min": 123.80910499999999,
                    "p50": 152.25281099999998,
                    "p95": 409.035012,
                    "p99": 409.035012,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 447.264078,
                    "min": 399.425465,
                    "p50": 435.858744,
                    "p95": 447.264078,
                    "p99": 447.264078,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 282.551861,
                    "min": 242.287308,
                    "p50": 264.754862,
                    "p95": 282.551861,
                    "p99": 282.551861,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.114152,
                    "min": 159.922892,
                    "p50": 199.503162,
                    "p95": 209.114152,
                    "p99": 209.114152,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 364.172598,
                    "min": 322.57059399999997,
                    "p50": 353.14342,
                    "p95": 364.172598,
                    "p99": 364.172598,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 776.2947469999999,
                    "min": 691.143639,
                    "p50": 727.878747,
                    "p95": 776.2947469999999,
                    "p99": 776.2947469999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 547.412126,
                    "min": 476.302051,
                    "p50": 518.17518,
                    "p95": 547.412126,
                    "p99": 547.412126,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 500.38868399999996,
                    "min": 451.48008,
                    "p50": 486.468434,
                    "p95": 500.38868399999996,
                    "p99": 500.38868399999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 591.7321109999999,
                    "min": 515.3936249999999,
                    "p50": 549.583173,
                    "p95": 591.7321109999999,
                    "p99": 591.7321109999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 677.4890019999999,
                    "min": 562.5430279999999,
                    "p50": 581.5045729999999,
                    "p95": 677.4890019999999,
                    "p99": 677.4890019999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 396.371812,
                    "min": 333.732465,
                    "p50": 365.80089899999996,
                    "p95": 396.371812,
                    "p99": 396.371812,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 270.580357,
                    "min": 226.66253,
                    "p50": 263.838423,
                    "p95": 270.580357,
                    "p99": 270.580357,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 351.426264,
                    "min": 303.005996,
                    "p50": 336.955877,
                    "p95": 351.426264,
                    "p99": 351.426264,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 188.591164,
                    "min": 153.64359299999998,
                    "p50": 180.69915999999998,
                    "p95": 188.591164,
                    "p99": 188.591164,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.27976999999998,
                    "min": 190.674748,
                    "p50": 224.432332,
                    "p95": 231.27976999999998,
                    "p99": 231.27976999999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 439.78887199999997,
                    "min": 372.632583,
                    "p50": 406.799091,
                    "p95": 439.78887199999997,
                    "p99": 439.78887199999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 337.073416,
                    "min": 265.352716,
                    "p50": 297.260002,
                    "p95": 337.073416,
                    "p99": 337.073416,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 834.477489,
                    "min": 740.7955539999999,
                    "p50": 780.273387,
                    "p95": 834.477489,
                    "p99": 834.477489,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 509.744855,
                    "min": 406.226024,
                    "p50": 446.154298,
                    "p95": 509.744855,
                    "p99": 509.744855,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 723.0826609999999,
                    "min": 646.1501539999999,
                    "p50": 679.077647,
                    "p95": 723.0826609999999,
                    "p99": 723.0826609999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.97238099999998,
                    "min": 115.807147,
                    "p50": 143.082774,
                    "p95": 153.97238099999998,
                    "p99": 153.97238099999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 561.315832,
                    "min": 480.04860199999996,
                    "p50": 498.37328399999996,
                    "p95": 561.315832,
                    "p99": 561.315832,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 369.04863,
                    "min": 314.194002,
                    "p50": 340.66819399999997,
                    "p95": 369.04863,
                    "p99": 369.04863,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 200.674329,
                    "min": 160.647709,
                    "p50": 184.07420299999998,
                    "p95": 200.674329,
                    "p99": 200.674329,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 248.546901,
                    "min": 107.75246899999999,
                    "p50": 144.148404,
                    "p95": 248.546901,
                    "p99": 248.546901,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 124.03210899999999,
                    "min": 82.17000399999999,
                    "p50": 112.28763199999999,
                    "p95": 124.03210899999999,
                    "p99": 124.03210899999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 380.793297,
                    "min": 341.957963,
                    "p50": 377.78702,
                    "p95": 380.793297,
                    "p99": 380.793297,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 440.003061,
                    "min": 396.205735,
                    "p50": 426.549829,
                    "p95": 440.003061,
                    "p99": 440.003061,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 276.380027,
                    "min": 237.716883,
                    "p50": 250.67092599999998,
                    "p95": 276.380027,
                    "p99": 276.380027,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 592.188865,
                    "min": 524.23731,
                    "p50": 562.4804829999999,
                    "p95": 592.188865,
                    "p99": 592.188865,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 305.799062,
                    "min": 263.337696,
                    "p50": 292.12296599999996,
                    "p95": 305.799062,
                    "p99": 305.799062,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 242.746656,
                    "min": 185.361861,
                    "p50": 218.9979,
                    "p95": 242.746656,
                    "p99": 242.746656,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 508.37129699999997,
                    "min": 460.478522,
                    "p50": 494.17726899999997,
                    "p95": 508.37129699999997,
                    "p99": 508.37129699999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 412.237889,
                    "min": 366.664133,
                    "p50": 406.090719,
                    "p95": 412.237889,
                    "p99": 412.237889,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 175.68277,
                    "min": 133.82719699999998,
                    "p50": 165.102507,
                    "p95": 175.68277,
                    "p99": 175.68277,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 250.571191,
                    "min": 213.110736,
                    "p50": 238.238418,
                    "p95": 250.571191,
                    "p99": 250.571191,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 853.248104,
                    "min": 783.300977,
                    "p50": 822.7321559999999,
                    "p95": 853.248104,
                    "p99": 853.248104,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 342.978569,
                    "min": 288.160624,
                    "p50": 327.37194999999997,
                    "p95": 342.978569,
                    "p99": 342.978569,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1153.18447,
                    "min": 1039.920674,
                    "p50": 1082.519749,
                    "p95": 1153.18447,
                    "p99": 1153.18447,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 483.68273899999997,
                    "min": 440.70143099999996,
                    "p50": 462.325298,
                    "p95": 483.68273899999997,
                    "p99": 483.68273899999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 265.739158,
                    "min": 213.98343699999998,
                    "p50": 248.765288,
                    "p95": 265.739158,
                    "p99": 265.739158,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 932.3307,
                    "min": 845.315299,
                    "p50": 894.507586,
                    "p95": 932.3307,
                    "p99": 932.3307,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 662.103616,
                    "min": 610.942857,
                    "p50": 621.158734,
                    "p95": 662.103616,
                    "p99": 662.103616,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 305.751619,
                    "min": 257.705711,
                    "p50": 293.926229,
                    "p95": 305.751619,
                    "p99": 305.751619,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 704.8313549999999,
                    "min": 657.704396,
                    "p50": 673.966898,
                    "p95": 704.8313549999999,
                    "p99": 704.8313549999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.08652,
                    "min": 300.944749,
                    "p50": 340.275514,
                    "p95": 352.08652,
                    "p99": 352.08652,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 569.380815,
                    "min": 506.032582,
                    "p50": 554.483134,
                    "p95": 569.380815,
                    "p99": 569.380815,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 440.751397,
                    "min": 380.60678099999996,
                    "p50": 414.857458,
                    "p95": 440.751397,
                    "p99": 440.751397,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 609.767509,
                    "min": 571.328076,
                    "p50": 600.7381859999999,
                    "p95": 609.767509,
                    "p99": 609.767509,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 802.8367939999999,
                    "min": 748.847624,
                    "p50": 774.419505,
                    "p95": 802.8367939999999,
                    "p99": 802.8367939999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 391.779367,
                    "min": 342.14611299999996,
                    "p50": 378.963508,
                    "p95": 391.779367,
                    "p99": 391.779367,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 511.282556,
                    "min": 459.408688,
                    "p50": 490.370543,
                    "p95": 511.282556,
                    "p99": 511.282556,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.535098,
                    "min": 129.79518,
                    "p50": 154.44572399999998,
                    "p95": 175.535098,
                    "p99": 175.535098,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.594773,
                    "min": 168.95973999999998,
                    "p50": 204.55470499999998,
                    "p95": 215.594773,
                    "p99": 215.594773,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 401.420738,
                    "min": 351.259573,
                    "p50": 390.831281,
                    "p95": 401.420738,
                    "p99": 401.420738,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.49903,
                    "min": 144.95456,
                    "p50": 179.972857,
                    "p95": 184.49903,
                    "p99": 184.49903,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 468.845302,
                    "min": 422.00460799999996,
                    "p50": 452.63633,
                    "p95": 468.845302,
                    "p99": 468.845302,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 540.242067,
                    "min": 491.71962499999995,
                    "p50": 529.355556,
                    "p95": 540.242067,
                    "p99": 540.242067,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 218.696628,
                    "min": 178.896446,
                    "p50": 183.58461699999998,
                    "p95": 218.696628,
                    "p99": 218.696628,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 356.60292599999997,
                    "min": 315.126767,
                    "p50": 326.90937299999996,
                    "p95": 356.60292599999997,
                    "p99": 356.60292599999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 323.95279999999997,
                    "min": 283.770152,
                    "p50": 289.230535,
                    "p95": 323.95279999999997,
                    "p99": 323.95279999999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 254.560689,
                    "min": 214.017346,
                    "p50": 242.52805999999998,
                    "p95": 254.560689,
                    "p99": 254.560689,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 146.43258,
                    "min": 109.215329,
                    "p50": 120.960825,
                    "p95": 146.43258,
                    "p99": 146.43258,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 662.1917139999999,
                    "min": 610.3056849999999,
                    "p50": 650.977671,
                    "p95": 662.1917139999999,
                    "p99": 662.1917139999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 433.846753,
                    "min": 390.283347,
                    "p50": 411.684764,
                    "p95": 433.846753,
                    "p99": 433.846753,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 503.910308,
                    "min": 460.896126,
                    "p50": 491.01354599999996,
                    "p95": 503.910308,
                    "p99": 503.910308,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 758.128389,
                    "min": 704.5530299999999,
                    "p50": 737.309842,
                    "p95": 758.128389,
                    "p99": 758.128389,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 561.740412,
                    "min": 527.453704,
                    "p50": 538.953123,
                    "p95": 561.740412,
                    "p99": 561.740412,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 288.949623,
                    "min": 250.717593,
                    "p50": 274.279839,
                    "p95": 288.949623,
                    "p99": 288.949623,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 689.748733,
                    "min": 646.013658,
                    "p50": 672.7891569999999,
                    "p95": 689.748733,
                    "p99": 689.748733,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 396.250795,
                    "min": 364.109715,
                    "p50": 381.97092799999996,
                    "p95": 396.250795,
                    "p99": 396.250795,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 545.177682,
                    "min": 506.221838,
                    "p50": 534.985733,
                    "p95": 545.177682,
                    "p99": 545.177682,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 580.2668199999999,
                    "min": 540.503951,
                    "p50": 561.767914,
                    "p95": 580.2668199999999,
                    "p99": 580.2668199999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 768.2969979999999,
                    "min": 723.2557089999999,
                    "p50": 732.242339,
                    "p95": 768.2969979999999,
                    "p99": 768.2969979999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 437.823312,
                    "min": 398.914366,
                    "p50": 404.798454,
                    "p95": 437.823312,
                    "p99": 437.823312,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 247.612011,
                    "min": 218.607779,
                    "p50": 221.676944,
                    "p95": 247.612011,
                    "p99": 247.612011,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 332.81606,
                    "min": 292.17537999999996,
                    "p50": 322.510474,
                    "p95": 332.81606,
                    "p99": 332.81606,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 508.302287,
                    "min": 471.880074,
                    "p50": 479.15133399999996,
                    "p95": 508.302287,
                    "p99": 508.302287,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 467.553404,
                    "min": 434.175793,
                    "p50": 448.89746299999996,
                    "p95": 467.553404,
                    "p99": 467.553404,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1123.22391,
                    "min": 1078.427467,
                    "p50": 1104.941386,
                    "p95": 1123.22391,
                    "p99": 1123.22391,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 295.824509,
                    "min": 257.112321,
                    "p50": 280.998628,
                    "p95": 295.824509,
                    "p99": 295.824509,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 137.892886,
                    "min": 111.46882599999999,
                    "p50": 113.4323,
                    "p95": 137.892886,
                    "p99": 137.892886,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.695008,
                    "min": 182.626124,
                    "p50": 209.07803099999998,
                    "p95": 222.695008,
                    "p99": 222.695008,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 364.818518,
                    "min": 329.501465,
                    "p50": 354.000416,
                    "p95": 364.818518,
                    "p99": 364.818518,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 186.501771,
                    "min": 149.271867,
                    "p50": 185.404526,
                    "p95": 186.501771,
                    "p99": 186.501771,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 820.084516,
                    "min": 663.676032,
                    "p50": 709.319839,
                    "p95": 820.084516,
                    "p99": 820.084516,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 387.89571,
                    "min": 312.91614699999997,
                    "p50": 338.748925,
                    "p95": 387.89571,
                    "p99": 387.89571,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 188.967613,
                    "min": 135.978387,
                    "p50": 170.52140599999998,
                    "p95": 188.967613,
                    "p99": 188.967613,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.78257499999998,
                    "min": 178.38855999999998,
                    "p50": 213.546463,
                    "p95": 223.78257499999998,
                    "p99": 223.78257499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 561.926277,
                    "min": 438.519683,
                    "p50": 464.627299,
                    "p95": 561.926277,
                    "p99": 561.926277,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.18775899999997,
                    "min": 265.83491399999997,
                    "p50": 300.56131899999997,
                    "p95": 318.18775899999997,
                    "p99": 318.18775899999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1047.014298,
                    "min": 883.93778,
                    "p50": 916.228128,
                    "p95": 1047.014298,
                    "p99": 1047.014298,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 305.08487099999996,
                    "min": 227.420766,
                    "p50": 252.25478999999999,
                    "p95": 305.08487099999996,
                    "p99": 305.08487099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 593.787205,
                    "min": 499.494128,
                    "p50": 519.918215,
                    "p95": 593.787205,
                    "p99": 593.787205,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 421.027475,
                    "min": 378.74830399999996,
                    "p50": 391.757858,
                    "p95": 421.027475,
                    "p99": 421.027475,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 667.5773439999999,
                    "min": 538.472394,
                    "p50": 575.113305,
                    "p95": 667.5773439999999,
                    "p99": 667.5773439999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 709.4396959999999,
                    "min": 573.036345,
                    "p50": 591.3580519999999,
                    "p95": 709.4396959999999,
                    "p99": 709.4396959999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 928.5239859999999,
                    "min": 787.831832,
                    "p50": 814.958359,
                    "p95": 928.5239859999999,
                    "p99": 928.5239859999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 760.911163,
                    "min": 649.477939,
                    "p50": 665.316427,
                    "p95": 760.911163,
                    "p99": 760.911163,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 510.006443,
                    "min": 398.75841599999995,
                    "p50": 429.215465,
                    "p95": 510.006443,
                    "p99": 510.006443,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.661846,
                    "min": 145.20502399999998,
                    "p50": 150.074219,
                    "p95": 184.661846,
                    "p99": 184.661846,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 582.258864,
                    "min": 526.789755,
                    "p50": 574.117134,
                    "p95": 582.258864,
                    "p99": 582.258864,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 440.190789,
                    "min": 396.668907,
                    "p50": 430.53811299999995,
                    "p95": 440.190789,
                    "p99": 440.190789,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 361.328712,
                    "min": 318.690043,
                    "p50": 327.471844,
                    "p95": 361.328712,
                    "p99": 361.328712,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 257.271453,
                    "min": 212.181109,
                    "p50": 245.54198699999998,
                    "p95": 257.271453,
                    "p99": 257.271453,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.39601,
                    "min": 110.226509,
                    "p50": 130.737115,
                    "p95": 150.39601,
                    "p99": 150.39601,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.24218399999998,
                    "min": 179.054974,
                    "p50": 185.886926,
                    "p95": 223.24218399999998,
                    "p99": 223.24218399999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 538.813686,
                    "min": 492.44253199999997,
                    "p50": 510.279812,
                    "p95": 538.813686,
                    "p99": 538.813686,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 667.247216,
                    "min": 612.266969,
                    "p50": 662.239186,
                    "p95": 667.247216,
                    "p99": 667.247216,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 294.80177499999996,
                    "min": 248.579997,
                    "p50": 289.157133,
                    "p95": 294.80177499999996,
                    "p99": 294.80177499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 403.367659,
                    "min": 355.159316,
                    "p50": 377.659677,
                    "p95": 403.367659,
                    "p99": 403.367659,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 764.221286,
                    "min": 699.368786,
                    "p50": 753.977444,
                    "p95": 764.221286,
                    "p99": 764.221286,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 478.62060199999996,
                    "min": 431.641732,
                    "p50": 473.828291,
                    "p95": 478.62060199999996,
                    "p99": 478.62060199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 329.17391399999997,
                    "min": 284.286561,
                    "p50": 294.121177,
                    "p95": 329.17391399999997,
                    "p99": 329.17391399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 506.307912,
                    "min": 458.00508199999996,
                    "p50": 474.726026,
                    "p95": 506.307912,
                    "p99": 506.307912,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1296.95823,
                    "min": 1235.50272,
                    "p50": 1272.204904,
                    "p95": 1296.95823,
                    "p99": 1296.95823,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 717.82531,
                    "min": 664.946962,
                    "p50": 691.570712,
                    "p95": 717.82531,
                    "p99": 717.82531,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 874.825464,
                    "min": 826.0796849999999,
                    "p50": 851.2964039999999,
                    "p95": 874.825464,
                    "p99": 874.825464,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 934.585306,
                    "min": 879.381775,
                    "p50": 922.3238389999999,
                    "p95": 934.585306,
                    "p99": 934.585306,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1191.167954,
                    "min": 1110.537909,
                    "p50": 1170.284842,
                    "p95": 1191.167954,
                    "p99": 1191.167954,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1135.445593,
                    "min": 1037.819182,
                    "p50": 1103.675898,
                    "p95": 1135.445593,
                    "p99": 1135.445593,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 374.49014999999997,
                    "min": 339.93028699999996,
                    "p50": 352.05035,
                    "p95": 374.49014999999997,
                    "p99": 374.49014999999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 809.512355,
                    "min": 719.623573,
                    "p50": 774.346053,
                    "p95": 809.512355,
                    "p99": 809.512355,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1052.498592,
                    "min": 983.3708819999999,
                    "p50": 1000.1583139999999,
                    "p95": 1052.498592,
                    "p99": 1052.498592,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1493.166283,
                    "min": 1424.25836,
                    "p50": 1460.826511,
                    "p95": 1493.166283,
                    "p99": 1493.166283,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 466.538508,
                    "min": 401.77124499999996,
                    "p50": 426.651193,
                    "p95": 466.538508,
                    "p99": 466.538508,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 637.980138,
                    "min": 576.6067049999999,
                    "p50": 595.8924549999999,
                    "p95": 637.980138,
                    "p99": 637.980138,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 301.18315,
                    "min": 249.00035599999998,
                    "p50": 271.324004,
                    "p95": 301.18315,
                    "p99": 301.18315,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 539.169374,
                    "min": 480.88374699999997,
                    "p50": 533.803148,
                    "p95": 539.169374,
                    "p99": 539.169374,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1713.646567,
                    "min": 1585.7472329999998,
                    "p50": 1680.1293739999999,
                    "p95": 1713.646567,
                    "p99": 1713.646567,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1732.66995,
                    "min": 1598.982339,
                    "p50": 1691.729695,
                    "p95": 1732.66995,
                    "p99": 1732.66995,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1219.211785,
                    "min": 1146.7171039999998,
                    "p50": 1187.9228229999999,
                    "p95": 1219.211785,
                    "p99": 1219.211785,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1044.740138,
                    "min": 989.462868,
                    "p50": 1009.1969939999999,
                    "p95": 1044.740138,
                    "p99": 1044.740138,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 794.2710609999999,
                    "min": 742.359552,
                    "p50": 759.680426,
                    "p95": 794.2710609999999,
                    "p99": 794.2710609999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 725.9039779999999,
                    "min": 644.3856959999999,
                    "p50": 669.227501,
                    "p95": 725.9039779999999,
                    "p99": 725.9039779999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 544.584804,
                    "min": 499.09794999999997,
                    "p50": 525.9053309999999,
                    "p95": 544.584804,
                    "p99": 544.584804,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1132.4388649999999,
                    "min": 1066.140976,
                    "p50": 1109.335044,
                    "p95": 1132.4388649999999,
                    "p99": 1132.4388649999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 376.361722,
                    "min": 322.008042,
                    "p50": 342.681626,
                    "p95": 376.361722,
                    "p99": 376.361722,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 974.1846129999999,
                    "min": 875.0056659999999,
                    "p50": 928.428286,
                    "p95": 974.1846129999999,
                    "p99": 974.1846129999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 459.872687,
                    "min": 401.368406,
                    "p50": 429.05173199999996,
                    "p95": 459.872687,
                    "p99": 459.872687,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1502.589121,
                    "min": 1427.913892,
                    "p50": 1463.3284099999998,
                    "p95": 1502.589121,
                    "p99": 1502.589121,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 290.13602,
                    "min": 251.147914,
                    "p50": 263.79889399999996,
                    "p95": 290.13602,
                    "p99": 290.13602,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 635.387629,
                    "min": 582.72917,
                    "p50": 596.762556,
                    "p95": 635.387629,
                    "p99": 635.387629,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1312.176285,
                    "min": 1212.954066,
                    "p50": 1256.952023,
                    "p95": 1312.176285,
                    "p99": 1312.176285,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 881.01114,
                    "min": 793.8080299999999,
                    "p50": 851.519856,
                    "p95": 881.01114,
                    "p99": 881.01114,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 959.500141,
                    "min": 878.777391,
                    "p50": 925.290668,
                    "p95": 959.500141,
                    "p99": 959.500141,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 550.6270549999999,
                    "min": 491.153086,
                    "p50": 520.009475,
                    "p95": 550.6270549999999,
                    "p99": 550.6270549999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 456.82890899999995,
                    "min": 402.10486599999996,
                    "p50": 428.41655,
                    "p95": 456.82890899999995,
                    "p99": 456.82890899999995,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 871.703677,
                    "min": 793.7526429999999,
                    "p50": 843.815031,
                    "p95": 871.703677,
                    "p99": 871.703677,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1721.936467,
                    "min": 1618.8009949999998,
                    "p50": 1674.407064,
                    "p95": 1721.936467,
                    "p99": 1721.936467,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 371.366827,
                    "min": 321.849897,
                    "p50": 343.173582,
                    "p95": 371.366827,
                    "p99": 371.366827,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 630.650622,
                    "min": 570.249472,
                    "p50": 602.391621,
                    "p95": 630.650622,
                    "p99": 630.650622,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 286.28610399999997,
                    "min": 249.455275,
                    "p50": 264.835404,
                    "p95": 286.28610399999997,
                    "p99": 286.28610399999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1304.527981,
                    "min": 1228.3545609999999,
                    "p50": 1259.029943,
                    "p95": 1304.527981,
                    "p99": 1304.527981,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1192.6707549999999,
                    "min": 1121.573022,
                    "p50": 1160.6899469999998,
                    "p95": 1192.6707549999999,
                    "p99": 1192.6707549999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1053.558441,
                    "min": 952.6772649999999,
                    "p50": 1016.8374739999999,
                    "p95": 1053.558441,
                    "p99": 1053.558441,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1146.453399,
                    "min": 1030.6786379999999,
                    "p50": 1108.564468,
                    "p95": 1146.453399,
                    "p99": 1146.453399,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 793.1894259999999,
                    "min": 715.435629,
                    "p50": 756.582309,
                    "p95": 793.1894259999999,
                    "p99": 793.1894259999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1514.065537,
                    "min": 1397.077584,
                    "p50": 1457.883241,
                    "p95": 1514.065537,
                    "p99": 1514.065537,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 718.557864,
                    "min": 643.914625,
                    "p50": 670.701821,
                    "p95": 718.557864,
                    "p99": 718.557864,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 389.521145,
                    "min": 334.11886699999997,
                    "p50": 374.198035,
                    "p95": 389.521145,
                    "p99": 389.521145,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 231.19304799999998,
                    "min": 187.74450099999999,
                    "p50": 207.63089599999998,
                    "p95": 231.19304799999998,
                    "p99": 231.19304799999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 443.67695299999997,
                    "min": 412.618246,
                    "p50": 429.872975,
                    "p95": 443.67695299999997,
                    "p99": 443.67695299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 476.500683,
                    "min": 428.776328,
                    "p50": 473.964088,
                    "p95": 476.500683,
                    "p99": 476.500683,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.73846999999999,
                    "min": 80.04483599999999,
                    "p50": 100.70018999999999,
                    "p95": 120.73846999999999,
                    "p99": 120.73846999999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 375.376088,
                    "min": 317.066422,
                    "p50": 340.970037,
                    "p95": 375.376088,
                    "p99": 375.376088,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 196.67665,
                    "min": 153.719457,
                    "p50": 165.448073,
                    "p95": 196.67665,
                    "p99": 196.67665,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 149.542157,
                    "min": 107.37361299999999,
                    "p50": 138.33369299999998,
                    "p95": 149.542157,
                    "p99": 149.542157,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 849.241683,
                    "min": 785.478441,
                    "p50": 821.2517859999999,
                    "p95": 849.241683,
                    "p99": 849.241683,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 277.422931,
                    "min": 226.893904,
                    "p50": 247.14019499999998,
                    "p95": 277.422931,
                    "p99": 277.422931,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 337.575917,
                    "min": 282.229132,
                    "p50": 301.481068,
                    "p95": 337.575917,
                    "p99": 337.575917,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 412.958844,
                    "min": 363.682409,
                    "p50": 380.50429099999997,
                    "p95": 412.958844,
                    "p99": 412.958844,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 166.79252499999998,
                    "min": 128.756489,
                    "p50": 138.612138,
                    "p95": 166.79252499999998,
                    "p99": 166.79252499999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1735.661465,
                    "min": 1308.3687949999999,
                    "p50": 1350.897192,
                    "p95": 1735.661465,
                    "p99": 1735.661465,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 572.3607089999999,
                    "min": 521.210061,
                    "p50": 553.311143,
                    "p95": 572.3607089999999,
                    "p99": 572.3607089999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 312.21881099999996,
                    "min": 258.642875,
                    "p50": 297.704361,
                    "p95": 312.21881099999996,
                    "p99": 312.21881099999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 250.238596,
                    "min": 214.552022,
                    "p50": 239.234774,
                    "p95": 250.238596,
                    "p99": 250.238596,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1103.7626659999999,
                    "min": 980.966243,
                    "p50": 1079.0077099999999,
                    "p95": 1103.7626659999999,
                    "p99": 1103.7626659999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 811.7313489999999,
                    "min": 761.6327309999999,
                    "p50": 777.942851,
                    "p95": 811.7313489999999,
                    "p99": 811.7313489999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 283.522633,
                    "min": 233.79054299999999,
                    "p50": 258.572411,
                    "p95": 283.522633,
                    "p99": 283.522633,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 545.07942,
                    "min": 502.116249,
                    "p50": 528.451319,
                    "p95": 545.07942,
                    "p99": 545.07942,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 389.375281,
                    "min": 349.315582,
                    "p50": 358.570904,
                    "p95": 389.375281,
                    "p99": 389.375281,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 424.755108,
                    "min": 387.745165,
                    "p50": 394.28306799999996,
                    "p95": 424.755108,
                    "p99": 424.755108,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.650487,
                    "min": 118.817803,
                    "p50": 121.04798299999999,
                    "p95": 155.650487,
                    "p99": 155.650487,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 469.69271399999997,
                    "min": 425.601431,
                    "p50": 432.292599,
                    "p95": 469.69271399999997,
                    "p99": 469.69271399999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 238.187863,
                    "min": 195.80595399999999,
                    "p50": 230.386177,
                    "p95": 238.187863,
                    "p99": 238.187863,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 575.498419,
                    "min": 541.999615,
                    "p50": 555.9755779999999,
                    "p95": 575.498419,
                    "p99": 575.498419,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 350.320424,
                    "min": 311.092811,
                    "p50": 316.91051799999997,
                    "p95": 350.320424,
                    "p99": 350.320424,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 717.555527,
                    "min": 684.185066,
                    "p50": 707.9849829999999,
                    "p95": 717.555527,
                    "p99": 717.555527,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 501.97863099999995,
                    "min": 463.88154599999996,
                    "p50": 478.708422,
                    "p95": 501.97863099999995,
                    "p99": 501.97863099999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 311.708562,
                    "min": 270.163272,
                    "p50": 280.321555,
                    "p95": 311.708562,
                    "p99": 311.708562,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 199.86623,
                    "min": 157.699719,
                    "p50": 182.601731,
                    "p95": 199.86623,
                    "p99": 199.86623,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 624.757795,
                    "min": 586.877175,
                    "p50": 621.765095,
                    "p95": 624.757795,
                    "p99": 624.757795,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1199.437383,
                    "min": 1155.048323,
                    "p50": 1186.87126,
                    "p95": 1199.437383,
                    "p99": 1199.437383,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 255.20984099999998,
                    "min": 214.98672,
                    "p50": 242.031648,
                    "p95": 255.20984099999998,
                    "p99": 255.20984099999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 279.423224,
                    "min": 235.71257599999998,
                    "p50": 240.38455,
                    "p95": 279.423224,
                    "p99": 279.423224,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 160.692575,
                    "min": 120.91783699999999,
                    "p50": 122.248019,
                    "p95": 160.692575,
                    "p99": 160.692575,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 231.756248,
                    "min": 189.592043,
                    "p50": 207.865174,
                    "p95": 231.756248,
                    "p99": 231.756248,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 367.498178,
                    "min": 332.734529,
                    "p50": 357.059806,
                    "p95": 367.498178,
                    "p99": 367.498178,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 115.96928799999999,
                    "min": 73.342938,
                    "p50": 101.985957,
                    "p95": 115.96928799999999,
                    "p99": 115.96928799999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 753.844016,
                    "min": 696.5024109999999,
                    "p50": 745.76409,
                    "p95": 753.844016,
                    "p99": 753.844016,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 304.72459,
                    "min": 260.450507,
                    "p50": 264.702742,
                    "p95": 304.72459,
                    "p99": 304.72459,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 350.79700399999996,
                    "min": 308.218755,
                    "p50": 341.87886199999997,
                    "p95": 350.79700399999996,
                    "p99": 350.79700399999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 182.448098,
                    "min": 143.624226,
                    "p50": 170.432356,
                    "p95": 182.448098,
                    "p99": 182.448098,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 451.05589599999996,
                    "min": 410.30104,
                    "p50": 444.147745,
                    "p95": 451.05589599999996,
                    "p99": 451.05589599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 326.001648,
                    "min": 285.300143,
                    "p50": 289.504661,
                    "p95": 326.001648,
                    "p99": 326.001648,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 205.65023499999998,
                    "min": 167.606374,
                    "p50": 195.78586299999998,
                    "p95": 205.65023499999998,
                    "p99": 205.65023499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 987.3886349999999,
                    "min": 938.837639,
                    "p50": 971.9623459999999,
                    "p95": 987.3886349999999,
                    "p99": 987.3886349999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 131.049585,
                    "min": 97.482102,
                    "p50": 98.722364,
                    "p95": 131.049585,
                    "p99": 131.049585,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 385.646172,
                    "min": 354.77849499999996,
                    "p50": 382.620726,
                    "p95": 385.646172,
                    "p99": 385.646172,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 511.162781,
                    "min": 473.833628,
                    "p50": 498.90653,
                    "p95": 511.162781,
                    "p99": 511.162781,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 666.906717,
                    "min": 608.922998,
                    "p50": 643.342806,
                    "p95": 666.906717,
                    "p99": 666.906717,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 583.521803,
                    "min": 495.012069,
                    "p50": 541.103922,
                    "p95": 583.521803,
                    "p99": 583.521803,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 891.756031,
                    "min": 838.6660459999999,
                    "p50": 857.194294,
                    "p95": 891.756031,
                    "p99": 891.756031,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 777.129962,
                    "min": 713.5800849999999,
                    "p50": 744.4616159999999,
                    "p95": 777.129962,
                    "p99": 777.129962,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 615.493122,
                    "min": 557.0124979999999,
                    "p50": 593.323224,
                    "p95": 615.493122,
                    "p99": 615.493122,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 730.2408819999999,
                    "min": 692.315646,
                    "p50": 704.846829,
                    "p95": 730.2408819999999,
                    "p99": 730.2408819999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 839.969338,
                    "min": 750.6288579999999,
                    "p50": 801.3217989999999,
                    "p95": 839.969338,
                    "p99": 839.969338,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 247.45584,
                    "min": 200.042767,
                    "p50": 202.45170399999998,
                    "p95": 247.45584,
                    "p99": 247.45584,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 315.669491,
                    "min": 247.150839,
                    "p50": 254.83507,
                    "p95": 315.669491,
                    "p99": 315.669491,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 341.822077,
                    "min": 300.097423,
                    "p50": 302.147892,
                    "p95": 341.822077,
                    "p99": 341.822077,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1143.28324,
                    "min": 1088.395518,
                    "p50": 1110.4605239999999,
                    "p95": 1143.28324,
                    "p99": 1143.28324,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 397.776496,
                    "min": 351.46012199999996,
                    "p50": 353.860263,
                    "p95": 397.776496,
                    "p99": 397.776496,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1027.711307,
                    "min": 944.1432,
                    "p50": 990.8851699999999,
                    "p95": 1027.711307,
                    "p99": 1027.711307,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 517.201743,
                    "min": 450.913297,
                    "p50": 495.724321,
                    "p95": 517.201743,
                    "p99": 517.201743,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 446.128399,
                    "min": 390.592418,
                    "p50": 439.894597,
                    "p95": 446.128399,
                    "p99": 446.128399,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 190.18195699999998,
                    "min": 143.452369,
                    "p50": 159.757705,
                    "p95": 190.18195699999998,
                    "p99": 190.18195699999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 280.43718,
                    "min": 220.82451799999998,
                    "p50": 250.609975,
                    "p95": 280.43718,
                    "p99": 280.43718,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 305.853054,
                    "min": 279.02461999999997,
                    "p50": 292.96145,
                    "p95": 305.853054,
                    "p99": 305.853054,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.003327,
                    "min": 92.502637,
                    "p50": 102.632893,
                    "p95": 112.003327,
                    "p99": 112.003327,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 218.50822699999998,
                    "min": 165.554758,
                    "p50": 182.67488899999998,
                    "p95": 218.50822699999998,
                    "p99": 218.50822699999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 288.093578,
                    "min": 245.78931699999998,
                    "p50": 272.451727,
                    "p95": 288.093578,
                    "p99": 288.093578,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.221111,
                    "min": 77.439162,
                    "p50": 87.591535,
                    "p95": 100.221111,
                    "p99": 100.221111,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.759605,
                    "min": 122.88868099999999,
                    "p50": 126.24692499999999,
                    "p95": 142.759605,
                    "p99": 142.759605,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 173.31644799999998,
                    "min": 137.582171,
                    "p50": 163.877964,
                    "p95": 173.31644799999998,
                    "p99": 173.31644799999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 448.880586,
                    "min": 392.32498699999996,
                    "p50": 427.53069,
                    "p95": 448.880586,
                    "p99": 448.880586,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 614.243801,
                    "min": 481.367035,
                    "p50": 569.3504459999999,
                    "p95": 614.243801,
                    "p99": 614.243801,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 178.549817,
                    "min": 164.100193,
                    "p50": 172.953666,
                    "p95": 178.549817,
                    "p99": 178.549817,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1341.8693879999998,
                    "min": 1218.334154,
                    "p50": 1299.945512,
                    "p95": 1341.8693879999998,
                    "p99": 1341.8693879999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 71.51636599999999,
                    "min": 47.541563,
                    "p50": 55.681034999999994,
                    "p95": 71.51636599999999,
                    "p99": 71.51636599999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.322228,
                    "min": 97.272093,
                    "p50": 120.476068,
                    "p95": 126.322228,
                    "p99": 126.322228,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 666.612628,
                    "min": 581.763071,
                    "p50": 648.593745,
                    "p95": 666.612628,
                    "p99": 666.612628,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 541.9299589999999,
                    "min": 482.90079099999997,
                    "p50": 501.009602,
                    "p95": 541.9299589999999,
                    "p99": 541.9299589999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 433.79477699999995,
                    "min": 389.59977399999997,
                    "p50": 411.42659599999996,
                    "p95": 433.79477699999995,
                    "p99": 433.79477699999995,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 601.654421,
                    "min": 431.072203,
                    "p50": 515.1735269999999,
                    "p95": 601.654421,
                    "p99": 601.654421,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 322.833943,
                    "min": 249.270174,
                    "p50": 259.35217,
                    "p95": 322.833943,
                    "p99": 322.833943,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1313.166747,
                    "min": 1221.5936649999999,
                    "p50": 1251.580109,
                    "p95": 1313.166747,
                    "p99": 1313.166747,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 879.1515109999999,
                    "min": 708.132031,
                    "p50": 796.447097,
                    "p95": 879.1515109999999,
                    "p99": 879.1515109999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 609.4286089999999,
                    "min": 549.38796,
                    "p50": 565.989289,
                    "p95": 609.4286089999999,
                    "p99": 609.4286089999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 602.852814,
                    "min": 507.010966,
                    "p50": 520.86212,
                    "p95": 602.852814,
                    "p99": 602.852814,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 359.554967,
                    "min": 311.542158,
                    "p50": 325.130459,
                    "p95": 359.554967,
                    "p99": 359.554967,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 843.54999,
                    "min": 822.811165,
                    "p50": 833.3983,
                    "p95": 843.54999,
                    "p99": 843.54999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 194.41526,
                    "min": 166.979358,
                    "p50": 178.284639,
                    "p95": 194.41526,
                    "p99": 194.41526,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 653.108284,
                    "min": 629.946611,
                    "p50": 638.377607,
                    "p95": 653.108284,
                    "p99": 653.108284,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 377.48481899999996,
                    "min": 361.804563,
                    "p50": 363.835667,
                    "p95": 377.48481899999996,
                    "p99": 377.48481899999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 308.614359,
                    "min": 275.27252899999996,
                    "p50": 286.21817699999997,
                    "p95": 308.614359,
                    "p99": 308.614359,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 254.96523399999998,
                    "min": 195.50196699999998,
                    "p50": 211.020433,
                    "p95": 254.96523399999998,
                    "p99": 254.96523399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 652.0889139999999,
                    "min": 596.2648909999999,
                    "p50": 601.815611,
                    "p95": 652.0889139999999,
                    "p99": 652.0889139999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1244.882928,
                    "min": 1107.744309,
                    "p50": 1156.526846,
                    "p95": 1244.882928,
                    "p99": 1244.882928,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 238.445706,
                    "min": 225.260694,
                    "p50": 234.78502799999998,
                    "p95": 238.445706,
                    "p99": 238.445706,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 840.903161,
                    "min": 775.4880939999999,
                    "p50": 796.728316,
                    "p95": 840.903161,
                    "p99": 840.903161,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 908.59682,
                    "min": 847.0895989999999,
                    "p50": 867.554815,
                    "p95": 908.59682,
                    "p99": 908.59682,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 304.184731,
                    "min": 286.10951,
                    "p50": 295.473979,
                    "p95": 304.184731,
                    "p99": 304.184731,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 730.965881,
                    "min": 714.6666399999999,
                    "p50": 724.441186,
                    "p95": 730.965881,
                    "p99": 730.965881,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1014.758847,
                    "min": 959.616102,
                    "p50": 966.224481,
                    "p95": 1014.758847,
                    "p99": 1014.758847,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 456.86368999999996,
                    "min": 397.3554,
                    "p50": 421.22229,
                    "p95": 456.86368999999996,
                    "p99": 456.86368999999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 682.950082,
                    "min": 594.4032609999999,
                    "p50": 609.2853799999999,
                    "p95": 682.950082,
                    "p99": 682.950082,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 633.5784239999999,
                    "min": 535.7355279999999,
                    "p50": 543.1178699999999,
                    "p95": 633.5784239999999,
                    "p99": 633.5784239999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1313.516382,
                    "min": 1272.671276,
                    "p50": 1280.87427,
                    "p95": 1313.516382,
                    "p99": 1313.516382,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 724.206902,
                    "min": 664.722447,
                    "p50": 705.05584,
                    "p95": 724.206902,
                    "p99": 724.206902,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 504.86421299999995,
                    "min": 464.265534,
                    "p50": 482.07600299999996,
                    "p95": 504.86421299999995,
                    "p99": 504.86421299999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 406.005091,
                    "min": 349.691941,
                    "p50": 360.88845299999997,
                    "p95": 406.005091,
                    "p99": 406.005091,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 962.234463,
                    "min": 889.652351,
                    "p50": 913.784106,
                    "p95": 962.234463,
                    "p99": 962.234463,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 127.03085999999999,
                    "min": 108.13626699999999,
                    "p50": 118.577772,
                    "p95": 127.03085999999999,
                    "p99": 127.03085999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 50.366609999999994,
                    "min": 26.516091,
                    "p50": 28.203359,
                    "p95": 50.366609999999994,
                    "p99": 50.366609999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 248.961657,
                    "min": 215.846995,
                    "p50": 226.97786599999998,
                    "p95": 248.961657,
                    "p99": 248.961657,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 448.79666399999996,
                    "min": 396.91918899999996,
                    "p50": 415.259102,
                    "p95": 448.79666399999996,
                    "p99": 448.79666399999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 115.956064,
                    "min": 93.695927,
                    "p50": 108.065348,
                    "p95": 115.956064,
                    "p99": 115.956064,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 50.617822999999994,
                    "min": 44.552316,
                    "p50": 46.107791999999996,
                    "p95": 50.617822999999994,
                    "p99": 50.617822999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 204.104466,
                    "min": 183.837537,
                    "p50": 189.24595499999998,
                    "p95": 204.104466,
                    "p99": 204.104466,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 41.979422,
                    "min": 35.494026,
                    "p50": 38.485206,
                    "p95": 41.979422,
                    "p99": 41.979422,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 54.56295,
                    "min": 41.385404,
                    "p50": 45.059556,
                    "p95": 54.56295,
                    "p99": 54.56295,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 124.723058,
                    "min": 98.273207,
                    "p50": 112.67228399999999,
                    "p95": 124.723058,
                    "p99": 124.723058,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 145.850463,
                    "min": 136.458448,
                    "p50": 144.374045,
                    "p95": 145.850463,
                    "p99": 145.850463,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 50.850237,
                    "min": 26.490026999999998,
                    "p50": 27.150187,
                    "p95": 50.850237,
                    "p99": 50.850237,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 89.59937599999999,
                    "min": 74.119969,
                    "p50": 81.95204,
                    "p95": 89.59937599999999,
                    "p99": 89.59937599999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 113.49659899999999,
                    "min": 90.502893,
                    "p50": 100.25720299999999,
                    "p95": 113.49659899999999,
                    "p99": 113.49659899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 77.67797999999999,
                    "min": 51.540444,
                    "p50": 58.627995999999996,
                    "p95": 77.67797999999999,
                    "p99": 77.67797999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 66.93503299999999,
                    "min": 39.4666,
                    "p50": 59.528132,
                    "p95": 66.93503299999999,
                    "p99": 66.93503299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 111.06681499999999,
                    "min": 59.812794,
                    "p50": 100.64416399999999,
                    "p95": 111.06681499999999,
                    "p99": 111.06681499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 78.708168,
                    "min": 61.585941999999996,
                    "p50": 67.994618,
                    "p95": 78.708168,
                    "p99": 78.708168,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 83.497089,
                    "min": 47.663345,
                    "p50": 74.83816399999999,
                    "p95": 83.497089,
                    "p99": 83.497089,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 337.95363399999997,
                    "min": 316.145448,
                    "p50": 324.13296299999996,
                    "p95": 337.95363399999997,
                    "p99": 337.95363399999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 219.83922199999998,
                    "min": 185.832686,
                    "p50": 202.86377399999998,
                    "p95": 219.83922199999998,
                    "p99": 219.83922199999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 492.48171099999996,
                    "min": 456.55121699999995,
                    "p50": 466.385838,
                    "p95": 492.48171099999996,
                    "p99": 492.48171099999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 240.760575,
                    "min": 223.208429,
                    "p50": 232.23122899999998,
                    "p95": 240.760575,
                    "p99": 240.760575,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 392.96710099999996,
                    "min": 371.357282,
                    "p50": 382.77583599999997,
                    "p95": 392.96710099999996,
                    "p99": 392.96710099999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1559.668983,
                    "min": 1528.565711,
                    "p50": 1549.821168,
                    "p95": 1559.668983,
                    "p99": 1559.668983,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 379.018842,
                    "min": 345.221765,
                    "p50": 351.188758,
                    "p95": 379.018842,
                    "p99": 379.018842,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 479.913012,
                    "min": 430.243496,
                    "p50": 441.003538,
                    "p95": 479.913012,
                    "p99": 479.913012,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 585.22754,
                    "min": 564.189878,
                    "p50": 577.733058,
                    "p95": 585.22754,
                    "p99": 585.22754,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 298.40002499999997,
                    "min": 279.873885,
                    "p50": 290.210608,
                    "p95": 298.40002499999997,
                    "p99": 298.40002499999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1292.52066,
                    "min": 1223.251423,
                    "p50": 1250.4513399999998,
                    "p95": 1292.52066,
                    "p99": 1292.52066,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 309.619021,
                    "min": 260.707468,
                    "p50": 265.637608,
                    "p95": 309.619021,
                    "p99": 309.619021,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 416.064824,
                    "min": 370.35803799999996,
                    "p50": 409.52993399999997,
                    "p95": 416.064824,
                    "p99": 416.064824,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 964.1739369999999,
                    "min": 926.3418929999999,
                    "p50": 937.895273,
                    "p95": 964.1739369999999,
                    "p99": 964.1739369999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 189.64643999999998,
                    "min": 130.168915,
                    "p50": 172.71862,
                    "p95": 189.64643999999998,
                    "p99": 189.64643999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3078.129785,
                    "min": 2996.2382119999997,
                    "p50": 3044.7291219999997,
                    "p95": 3078.129785,
                    "p99": 3078.129785,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.10361899999998,
                    "min": 131.969235,
                    "p50": 142.254247,
                    "p95": 151.10361899999998,
                    "p99": 151.10361899999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 582.986217,
                    "min": 453.055608,
                    "p50": 501.739508,
                    "p95": 582.986217,
                    "p99": 582.986217,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 665.042333,
                    "min": 646.24365,
                    "p50": 654.606725,
                    "p95": 665.042333,
                    "p99": 665.042333,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 43.97482,
                    "min": 33.393645,
                    "p50": 34.894313,
                    "p95": 43.97482,
                    "p99": 43.97482,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 54.880446,
                    "min": 42.16609,
                    "p50": 47.048576,
                    "p95": 54.880446,
                    "p99": 54.880446,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.326145999999998,
                    "min": 25.232581,
                    "p50": 26.738735,
                    "p95": 27.326145999999998,
                    "p99": 27.326145999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 45.746446999999996,
                    "min": 25.342516999999997,
                    "p50": 38.796549999999996,
                    "p95": 45.746446999999996,
                    "p99": 45.746446999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 57.021710999999996,
                    "min": 50.52052,
                    "p50": 52.576333,
                    "p95": 57.021710999999996,
                    "p99": 57.021710999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 137.97072699999998,
                    "min": 113.74667699999999,
                    "p50": 127.92181599999999,
                    "p95": 137.97072699999998,
                    "p99": 137.97072699999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 68.990406,
                    "min": 35.648233,
                    "p50": 55.389894999999996,
                    "p95": 68.990406,
                    "p99": 68.990406,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 40.506541999999996,
                    "min": 32.586574,
                    "p50": 35.725435,
                    "p95": 40.506541999999996,
                    "p99": 40.506541999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 202.430195,
                    "min": 133.013502,
                    "p50": 178.28690799999998,
                    "p95": 202.430195,
                    "p99": 202.430195,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 50.769887999999995,
                    "min": 26.562303999999997,
                    "p50": 37.995784,
                    "p95": 50.769887999999995,
                    "p99": 50.769887999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 30.654830999999998,
                    "min": 26.559092999999997,
                    "p50": 27.089685,
                    "p95": 30.654830999999998,
                    "p99": 30.654830999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 61.58191,
                    "min": 51.243534999999994,
                    "p50": 52.583025,
                    "p95": 61.58191,
                    "p99": 61.58191,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 32.650645,
                    "min": 25.192083,
                    "p50": 27.03603,
                    "p95": 32.650645,
                    "p99": 32.650645,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 70.195144,
                    "min": 61.797349,
                    "p50": 65.261222,
                    "p95": 70.195144,
                    "p99": 70.195144,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 315.746507,
                    "min": 249.74004699999998,
                    "p50": 279.69460599999996,
                    "p95": 315.746507,
                    "p99": 315.746507,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 33.582637999999996,
                    "min": 29.010838999999997,
                    "p50": 30.860975,
                    "p95": 33.582637999999996,
                    "p99": 33.582637999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 149.264931,
                    "min": 123.41787599999999,
                    "p50": 137.634155,
                    "p95": 149.264931,
                    "p99": 149.264931,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 85.580568,
                    "min": 76.14322,
                    "p50": 81.105176,
                    "p95": 85.580568,
                    "p99": 85.580568,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 54.170944,
                    "min": 46.498211,
                    "p50": 48.043408,
                    "p95": 54.170944,
                    "p99": 54.170944,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 76.36683599999999,
                    "min": 66.67746,
                    "p50": 68.828164,
                    "p95": 76.36683599999999,
                    "p99": 76.36683599999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.895867,
                    "min": 26.427317,
                    "p50": 27.057316999999998,
                    "p95": 27.895867,
                    "p99": 27.895867,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.860875999999998,
                    "min": 26.324571,
                    "p50": 26.482525,
                    "p95": 26.860875999999998,
                    "p99": 26.860875999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.322173,
                    "min": 26.176457,
                    "p50": 27.083159,
                    "p95": 27.322173,
                    "p99": 27.322173,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.650896,
                    "min": 26.238872999999998,
                    "p50": 26.818679,
                    "p95": 28.650896,
                    "p99": 28.650896,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 30.895816999999997,
                    "min": 26.394458,
                    "p50": 26.786313999999997,
                    "p95": 30.895816999999997,
                    "p99": 30.895816999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.261879999999998,
                    "min": 25.292809,
                    "p50": 26.605314999999997,
                    "p95": 27.261879999999998,
                    "p99": 27.261879999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.954449,
                    "min": 25.012497999999997,
                    "p50": 26.631003,
                    "p95": 26.954449,
                    "p99": 26.954449,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.930308999999998,
                    "min": 25.504013,
                    "p50": 26.485028999999997,
                    "p95": 26.930308999999998,
                    "p99": 26.930308999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 66.582348,
                    "min": 54.631888,
                    "p50": 59.495948,
                    "p95": 66.582348,
                    "p99": 66.582348,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 28.790512999999997,
                    "min": 25.585867999999998,
                    "p50": 26.964738,
                    "p95": 28.790512999999997,
                    "p99": 28.790512999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 50.986078,
                    "min": 42.698460999999995,
                    "p50": 43.148793,
                    "p95": 50.986078,
                    "p99": 50.986078,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 39.548884,
                    "min": 25.754555999999997,
                    "p50": 32.327517,
                    "p95": 39.548884,
                    "p99": 39.548884,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 35.414029,
                    "min": 26.988091999999998,
                    "p50": 27.313314,
                    "p95": 35.414029,
                    "p99": 35.414029,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.016772,
                    "min": 26.343989999999998,
                    "p50": 26.571621,
                    "p95": 27.016772,
                    "p99": 27.016772,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 136.934042,
                    "min": 113.210487,
                    "p50": 118.360861,
                    "p95": 136.934042,
                    "p99": 136.934042,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.114745,
                    "min": 20.504341999999998,
                    "p50": 26.73385,
                    "p95": 27.114745,
                    "p99": 27.114745,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 31.476312999999998,
                    "min": 25.396535999999998,
                    "p50": 26.954812999999998,
                    "p95": 31.476312999999998,
                    "p99": 31.476312999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 30.473307,
                    "min": 25.226041,
                    "p50": 27.0949,
                    "p95": 30.473307,
                    "p99": 30.473307,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 344.423456,
                    "min": 315.648954,
                    "p50": 326.337523,
                    "p95": 344.423456,
                    "p99": 344.423456,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 140.348108,
                    "min": 126.08368999999999,
                    "p50": 134.23021699999998,
                    "p95": 140.348108,
                    "p99": 140.348108,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2810.3231419999997,
                    "min": 2746.682563,
                    "p50": 2781.3553589999997,
                    "p95": 2810.3231419999997,
                    "p99": 2810.3231419999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 645.811727,
                    "min": 590.72881,
                    "p50": 600.203855,
                    "p95": 645.811727,
                    "p99": 645.811727,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 285.210596,
                    "min": 233.246502,
                    "p50": 243.67233399999998,
                    "p95": 285.210596,
                    "p99": 285.210596,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.49567299999998,
                    "min": 154.215304,
                    "p50": 162.125113,
                    "p95": 193.49567299999998,
                    "p99": 193.49567299999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 239.695902,
                    "min": 175.909535,
                    "p50": 220.4169,
                    "p95": 239.695902,
                    "p99": 239.695902,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 934.625993,
                    "min": 859.5714469999999,
                    "p50": 882.9061959999999,
                    "p95": 934.625993,
                    "p99": 934.625993,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 450.602264,
                    "min": 403.705742,
                    "p50": 406.73065399999996,
                    "p95": 450.602264,
                    "p99": 450.602264,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 369.046742,
                    "min": 317.993318,
                    "p50": 348.774753,
                    "p95": 369.046742,
                    "p99": 369.046742,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1194.738315,
                    "min": 1114.10982,
                    "p50": 1145.831105,
                    "p95": 1194.738315,
                    "p99": 1194.738315,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1458.479047,
                    "min": 1404.988492,
                    "p50": 1422.175266,
                    "p95": 1458.479047,
                    "p99": 1458.479047,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 496.27183399999996,
                    "min": 426.40212199999996,
                    "p50": 436.333213,
                    "p95": 496.27183399999996,
                    "p99": 496.27183399999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.279539,
                    "min": 187.034221,
                    "p50": 196.356878,
                    "p95": 231.279539,
                    "p99": 231.279539,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 557.4432009999999,
                    "min": 524.115828,
                    "p50": 531.699582,
                    "p95": 557.4432009999999,
                    "p99": 557.4432009999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 350.05969699999997,
                    "min": 292.286663,
                    "p50": 299.028041,
                    "p95": 350.05969699999997,
                    "p99": 350.05969699999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 403.988293,
                    "min": 373.347897,
                    "p50": 383.332747,
                    "p95": 403.988293,
                    "p99": 403.988293,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 506.76160799999997,
                    "min": 452.82824999999997,
                    "p50": 460.851121,
                    "p95": 506.76160799999997,
                    "p99": 506.76160799999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 293.82095799999996,
                    "min": 268.153503,
                    "p50": 273.94095799999997,
                    "p95": 293.82095799999996,
                    "p99": 293.82095799999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2062.281278,
                    "min": 1856.21814,
                    "p50": 1969.1171909999998,
                    "p95": 2062.281278,
                    "p99": 2062.281278,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 295.256807,
                    "min": 282.314919,
                    "p50": 290.717016,
                    "p95": 295.256807,
                    "p99": 295.256807,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 699.7064849999999,
                    "min": 583.363898,
                    "p50": 630.132195,
                    "p95": 699.7064849999999,
                    "p99": 699.7064849999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 943.753471,
                    "min": 887.234981,
                    "p50": 925.963714,
                    "p95": 943.753471,
                    "p99": 943.753471,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 386.99940799999996,
                    "min": 316.454768,
                    "p50": 339.074323,
                    "p95": 386.99940799999996,
                    "p99": 386.99940799999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1045.975528,
                    "min": 940.6652369999999,
                    "p50": 991.8934089999999,
                    "p95": 1045.975528,
                    "p99": 1045.975528,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 640.096627,
                    "min": 516.908962,
                    "p50": 564.208387,
                    "p95": 640.096627,
                    "p99": 640.096627,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1201.379559,
                    "min": 1080.108499,
                    "p50": 1142.70571,
                    "p95": 1201.379559,
                    "p99": 1201.379559,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 414.570945,
                    "min": 396.545341,
                    "p50": 408.82082599999995,
                    "p95": 414.570945,
                    "p99": 414.570945,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 732.445153,
                    "min": 647.854113,
                    "p50": 704.9323049999999,
                    "p95": 732.445153,
                    "p99": 732.445153,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2521.3094149999997,
                    "min": 2409.365677,
                    "p50": 2468.1820949999997,
                    "p95": 2521.3094149999997,
                    "p99": 2521.3094149999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 792.279155,
                    "min": 672.711451,
                    "p50": 716.480559,
                    "p95": 792.279155,
                    "p99": 792.279155,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 530.826383,
                    "min": 437.133065,
                    "p50": 457.377546,
                    "p95": 530.826383,
                    "p99": 530.826383,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 862.294396,
                    "min": 786.4280279999999,
                    "p50": 823.831518,
                    "p95": 862.294396,
                    "p99": 862.294396,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 259.124533,
                    "min": 221.95394399999998,
                    "p50": 227.595935,
                    "p95": 259.124533,
                    "p99": 259.124533,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 920.4324409999999,
                    "min": 834.994331,
                    "p50": 858.731867,
                    "p95": 920.4324409999999,
                    "p99": 920.4324409999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1412.758662,
                    "min": 1251.5403179999998,
                    "p50": 1334.069927,
                    "p95": 1412.758662,
                    "p99": 1412.758662,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3257.49984,
                    "min": 3003.263728,
                    "p50": 3104.8949089999996,
                    "p95": 3257.49984,
                    "p99": 3257.49984,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 255.58567699999998,
                    "min": 240.80228499999998,
                    "p50": 252.579589,
                    "p95": 255.58567699999998,
                    "p99": 255.58567699999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 500.87690699999996,
                    "min": 446.609475,
                    "p50": 450.85251999999997,
                    "p95": 500.87690699999996,
                    "p99": 500.87690699999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 391.54472,
                    "min": 375.68962899999997,
                    "p50": 385.52612799999997,
                    "p95": 391.54472,
                    "p99": 391.54472,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 778.812006,
                    "min": 705.098767,
                    "p50": 725.7262559999999,
                    "p95": 778.812006,
                    "p99": 778.812006,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 667.567178,
                    "min": 650.198959,
                    "p50": 652.829665,
                    "p95": 667.567178,
                    "p99": 667.567178,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 952.3857909999999,
                    "min": 811.392464,
                    "p50": 857.684093,
                    "p95": 952.3857909999999,
                    "p99": 952.3857909999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1101.878718,
                    "min": 1050.053746,
                    "p50": 1061.8308809999999,
                    "p95": 1101.878718,
                    "p99": 1101.878718,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 990.9011869999999,
                    "min": 912.1143669999999,
                    "p50": 927.980054,
                    "p95": 990.9011869999999,
                    "p99": 990.9011869999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 796.411359,
                    "min": 750.7186489999999,
                    "p50": 789.3929479999999,
                    "p95": 796.411359,
                    "p99": 796.411359,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1473.865484,
                    "min": 1378.317976,
                    "p50": 1419.7550119999999,
                    "p95": 1473.865484,
                    "p99": 1473.865484,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 526.028416,
                    "min": 496.59153999999995,
                    "p50": 510.253241,
                    "p95": 526.028416,
                    "p99": 526.028416,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 323.204704,
                    "min": 309.436776,
                    "p50": 314.897381,
                    "p95": 323.204704,
                    "p99": 323.204704,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1304.251458,
                    "min": 1204.4942079999998,
                    "p50": 1231.259869,
                    "p95": 1304.251458,
                    "p99": 1304.251458,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 719.174499,
                    "min": 584.2152239999999,
                    "p50": 594.8292789999999,
                    "p95": 719.174499,
                    "p99": 719.174499,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1040.754765,
                    "min": 985.2999219999999,
                    "p50": 997.5147119999999,
                    "p95": 1040.754765,
                    "p99": 1040.754765,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 312.62892999999997,
                    "min": 292.580713,
                    "p50": 298.468501,
                    "p95": 312.62892999999997,
                    "p99": 312.62892999999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 674.7368839999999,
                    "min": 616.033604,
                    "p50": 629.3665219999999,
                    "p95": 674.7368839999999,
                    "p99": 674.7368839999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 889.31459,
                    "min": 859.353218,
                    "p50": 873.794367,
                    "p95": 889.31459,
                    "p99": 889.31459,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1743.9112149999999,
                    "min": 1678.0864279999998,
                    "p50": 1690.0377879999999,
                    "p95": 1743.9112149999999,
                    "p99": 1743.9112149999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 549.5661719999999,
                    "min": 483.561109,
                    "p50": 516.4524299999999,
                    "p95": 549.5661719999999,
                    "p99": 549.5661719999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 295.635357,
                    "min": 250.108035,
                    "p50": 258.234204,
                    "p95": 295.635357,
                    "p99": 295.635357,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 231.082852,
                    "min": 213.898607,
                    "p50": 215.53119999999998,
                    "p95": 231.082852,
                    "p99": 231.082852,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 589.070758,
                    "min": 507.110979,
                    "p50": 547.166576,
                    "p95": 589.070758,
                    "p99": 589.070758,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1339.011538,
                    "min": 1264.017366,
                    "p50": 1281.96148,
                    "p95": 1339.011538,
                    "p99": 1339.011538,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 797.8984869999999,
                    "min": 762.261318,
                    "p50": 771.5448379999999,
                    "p95": 797.8984869999999,
                    "p99": 797.8984869999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 715.650756,
                    "min": 658.312902,
                    "p50": 667.5188539999999,
                    "p95": 715.650756,
                    "p99": 715.650756,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 414.945116,
                    "min": 375.28585,
                    "p50": 383.169581,
                    "p95": 414.945116,
                    "p99": 414.945116,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 562.105055,
                    "min": 453.227719,
                    "p50": 477.06103199999995,
                    "p95": 562.105055,
                    "p99": 562.105055,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 385.952656,
                    "min": 331.772578,
                    "p50": 341.66616899999997,
                    "p95": 385.952656,
                    "p99": 385.952656,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.458995,
                    "min": 161.03364299999998,
                    "p50": 175.421575,
                    "p95": 256.458995,
                    "p99": 256.458995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 601.03067,
                    "min": 576.600822,
                    "p50": 586.882925,
                    "p95": 601.03067,
                    "p99": 601.03067,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 428.32515,
                    "min": 413.554844,
                    "p50": 418.59578999999997,
                    "p95": 428.32515,
                    "p99": 428.32515,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 657.913716,
                    "min": 605.506657,
                    "p50": 654.599843,
                    "p95": 657.913716,
                    "p99": 657.913716,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2110.142777,
                    "min": 2009.801211,
                    "p50": 2042.2300639999999,
                    "p95": 2110.142777,
                    "p99": 2110.142777,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4116.828826999999,
                    "min": 4027.144277,
                    "p50": 4080.357293,
                    "p95": 4116.828826999999,
                    "p99": 4116.828826999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2303.521627,
                    "min": 2220.751178,
                    "p50": 2235.502111,
                    "p95": 2303.521627,
                    "p99": 2303.521627,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5953.656511,
                    "min": 5887.190374,
                    "p50": 5896.71282,
                    "p95": 5953.656511,
                    "p99": 5953.656511,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1267.3770749999999,
                    "min": 1234.793206,
                    "p50": 1254.217612,
                    "p95": 1267.3770749999999,
                    "p99": 1267.3770749999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1903.617767,
                    "min": 1827.5890499999998,
                    "p50": 1857.156874,
                    "p95": 1903.617767,
                    "p99": 1903.617767,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7957.238125,
                    "min": 7771.590209999999,
                    "p50": 7844.956472999999,
                    "p95": 7957.238125,
                    "p99": 7957.238125,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1078.369228,
                    "min": 1059.588956,
                    "p50": 1070.914747,
                    "p95": 1078.369228,
                    "p99": 1078.369228,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2733.840217,
                    "min": 2638.553602,
                    "p50": 2680.613982,
                    "p95": 2733.840217,
                    "p99": 2733.840217,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1461.002996,
                    "min": 1415.0585919999999,
                    "p50": 1430.297454,
                    "p95": 1461.002996,
                    "p99": 1461.002996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 865.42095,
                    "min": 839.311744,
                    "p50": 857.0442409999999,
                    "p95": 865.42095,
                    "p99": 865.42095,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3103.750481,
                    "min": 3038.187305,
                    "p50": 3068.254054,
                    "p95": 3103.750481,
                    "p99": 3103.750481,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2889.045386,
                    "min": 2832.767495,
                    "p50": 2847.997555,
                    "p95": 2889.045386,
                    "p99": 2889.045386,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3550.969182,
                    "min": 3460.952688,
                    "p50": 3512.233499,
                    "p95": 3550.969182,
                    "p99": 3550.969182,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1657.409256,
                    "min": 1603.4247129999999,
                    "p50": 1631.3746469999999,
                    "p95": 1657.409256,
                    "p99": 1657.409256,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2489.3327369999997,
                    "min": 2404.7377269999997,
                    "p50": 2437.029851,
                    "p95": 2489.3327369999997,
                    "p99": 2489.3327369999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 733.3710159999999,
                    "min": 702.190299,
                    "p50": 713.244967,
                    "p95": 733.3710159999999,
                    "p99": 733.3710159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 572.250305,
                    "min": 517.604038,
                    "p50": 567.8203129999999,
                    "p95": 572.250305,
                    "p99": 572.250305,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1049.8549329999998,
                    "min": 987.497351,
                    "p50": 1039.320943,
                    "p95": 1049.8549329999998,
                    "p99": 1049.8549329999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1515.0114979999998,
                    "min": 1451.145662,
                    "p50": 1500.684327,
                    "p95": 1515.0114979999998,
                    "p99": 1515.0114979999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4824.57004,
                    "min": 4781.511654999999,
                    "p50": 4806.6002069999995,
                    "p95": 4824.57004,
                    "p99": 4824.57004,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2012.588795,
                    "min": 1911.065735,
                    "p50": 1973.8998119999999,
                    "p95": 2012.588795,
                    "p99": 2012.588795,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 623.738578,
                    "min": 520.385777,
                    "p50": 573.312054,
                    "p95": 623.738578,
                    "p99": 623.738578,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 202.31078399999998,
                    "min": 184.132982,
                    "p50": 193.829555,
                    "p95": 202.31078399999998,
                    "p99": 202.31078399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2485.3913119999997,
                    "min": 2416.846735,
                    "p50": 2434.4282749999998,
                    "p95": 2485.3913119999997,
                    "p99": 2485.3913119999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 433.088829,
                    "min": 374.165365,
                    "p50": 388.34272,
                    "p95": 433.088829,
                    "p99": 433.088829,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 480.539511,
                    "min": 421.968007,
                    "p50": 434.43848199999996,
                    "p95": 480.539511,
                    "p99": 480.539511,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 523.7541669999999,
                    "min": 459.991629,
                    "p50": 478.71131199999996,
                    "p95": 523.7541669999999,
                    "p99": 523.7541669999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 982.436145,
                    "min": 831.81644,
                    "p50": 876.0342039999999,
                    "p95": 982.436145,
                    "p99": 982.436145,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 320.84947,
                    "min": 275.994523,
                    "p50": 296.171207,
                    "p95": 320.84947,
                    "p99": 320.84947,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 384.445925,
                    "min": 325.22099099999997,
                    "p50": 334.146114,
                    "p95": 384.445925,
                    "p99": 384.445925,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 781.8266229999999,
                    "min": 750.320336,
                    "p50": 763.699312,
                    "p95": 781.8266229999999,
                    "p99": 781.8266229999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 645.8961959999999,
                    "min": 605.5923419999999,
                    "p50": 620.763098,
                    "p95": 645.8961959999999,
                    "p99": 645.8961959999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 287.34027,
                    "min": 229.944402,
                    "p50": 239.24546999999998,
                    "p95": 287.34027,
                    "p99": 287.34027,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 670.4909739999999,
                    "min": 650.212365,
                    "p50": 660.813918,
                    "p95": 670.4909739999999,
                    "p99": 670.4909739999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2138.5302269999997,
                    "min": 2035.968146,
                    "p50": 2103.826924,
                    "p95": 2138.5302269999997,
                    "p99": 2138.5302269999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 901.58312,
                    "min": 839.3978,
                    "p50": 863.8129729999999,
                    "p95": 901.58312,
                    "p99": 901.58312,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 636.417468,
                    "min": 609.919049,
                    "p50": 623.988484,
                    "p95": 636.417468,
                    "p99": 636.417468,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1474.0124349999999,
                    "min": 1407.984624,
                    "p50": 1441.734639,
                    "p95": 1474.0124349999999,
                    "p99": 1474.0124349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1002.643156,
                    "min": 961.1014769999999,
                    "p50": 966.7826689999999,
                    "p95": 1002.643156,
                    "p99": 1002.643156,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4718.06086,
                    "min": 4578.355011,
                    "p50": 4683.967004,
                    "p95": 4718.06086,
                    "p99": 4718.06086,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1373.254894,
                    "min": 1294.08545,
                    "p50": 1321.4066149999999,
                    "p95": 1373.254894,
                    "p99": 1373.254894,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 748.919126,
                    "min": 721.338761,
                    "p50": 735.895482,
                    "p95": 748.919126,
                    "p99": 748.919126,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1589.010787,
                    "min": 1524.7556439999998,
                    "p50": 1533.775107,
                    "p95": 1589.010787,
                    "p99": 1589.010787,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3543.3840459999997,
                    "min": 3450.473516,
                    "p50": 3503.455402,
                    "p95": 3543.3840459999997,
                    "p99": 3543.3840459999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1826.3441,
                    "min": 1748.68254,
                    "p50": 1785.8679009999998,
                    "p95": 1826.3441,
                    "p99": 1826.3441,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2398.0202099999997,
                    "min": 2298.621878,
                    "p50": 2375.689697,
                    "p95": 2398.0202099999997,
                    "p99": 2398.0202099999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 399.667224,
                    "min": 379.092265,
                    "p50": 393.02117599999997,
                    "p95": 399.667224,
                    "p99": 399.667224,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1736.7821219999998,
                    "min": 1628.935434,
                    "p50": 1655.1862489999999,
                    "p95": 1736.7821219999998,
                    "p99": 1736.7821219999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 515.797317,
                    "min": 493.77971399999996,
                    "p50": 503.89498599999996,
                    "p95": 515.797317,
                    "p99": 515.797317,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1203.489174,
                    "min": 1185.9627289999999,
                    "p50": 1190.572886,
                    "p95": 1203.489174,
                    "p99": 1203.489174,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1121.136964,
                    "min": 1071.420329,
                    "p50": 1087.165378,
                    "p95": 1121.136964,
                    "p99": 1121.136964,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1828.3875039999998,
                    "min": 1748.1522209999998,
                    "p50": 1766.8890529999999,
                    "p95": 1828.3875039999998,
                    "p99": 1828.3875039999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 559.811438,
                    "min": 467.633341,
                    "p50": 506.18204,
                    "p95": 559.811438,
                    "p99": 559.811438,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1088.042842,
                    "min": 1074.161985,
                    "p50": 1077.908262,
                    "p95": 1088.042842,
                    "p99": 1088.042842,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1591.9825079999998,
                    "min": 1523.179893,
                    "p50": 1535.662314,
                    "p95": 1591.9825079999998,
                    "p99": 1591.9825079999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1271.877236,
                    "min": 1178.9318449999998,
                    "p50": 1213.9026059999999,
                    "p95": 1271.877236,
                    "p99": 1271.877236,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1369.995119,
                    "min": 1296.384448,
                    "p50": 1343.388312,
                    "p95": 1369.995119,
                    "p99": 1369.995119,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2376.355911,
                    "min": 2320.2208029999997,
                    "p50": 2351.375653,
                    "p95": 2376.355911,
                    "p99": 2376.355911,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3531.2919859999997,
                    "min": 3444.210049,
                    "p50": 3502.4001369999996,
                    "p95": 3531.2919859999997,
                    "p99": 3531.2919859999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1461.05208,
                    "min": 1416.895839,
                    "p50": 1432.2516719999999,
                    "p95": 1461.05208,
                    "p99": 1461.05208,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 698.120249,
                    "min": 612.156514,
                    "p50": 624.744022,
                    "p95": 698.120249,
                    "p99": 698.120249,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 427.382184,
                    "min": 388.078106,
                    "p50": 394.45320599999997,
                    "p95": 427.382184,
                    "p99": 427.382184,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 747.5486599999999,
                    "min": 726.57137,
                    "p50": 739.652692,
                    "p95": 747.5486599999999,
                    "p99": 747.5486599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2127.320605,
                    "min": 2028.4357439999999,
                    "p50": 2046.987545,
                    "p95": 2127.320605,
                    "p99": 2127.320605,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 894.1413759999999,
                    "min": 839.006236,
                    "p50": 857.1619159999999,
                    "p95": 894.1413759999999,
                    "p99": 894.1413759999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1688.702071,
                    "min": 1632.931733,
                    "p50": 1655.260417,
                    "p95": 1688.702071,
                    "p99": 1688.702071,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1012.570871,
                    "min": 960.694344,
                    "p50": 969.9071319999999,
                    "p95": 1012.570871,
                    "p99": 1012.570871,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10849.124436,
                    "min": 10614.644487,
                    "p50": 10738.724729,
                    "p95": 10849.124436,
                    "p99": 10849.124436,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1624.7769779999999,
                    "min": 1521.27324,
                    "p50": 1546.227733,
                    "p95": 1624.7769779999999,
                    "p99": 1624.7769779999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5465.670684,
                    "min": 5333.082998,
                    "p50": 5433.820804999999,
                    "p95": 5465.670684,
                    "p99": 5465.670684,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 806.7286469999999,
                    "min": 791.8916859999999,
                    "p50": 797.8390979999999,
                    "p95": 806.7286469999999,
                    "p99": 806.7286469999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 508.03791199999995,
                    "min": 472.40475699999996,
                    "p50": 483.11029299999996,
                    "p95": 508.03791199999995,
                    "p99": 508.03791199999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1374.867012,
                    "min": 1306.926211,
                    "p50": 1334.349508,
                    "p95": 1374.867012,
                    "p99": 1374.867012,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4368.466125,
                    "min": 4273.852314,
                    "p50": 4343.117284,
                    "p95": 4368.466125,
                    "p99": 4368.466125,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1692.188804,
                    "min": 1602.411009,
                    "p50": 1659.022931,
                    "p95": 1692.188804,
                    "p99": 1692.188804,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1484.644316,
                    "min": 1417.1584739999998,
                    "p50": 1430.219883,
                    "p95": 1484.644316,
                    "p99": 1484.644316,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1999.874114,
                    "min": 1889.6122409999998,
                    "p50": 1905.2108919999998,
                    "p95": 1999.874114,
                    "p99": 1999.874114,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 593.908491,
                    "min": 581.887038,
                    "p50": 587.374727,
                    "p95": 593.908491,
                    "p99": 593.908491,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1277.1764429999998,
                    "min": 1210.301174,
                    "p50": 1224.725653,
                    "p95": 1277.1764429999998,
                    "p99": 1277.1764429999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 378.242694,
                    "min": 355.924642,
                    "p50": 369.23796699999997,
                    "p95": 378.242694,
                    "p99": 378.242694,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 938.283838,
                    "min": 882.038947,
                    "p50": 903.137569,
                    "p95": 938.283838,
                    "p99": 938.283838,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 700.839793,
                    "min": 686.5011139999999,
                    "p50": 691.9136129999999,
                    "p95": 700.839793,
                    "p99": 700.839793,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1052.238791,
                    "min": 989.4985989999999,
                    "p50": 1011.539058,
                    "p95": 1052.238791,
                    "p99": 1052.238791,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1144.663096,
                    "min": 1109.74098,
                    "p50": 1122.169615,
                    "p95": 1144.663096,
                    "p99": 1144.663096,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3316.4600849999997,
                    "min": 3209.303188,
                    "p50": 3264.598234,
                    "p95": 3316.4600849999997,
                    "p99": 3316.4600849999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2232.62589,
                    "min": 2162.333887,
                    "p50": 2171.9597009999998,
                    "p95": 2232.62589,
                    "p99": 2232.62589,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 360.34329299999996,
                    "min": 321.504139,
                    "p50": 325.37069399999996,
                    "p95": 360.34329299999996,
                    "p99": 360.34329299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1937.526962,
                    "min": 1862.2415649999998,
                    "p50": 1881.286381,
                    "p95": 1937.526962,
                    "p99": 1937.526962,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1486.917784,
                    "min": 1385.116147,
                    "p50": 1453.134813,
                    "p95": 1486.917784,
                    "p99": 1486.917784,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 974.5808579999999,
                    "min": 953.0344409999999,
                    "p50": 970.197631,
                    "p95": 974.5808579999999,
                    "p99": 974.5808579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 584.5379829999999,
                    "min": 503.173179,
                    "p50": 519.889317,
                    "p95": 584.5379829999999,
                    "p99": 584.5379829999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4778.0344159999995,
                    "min": 4641.520251999999,
                    "p50": 4738.458232999999,
                    "p95": 4778.0344159999995,
                    "p99": 4778.0344159999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2442.327691,
                    "min": 2370.627332,
                    "p50": 2386.719923,
                    "p95": 2442.327691,
                    "p99": 2442.327691,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 669.558356,
                    "min": 585.157307,
                    "p50": 607.637794,
                    "p95": 669.558356,
                    "p99": 669.558356,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 706.766428,
                    "min": 678.541928,
                    "p50": 694.489301,
                    "p95": 706.766428,
                    "p99": 706.766428,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 436.019843,
                    "min": 399.087129,
                    "p50": 419.42418,
                    "p95": 436.019843,
                    "p99": 436.019843,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 487.090262,
                    "min": 459.317767,
                    "p50": 466.514821,
                    "p95": 487.090262,
                    "p99": 487.090262,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.59014299999998,
                    "min": 233.33559699999998,
                    "p50": 235.53142,
                    "p95": 247.59014299999998,
                    "p99": 247.59014299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 895.5371399999999,
                    "min": 845.2241849999999,
                    "p50": 864.173689,
                    "p95": 895.5371399999999,
                    "p99": 895.5371399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 574.0164159999999,
                    "min": 551.056883,
                    "p50": 560.984916,
                    "p95": 574.0164159999999,
                    "p99": 574.0164159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 778.3767919999999,
                    "min": 720.223445,
                    "p50": 738.7239069999999,
                    "p95": 778.3767919999999,
                    "p99": 778.3767919999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 397.73583399999995,
                    "min": 370.60276899999997,
                    "p50": 374.80382299999997,
                    "p95": 397.73583399999995,
                    "p99": 397.73583399999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 698.401333,
                    "min": 639.642659,
                    "p50": 686.282474,
                    "p95": 698.401333,
                    "p99": 698.401333,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 316.00073499999996,
                    "min": 276.26115599999997,
                    "p50": 284.041675,
                    "p95": 316.00073499999996,
                    "p99": 316.00073499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 212.218911,
                    "min": 174.56350899999998,
                    "p50": 196.317175,
                    "p95": 212.218911,
                    "p99": 212.218911,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1985.513563,
                    "min": 1891.955299,
                    "p50": 1910.936234,
                    "p95": 1985.513563,
                    "p99": 1985.513563,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 955.838002,
                    "min": 899.936295,
                    "p50": 924.60156,
                    "p95": 955.838002,
                    "p99": 955.838002,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2230.7000359999997,
                    "min": 2140.7880999999998,
                    "p50": 2201.1554499999997,
                    "p95": 2230.7000359999997,
                    "p99": 2230.7000359999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 868.601813,
                    "min": 785.156664,
                    "p50": 799.836916,
                    "p95": 868.601813,
                    "p99": 868.601813,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 733.262131,
                    "min": 685.1903689999999,
                    "p50": 694.521993,
                    "p95": 733.262131,
                    "p99": 733.262131,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 528.820215,
                    "min": 468.99987699999997,
                    "p50": 480.287042,
                    "p95": 528.820215,
                    "p99": 528.820215,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1583.887229,
                    "min": 1527.725052,
                    "p50": 1543.493667,
                    "p95": 1583.887229,
                    "p99": 1583.887229,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1255.3654609999999,
                    "min": 1211.1576109999999,
                    "p50": 1219.62382,
                    "p95": 1255.3654609999999,
                    "p99": 1255.3654609999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3291.8709759999997,
                    "min": 3217.0772739999998,
                    "p50": 3277.22215,
                    "p95": 3291.8709759999997,
                    "p99": 3291.8709759999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1060.900388,
                    "min": 964.844757,
                    "p50": 1004.472356,
                    "p95": 1060.900388,
                    "p99": 1060.900388,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10731.172636,
                    "min": 10651.506671,
                    "p50": 10699.007258,
                    "p95": 10731.172636,
                    "p99": 10731.172636,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 593.945332,
                    "min": 579.036883,
                    "p50": 591.2410199999999,
                    "p95": 593.945332,
                    "p99": 593.945332,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1479.5395839999999,
                    "min": 1412.659862,
                    "p50": 1435.717791,
                    "p95": 1479.5395839999999,
                    "p99": 1479.5395839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1348.2227,
                    "min": 1313.139625,
                    "p50": 1329.426817,
                    "p95": 1348.2227,
                    "p99": 1348.2227,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4334.301163,
                    "min": 4281.959373,
                    "p50": 4310.6010799999995,
                    "p95": 4334.301163,
                    "p99": 4334.301163,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 411.020712,
                    "min": 366.765467,
                    "p50": 371.86618,
                    "p95": 411.020712,
                    "p99": 411.020712,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1701.965404,
                    "min": 1646.4610519999999,
                    "p50": 1662.223835,
                    "p95": 1701.965404,
                    "p99": 1701.965404,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1150.767593,
                    "min": 1094.538092,
                    "p50": 1113.423432,
                    "p95": 1150.767593,
                    "p99": 1150.767593,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5423.454481,
                    "min": 5313.2290809999995,
                    "p50": 5404.979111,
                    "p95": 5423.454481,
                    "p99": 5423.454481,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 679.000422,
                    "min": 661.463939,
                    "p50": 676.956233,
                    "p95": 679.000422,
                    "p99": 679.000422,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 589.693213,
                    "min": 575.6872079999999,
                    "p50": 583.472299,
                    "p95": 589.693213,
                    "p99": 589.693213,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 858.5594699999999,
                    "min": 839.072954,
                    "p50": 848.841372,
                    "p95": 858.5594699999999,
                    "p99": 858.5594699999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 318.75335,
                    "min": 273.756135,
                    "p50": 310.339257,
                    "p95": 318.75335,
                    "p99": 318.75335,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 415.267091,
                    "min": 396.397895,
                    "p50": 402.458378,
                    "p95": 415.267091,
                    "p99": 415.267091,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 768.448757,
                    "min": 754.464292,
                    "p50": 764.508917,
                    "p95": 768.448757,
                    "p99": 768.448757,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 502.416546,
                    "min": 483.67954799999995,
                    "p50": 492.83352399999995,
                    "p95": 502.416546,
                    "p99": 502.416546,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 916.2550819999999,
                    "min": 882.873354,
                    "p50": 891.577994,
                    "p95": 916.2550819999999,
                    "p99": 916.2550819999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 359.55857599999996,
                    "min": 262.028205,
                    "p50": 302.560018,
                    "p95": 359.55857599999996,
                    "p99": 359.55857599999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 766.905409,
                    "min": 709.7589859999999,
                    "p50": 727.805431,
                    "p95": 766.905409,
                    "p99": 766.905409,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 602.7912299999999,
                    "min": 551.562095,
                    "p50": 557.6387129999999,
                    "p95": 602.7912299999999,
                    "p99": 602.7912299999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 657.9436069999999,
                    "min": 632.63244,
                    "p50": 640.695357,
                    "p95": 657.9436069999999,
                    "p99": 657.9436069999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 828.1588889999999,
                    "min": 796.1085059999999,
                    "p50": 822.170219,
                    "p95": 828.1588889999999,
                    "p99": 828.1588889999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 428.35431,
                    "min": 379.516396,
                    "p50": 390.45259799999997,
                    "p95": 428.35431,
                    "p99": 428.35431,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 511.15784599999995,
                    "min": 459.70953699999995,
                    "p50": 469.84139899999997,
                    "p95": 511.15784599999995,
                    "p99": 511.15784599999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 212.71308,
                    "min": 176.36437899999999,
                    "p50": 191.239715,
                    "p95": 212.71308,
                    "p99": 212.71308,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 416.056107,
                    "min": 284.514184,
                    "p50": 305.64403999999996,
                    "p95": 416.056107,
                    "p99": 416.056107,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 409.04762,
                    "min": 360.365837,
                    "p50": 378.282043,
                    "p95": 409.04762,
                    "p99": 409.04762,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.560547,
                    "min": 246.95494699999998,
                    "p50": 288.84851399999997,
                    "p95": 309.560547,
                    "p99": 309.560547,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 518.273817,
                    "min": 479.51800399999996,
                    "p50": 495.381941,
                    "p95": 518.273817,
                    "p99": 518.273817,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.90955499999998,
                    "min": 140.127041,
                    "p50": 170.23972899999998,
                    "p95": 193.90955499999998,
                    "p99": 193.90955499999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 474.227585,
                    "min": 365.900494,
                    "p50": 411.884413,
                    "p95": 474.227585,
                    "p99": 474.227585,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 347.950152,
                    "min": 309.352352,
                    "p50": 325.26804699999997,
                    "p95": 347.950152,
                    "p99": 347.950152,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 248.80598999999998,
                    "min": 209.201239,
                    "p50": 216.59755199999998,
                    "p95": 248.80598999999998,
                    "p99": 248.80598999999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 464.537852,
                    "min": 421.316167,
                    "p50": 453.599849,
                    "p95": 464.537852,
                    "p99": 464.537852,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 602.3950689999999,
                    "min": 581.4898019999999,
                    "p50": 593.479623,
                    "p95": 602.3950689999999,
                    "p99": 602.3950689999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 779.356488,
                    "min": 761.572336,
                    "p50": 776.769279,
                    "p95": 779.356488,
                    "p99": 779.356488,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 275.063836,
                    "min": 228.97757,
                    "p50": 232.411814,
                    "p95": 275.063836,
                    "p99": 275.063836,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 416.48264,
                    "min": 385.765427,
                    "p50": 412.361311,
                    "p95": 416.48264,
                    "p99": 416.48264,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 788.314317,
                    "min": 670.357031,
                    "p50": 681.923595,
                    "p95": 788.314317,
                    "p99": 788.314317,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.82666,
                    "min": 284.00441,
                    "p50": 322.19307399999997,
                    "p95": 365.82666,
                    "p99": 365.82666,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 512.2384539999999,
                    "min": 493.523234,
                    "p50": 507.475087,
                    "p95": 512.2384539999999,
                    "p99": 512.2384539999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 395.589412,
                    "min": 312.14092999999997,
                    "p50": 341.680864,
                    "p95": 395.589412,
                    "p99": 395.589412,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 234.951214,
                    "min": 184.909124,
                    "p50": 199.445503,
                    "p95": 234.951214,
                    "p99": 234.951214,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 142.54504,
                    "min": 121.49907999999999,
                    "p50": 131.170218,
                    "p95": 142.54504,
                    "p99": 142.54504,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 419.885736,
                    "min": 302.768168,
                    "p50": 340.13809799999996,
                    "p95": 419.885736,
                    "p99": 419.885736,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 317.716201,
                    "min": 244.63920099999999,
                    "p50": 278.919889,
                    "p95": 317.716201,
                    "p99": 317.716201,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 244.86665499999998,
                    "min": 204.886955,
                    "p50": 220.388116,
                    "p95": 244.86665499999998,
                    "p99": 244.86665499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 330.817033,
                    "min": 288.00570899999997,
                    "p50": 303.192598,
                    "p95": 330.817033,
                    "p99": 330.817033,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 183.873383,
                    "min": 139.053055,
                    "p50": 161.311998,
                    "p95": 183.873383,
                    "p99": 183.873383,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 141.92761199999998,
                    "min": 101.231417,
                    "p50": 123.554599,
                    "p95": 141.92761199999998,
                    "p99": 141.92761199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 466.578804,
                    "min": 388.89607,
                    "p50": 428.74375299999997,
                    "p95": 466.578804,
                    "p99": 466.578804,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 390.169711,
                    "min": 344.008169,
                    "p50": 376.22303999999997,
                    "p95": 390.169711,
                    "p99": 390.169711,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 485.538846,
                    "min": 423.141387,
                    "p50": 470.414252,
                    "p95": 485.538846,
                    "p99": 485.538846,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 264.826027,
                    "min": 201.225132,
                    "p50": 225.608148,
                    "p95": 264.826027,
                    "p99": 264.826027,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 389.24004199999996,
                    "min": 289.472694,
                    "p50": 304.95354199999997,
                    "p95": 389.24004199999996,
                    "p99": 389.24004199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 202.31883,
                    "min": 164.627827,
                    "p50": 168.753448,
                    "p95": 202.31883,
                    "p99": 202.31883,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 378.336859,
                    "min": 295.656385,
                    "p50": 326.599789,
                    "p95": 378.336859,
                    "p99": 378.336859,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 153.599609,
                    "min": 138.241714,
                    "p50": 148.404835,
                    "p95": 153.599609,
                    "p99": 153.599609,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 405.654436,
                    "min": 341.178256,
                    "p50": 374.935357,
                    "p95": 405.654436,
                    "p99": 405.654436,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 288.457086,
                    "min": 229.460828,
                    "p50": 242.529509,
                    "p95": 288.457086,
                    "p99": 288.457086,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 156.167958,
                    "min": 119.44478199999999,
                    "p50": 128.898037,
                    "p95": 156.167958,
                    "p99": 156.167958,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 165.95856899999998,
                    "min": 163.619156,
                    "p50": 164.570447,
                    "p95": 165.95856899999998,
                    "p99": 165.95856899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 330.90441699999997,
                    "min": 270.512889,
                    "p50": 291.236538,
                    "p95": 330.90441699999997,
                    "p99": 330.90441699999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 542.941645,
                    "min": 311.683743,
                    "p50": 357.950853,
                    "p95": 542.941645,
                    "p99": 542.941645,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 479.64303099999995,
                    "min": 420.65297499999997,
                    "p50": 467.956257,
                    "p95": 479.64303099999995,
                    "p99": 479.64303099999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.958185,
                    "min": 172.671672,
                    "p50": 192.817013,
                    "p95": 218.958185,
                    "p99": 218.958185,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 430.203332,
                    "min": 377.356896,
                    "p50": 405.464704,
                    "p95": 430.203332,
                    "p99": 430.203332,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 257.919888,
                    "min": 199.216988,
                    "p50": 204.807365,
                    "p95": 257.919888,
                    "p99": 257.919888,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 359.29434799999996,
                    "min": 255.45065599999998,
                    "p50": 309.63039,
                    "p95": 359.29434799999996,
                    "p99": 359.29434799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 269.22752399999996,
                    "min": 209.909913,
                    "p50": 222.94895799999998,
                    "p95": 269.22752399999996,
                    "p99": 269.22752399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 137.454124,
                    "min": 92.12772,
                    "p50": 101.521667,
                    "p95": 137.454124,
                    "p99": 137.454124,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 208.42140799999999,
                    "min": 147.936193,
                    "p50": 151.395873,
                    "p95": 208.42140799999999,
                    "p99": 208.42140799999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 264.712832,
                    "min": 192.842433,
                    "p50": 214.53893,
                    "p95": 264.712832,
                    "p99": 264.712832,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 208.38108,
                    "min": 183.962384,
                    "p50": 190.192748,
                    "p95": 208.38108,
                    "p99": 208.38108,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 471.835723,
                    "min": 387.946086,
                    "p50": 433.246687,
                    "p95": 471.835723,
                    "p99": 471.835723,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 409.344876,
                    "min": 337.116492,
                    "p50": 383.011778,
                    "p95": 409.344876,
                    "p99": 409.344876,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.088145,
                    "min": 97.97078499999999,
                    "p50": 104.75220999999999,
                    "p95": 116.088145,
                    "p99": 116.088145,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 371.553874,
                    "min": 254.26258399999998,
                    "p50": 275.17772199999996,
                    "p95": 371.553874,
                    "p99": 371.553874,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 341.428144,
                    "min": 235.33108399999998,
                    "p50": 274.812052,
                    "p95": 341.428144,
                    "p99": 341.428144,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 183.602236,
                    "min": 115.087001,
                    "p50": 128.93529999999998,
                    "p95": 183.602236,
                    "p99": 183.602236,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.973007,
                    "min": 278.007297,
                    "p50": 330.93066799999997,
                    "p95": 345.973007,
                    "p99": 345.973007,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 272.222601,
                    "min": 225.875261,
                    "p50": 251.152551,
                    "p95": 272.222601,
                    "p99": 272.222601,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 502.264073,
                    "min": 441.547483,
                    "p50": 482.192865,
                    "p95": 502.264073,
                    "p99": 502.264073,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 355.57107199999996,
                    "min": 315.119169,
                    "p50": 329.18573499999997,
                    "p95": 355.57107199999996,
                    "p99": 355.57107199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 204.618797,
                    "min": 158.459173,
                    "p50": 169.395896,
                    "p95": 204.618797,
                    "p99": 204.618797,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 385.74022299999996,
                    "min": 298.431049,
                    "p50": 333.948373,
                    "p95": 385.74022299999996,
                    "p99": 385.74022299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 564.03519,
                    "min": 476.486515,
                    "p50": 493.683607,
                    "p95": 564.03519,
                    "p99": 564.03519,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 134.59545599999998,
                    "min": 114.062159,
                    "p50": 129.313601,
                    "p95": 134.59545599999998,
                    "p99": 134.59545599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 276.588686,
                    "min": 216.138677,
                    "p50": 236.304602,
                    "p95": 276.588686,
                    "p99": 276.588686,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 297.67175,
                    "min": 219.41052399999998,
                    "p50": 247.139634,
                    "p95": 297.67175,
                    "p99": 297.67175,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 332.126443,
                    "min": 260.946415,
                    "p50": 286.579808,
                    "p95": 332.126443,
                    "p99": 332.126443,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 451.09547499999996,
                    "min": 385.866515,
                    "p50": 438.977699,
                    "p95": 451.09547499999996,
                    "p99": 451.09547499999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 342.666795,
                    "min": 281.497931,
                    "p50": 323.59088399999996,
                    "p95": 342.666795,
                    "p99": 342.666795,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 384.849049,
                    "min": 295.296827,
                    "p50": 324.705207,
                    "p95": 384.849049,
                    "p99": 384.849049,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 127.30597999999999,
                    "min": 97.94084199999999,
                    "p50": 109.52648699999999,
                    "p95": 127.30597999999999,
                    "p99": 127.30597999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 218.03939499999998,
                    "min": 128.667158,
                    "p50": 191.742463,
                    "p95": 218.03939499999998,
                    "p99": 218.03939499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 188.235381,
                    "min": 100.244582,
                    "p50": 158.98708,
                    "p95": 188.235381,
                    "p99": 188.235381,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 398.205112,
                    "min": 340.971931,
                    "p50": 390.39209,
                    "p95": 398.205112,
                    "p99": 398.205112,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 249.49579599999998,
                    "min": 196.783179,
                    "p50": 204.644599,
                    "p95": 249.49579599999998,
                    "p99": 249.49579599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 359.62528599999996,
                    "min": 292.817585,
                    "p50": 335.539748,
                    "p95": 359.62528599999996,
                    "p99": 359.62528599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 229.802695,
                    "min": 182.640065,
                    "p50": 204.641047,
                    "p95": 229.802695,
                    "p99": 229.802695,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.881602,
                    "min": 199.107666,
                    "p50": 246.43509,
                    "p95": 286.881602,
                    "p99": 286.881602,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 79.345452,
                    "min": 65.320911,
                    "p50": 75.779049,
                    "p95": 79.345452,
                    "p99": 79.345452,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1067.918205,
                    "min": 996.0884149999999,
                    "p50": 1004.106503,
                    "p95": 1067.918205,
                    "p99": 1067.918205,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 280.009302,
                    "min": 226.889087,
                    "p50": 259.336908,
                    "p95": 280.009302,
                    "p99": 280.009302,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 393.749875,
                    "min": 317.354239,
                    "p50": 327.47779499999996,
                    "p95": 393.749875,
                    "p99": 393.749875,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 156.235273,
                    "min": 101.72936399999999,
                    "p50": 145.02983899999998,
                    "p95": 156.235273,
                    "p99": 156.235273,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 507.187825,
                    "min": 408.966324,
                    "p50": 435.13170399999996,
                    "p95": 507.187825,
                    "p99": 507.187825,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.035911,
                    "min": 98.784605,
                    "p50": 115.605727,
                    "p95": 122.035911,
                    "p99": 122.035911,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 130.663871,
                    "min": 123.60141999999999,
                    "p50": 124.44325099999999,
                    "p95": 130.663871,
                    "p99": 130.663871,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 68.760607,
                    "min": 57.928121,
                    "p50": 58.437490999999994,
                    "p95": 68.760607,
                    "p99": 68.760607,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 137.078175,
                    "min": 133.344344,
                    "p50": 134.260672,
                    "p95": 137.078175,
                    "p99": 137.078175,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.76358499999999,
                    "min": 114.742182,
                    "p50": 115.593176,
                    "p95": 120.76358499999999,
                    "p99": 120.76358499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 184.744868,
                    "min": 143.461526,
                    "p50": 154.278245,
                    "p95": 184.744868,
                    "p99": 184.744868,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 196.894905,
                    "min": 143.06884499999998,
                    "p50": 170.95122999999998,
                    "p95": 196.894905,
                    "p99": 196.894905,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 222.64387499999998,
                    "min": 155.88263999999998,
                    "p50": 161.27393899999998,
                    "p95": 222.64387499999998,
                    "p99": 222.64387499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 593.369855,
                    "min": 515.903903,
                    "p50": 563.5569039999999,
                    "p95": 593.369855,
                    "p99": 593.369855,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 95.664299,
                    "min": 76.764398,
                    "p50": 90.289216,
                    "p95": 95.664299,
                    "p99": 95.664299,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 251.001838,
                    "min": 173.435118,
                    "p50": 181.24274699999998,
                    "p95": 251.001838,
                    "p99": 251.001838,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 219.60631999999998,
                    "min": 186.544004,
                    "p50": 189.408051,
                    "p95": 219.60631999999998,
                    "p99": 219.60631999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 419.98011599999995,
                    "min": 396.444352,
                    "p50": 417.09896299999997,
                    "p95": 419.98011599999995,
                    "p99": 419.98011599999995,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 131.623158,
                    "min": 122.77390899999999,
                    "p50": 125.07591199999999,
                    "p95": 131.623158,
                    "p99": 131.623158,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 543.277384,
                    "min": 522.213864,
                    "p50": 538.350423,
                    "p95": 543.277384,
                    "p99": 543.277384,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 306.03263,
                    "min": 288.55687,
                    "p50": 291.53283799999997,
                    "p95": 306.03263,
                    "p99": 306.03263,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 232.783539,
                    "min": 212.52139499999998,
                    "p50": 219.47777599999998,
                    "p95": 232.783539,
                    "p99": 232.783539,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 241.542137,
                    "min": 229.34285699999998,
                    "p50": 232.329951,
                    "p95": 241.542137,
                    "p99": 241.542137,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 234.43692099999998,
                    "min": 205.211512,
                    "p50": 208.181763,
                    "p95": 234.43692099999998,
                    "p99": 234.43692099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 265.794632,
                    "min": 250.91515099999998,
                    "p50": 262.411932,
                    "p95": 265.794632,
                    "p99": 265.794632,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 87.644522,
                    "min": 74.630737,
                    "p50": 75.311227,
                    "p95": 87.644522,
                    "p99": 87.644522,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1291.450075,
                    "min": 1237.509597,
                    "p50": 1251.468672,
                    "p95": 1291.450075,
                    "p99": 1291.450075,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.03962,
                    "min": 52.516005,
                    "p50": 92.17775499999999,
                    "p95": 95.03962,
                    "p99": 95.03962,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.36833399999999,
                    "min": 94.430013,
                    "p50": 111.838597,
                    "p95": 115.36833399999999,
                    "p99": 115.36833399999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 155.397134,
                    "min": 131.453779,
                    "p50": 146.79799599999998,
                    "p95": 155.397134,
                    "p99": 155.397134,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.617988,
                    "min": 189.923978,
                    "p50": 196.65184499999998,
                    "p95": 205.617988,
                    "p99": 205.617988,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.997704,
                    "min": 151.85777199999998,
                    "p50": 160.074852,
                    "p95": 171.997704,
                    "p99": 171.997704,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 192.860886,
                    "min": 174.884094,
                    "p50": 184.137546,
                    "p95": 192.860886,
                    "p99": 192.860886,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.148571,
                    "min": 129.824396,
                    "p50": 135.741527,
                    "p95": 145.148571,
                    "p99": 145.148571,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 194.561656,
                    "min": 167.579163,
                    "p50": 174.587376,
                    "p95": 194.561656,
                    "p99": 194.561656,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 659.844147,
                    "min": 637.943464,
                    "p50": 652.2492609999999,
                    "p95": 659.844147,
                    "p99": 659.844147,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 187.364477,
                    "min": 169.753436,
                    "p50": 177.206287,
                    "p95": 187.364477,
                    "p99": 187.364477,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1112.592987,
                    "min": 1051.939228,
                    "p50": 1092.067835,
                    "p95": 1112.592987,
                    "p99": 1112.592987,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 218.09298199999998,
                    "min": 183.579476,
                    "p50": 187.742425,
                    "p95": 218.09298199999998,
                    "p99": 218.09298199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.70886299999998,
                    "min": 135.417992,
                    "p50": 138.125808,
                    "p95": 166.70886299999998,
                    "p99": 166.70886299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 249.53592799999998,
                    "min": 217.47599599999998,
                    "p50": 220.286746,
                    "p95": 249.53592799999998,
                    "p99": 249.53592799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.941939,
                    "min": 235.578152,
                    "p50": 244.924137,
                    "p95": 288.941939,
                    "p99": 288.941939,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.65045599999999,
                    "min": 78.836879,
                    "p50": 92.934957,
                    "p95": 102.65045599999999,
                    "p99": 102.65045599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.588239,
                    "min": 137.2429,
                    "p50": 147.652066,
                    "p95": 149.588239,
                    "p99": 149.588239,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 129.953791,
                    "min": 92.42880199999999,
                    "p50": 121.266843,
                    "p95": 129.953791,
                    "p99": 129.953791,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 236.10643199999998,
                    "min": 184.029506,
                    "p50": 217.004088,
                    "p95": 236.10643199999998,
                    "p99": 236.10643199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.672732,
                    "min": 159.969825,
                    "p50": 171.26379799999998,
                    "p95": 201.672732,
                    "p99": 201.672732,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 479.25913799999995,
                    "min": 432.648261,
                    "p50": 437.431542,
                    "p95": 479.25913799999995,
                    "p99": 479.25913799999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 434.390565,
                    "min": 321.323264,
                    "p50": 379.81404499999996,
                    "p95": 434.390565,
                    "p99": 434.390565,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 169.387366,
                    "min": 156.183507,
                    "p50": 159.103425,
                    "p95": 169.387366,
                    "p99": 169.387366,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.868526,
                    "min": 60.969747,
                    "p50": 64.48621299999999,
                    "p95": 77.868526,
                    "p99": 77.868526,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.45146,
                    "min": 126.270585,
                    "p50": 129.764184,
                    "p95": 153.45146,
                    "p99": 153.45146,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.317927,
                    "min": 74.98315199999999,
                    "p50": 79.891711,
                    "p95": 81.317927,
                    "p99": 81.317927,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 113.467689,
                    "min": 98.446242,
                    "p50": 102.172061,
                    "p95": 113.467689,
                    "p99": 113.467689,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 583.836041,
                    "min": 523.0088939999999,
                    "p50": 555.762424,
                    "p95": 583.836041,
                    "p99": 583.836041,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 205.80048499999998,
                    "min": 173.50968799999998,
                    "p50": 181.324276,
                    "p95": 205.80048499999998,
                    "p99": 205.80048499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.089291,
                    "min": 126.343031,
                    "p50": 133.28297899999998,
                    "p95": 142.089291,
                    "p99": 142.089291,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.672145,
                    "min": 78.552227,
                    "p50": 91.74528099999999,
                    "p95": 94.672145,
                    "p99": 94.672145,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.203956,
                    "min": 138.698399,
                    "p50": 145.436998,
                    "p95": 154.203956,
                    "p99": 154.203956,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 326.197653,
                    "min": 284.201512,
                    "p50": 288.900092,
                    "p95": 326.197653,
                    "p99": 326.197653,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.565041,
                    "min": 73.155678,
                    "p50": 73.37056799999999,
                    "p95": 76.565041,
                    "p99": 76.565041,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1231.480302,
                    "min": 1210.616335,
                    "p50": 1226.552186,
                    "p95": 1231.480302,
                    "p99": 1231.480302,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 294.553107,
                    "min": 252.09807099999998,
                    "p50": 257.450626,
                    "p95": 294.553107,
                    "p99": 294.553107,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 116.23718199999999,
                    "min": 80.186756,
                    "p50": 109.74506099999999,
                    "p95": 116.23718199999999,
                    "p99": 116.23718199999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.389333,
                    "min": 168.02913099999998,
                    "p50": 168.59523,
                    "p95": 177.389333,
                    "p99": 177.389333,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 226.686013,
                    "min": 178.24953599999998,
                    "p50": 216.58002,
                    "p95": 226.686013,
                    "p99": 226.686013,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 140.312385,
                    "min": 121.43687999999999,
                    "p50": 129.63791,
                    "p95": 140.312385,
                    "p99": 140.312385,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 216.206017,
                    "min": 187.51047699999998,
                    "p50": 193.525455,
                    "p95": 216.206017,
                    "p99": 216.206017,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 645.172347,
                    "min": 627.085099,
                    "p50": 635.84101,
                    "p95": 645.172347,
                    "p99": 645.172347,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 410.35450599999996,
                    "min": 383.578418,
                    "p50": 400.85843,
                    "p95": 410.35450599999996,
                    "p99": 410.35450599999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 210.19875199999998,
                    "min": 202.067491,
                    "p50": 203.980722,
                    "p95": 210.19875199999998,
                    "p99": 210.19875199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.823839,
                    "min": 155.57323399999999,
                    "p50": 158.349067,
                    "p95": 167.823839,
                    "p99": 167.823839,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 231.19413,
                    "min": 220.48732199999998,
                    "p50": 229.14584599999998,
                    "p95": 231.19413,
                    "p99": 231.19413,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 539.738927,
                    "min": 511.830404,
                    "p50": 521.828437,
                    "p95": 539.738927,
                    "p99": 539.738927,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 146.066528,
                    "min": 122.36664999999999,
                    "p50": 130.241461,
                    "p95": 146.066528,
                    "p99": 146.066528,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 237.30645199999998,
                    "min": 193.16134399999999,
                    "p50": 206.977603,
                    "p95": 237.30645199999998,
                    "p99": 237.30645199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 213.736348,
                    "min": 147.57001,
                    "p50": 186.149067,
                    "p95": 213.736348,
                    "p99": 213.736348,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 140.90765399999998,
                    "min": 70.81965799999999,
                    "p50": 118.82075999999999,
                    "p95": 140.90765399999998,
                    "p99": 140.90765399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 302.175472,
                    "min": 259.439598,
                    "p50": 271.65006,
                    "p95": 302.175472,
                    "p99": 302.175472,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 99.84235699999999,
                    "min": 47.988701,
                    "p50": 87.612456,
                    "p95": 99.84235699999999,
                    "p99": 99.84235699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 186.07589199999998,
                    "min": 139.406147,
                    "p50": 162.087235,
                    "p95": 186.07589199999998,
                    "p99": 186.07589199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 197.28293299999999,
                    "min": 131.92956999999998,
                    "p50": 161.355023,
                    "p95": 197.28293299999999,
                    "p99": 197.28293299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 269.643087,
                    "min": 202.06726899999998,
                    "p50": 221.50372299999998,
                    "p95": 269.643087,
                    "p99": 269.643087,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 418.41977499999996,
                    "min": 367.935385,
                    "p50": 382.37506199999996,
                    "p95": 418.41977499999996,
                    "p99": 418.41977499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 229.351859,
                    "min": 181.620722,
                    "p50": 187.90913999999998,
                    "p95": 229.351859,
                    "p99": 229.351859,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 172.368317,
                    "min": 149.87294699999998,
                    "p50": 151.58518999999998,
                    "p95": 172.368317,
                    "p99": 172.368317,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 130.637849,
                    "min": 96.06185099999999,
                    "p50": 99.315091,
                    "p95": 130.637849,
                    "p99": 130.637849,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 254.132683,
                    "min": 196.592031,
                    "p50": 209.54088399999998,
                    "p95": 254.132683,
                    "p99": 254.132683,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 294.555147,
                    "min": 240.011506,
                    "p50": 258.237889,
                    "p95": 294.555147,
                    "p99": 294.555147,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 538.431339,
                    "min": 476.431608,
                    "p50": 492.104921,
                    "p95": 538.431339,
                    "p99": 538.431339,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 667.8791699999999,
                    "min": 603.838615,
                    "p50": 647.9368039999999,
                    "p95": 667.8791699999999,
                    "p99": 667.8791699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1225.459597,
                    "min": 1140.604903,
                    "p50": 1181.6704359999999,
                    "p95": 1225.459597,
                    "p99": 1225.459597,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 78.513786,
                    "min": 67.266514,
                    "p50": 69.167464,
                    "p95": 78.513786,
                    "p99": 78.513786,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 617.5387079999999,
                    "min": 536.033995,
                    "p50": 546.09966,
                    "p95": 617.5387079999999,
                    "p99": 617.5387079999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 217.160731,
                    "min": 169.310228,
                    "p50": 179.551663,
                    "p95": 217.160731,
                    "p99": 217.160731,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.92421399999998,
                    "min": 137.551506,
                    "p50": 148.71434499999998,
                    "p95": 177.92421399999998,
                    "p99": 177.92421399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 259.107073,
                    "min": 190.304974,
                    "p50": 227.34949899999998,
                    "p95": 259.107073,
                    "p99": 259.107073,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.36345699999998,
                    "min": 113.897173,
                    "p50": 120.3265,
                    "p95": 143.36345699999998,
                    "p99": 143.36345699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.624173,
                    "min": 79.316896,
                    "p50": 94.159922,
                    "p95": 96.624173,
                    "p99": 96.624173,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 72.765224,
                    "min": 61.524147,
                    "p50": 62.067544999999996,
                    "p95": 72.765224,
                    "p99": 72.765224,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 170.333443,
                    "min": 119.437016,
                    "p50": 158.754481,
                    "p95": 170.333443,
                    "p99": 170.333443,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 251.245103,
                    "min": 214.01235799999998,
                    "p50": 222.89858999999998,
                    "p95": 251.245103,
                    "p99": 251.245103,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.164008,
                    "min": 101.75677499999999,
                    "p50": 124.18705,
                    "p95": 128.164008,
                    "p99": 128.164008,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.243517,
                    "min": 128.863788,
                    "p50": 134.140169,
                    "p95": 149.243517,
                    "p99": 149.243517,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 220.632682,
                    "min": 188.493245,
                    "p50": 207.280985,
                    "p95": 220.632682,
                    "p99": 220.632682,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 569.284886,
                    "min": 443.980915,
                    "p50": 490.334731,
                    "p95": 569.284886,
                    "p99": 569.284886,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.552406,
                    "min": 138.57744,
                    "p50": 140.239705,
                    "p95": 165.552406,
                    "p99": 165.552406,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 253.21032799999998,
                    "min": 243.72678599999998,
                    "p50": 248.24783699999998,
                    "p95": 253.21032799999998,
                    "p99": 253.21032799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 203.89725299999998,
                    "min": 161.646356,
                    "p50": 171.46734899999998,
                    "p95": 203.89725299999998,
                    "p99": 203.89725299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.471338,
                    "min": 80.508318,
                    "p50": 83.20909499999999,
                    "p95": 87.471338,
                    "p99": 87.471338,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 396.102124,
                    "min": 338.904137,
                    "p50": 376.617079,
                    "p95": 396.102124,
                    "p99": 396.102124,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 194.609076,
                    "min": 138.710443,
                    "p50": 146.77082099999998,
                    "p95": 194.609076,
                    "p99": 194.609076,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.337402,
                    "min": 116.22063899999999,
                    "p50": 120.860626,
                    "p95": 148.337402,
                    "p99": 148.337402,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 195.99178799999999,
                    "min": 164.111005,
                    "p50": 187.94593899999998,
                    "p95": 195.99178799999999,
                    "p99": 195.99178799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 561.6249369999999,
                    "min": 500.31654799999995,
                    "p50": 537.97608,
                    "p95": 561.6249369999999,
                    "p99": 561.6249369999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 436.712108,
                    "min": 381.32719099999997,
                    "p50": 385.39090699999997,
                    "p95": 436.712108,
                    "p99": 436.712108,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 460.316492,
                    "min": 387.785961,
                    "p50": 394.022828,
                    "p95": 460.316492,
                    "p99": 460.316492,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 508.34695899999997,
                    "min": 443.16427899999996,
                    "p50": 475.271076,
                    "p95": 508.34695899999997,
                    "p99": 508.34695899999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 319.35740999999996,
                    "min": 244.382534,
                    "p50": 257.967686,
                    "p95": 319.35740999999996,
                    "p99": 319.35740999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.805713,
                    "min": 186.37479399999998,
                    "p50": 188.781158,
                    "p95": 193.805713,
                    "p99": 193.805713,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 241.00294499999998,
                    "min": 225.20849099999998,
                    "p50": 231.000316,
                    "p95": 241.00294499999998,
                    "p99": 241.00294499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 250.63358699999998,
                    "min": 191.20535099999998,
                    "p50": 206.57531799999998,
                    "p95": 250.63358699999998,
                    "p99": 250.63358699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 325.455193,
                    "min": 275.174406,
                    "p50": 312.619987,
                    "p95": 325.455193,
                    "p99": 325.455193,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 333.47247999999996,
                    "min": 289.69044199999996,
                    "p50": 298.668953,
                    "p95": 333.47247999999996,
                    "p99": 333.47247999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 416.773551,
                    "min": 354.027779,
                    "p50": 404.587518,
                    "p95": 416.773551,
                    "p99": 416.773551,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 352.26585,
                    "min": 304.46489199999996,
                    "p50": 317.108662,
                    "p95": 352.26585,
                    "p99": 352.26585,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 359.041837,
                    "min": 292.76986999999997,
                    "p50": 310.58968,
                    "p95": 359.041837,
                    "p99": 359.041837,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 402.305641,
                    "min": 351.759139,
                    "p50": 386.32154099999997,
                    "p95": 402.305641,
                    "p99": 402.305641,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 409.177821,
                    "min": 362.532513,
                    "p50": 381.472736,
                    "p95": 409.177821,
                    "p99": 409.177821,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 144.401351,
                    "min": 116.381312,
                    "p50": 141.49262199999998,
                    "p95": 144.401351,
                    "p99": 144.401351,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 210.679326,
                    "min": 166.111156,
                    "p50": 169.363584,
                    "p95": 210.679326,
                    "p99": 210.679326,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 260.423423,
                    "min": 207.668277,
                    "p50": 228.908231,
                    "p95": 260.423423,
                    "p99": 260.423423,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 222.67362799999998,
                    "min": 177.013575,
                    "p50": 189.53561399999998,
                    "p95": 222.67362799999998,
                    "p99": 222.67362799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 359.236071,
                    "min": 289.990207,
                    "p50": 327.755856,
                    "p95": 359.236071,
                    "p99": 359.236071,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 140.637023,
                    "min": 113.32835999999999,
                    "p50": 119.627645,
                    "p95": 140.637023,
                    "p99": 140.637023,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 289.013947,
                    "min": 240.335356,
                    "p50": 275.51635899999997,
                    "p95": 289.013947,
                    "p99": 289.013947,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 513.289437,
                    "min": 449.75807699999996,
                    "p50": 499.683879,
                    "p95": 513.289437,
                    "p99": 513.289437,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 600.555781,
                    "min": 508.66769,
                    "p50": 552.147519,
                    "p95": 600.555781,
                    "p99": 600.555781,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 437.20133899999996,
                    "min": 393.464585,
                    "p50": 403.225042,
                    "p95": 437.20133899999996,
                    "p99": 437.20133899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 299.84810999999996,
                    "min": 280.275985,
                    "p50": 298.579876,
                    "p95": 299.84810999999996,
                    "p99": 299.84810999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 380.44818599999996,
                    "min": 313.294518,
                    "p50": 327.130766,
                    "p95": 380.44818599999996,
                    "p99": 380.44818599999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 464.130356,
                    "min": 385.481655,
                    "p50": 405.392973,
                    "p95": 464.130356,
                    "p99": 464.130356,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 435.005497,
                    "min": 326.736197,
                    "p50": 370.780421,
                    "p95": 435.005497,
                    "p99": 435.005497,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 453.92116899999996,
                    "min": 391.27894699999996,
                    "p50": 426.77878499999997,
                    "p95": 453.92116899999996,
                    "p99": 453.92116899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 576.1619999999999,
                    "min": 445.042955,
                    "p50": 481.886124,
                    "p95": 576.1619999999999,
                    "p99": 576.1619999999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 410.47628399999996,
                    "min": 317.235639,
                    "p50": 341.840537,
                    "p95": 410.47628399999996,
                    "p99": 410.47628399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 369.226677,
                    "min": 293.088364,
                    "p50": 341.789579,
                    "p95": 369.226677,
                    "p99": 369.226677,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.99143899999999,
                    "min": 118.30247399999999,
                    "p50": 125.894914,
                    "p95": 145.99143899999999,
                    "p99": 145.99143899999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 595.943546,
                    "min": 552.7917209999999,
                    "p50": 594.1503759999999,
                    "p95": 595.943546,
                    "p99": 595.943546,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 341.62472299999996,
                    "min": 281.082017,
                    "p50": 316.81502,
                    "p95": 341.62472299999996,
                    "p99": 341.62472299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 335.137949,
                    "min": 225.38987,
                    "p50": 263.59489099999996,
                    "p95": 335.137949,
                    "p99": 335.137949,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 205.06877899999998,
                    "min": 175.83648599999998,
                    "p50": 182.05389499999998,
                    "p95": 205.06877899999998,
                    "p99": 205.06877899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 278.215367,
                    "min": 238.370396,
                    "p50": 250.767157,
                    "p95": 278.215367,
                    "p99": 278.215367,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 238.274846,
                    "min": 172.14384199999998,
                    "p50": 210.923405,
                    "p95": 238.274846,
                    "p99": 238.274846,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.934337,
                    "min": 116.65581999999999,
                    "p50": 143.259122,
                    "p95": 159.934337,
                    "p99": 159.934337,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 226.444256,
                    "min": 157.48950499999998,
                    "p50": 181.828611,
                    "p95": 226.444256,
                    "p99": 226.444256,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 405.534991,
                    "min": 350.76066599999996,
                    "p50": 362.798142,
                    "p95": 405.534991,
                    "p99": 405.534991,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 423.597271,
                    "min": 376.761716,
                    "p50": 417.007525,
                    "p95": 423.597271,
                    "p99": 423.597271,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 423.72118,
                    "min": 311.02481,
                    "p50": 358.405446,
                    "p95": 423.72118,
                    "p99": 423.72118,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 478.55715399999997,
                    "min": 422.62903,
                    "p50": 470.01424499999996,
                    "p95": 478.55715399999997,
                    "p99": 478.55715399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 148.005821,
                    "min": 129.08156599999998,
                    "p50": 142.034461,
                    "p95": 148.005821,
                    "p99": 148.005821,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 299.325311,
                    "min": 288.759487,
                    "p50": 293.537415,
                    "p95": 299.325311,
                    "p99": 299.325311,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 551.236461,
                    "min": 496.120091,
                    "p50": 507.445247,
                    "p95": 551.236461,
                    "p99": 551.236461,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 200.600271,
                    "min": 175.070738,
                    "p50": 180.90130399999998,
                    "p95": 200.600271,
                    "p99": 200.600271,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 274.972777,
                    "min": 220.942948,
                    "p50": 234.389661,
                    "p95": 274.972777,
                    "p99": 274.972777,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 246.755855,
                    "min": 194.066117,
                    "p50": 204.88499299999998,
                    "p95": 246.755855,
                    "p99": 246.755855,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 164.89821899999998,
                    "min": 154.144559,
                    "p50": 158.330044,
                    "p95": 164.89821899999998,
                    "p99": 164.89821899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 325.65869299999997,
                    "min": 236.913128,
                    "p50": 248.194922,
                    "p95": 325.65869299999997,
                    "p99": 325.65869299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 282.834811,
                    "min": 260.696125,
                    "p50": 269.48715899999996,
                    "p95": 282.834811,
                    "p99": 282.834811,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 140.206558,
                    "min": 89.08610999999999,
                    "p50": 116.92511999999999,
                    "p95": 140.206558,
                    "p99": 140.206558,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 418.24091,
                    "min": 341.042806,
                    "p50": 387.520331,
                    "p95": 418.24091,
                    "p99": 418.24091,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2273.002445,
                    "min": 2214.868273,
                    "p50": 2253.431368,
                    "p95": 2273.002445,
                    "p99": 2273.002445,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1400.5532919999998,
                    "min": 1344.671249,
                    "p50": 1361.166882,
                    "p95": 1400.5532919999998,
                    "p99": 1400.5532919999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1679.820373,
                    "min": 1640.519196,
                    "p50": 1660.0649899999999,
                    "p95": 1679.820373,
                    "p99": 1679.820373,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1112.264896,
                    "min": 1071.637905,
                    "p50": 1085.4676299999999,
                    "p95": 1112.264896,
                    "p99": 1112.264896,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 938.336566,
                    "min": 918.42045,
                    "p50": 927.83012,
                    "p95": 938.336566,
                    "p99": 938.336566,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1546.1093899999998,
                    "min": 1504.447338,
                    "p50": 1518.901295,
                    "p95": 1546.1093899999998,
                    "p99": 1546.1093899999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 531.813005,
                    "min": 449.00584899999996,
                    "p50": 493.06373099999996,
                    "p95": 531.813005,
                    "p99": 531.813005,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 661.868083,
                    "min": 626.5371319999999,
                    "p50": 641.377172,
                    "p95": 661.868083,
                    "p99": 661.868083,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1254.5290559999999,
                    "min": 1212.6033539999999,
                    "p50": 1228.873466,
                    "p95": 1254.5290559999999,
                    "p99": 1254.5290559999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 792.656842,
                    "min": 771.188777,
                    "p50": 780.772689,
                    "p95": 792.656842,
                    "p99": 792.656842,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3062.631188,
                    "min": 2962.1442549999997,
                    "p50": 2989.3901779999997,
                    "p95": 3062.631188,
                    "p99": 3062.631188,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1855.975588,
                    "min": 1792.8216679999998,
                    "p50": 1836.881249,
                    "p95": 1855.975588,
                    "p99": 1855.975588,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2656.94514,
                    "min": 2571.474238,
                    "p50": 2604.344575,
                    "p95": 2656.94514,
                    "p99": 2656.94514,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2135.5134479999997,
                    "min": 2071.21764,
                    "p50": 2100.060091,
                    "p95": 2135.5134479999997,
                    "p99": 2135.5134479999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1991.3343909999999,
                    "min": 1925.5377569999998,
                    "p50": 1950.7763679999998,
                    "p95": 1991.3343909999999,
                    "p99": 1991.3343909999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4513.169581,
                    "min": 4392.1920789999995,
                    "p50": 4458.708135,
                    "p95": 4513.169581,
                    "p99": 4513.169581,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1022.3666609999999,
                    "min": 967.4835869999999,
                    "p50": 990.9780609999999,
                    "p95": 1022.3666609999999,
                    "p99": 1022.3666609999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 776.151769,
                    "min": 735.1040969999999,
                    "p50": 745.082005,
                    "p95": 776.151769,
                    "p99": 776.151769,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 897.277165,
                    "min": 855.13902,
                    "p50": 874.451736,
                    "p95": 897.277165,
                    "p99": 897.277165,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1336.7859919999999,
                    "min": 1275.342166,
                    "p50": 1290.4044239999998,
                    "p95": 1336.7859919999999,
                    "p99": 1336.7859919999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1202.5678,
                    "min": 1131.997445,
                    "p50": 1146.779364,
                    "p95": 1202.5678,
                    "p99": 1202.5678,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 826.6262869999999,
                    "min": 784.3654879999999,
                    "p50": 805.76996,
                    "p95": 826.6262869999999,
                    "p99": 826.6262869999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 268.40329299999996,
                    "min": 230.663313,
                    "p50": 240.44939699999998,
                    "p95": 268.40329299999996,
                    "p99": 268.40329299999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 306.01379199999997,
                    "min": 292.610027,
                    "p50": 301.390803,
                    "p95": 306.01379199999997,
                    "p99": 306.01379199999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 722.029545,
                    "min": 675.321481,
                    "p50": 698.837575,
                    "p95": 722.029545,
                    "p99": 722.029545,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 432.45732399999997,
                    "min": 420.56278299999997,
                    "p50": 425.91425599999997,
                    "p95": 432.45732399999997,
                    "p99": 432.45732399999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 654.189449,
                    "min": 614.187634,
                    "p50": 622.057162,
                    "p95": 654.189449,
                    "p99": 654.189449,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 378.355772,
                    "min": 353.106468,
                    "p50": 364.627135,
                    "p95": 378.355772,
                    "p99": 378.355772,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 942.5759899999999,
                    "min": 917.409135,
                    "p50": 925.921479,
                    "p95": 942.5759899999999,
                    "p99": 942.5759899999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 578.350163,
                    "min": 541.841218,
                    "p50": 557.541193,
                    "p95": 578.350163,
                    "p99": 578.350163,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 497.02205399999997,
                    "min": 478.69751299999996,
                    "p50": 488.66957199999996,
                    "p95": 497.02205399999997,
                    "p99": 497.02205399999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 709.665763,
                    "min": 683.7166149999999,
                    "p50": 696.4479,
                    "p95": 709.665763,
                    "p99": 709.665763,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 334.568961,
                    "min": 309.572296,
                    "p50": 310.791723,
                    "p95": 334.568961,
                    "p99": 334.568961,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 634.1903659999999,
                    "min": 566.339647,
                    "p50": 576.511713,
                    "p95": 634.1903659999999,
                    "p99": 634.1903659999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 514.698445,
                    "min": 494.918478,
                    "p50": 507.221279,
                    "p95": 514.698445,
                    "p99": 514.698445,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 450.201582,
                    "min": 432.76422199999996,
                    "p50": 442.98238599999996,
                    "p95": 450.201582,
                    "p99": 450.201582,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1038.451693,
                    "min": 1018.227851,
                    "p50": 1030.11681,
                    "p95": 1038.451693,
                    "p99": 1038.451693,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 957.7065369999999,
                    "min": 882.806934,
                    "p50": 910.548553,
                    "p95": 957.7065369999999,
                    "p99": 957.7065369999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1400.884987,
                    "min": 1339.369346,
                    "p50": 1361.8083159999999,
                    "p95": 1400.884987,
                    "p99": 1400.884987,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2029.4179829999998,
                    "min": 1945.1817859999999,
                    "p50": 1987.5210639999998,
                    "p95": 2029.4179829999998,
                    "p99": 2029.4179829999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 864.261905,
                    "min": 788.470075,
                    "p50": 828.152304,
                    "p95": 864.261905,
                    "p99": 864.261905,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 418.991658,
                    "min": 370.902284,
                    "p50": 383.29675499999996,
                    "p95": 418.991658,
                    "p99": 418.991658,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 780.0158299999999,
                    "min": 735.453808,
                    "p50": 770.163101,
                    "p95": 780.0158299999999,
                    "p99": 780.0158299999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 281.229631,
                    "min": 244.869303,
                    "p50": 249.82249099999999,
                    "p95": 281.229631,
                    "p99": 281.229631,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 999.2142409999999,
                    "min": 949.7859259999999,
                    "p50": 969.3251449999999,
                    "p95": 999.2142409999999,
                    "p99": 999.2142409999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1223.721657,
                    "min": 1178.027838,
                    "p50": 1186.622071,
                    "p95": 1223.721657,
                    "p99": 1223.721657,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 644.480829,
                    "min": 595.323387,
                    "p50": 637.900811,
                    "p95": 644.480829,
                    "p99": 644.480829,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2502.37554,
                    "min": 2435.181622,
                    "p50": 2468.288029,
                    "p95": 2502.37554,
                    "p99": 2502.37554,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 601.966504,
                    "min": 584.4033539999999,
                    "p50": 593.5398809999999,
                    "p95": 601.966504,
                    "p99": 601.966504,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 434.742081,
                    "min": 387.81456299999996,
                    "p50": 415.128576,
                    "p95": 434.742081,
                    "p99": 434.742081,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 845.964833,
                    "min": 769.46132,
                    "p50": 776.8038789999999,
                    "p95": 845.964833,
                    "p99": 845.964833,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 335.599793,
                    "min": 287.613315,
                    "p50": 298.321602,
                    "p95": 335.599793,
                    "p99": 335.599793,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1300.716003,
                    "min": 1246.764485,
                    "p50": 1274.6713439999999,
                    "p95": 1300.716003,
                    "p99": 1300.716003,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1006.756499,
                    "min": 946.4282939999999,
                    "p50": 956.210469,
                    "p95": 1006.756499,
                    "p99": 1006.756499,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 897.915216,
                    "min": 878.347219,
                    "p50": 889.669821,
                    "p95": 897.915216,
                    "p99": 897.915216,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.82217599999998,
                    "min": 192.602592,
                    "p50": 235.118363,
                    "p95": 243.82217599999998,
                    "p99": 243.82217599999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 351.544328,
                    "min": 308.361018,
                    "p50": 348.68937999999997,
                    "p95": 351.544328,
                    "p99": 351.544328,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1150.653732,
                    "min": 1099.583725,
                    "p50": 1101.2988599999999,
                    "p95": 1150.653732,
                    "p99": 1150.653732,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 575.004737,
                    "min": 518.937732,
                    "p50": 542.509721,
                    "p95": 575.004737,
                    "p99": 575.004737,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 765.803942,
                    "min": 700.5597799999999,
                    "p50": 719.241124,
                    "p95": 765.803942,
                    "p99": 765.803942,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 501.25422199999997,
                    "min": 461.49199799999997,
                    "p50": 476.693067,
                    "p95": 501.25422199999997,
                    "p99": 501.25422199999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 867.3605369999999,
                    "min": 829.318508,
                    "p50": 834.317376,
                    "p95": 867.3605369999999,
                    "p99": 867.3605369999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1863.503141,
                    "min": 1830.3539329999999,
                    "p50": 1848.3519259999998,
                    "p95": 1863.503141,
                    "p99": 1863.503141,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3090.2222269999997,
                    "min": 3008.591609,
                    "p50": 3045.001995,
                    "p95": 3090.2222269999997,
                    "p99": 3090.2222269999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 659.4793109999999,
                    "min": 647.330253,
                    "p50": 653.223659,
                    "p95": 659.4793109999999,
                    "p99": 659.4793109999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 355.413707,
                    "min": 343.61746899999997,
                    "p50": 352.428377,
                    "p95": 355.413707,
                    "p99": 355.413707,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 939.1580819999999,
                    "min": 908.610856,
                    "p50": 916.2638159999999,
                    "p95": 939.1580819999999,
                    "p99": 939.1580819999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1353.636794,
                    "min": 1338.124615,
                    "p50": 1346.262886,
                    "p95": 1353.636794,
                    "p99": 1353.636794,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2243.362974,
                    "min": 2192.678254,
                    "p50": 2202.481987,
                    "p95": 2243.362974,
                    "p99": 2243.362974,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1801.689252,
                    "min": 1758.9777359999998,
                    "p50": 1776.021431,
                    "p95": 1801.689252,
                    "p99": 1801.689252,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 404.254864,
                    "min": 385.11691199999996,
                    "p50": 393.694706,
                    "p95": 404.254864,
                    "p99": 404.254864,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 820.324396,
                    "min": 793.8513859999999,
                    "p50": 806.7232419999999,
                    "p95": 820.324396,
                    "p99": 820.324396,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 328.36785599999996,
                    "min": 305.289106,
                    "p50": 311.447505,
                    "p95": 328.36785599999996,
                    "p99": 328.36785599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 708.099424,
                    "min": 651.603473,
                    "p50": 667.963169,
                    "p95": 708.099424,
                    "p99": 708.099424,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 710.9378869999999,
                    "min": 689.012024,
                    "p50": 705.24324,
                    "p95": 710.9378869999999,
                    "p99": 710.9378869999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 249.50623,
                    "min": 219.611907,
                    "p50": 226.601471,
                    "p95": 249.50623,
                    "p99": 249.50623,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 638.3555319999999,
                    "min": 525.163413,
                    "p50": 531.983974,
                    "p95": 638.3555319999999,
                    "p99": 638.3555319999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 581.2195929999999,
                    "min": 554.3787669999999,
                    "p50": 573.696417,
                    "p95": 581.2195929999999,
                    "p99": 581.2195929999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 306.290602,
                    "min": 266.494099,
                    "p50": 270.707525,
                    "p95": 306.290602,
                    "p99": 306.290602,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.286297,
                    "min": 170.18310599999998,
                    "p50": 181.516517,
                    "p95": 198.286297,
                    "p99": 198.286297,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 668.879904,
                    "min": 598.896243,
                    "p50": 613.329042,
                    "p95": 668.879904,
                    "p99": 668.879904,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 561.458413,
                    "min": 481.196426,
                    "p50": 489.78068199999996,
                    "p95": 561.458413,
                    "p99": 561.458413,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 479.299217,
                    "min": 434.577065,
                    "p50": 443.790912,
                    "p95": 479.299217,
                    "p99": 479.299217,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 669.501985,
                    "min": 661.34898,
                    "p50": 664.603754,
                    "p95": 669.501985,
                    "p99": 669.501985,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1026.1950359999998,
                    "min": 982.721948,
                    "p50": 1010.5688819999999,
                    "p95": 1026.1950359999998,
                    "p99": 1026.1950359999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 945.5012949999999,
                    "min": 857.583215,
                    "p50": 917.13577,
                    "p95": 945.5012949999999,
                    "p99": 945.5012949999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 282.490612,
                    "min": 249.015324,
                    "p50": 257.205843,
                    "p95": 282.490612,
                    "p99": 282.490612,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1440.163807,
                    "min": 1395.0916029999998,
                    "p50": 1407.818757,
                    "p95": 1440.163807,
                    "p99": 1440.163807,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 604.9613969999999,
                    "min": 559.595697,
                    "p50": 597.633693,
                    "p95": 604.9613969999999,
                    "p99": 604.9613969999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.193399,
                    "min": 388.713644,
                    "p50": 391.996578,
                    "p95": 479.193399,
                    "p99": 479.193399,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 853.9863349999999,
                    "min": 793.3786269999999,
                    "p50": 799.349422,
                    "p95": 853.9863349999999,
                    "p99": 853.9863349999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 503.218484,
                    "min": 414.034901,
                    "p50": 475.260155,
                    "p95": 503.218484,
                    "p99": 503.218484,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1327.3910819999999,
                    "min": 1232.910412,
                    "p50": 1279.8274649999998,
                    "p95": 1327.3910819999999,
                    "p99": 1327.3910819999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 373.126717,
                    "min": 311.187055,
                    "p50": 324.511263,
                    "p95": 373.126717,
                    "p99": 373.126717,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1116.148268,
                    "min": 1064.790187,
                    "p50": 1079.1644939999999,
                    "p95": 1116.148268,
                    "p99": 1116.148268,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 591.890664,
                    "min": 525.3207629999999,
                    "p50": 534.215568,
                    "p95": 591.890664,
                    "p99": 591.890664,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 945.1301629999999,
                    "min": 920.7270229999999,
                    "p50": 938.403364,
                    "p95": 945.1301629999999,
                    "p99": 945.1301629999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 791.3544049999999,
                    "min": 724.125731,
                    "p50": 734.175228,
                    "p95": 791.3544049999999,
                    "p99": 791.3544049999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 314.87528699999996,
                    "min": 288.570691,
                    "p50": 299.91792399999997,
                    "p95": 314.87528699999996,
                    "p99": 314.87528699999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 835.4355469999999,
                    "min": 776.692376,
                    "p50": 790.8710599999999,
                    "p95": 835.4355469999999,
                    "p99": 835.4355469999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 525.9625609999999,
                    "min": 469.767611,
                    "p50": 497.98145,
                    "p95": 525.9625609999999,
                    "p99": 525.9625609999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 731.684278,
                    "min": 682.523154,
                    "p50": 692.652084,
                    "p95": 731.684278,
                    "p99": 731.684278,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1090.921746,
                    "min": 1024.215771,
                    "p50": 1035.8807669999999,
                    "p95": 1090.921746,
                    "p99": 1090.921746,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 661.1000409999999,
                    "min": 589.137268,
                    "p50": 595.871464,
                    "p95": 661.1000409999999,
                    "p99": 661.1000409999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 783.901489,
                    "min": 737.0981939999999,
                    "p50": 747.77234,
                    "p95": 783.901489,
                    "p99": 783.901489,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1549.994323,
                    "min": 1512.883358,
                    "p50": 1530.687127,
                    "p95": 1549.994323,
                    "p99": 1549.994323,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 435.505449,
                    "min": 370.878262,
                    "p50": 394.792286,
                    "p95": 435.505449,
                    "p99": 435.505449,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.58872599999998,
                    "min": 198.71048499999998,
                    "p50": 201.284046,
                    "p95": 214.58872599999998,
                    "p99": 214.58872599999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 566.814882,
                    "min": 540.837311,
                    "p50": 559.934576,
                    "p95": 566.814882,
                    "p99": 566.814882,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 364.617151,
                    "min": 344.023952,
                    "p50": 351.969061,
                    "p95": 364.617151,
                    "p99": 364.617151,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 279.88415399999997,
                    "min": 244.35660099999998,
                    "p50": 247.800175,
                    "p95": 279.88415399999997,
                    "p99": 279.88415399999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 472.923855,
                    "min": 417.491538,
                    "p50": 449.25624899999997,
                    "p95": 472.923855,
                    "p99": 472.923855,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 952.59467,
                    "min": 908.116397,
                    "p50": 917.7161159999999,
                    "p95": 952.59467,
                    "p99": 952.59467,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 652.851759,
                    "min": 634.574531,
                    "p50": 645.605648,
                    "p95": 652.851759,
                    "p99": 652.851759,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 878.2247249999999,
                    "min": 786.908194,
                    "p50": 830.720438,
                    "p95": 878.2247249999999,
                    "p99": 878.2247249999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 944.660755,
                    "min": 880.15084,
                    "p50": 912.944159,
                    "p95": 944.660755,
                    "p99": 944.660755,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1001.4998929999999,
                    "min": 952.807344,
                    "p50": 971.384701,
                    "p95": 1001.4998929999999,
                    "p99": 1001.4998929999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 675.124162,
                    "min": 599.945124,
                    "p50": 606.38483,
                    "p95": 675.124162,
                    "p99": 675.124162,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 457.11384,
                    "min": 410.813477,
                    "p50": 418.40809199999995,
                    "p95": 457.11384,
                    "p99": 457.11384,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 587.617715,
                    "min": 536.739933,
                    "p50": 555.7859109999999,
                    "p95": 587.617715,
                    "p99": 587.617715,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 310.202179,
                    "min": 286.417734,
                    "p50": 296.643964,
                    "p95": 310.202179,
                    "p99": 310.202179,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 409.895308,
                    "min": 355.36578299999996,
                    "p50": 360.479404,
                    "p95": 409.895308,
                    "p99": 409.895308,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 712.188724,
                    "min": 627.683755,
                    "p50": 666.1798749999999,
                    "p95": 712.188724,
                    "p99": 712.188724,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 509.814736,
                    "min": 477.257344,
                    "p50": 488.92418,
                    "p95": 509.814736,
                    "p99": 509.814736,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1320.6389,
                    "min": 1273.952621,
                    "p50": 1279.97572,
                    "p95": 1320.6389,
                    "p99": 1320.6389,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 755.089576,
                    "min": 711.383065,
                    "p50": 728.444405,
                    "p95": 755.089576,
                    "p99": 755.089576,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1249.681411,
                    "min": 1116.44614,
                    "p50": 1133.5101049999998,
                    "p95": 1249.681411,
                    "p99": 1249.681411,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.71291,
                    "min": 225.529149,
                    "p50": 237.007261,
                    "p95": 243.71291,
                    "p99": 243.71291,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 926.2327319999999,
                    "min": 839.7221139999999,
                    "p50": 857.053771,
                    "p95": 926.2327319999999,
                    "p99": 926.2327319999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 590.037748,
                    "min": 568.448077,
                    "p50": 584.037019,
                    "p95": 590.037748,
                    "p99": 590.037748,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 317.800677,
                    "min": 304.813455,
                    "p50": 314.367568,
                    "p95": 317.800677,
                    "p99": 317.800677,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.08561699999998,
                    "min": 224.416575,
                    "p50": 227.094677,
                    "p95": 247.08561699999998,
                    "p99": 247.08561699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.391022,
                    "min": 181.34805799999998,
                    "p50": 186.358215,
                    "p95": 218.391022,
                    "p99": 218.391022,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 643.656992,
                    "min": 614.751265,
                    "p50": 623.248568,
                    "p95": 643.656992,
                    "p99": 643.656992,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 724.7672269999999,
                    "min": 704.3422429999999,
                    "p50": 708.681848,
                    "p95": 724.7672269999999,
                    "p99": 724.7672269999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 496.83370199999996,
                    "min": 438.181966,
                    "p50": 449.98853399999996,
                    "p95": 496.83370199999996,
                    "p99": 496.83370199999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 966.5631239999999,
                    "min": 910.443626,
                    "p50": 928.671149,
                    "p95": 966.5631239999999,
                    "p99": 966.5631239999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 520.065237,
                    "min": 483.618165,
                    "p50": 494.438295,
                    "p95": 520.065237,
                    "p99": 520.065237,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 392.80004399999996,
                    "min": 354.167331,
                    "p50": 358.42770099999996,
                    "p95": 392.80004399999996,
                    "p99": 392.80004399999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 832.626634,
                    "min": 803.7455299999999,
                    "p50": 815.652972,
                    "p95": 832.626634,
                    "p99": 832.626634,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 686.994694,
                    "min": 647.338724,
                    "p50": 666.5626179999999,
                    "p95": 686.994694,
                    "p99": 686.994694,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 308.82198999999997,
                    "min": 268.25172599999996,
                    "p50": 273.20268799999997,
                    "p95": 308.82198999999997,
                    "p99": 308.82198999999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 409.562957,
                    "min": 394.337412,
                    "p50": 400.714658,
                    "p95": 409.562957,
                    "p99": 409.562957,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1383.095296,
                    "min": 1355.1052809999999,
                    "p50": 1366.412322,
                    "p95": 1383.095296,
                    "p99": 1383.095296,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 543.5635649999999,
                    "min": 525.222983,
                    "p50": 532.335975,
                    "p95": 543.5635649999999,
                    "p99": 543.5635649999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1852.631974,
                    "min": 1764.992188,
                    "p50": 1801.475536,
                    "p95": 1852.631974,
                    "p99": 1852.631974,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1006.7421469999999,
                    "min": 956.9943569999999,
                    "p50": 969.662747,
                    "p95": 1006.7421469999999,
                    "p99": 1006.7421469999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 553.9065519999999,
                    "min": 497.295058,
                    "p50": 512.3158119999999,
                    "p95": 553.9065519999999,
                    "p99": 553.9065519999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1942.898348,
                    "min": 1851.153091,
                    "p50": 1887.973507,
                    "p95": 1942.898348,
                    "p99": 1942.898348,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1374.522227,
                    "min": 1320.859929,
                    "p50": 1337.638667,
                    "p95": 1374.522227,
                    "p99": 1374.522227,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 645.03638,
                    "min": 579.988336,
                    "p50": 606.25445,
                    "p95": 645.03638,
                    "p99": 645.03638,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1518.618455,
                    "min": 1404.455595,
                    "p50": 1465.675291,
                    "p95": 1518.618455,
                    "p99": 1518.618455,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 726.7059439999999,
                    "min": 689.11518,
                    "p50": 695.836049,
                    "p95": 726.7059439999999,
                    "p99": 726.7059439999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1167.877835,
                    "min": 1136.4782519999999,
                    "p50": 1150.762254,
                    "p95": 1167.877835,
                    "p99": 1167.877835,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 954.522245,
                    "min": 868.4501459999999,
                    "p50": 884.827445,
                    "p95": 954.522245,
                    "p99": 954.522245,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1296.733772,
                    "min": 1208.064963,
                    "p50": 1243.08699,
                    "p95": 1296.733772,
                    "p99": 1296.733772,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1698.287104,
                    "min": 1623.8796029999999,
                    "p50": 1641.3686229999998,
                    "p95": 1698.287104,
                    "p99": 1698.287104,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 834.098797,
                    "min": 774.244557,
                    "p50": 782.818449,
                    "p95": 834.098797,
                    "p99": 834.098797,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1104.666743,
                    "min": 1058.13151,
                    "p50": 1074.370968,
                    "p95": 1104.666743,
                    "p99": 1104.666743,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 376.94570999999996,
                    "min": 324.34382899999997,
                    "p50": 340.92976699999997,
                    "p95": 376.94570999999996,
                    "p99": 376.94570999999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 456.40314,
                    "min": 412.096075,
                    "p50": 423.756729,
                    "p95": 456.40314,
                    "p99": 456.40314,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 606.0373559999999,
                    "min": 553.8066309999999,
                    "p50": 558.2829479999999,
                    "p95": 606.0373559999999,
                    "p99": 606.0373559999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 295.08833999999996,
                    "min": 254.195099,
                    "p50": 257.45988,
                    "p95": 295.08833999999996,
                    "p99": 295.08833999999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 675.779126,
                    "min": 643.054911,
                    "p50": 663.6803689999999,
                    "p95": 675.779126,
                    "p99": 675.779126,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 803.912324,
                    "min": 745.075507,
                    "p50": 763.062494,
                    "p95": 803.912324,
                    "p99": 803.912324,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 352.762947,
                    "min": 297.415153,
                    "p50": 311.984811,
                    "p95": 352.762947,
                    "p99": 352.762947,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 568.3061289999999,
                    "min": 493.967741,
                    "p50": 509.09853999999996,
                    "p95": 568.3061289999999,
                    "p99": 568.3061289999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 494.74767399999996,
                    "min": 445.51649699999996,
                    "p50": 462.47437299999996,
                    "p95": 494.74767399999996,
                    "p99": 494.74767399999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 369.744223,
                    "min": 347.738386,
                    "p50": 358.228499,
                    "p95": 369.744223,
                    "p99": 369.744223,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 240.450321,
                    "min": 202.77068799999998,
                    "p50": 204.693962,
                    "p95": 240.450321,
                    "p99": 240.450321,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 946.832443,
                    "min": 930.192155,
                    "p50": 935.1932119999999,
                    "p95": 946.832443,
                    "p99": 946.832443,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 635.0663059999999,
                    "min": 607.130104,
                    "p50": 611.153462,
                    "p95": 635.0663059999999,
                    "p99": 635.0663059999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 738.1491229999999,
                    "min": 708.863066,
                    "p50": 722.096602,
                    "p95": 738.1491229999999,
                    "p99": 738.1491229999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1122.511828,
                    "min": 1060.562089,
                    "p50": 1099.47552,
                    "p95": 1122.511828,
                    "p99": 1122.511828,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 860.853808,
                    "min": 794.827234,
                    "p50": 825.773792,
                    "p95": 860.853808,
                    "p99": 860.853808,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 412.810406,
                    "min": 362.854781,
                    "p50": 408.49483899999996,
                    "p95": 412.810406,
                    "p99": 412.810406,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1166.067431,
                    "min": 1110.953311,
                    "p50": 1122.140067,
                    "p95": 1166.067431,
                    "p99": 1166.067431,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 702.0293919999999,
                    "min": 662.0990039999999,
                    "p50": 666.7730849999999,
                    "p95": 702.0293919999999,
                    "p99": 702.0293919999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 942.1067879999999,
                    "min": 900.1699229999999,
                    "p50": 909.646178,
                    "p95": 942.1067879999999,
                    "p99": 942.1067879999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1014.579588,
                    "min": 964.717097,
                    "p50": 989.5420439999999,
                    "p95": 1014.579588,
                    "p99": 1014.579588,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1326.17974,
                    "min": 1269.7021049999998,
                    "p50": 1276.1429819999998,
                    "p95": 1326.17974,
                    "p99": 1326.17974,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 778.6069749999999,
                    "min": 711.9930889999999,
                    "p50": 722.408952,
                    "p95": 778.6069749999999,
                    "p99": 778.6069749999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 449.18274099999996,
                    "min": 414.525132,
                    "p50": 425.167392,
                    "p95": 449.18274099999996,
                    "p99": 449.18274099999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 557.005213,
                    "min": 538.959535,
                    "p50": 550.517123,
                    "p95": 557.005213,
                    "p99": 557.005213,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 857.5564119999999,
                    "min": 839.3513969999999,
                    "p50": 849.770329,
                    "p95": 857.5564119999999,
                    "p99": 857.5564119999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 860.408507,
                    "min": 750.090843,
                    "p50": 786.7644399999999,
                    "p95": 860.408507,
                    "p99": 860.408507,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1956.9170669999999,
                    "min": 1864.7823609999998,
                    "p50": 1890.672971,
                    "p95": 1956.9170669999999,
                    "p99": 1956.9170669999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 507.29209,
                    "min": 469.321572,
                    "p50": 484.724765,
                    "p95": 507.29209,
                    "p99": 507.29209,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.04112099999998,
                    "min": 223.33092399999998,
                    "p50": 236.578248,
                    "p95": 243.04112099999998,
                    "p99": 243.04112099999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 390.592374,
                    "min": 351.040908,
                    "p50": 359.108684,
                    "p95": 390.592374,
                    "p99": 390.592374,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 644.1046729999999,
                    "min": 594.915253,
                    "p50": 603.128064,
                    "p95": 644.1046729999999,
                    "p99": 644.1046729999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.803582,
                    "min": 290.754077,
                    "p50": 307.37262599999997,
                    "p95": 336.803582,
                    "p99": 336.803582,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1141.670553,
                    "min": 1048.8885699999998,
                    "p50": 1061.341189,
                    "p95": 1141.670553,
                    "p99": 1141.670553,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 545.247532,
                    "min": 514.089852,
                    "p50": 523.961897,
                    "p95": 545.247532,
                    "p99": 545.247532,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 255.741727,
                    "min": 251.012609,
                    "p50": 252.20595,
                    "p95": 255.741727,
                    "p99": 255.741727,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 350.192525,
                    "min": 314.477942,
                    "p50": 318.41712,
                    "p95": 350.192525,
                    "p99": 350.192525,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 756.4556769999999,
                    "min": 708.753475,
                    "p50": 722.7168369999999,
                    "p95": 756.4556769999999,
                    "p99": 756.4556769999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 494.674923,
                    "min": 440.97702899999996,
                    "p50": 455.736277,
                    "p95": 494.674923,
                    "p99": 494.674923,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1389.360585,
                    "min": 1352.74597,
                    "p50": 1377.6450149999998,
                    "p95": 1389.360585,
                    "p99": 1389.360585,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 445.710463,
                    "min": 379.94845,
                    "p50": 384.390782,
                    "p95": 445.710463,
                    "p99": 445.710463,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 816.2187799999999,
                    "min": 781.050477,
                    "p50": 789.0282119999999,
                    "p95": 816.2187799999999,
                    "p99": 816.2187799999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 634.30827,
                    "min": 583.491182,
                    "p50": 594.164128,
                    "p95": 634.30827,
                    "p99": 634.30827,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 895.9757639999999,
                    "min": 843.472984,
                    "p50": 856.508885,
                    "p95": 895.9757639999999,
                    "p99": 895.9757639999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 963.895544,
                    "min": 912.864289,
                    "p50": 922.7269729999999,
                    "p95": 963.895544,
                    "p99": 963.895544,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1275.44821,
                    "min": 1195.78442,
                    "p50": 1216.1727819999999,
                    "p95": 1275.44821,
                    "p99": 1275.44821,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 990.856727,
                    "min": 960.823218,
                    "p50": 976.7117029999999,
                    "p95": 990.856727,
                    "p99": 990.856727,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 709.7425029999999,
                    "min": 640.019382,
                    "p50": 659.145852,
                    "p95": 709.7425029999999,
                    "p99": 709.7425029999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.73347,
                    "min": 247.208528,
                    "p50": 256.952906,
                    "p95": 288.73347,
                    "p99": 288.73347,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 862.305832,
                    "min": 793.211382,
                    "p50": 854.035725,
                    "p95": 862.305832,
                    "p99": 862.305832,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 687.400275,
                    "min": 599.602852,
                    "p50": 615.1542919999999,
                    "p95": 687.400275,
                    "p99": 687.400275,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 521.530146,
                    "min": 495.32170599999995,
                    "p50": 512.3607989999999,
                    "p95": 521.530146,
                    "p99": 521.530146,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 408.861164,
                    "min": 349.694779,
                    "p50": 374.174668,
                    "p95": 408.861164,
                    "p99": 408.861164,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 237.57948,
                    "min": 204.611243,
                    "p50": 210.129953,
                    "p95": 237.57948,
                    "p99": 237.57948,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 313.690815,
                    "min": 293.90946099999996,
                    "p50": 303.878316,
                    "p95": 313.690815,
                    "p99": 313.690815,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 773.92562,
                    "min": 729.355107,
                    "p50": 765.3804719999999,
                    "p95": 773.92562,
                    "p99": 773.92562,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1017.568458,
                    "min": 925.1257579999999,
                    "p50": 951.586684,
                    "p95": 1017.568458,
                    "p99": 1017.568458,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 435.490524,
                    "min": 397.2974,
                    "p50": 405.746291,
                    "p95": 435.490524,
                    "p99": 435.490524,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 598.38911,
                    "min": 558.749372,
                    "p50": 561.278744,
                    "p95": 598.38911,
                    "p99": 598.38911,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1119.574598,
                    "min": 1049.580371,
                    "p50": 1058.896961,
                    "p95": 1119.574598,
                    "p99": 1119.574598,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 700.256039,
                    "min": 654.5063809999999,
                    "p50": 663.85682,
                    "p95": 700.256039,
                    "p99": 700.256039,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 468.22769,
                    "min": 447.19512299999997,
                    "p50": 455.29991099999995,
                    "p95": 468.22769,
                    "p99": 468.22769,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 769.925133,
                    "min": 702.783554,
                    "p50": 712.993436,
                    "p95": 769.925133,
                    "p99": 769.925133,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2201.36337,
                    "min": 2130.509435,
                    "p50": 2167.2265039999997,
                    "p95": 2201.36337,
                    "p99": 2201.36337,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1217.317258,
                    "min": 1166.541232,
                    "p50": 1179.460759,
                    "p95": 1217.317258,
                    "p99": 1217.317258,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1483.8026889999999,
                    "min": 1450.013894,
                    "p50": 1464.597393,
                    "p95": 1483.8026889999999,
                    "p99": 1483.8026889999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1632.318761,
                    "min": 1579.7618579999998,
                    "p50": 1601.529075,
                    "p95": 1632.318761,
                    "p99": 1632.318761,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2045.3194429999999,
                    "min": 2002.5064869999999,
                    "p50": 2026.0139689999999,
                    "p95": 2045.3194429999999,
                    "p99": 2045.3194429999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1935.005718,
                    "min": 1876.367028,
                    "p50": 1887.5995469999998,
                    "p95": 1935.005718,
                    "p99": 1935.005718,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 629.9411319999999,
                    "min": 607.3191439999999,
                    "p50": 623.6533479999999,
                    "p95": 629.9411319999999,
                    "p99": 629.9411319999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1359.094071,
                    "min": 1304.086171,
                    "p50": 1326.5171759999998,
                    "p95": 1359.094071,
                    "p99": 1359.094071,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1768.429612,
                    "min": 1741.055089,
                    "p50": 1749.314735,
                    "p95": 1768.429612,
                    "p99": 1768.429612,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2547.817164,
                    "min": 2472.275399,
                    "p50": 2511.281164,
                    "p95": 2547.817164,
                    "p99": 2547.817164,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 774.6999989999999,
                    "min": 715.5165529999999,
                    "p50": 761.0188479999999,
                    "p95": 774.6999989999999,
                    "p99": 774.6999989999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1093.9296299999999,
                    "min": 1033.915325,
                    "p50": 1041.551682,
                    "p95": 1093.9296299999999,
                    "p99": 1093.9296299999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 485.438026,
                    "min": 469.95728599999995,
                    "p50": 478.861984,
                    "p95": 485.438026,
                    "p99": 485.438026,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 907.161716,
                    "min": 873.9928239999999,
                    "p50": 892.905324,
                    "p95": 907.161716,
                    "p99": 907.161716,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2905.3816309999997,
                    "min": 2837.57566,
                    "p50": 2871.357606,
                    "p95": 2905.3816309999997,
                    "p99": 2905.3816309999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2887.053019,
                    "min": 2799.349676,
                    "p50": 2843.950523,
                    "p95": 2887.053019,
                    "p99": 2887.053019,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2015.2256069999999,
                    "min": 1966.959873,
                    "p50": 1999.25119,
                    "p95": 2015.2256069999999,
                    "p99": 2015.2256069999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1754.0093689999999,
                    "min": 1692.7412829999998,
                    "p50": 1710.1784209999998,
                    "p95": 1754.0093689999999,
                    "p99": 1754.0093689999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1313.161366,
                    "min": 1275.784023,
                    "p50": 1297.96284,
                    "p95": 1313.161366,
                    "p99": 1313.161366,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1230.215537,
                    "min": 1150.185315,
                    "p50": 1162.4445349999999,
                    "p95": 1230.215537,
                    "p99": 1230.215537,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 884.284868,
                    "min": 872.614528,
                    "p50": 878.59479,
                    "p95": 884.284868,
                    "p99": 884.284868,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1879.779078,
                    "min": 1838.381891,
                    "p50": 1845.880516,
                    "p95": 1879.779078,
                    "p99": 1879.779078,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 621.7382809999999,
                    "min": 597.204915,
                    "p50": 610.420606,
                    "p95": 621.7382809999999,
                    "p99": 621.7382809999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1619.7416249999999,
                    "min": 1550.423437,
                    "p50": 1571.047959,
                    "p95": 1619.7416249999999,
                    "p99": 1619.7416249999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 762.973891,
                    "min": 737.6878379999999,
                    "p50": 745.178628,
                    "p95": 762.973891,
                    "p99": 762.973891,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2491.30505,
                    "min": 2431.614365,
                    "p50": 2462.082341,
                    "p95": 2491.30505,
                    "p99": 2491.30505,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 510.56219799999997,
                    "min": 461.959076,
                    "p50": 468.489607,
                    "p95": 510.56219799999997,
                    "p99": 510.56219799999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1053.440911,
                    "min": 1003.029142,
                    "p50": 1023.1542559999999,
                    "p95": 1053.440911,
                    "p99": 1053.440911,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2147.421457,
                    "min": 2111.9676369999997,
                    "p50": 2126.277225,
                    "p95": 2147.421457,
                    "p99": 2147.421457,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1453.9167149999998,
                    "min": 1415.9892559999998,
                    "p50": 1439.890562,
                    "p95": 1453.9167149999998,
                    "p99": 1453.9167149999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1548.483596,
                    "min": 1471.421431,
                    "p50": 1485.880506,
                    "p95": 1548.483596,
                    "p99": 1548.483596,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 875.630183,
                    "min": 820.2071109999999,
                    "p50": 836.162708,
                    "p95": 875.630183,
                    "p99": 875.630183,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 739.812183,
                    "min": 703.8381109999999,
                    "p50": 709.094434,
                    "p95": 739.812183,
                    "p99": 739.812183,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1395.9015789999999,
                    "min": 1345.6476639999998,
                    "p50": 1363.703205,
                    "p95": 1395.9015789999999,
                    "p99": 1395.9015789999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2683.239009,
                    "min": 2627.755612,
                    "p50": 2659.785105,
                    "p95": 2683.239009,
                    "p99": 2683.239009,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 578.641344,
                    "min": 560.383865,
                    "p50": 571.025312,
                    "p95": 578.641344,
                    "p99": 578.641344,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 974.4360009999999,
                    "min": 948.493241,
                    "p50": 965.7325079999999,
                    "p95": 974.4360009999999,
                    "p99": 974.4360009999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 459.575062,
                    "min": 429.38007,
                    "p50": 442.171521,
                    "p95": 459.575062,
                    "p99": 459.575062,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2053.306632,
                    "min": 1993.687324,
                    "p50": 2010.95128,
                    "p95": 2053.306632,
                    "p99": 2053.306632,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1924.589377,
                    "min": 1859.0606389999998,
                    "p50": 1877.4594419999999,
                    "p95": 1924.589377,
                    "p99": 1924.589377,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1620.235633,
                    "min": 1592.979903,
                    "p50": 1619.0563989999998,
                    "p95": 1620.235633,
                    "p99": 1620.235633,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1790.1280829999998,
                    "min": 1729.637481,
                    "p50": 1756.086171,
                    "p95": 1790.1280829999998,
                    "p99": 1790.1280829999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1265.577295,
                    "min": 1212.328075,
                    "p50": 1221.2628459999999,
                    "p95": 1265.577295,
                    "p99": 1265.577295,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2429.021686,
                    "min": 2313.134663,
                    "p50": 2349.1007649999997,
                    "p95": 2429.021686,
                    "p99": 2429.021686,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1136.084248,
                    "min": 1085.141415,
                    "p50": 1093.9605729999998,
                    "p95": 1136.084248,
                    "p99": 1136.084248,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 818.711551,
                    "min": 790.342716,
                    "p50": 811.712979,
                    "p95": 818.711551,
                    "p99": 818.711551,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 482.49265399999996,
                    "min": 453.297825,
                    "p50": 458.743516,
                    "p95": 482.49265399999996,
                    "p99": 482.49265399999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 969.885372,
                    "min": 920.5945469999999,
                    "p50": 927.906716,
                    "p95": 969.885372,
                    "p99": 969.885372,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1113.1458579999999,
                    "min": 1063.801641,
                    "p50": 1078.49831,
                    "p95": 1113.1458579999999,
                    "p99": 1113.1458579999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 239.72072899999998,
                    "min": 221.444507,
                    "p50": 225.779011,
                    "p95": 239.72072899999998,
                    "p99": 239.72072899999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 760.697377,
                    "min": 749.3877779999999,
                    "p50": 754.616636,
                    "p95": 760.697377,
                    "p99": 760.697377,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 486.488923,
                    "min": 392.572573,
                    "p50": 403.719831,
                    "p95": 486.488923,
                    "p99": 486.488923,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.301445,
                    "min": 283.72655299999997,
                    "p50": 288.816441,
                    "p95": 302.301445,
                    "p99": 302.301445,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1830.302937,
                    "min": 1775.9687299999998,
                    "p50": 1800.4013129999998,
                    "p95": 1830.302937,
                    "p99": 1830.302937,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 585.584108,
                    "min": 565.502499,
                    "p50": 576.45744,
                    "p95": 585.584108,
                    "p99": 585.584108,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 734.92697,
                    "min": 677.39536,
                    "p50": 699.4038059999999,
                    "p95": 734.92697,
                    "p99": 734.92697,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 910.3896589999999,
                    "min": 862.2632209999999,
                    "p50": 879.821551,
                    "p95": 910.3896589999999,
                    "p99": 910.3896589999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 396.049768,
                    "min": 342.811599,
                    "p50": 356.25100599999996,
                    "p95": 396.049768,
                    "p99": 396.049768,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3507.153935,
                    "min": 2931.099562,
                    "p50": 2971.38969,
                    "p95": 3507.153935,
                    "p99": 3507.153935,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1278.881297,
                    "min": 1203.750675,
                    "p50": 1227.210063,
                    "p95": 1278.881297,
                    "p99": 1278.881297,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 675.814262,
                    "min": 635.727523,
                    "p50": 644.13288,
                    "p95": 675.814262,
                    "p99": 675.814262,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 526.143148,
                    "min": 505.432399,
                    "p50": 521.9924649999999,
                    "p95": 526.143148,
                    "p99": 526.143148,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2416.165619,
                    "min": 2347.658455,
                    "p50": 2390.4240529999997,
                    "p95": 2416.165619,
                    "p99": 2416.165619,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1108.11269,
                    "min": 1052.598768,
                    "p50": 1066.659979,
                    "p95": 1108.11269,
                    "p99": 1108.11269,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 381.216879,
                    "min": 335.809665,
                    "p50": 356.160889,
                    "p95": 381.216879,
                    "p99": 381.216879,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 726.994735,
                    "min": 698.1825,
                    "p50": 714.460969,
                    "p95": 726.994735,
                    "p99": 726.994735,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 576.1442089999999,
                    "min": 497.191467,
                    "p50": 510.39976199999995,
                    "p95": 576.1442089999999,
                    "p99": 576.1442089999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 611.638468,
                    "min": 546.440559,
                    "p50": 563.732402,
                    "p95": 611.638468,
                    "p99": 611.638468,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 259.385204,
                    "min": 177.58834299999998,
                    "p50": 218.584452,
                    "p95": 259.385204,
                    "p99": 259.385204,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 633.107856,
                    "min": 601.250004,
                    "p50": 616.814907,
                    "p95": 633.107856,
                    "p99": 633.107856,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 325.994642,
                    "min": 289.312655,
                    "p50": 307.95399699999996,
                    "p95": 325.994642,
                    "p99": 325.994642,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 781.971504,
                    "min": 757.552997,
                    "p50": 768.290719,
                    "p95": 781.971504,
                    "p99": 781.971504,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 464.105616,
                    "min": 437.515827,
                    "p50": 459.84396599999997,
                    "p95": 464.105616,
                    "p99": 464.105616,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 992.682787,
                    "min": 932.109484,
                    "p50": 963.431212,
                    "p95": 992.682787,
                    "p99": 992.682787,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 707.49271,
                    "min": 651.583488,
                    "p50": 667.356546,
                    "p95": 707.49271,
                    "p99": 707.49271,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 420.862975,
                    "min": 398.202908,
                    "p50": 406.472506,
                    "p95": 420.862975,
                    "p99": 420.862975,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 276.819577,
                    "min": 215.51883099999998,
                    "p50": 252.97794199999998,
                    "p95": 276.819577,
                    "p99": 276.819577,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 869.472259,
                    "min": 802.0698259999999,
                    "p50": 818.694259,
                    "p95": 869.472259,
                    "p99": 869.472259,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1615.2469159999998,
                    "min": 1553.363226,
                    "p50": 1570.978819,
                    "p95": 1615.2469159999998,
                    "p99": 1615.2469159999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 528.637079,
                    "min": 490.029854,
                    "p50": 497.499511,
                    "p95": 528.637079,
                    "p99": 528.637079,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 553.390263,
                    "min": 537.335574,
                    "p50": 550.932359,
                    "p95": 553.390263,
                    "p99": 553.390263,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 363.987965,
                    "min": 294.057114,
                    "p50": 300.00399899999996,
                    "p95": 363.987965,
                    "p99": 363.987965,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 496.70745999999997,
                    "min": 438.59678199999996,
                    "p50": 453.728369,
                    "p95": 496.70745999999997,
                    "p99": 496.70745999999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 833.748242,
                    "min": 739.069407,
                    "p50": 754.063463,
                    "p95": 833.748242,
                    "p99": 833.748242,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 267.109397,
                    "min": 188.297856,
                    "p50": 200.17108199999998,
                    "p95": 267.109397,
                    "p99": 267.109397,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1601.768808,
                    "min": 1521.7982519999998,
                    "p50": 1567.2115059999999,
                    "p95": 1601.768808,
                    "p99": 1601.768808,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 646.2389559999999,
                    "min": 593.302511,
                    "p50": 597.825151,
                    "p95": 646.2389559999999,
                    "p99": 646.2389559999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 832.3920969999999,
                    "min": 688.0070509999999,
                    "p50": 698.276847,
                    "p95": 832.3920969999999,
                    "p99": 832.3920969999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 387.818195,
                    "min": 333.469362,
                    "p50": 348.234309,
                    "p95": 387.818195,
                    "p99": 387.818195,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1007.011684,
                    "min": 913.752445,
                    "p50": 928.3648009999999,
                    "p95": 1007.011684,
                    "p99": 1007.011684,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 698.632218,
                    "min": 643.922734,
                    "p50": 649.3741329999999,
                    "p95": 698.632218,
                    "p99": 698.632218,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 434.112935,
                    "min": 384.979222,
                    "p50": 399.742446,
                    "p95": 434.112935,
                    "p99": 434.112935,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2161.6317409999997,
                    "min": 2012.257846,
                    "p50": 2035.50091,
                    "p95": 2161.6317409999997,
                    "p99": 2161.6317409999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 257.11850599999997,
                    "min": 239.673895,
                    "p50": 249.254705,
                    "p95": 257.11850599999997,
                    "p99": 257.11850599999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 830.3797539999999,
                    "min": 792.9666119999999,
                    "p50": 797.058178,
                    "p95": 830.3797539999999,
                    "p99": 830.3797539999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1114.5656999999999,
                    "min": 1026.307718,
                    "p50": 1051.879878,
                    "p95": 1114.5656999999999,
                    "p99": 1114.5656999999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 178.941968,
                    "min": 154.53919199999999,
                    "p50": 177.909109,
                    "p95": 178.941968,
                    "p99": 178.941968,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.620745,
                    "min": 125.373802,
                    "p50": 162.878315,
                    "p95": 163.620745,
                    "p99": 163.620745,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 247.582831,
                    "min": 235.10801099999998,
                    "p50": 246.03665099999998,
                    "p95": 247.582831,
                    "p99": 247.582831,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.719948,
                    "min": 213.592832,
                    "p50": 219.247941,
                    "p95": 222.719948,
                    "p99": 222.719948,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.772788,
                    "min": 139.839924,
                    "p50": 176.618992,
                    "p95": 179.772788,
                    "p99": 179.772788,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.815383,
                    "min": 193.692702,
                    "p50": 204.158706,
                    "p95": 208.815383,
                    "p99": 208.815383,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 235.266936,
                    "min": 229.983655,
                    "p50": 232.07427099999998,
                    "p95": 235.266936,
                    "p99": 235.266936,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.0744,
                    "min": 42.112583,
                    "p50": 80.865791,
                    "p95": 81.0744,
                    "p99": 81.0744,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.20747899999999,
                    "min": 55.793242,
                    "p50": 93.443415,
                    "p95": 95.20747899999999,
                    "p99": 95.20747899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.330905,
                    "min": 70.116343,
                    "p50": 108.261404,
                    "p95": 111.330905,
                    "p99": 111.330905,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 318.334816,
                    "min": 276.13266699999997,
                    "p50": 314.57795899999996,
                    "p95": 318.334816,
                    "p99": 318.334816,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.15741399999999,
                    "min": 118.26745199999999,
                    "p50": 122.52752299999999,
                    "p95": 125.15741399999999,
                    "p99": 125.15741399999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 281.726201,
                    "min": 276.298208,
                    "p50": 279.344219,
                    "p95": 281.726201,
                    "p99": 281.726201,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.69626,
                    "min": 111.38583299999999,
                    "p50": 149.096387,
                    "p95": 150.69626,
                    "p99": 150.69626,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.949448,
                    "min": 97.634204,
                    "p50": 135.550291,
                    "p95": 135.949448,
                    "p99": 135.949448,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 101.65474599999999,
                    "min": 66.398575,
                    "p50": 92.559366,
                    "p95": 101.65474599999999,
                    "p99": 101.65474599999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 160.580918,
                    "min": 117.86095499999999,
                    "p50": 150.403959,
                    "p95": 160.580918,
                    "p99": 160.580918,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 197.67776899999998,
                    "min": 148.35884199999998,
                    "p50": 188.93392699999998,
                    "p95": 197.67776899999998,
                    "p99": 197.67776899999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 51.353093,
                    "min": 36.616434999999996,
                    "p50": 49.700934,
                    "p95": 51.353093,
                    "p99": 51.353093,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 101.723413,
                    "min": 94.49676099999999,
                    "p50": 99.7482,
                    "p95": 101.723413,
                    "p99": 101.723413,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 182.39449499999998,
                    "min": 137.83410999999998,
                    "p50": 173.90786699999998,
                    "p95": 182.39449499999998,
                    "p99": 182.39449499999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 44.097518,
                    "min": 38.817347999999996,
                    "p50": 39.398948,
                    "p95": 44.097518,
                    "p99": 44.097518,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 76.403961,
                    "min": 64.55734799999999,
                    "p50": 66.76127,
                    "p95": 76.403961,
                    "p99": 76.403961,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 81.814556,
                    "min": 76.41174,
                    "p50": 79.718688,
                    "p95": 81.814556,
                    "p99": 81.814556,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 248.29595899999998,
                    "min": 216.472443,
                    "p50": 226.583181,
                    "p95": 248.29595899999998,
                    "p99": 248.29595899999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 289.457504,
                    "min": 276.031051,
                    "p50": 285.346614,
                    "p95": 289.457504,
                    "p99": 289.457504,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 109.809575,
                    "min": 83.844366,
                    "p50": 108.04728899999999,
                    "p95": 109.809575,
                    "p99": 109.809575,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 652.081368,
                    "min": 644.395129,
                    "p50": 649.580345,
                    "p95": 652.081368,
                    "p99": 652.081368,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 32.811982,
                    "min": 28.141734,
                    "p50": 30.492106999999997,
                    "p95": 32.811982,
                    "p99": 32.811982,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 61.213269,
                    "min": 54.742838,
                    "p50": 57.572488,
                    "p95": 61.213269,
                    "p99": 61.213269,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 375.507313,
                    "min": 332.546852,
                    "p50": 363.662596,
                    "p95": 375.507313,
                    "p99": 375.507313,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 156.068076,
                    "min": 127.67939799999999,
                    "p50": 138.12636999999998,
                    "p95": 156.068076,
                    "p99": 156.068076,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 145.895441,
                    "min": 142.004372,
                    "p50": 143.016503,
                    "p95": 145.895441,
                    "p99": 145.895441,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 153.987281,
                    "min": 116.691116,
                    "p50": 145.650469,
                    "p95": 153.987281,
                    "p99": 153.987281,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 103.590446,
                    "min": 58.775566999999995,
                    "p50": 95.733847,
                    "p95": 103.590446,
                    "p99": 103.590446,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 386.658233,
                    "min": 381.916165,
                    "p50": 384.67996,
                    "p95": 386.658233,
                    "p99": 386.658233,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 245.25499299999998,
                    "min": 238.91547899999998,
                    "p50": 240.78027899999998,
                    "p95": 245.25499299999998,
                    "p99": 245.25499299999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 191.4819,
                    "min": 185.092334,
                    "p50": 189.37966,
                    "p95": 191.4819,
                    "p99": 191.4819,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 178.935621,
                    "min": 172.572958,
                    "p50": 177.495937,
                    "p95": 178.935621,
                    "p99": 178.935621,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.65972599999999,
                    "min": 104.009942,
                    "p50": 119.335763,
                    "p95": 120.65972599999999,
                    "p99": 120.65972599999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 271.304644,
                    "min": 232.034831,
                    "p50": 269.484024,
                    "p95": 271.304644,
                    "p99": 271.304644,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 69.18238699999999,
                    "min": 35.896657999999995,
                    "p50": 68.46800999999999,
                    "p95": 69.18238699999999,
                    "p99": 69.18238699999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 213.61309899999998,
                    "min": 199.031811,
                    "p50": 210.81884599999998,
                    "p95": 213.61309899999998,
                    "p99": 213.61309899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 131.033422,
                    "min": 92.946585,
                    "p50": 130.689891,
                    "p95": 131.033422,
                    "p99": 131.033422,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 113.448326,
                    "min": 95.726828,
                    "p50": 107.828806,
                    "p95": 113.448326,
                    "p99": 113.448326,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.575628,
                    "min": 68.99789299999999,
                    "p50": 85.285321,
                    "p95": 85.575628,
                    "p99": 85.575628,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 203.12314899999998,
                    "min": 161.72939499999998,
                    "p50": 199.16385499999998,
                    "p95": 203.12314899999998,
                    "p99": 203.12314899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 285.153972,
                    "min": 279.783868,
                    "p50": 282.613998,
                    "p95": 285.153972,
                    "p99": 285.153972,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.344042,
                    "min": 67.187772,
                    "p50": 80.989769,
                    "p95": 84.344042,
                    "p99": 84.344042,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.574143,
                    "min": 196.21437699999998,
                    "p50": 205.11174599999998,
                    "p95": 206.574143,
                    "p99": 206.574143,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.369781,
                    "min": 180.98350399999998,
                    "p50": 219.83346699999998,
                    "p95": 222.369781,
                    "p99": 222.369781,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.622036,
                    "min": 55.920144,
                    "p50": 94.19836,
                    "p95": 94.622036,
                    "p99": 94.622036,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.10134499999998,
                    "min": 185.950557,
                    "p50": 191.142093,
                    "p95": 193.10134499999998,
                    "p99": 193.10134499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 247.714856,
                    "min": 238.878495,
                    "p50": 246.49157799999998,
                    "p95": 247.714856,
                    "p99": 247.714856,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 129.068579,
                    "min": 84.242331,
                    "p50": 120.813667,
                    "p95": 129.068579,
                    "p99": 129.068579,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.468448,
                    "min": 125.06192399999999,
                    "p50": 163.334421,
                    "p95": 166.468448,
                    "p99": 166.468448,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.92013699999998,
                    "min": 111.543055,
                    "p50": 149.457138,
                    "p95": 151.92013699999998,
                    "p99": 151.92013699999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 323.417127,
                    "min": 277.969812,
                    "p50": 315.266778,
                    "p95": 323.417127,
                    "p99": 323.417127,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.363599,
                    "min": 160.972609,
                    "p50": 177.447916,
                    "p95": 185.363599,
                    "p99": 185.363599,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.765399,
                    "min": 98.496873,
                    "p50": 135.429688,
                    "p95": 138.765399,
                    "p99": 138.765399,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.841466,
                    "min": 91.25169199999999,
                    "p50": 108.26741,
                    "p95": 114.841466,
                    "p99": 114.841466,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.048434,
                    "min": 218.331235,
                    "p50": 231.631553,
                    "p95": 234.048434,
                    "p99": 234.048434,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 31.062648999999997,
                    "min": 27.409312,
                    "p50": 29.954424,
                    "p95": 31.062648999999997,
                    "p99": 31.062648999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.855907,
                    "min": 24.2501,
                    "p50": 24.553189999999997,
                    "p95": 24.855907,
                    "p99": 24.855907,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 74.87217199999999,
                    "min": 68.49360899999999,
                    "p50": 72.903594,
                    "p95": 74.87217199999999,
                    "p99": 74.87217199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 147.59724799999998,
                    "min": 128.10425999999998,
                    "p50": 143.543627,
                    "p95": 147.59724799999998,
                    "p99": 147.59724799999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.91566,
                    "min": 24.038978999999998,
                    "p50": 24.620783,
                    "p95": 24.91566,
                    "p99": 24.91566,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.046687,
                    "min": 24.388503999999998,
                    "p50": 24.658511999999998,
                    "p95": 27.046687,
                    "p99": 27.046687,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 61.308374,
                    "min": 54.063714999999995,
                    "p50": 57.747057999999996,
                    "p95": 61.308374,
                    "p99": 61.308374,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.792129,
                    "min": 21.968581,
                    "p50": 24.488122999999998,
                    "p95": 24.792129,
                    "p99": 24.792129,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 51.754796,
                    "min": 26.844388,
                    "p50": 51.119384,
                    "p95": 51.754796,
                    "p99": 51.754796,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.354309999999998,
                    "min": 24.129624,
                    "p50": 25.685078999999998,
                    "p95": 26.354309999999998,
                    "p99": 26.354309999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 44.4317,
                    "min": 34.508455999999995,
                    "p50": 42.344057,
                    "p95": 44.4317,
                    "p99": 44.4317,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.280295,
                    "min": 24.093425,
                    "p50": 24.633083,
                    "p95": 25.280295,
                    "p99": 25.280295,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.613158,
                    "min": 21.882187,
                    "p50": 24.488032,
                    "p95": 26.613158,
                    "p99": 26.613158,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.716559999999998,
                    "min": 21.989793,
                    "p50": 24.551395,
                    "p95": 24.716559999999998,
                    "p99": 24.716559999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.812634,
                    "min": 24.020263999999997,
                    "p50": 24.560285,
                    "p95": 24.812634,
                    "p99": 24.812634,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.72062,
                    "min": 24.102926999999998,
                    "p50": 24.447312999999998,
                    "p95": 24.72062,
                    "p99": 24.72062,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 26.848352,
                    "min": 24.151685,
                    "p50": 24.583955,
                    "p95": 26.848352,
                    "p99": 26.848352,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.779868999999998,
                    "min": 24.22663,
                    "p50": 24.422435,
                    "p95": 24.779868999999998,
                    "p99": 24.779868999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.865562999999998,
                    "min": 16.768532,
                    "p50": 24.602738,
                    "p95": 24.865562999999998,
                    "p99": 24.865562999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 146.142166,
                    "min": 128.459946,
                    "p50": 145.114581,
                    "p95": 146.142166,
                    "p99": 146.142166,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 103.363941,
                    "min": 101.377225,
                    "p50": 102.154758,
                    "p95": 103.363941,
                    "p99": 103.363941,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 214.650669,
                    "min": 188.971679,
                    "p50": 213.328609,
                    "p95": 214.650669,
                    "p99": 214.650669,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 114.528516,
                    "min": 75.346077,
                    "p50": 113.74591699999999,
                    "p95": 114.528516,
                    "p99": 114.528516,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 177.855951,
                    "min": 136.042173,
                    "p50": 176.290765,
                    "p95": 177.855951,
                    "p99": 177.855951,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 657.667123,
                    "min": 646.315887,
                    "p50": 652.899324,
                    "p95": 657.667123,
                    "p99": 657.667123,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 167.905337,
                    "min": 158.920319,
                    "p50": 162.87872299999998,
                    "p95": 167.905337,
                    "p99": 167.905337,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 203.084599,
                    "min": 193.11123999999998,
                    "p50": 201.082329,
                    "p95": 203.084599,
                    "p99": 203.084599,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 257.120125,
                    "min": 239.09940999999998,
                    "p50": 255.732534,
                    "p95": 257.120125,
                    "p99": 257.120125,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 141.034562,
                    "min": 117.232478,
                    "p50": 137.558834,
                    "p95": 141.034562,
                    "p99": 141.034562,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 538.431443,
                    "min": 526.344508,
                    "p50": 530.8777749999999,
                    "p95": 538.431443,
                    "p99": 538.431443,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.677064,
                    "min": 120.760708,
                    "p50": 127.083996,
                    "p95": 128.677064,
                    "p99": 128.677064,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 190.08712799999998,
                    "min": 184.41043,
                    "p50": 186.000247,
                    "p95": 190.08712799999998,
                    "p99": 190.08712799999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 411.91470899999996,
                    "min": 403.49629899999996,
                    "p50": 409.84915,
                    "p95": 411.91470899999996,
                    "p99": 411.91470899999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.846514,
                    "min": 79.768794,
                    "p50": 88.080719,
                    "p95": 89.846514,
                    "p99": 89.846514,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1277.3759149999998,
                    "min": 1224.9862,
                    "p50": 1260.074912,
                    "p95": 1277.3759149999998,
                    "p99": 1277.3759149999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.002298,
                    "min": 58.377945,
                    "p50": 73.48650099999999,
                    "p95": 75.002298,
                    "p99": 75.002298,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 227.048298,
                    "min": 186.49267,
                    "p50": 225.00567099999998,
                    "p95": 227.048298,
                    "p99": 227.048298,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.522017,
                    "min": 284.000252,
                    "p50": 286.909092,
                    "p95": 288.522017,
                    "p99": 288.522017,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 26.03852,
                    "min": 23.806352,
                    "p50": 24.456225,
                    "p95": 26.03852,
                    "p99": 26.03852,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.033274,
                    "min": 21.759652,
                    "p50": 24.519713,
                    "p95": 27.033274,
                    "p99": 27.033274,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.699196999999998,
                    "min": 24.133094,
                    "p50": 24.557554999999997,
                    "p95": 24.699196999999998,
                    "p99": 24.699196999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.737578,
                    "min": 22.974393,
                    "p50": 24.486877,
                    "p95": 24.737578,
                    "p99": 24.737578,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 25.375044,
                    "min": 23.290067,
                    "p50": 24.505663,
                    "p95": 25.375044,
                    "p99": 25.375044,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.5595,
                    "min": 24.366509999999998,
                    "p50": 26.491965999999998,
                    "p95": 27.5595,
                    "p99": 27.5595,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.454247,
                    "min": 24.087207,
                    "p50": 24.346968,
                    "p95": 24.454247,
                    "p99": 24.454247,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.908186,
                    "min": 24.21418,
                    "p50": 24.493126999999998,
                    "p95": 24.908186,
                    "p99": 24.908186,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 46.936533,
                    "min": 41.772835,
                    "p50": 43.228673,
                    "p95": 46.936533,
                    "p99": 46.936533,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.954608999999998,
                    "min": 24.347984999999998,
                    "p50": 24.557384,
                    "p95": 26.954608999999998,
                    "p99": 26.954608999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 25.823449999999998,
                    "min": 23.776266,
                    "p50": 24.489324,
                    "p95": 25.823449999999998,
                    "p99": 25.823449999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 26.635088,
                    "min": 22.196946,
                    "p50": 24.367645,
                    "p95": 26.635088,
                    "p99": 26.635088,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.877361,
                    "min": 24.498113,
                    "p50": 24.736857,
                    "p95": 26.877361,
                    "p99": 26.877361,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.669836,
                    "min": 24.015245,
                    "p50": 24.586309,
                    "p95": 26.669836,
                    "p99": 26.669836,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 91.70693999999999,
                    "min": 82.342108,
                    "p50": 86.082942,
                    "p95": 91.70693999999999,
                    "p99": 91.70693999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.864257,
                    "min": 24.307541999999998,
                    "p50": 24.713445,
                    "p95": 24.864257,
                    "p99": 24.864257,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 35.528428999999996,
                    "min": 28.292187,
                    "p50": 33.610136,
                    "p95": 35.528428999999996,
                    "p99": 35.528428999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 28.259438,
                    "min": 18.458219,
                    "p50": 24.983628,
                    "p95": 28.259438,
                    "p99": 28.259438,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 25.262321,
                    "min": 24.196472,
                    "p50": 24.787765,
                    "p95": 25.262321,
                    "p99": 25.262321,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 26.908199,
                    "min": 18.389015,
                    "p50": 24.729540999999998,
                    "p95": 26.908199,
                    "p99": 26.908199,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.700118999999997,
                    "min": 24.262949,
                    "p50": 24.793177999999997,
                    "p95": 27.700118999999997,
                    "p99": 27.700118999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.752056,
                    "min": 24.201586,
                    "p50": 24.359379999999998,
                    "p95": 24.752056,
                    "p99": 24.752056,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.786077,
                    "min": 24.035757,
                    "p50": 24.875342,
                    "p95": 27.786077,
                    "p99": 27.786077,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 25.045849,
                    "min": 23.964216999999998,
                    "p50": 24.479937,
                    "p95": 25.045849,
                    "p99": 25.045849,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.627088999999998,
                    "min": 23.89179,
                    "p50": 24.278219,
                    "p95": 26.627088999999998,
                    "p99": 26.627088999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.809632999999998,
                    "min": 23.729363,
                    "p50": 24.407159,
                    "p95": 24.809632999999998,
                    "p99": 24.809632999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.744083999999997,
                    "min": 23.261347,
                    "p50": 24.365161,
                    "p95": 24.744083999999997,
                    "p99": 24.744083999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.335656999999998,
                    "min": 22.014931,
                    "p50": 24.39088,
                    "p95": 26.335656999999998,
                    "p99": 26.335656999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 24.974292,
                    "min": 22.117483,
                    "p50": 24.799198,
                    "p95": 24.974292,
                    "p99": 24.974292,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 25.325854,
                    "min": 24.215839,
                    "p50": 24.854053,
                    "p95": 25.325854,
                    "p99": 25.325854,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 25.113795999999997,
                    "min": 24.216362,
                    "p50": 24.766164,
                    "p95": 25.113795999999997,
                    "p99": 25.113795999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 26.096843,
                    "min": 21.973314,
                    "p50": 24.418243999999998,
                    "p95": 26.096843,
                    "p99": 26.096843,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.758651999999998,
                    "min": 23.784656,
                    "p50": 24.480963,
                    "p95": 26.758651999999998,
                    "p99": 26.758651999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 33.417187999999996,
                    "min": 24.116941999999998,
                    "p50": 24.841296999999997,
                    "p95": 33.417187999999996,
                    "p99": 33.417187999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 54.171264,
                    "min": 37.129141,
                    "p50": 44.917387999999995,
                    "p95": 54.171264,
                    "p99": 54.171264,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.244896999999998,
                    "min": 23.927882,
                    "p50": 24.640228999999998,
                    "p95": 27.244896999999998,
                    "p99": 27.244896999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 25.015549,
                    "min": 23.851150999999998,
                    "p50": 24.300476999999997,
                    "p95": 25.015549,
                    "p99": 25.015549,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.651062999999997,
                    "min": 24.340038,
                    "p50": 24.782913999999998,
                    "p95": 26.651062999999997,
                    "p99": 26.651062999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 157.687636,
                    "min": 123.980464,
                    "p50": 154.139767,
                    "p95": 157.687636,
                    "p99": 157.687636,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 78.68348,
                    "min": 37.594347,
                    "p50": 74.15144,
                    "p95": 78.68348,
                    "p99": 78.68348,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1273.385879,
                    "min": 1218.46797,
                    "p50": 1263.171447,
                    "p95": 1273.385879,
                    "p99": 1273.385879,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.85803,
                    "min": 281.989714,
                    "p50": 287.11632499999996,
                    "p95": 288.85803,
                    "p99": 288.85803,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 127.952095,
                    "min": 114.937162,
                    "p50": 126.08821599999999,
                    "p95": 127.952095,
                    "p99": 127.952095,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.984847,
                    "min": 50.607189,
                    "p50": 86.382836,
                    "p95": 87.984847,
                    "p99": 87.984847,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 117.381073,
                    "min": 112.795051,
                    "p50": 113.77300699999999,
                    "p95": 117.381073,
                    "p99": 117.381073,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 411.160885,
                    "min": 368.83098,
                    "p50": 407.843389,
                    "p95": 411.160885,
                    "p99": 411.160885,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 205.453455,
                    "min": 161.83097899999999,
                    "p50": 200.066056,
                    "p95": 205.453455,
                    "p99": 205.453455,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 175.842616,
                    "min": 161.184852,
                    "p50": 174.62103199999999,
                    "p95": 175.842616,
                    "p99": 175.842616,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 534.920569,
                    "min": 492.76183499999996,
                    "p50": 532.702456,
                    "p95": 534.920569,
                    "p99": 534.920569,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 660.632561,
                    "min": 631.0828329999999,
                    "p50": 651.8929479999999,
                    "p95": 660.632561,
                    "p99": 660.632561,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 214.61592399999998,
                    "min": 173.375557,
                    "p50": 212.50525199999998,
                    "p95": 214.61592399999998,
                    "p99": 214.61592399999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.190513,
                    "min": 62.259314999999994,
                    "p50": 100.12589799999999,
                    "p95": 102.190513,
                    "p99": 102.190513,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 263.89680699999997,
                    "min": 216.214899,
                    "p50": 254.654474,
                    "p95": 263.89680699999997,
                    "p99": 263.89680699999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.67257899999998,
                    "min": 110.90301199999999,
                    "p50": 151.874823,
                    "p95": 154.67257899999998,
                    "p99": 154.67257899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 189.26950599999998,
                    "min": 186.85378699999998,
                    "p50": 187.498392,
                    "p95": 189.26950599999998,
                    "p99": 189.26950599999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 232.653305,
                    "min": 223.140717,
                    "p50": 224.19250499999998,
                    "p95": 232.653305,
                    "p99": 232.653305,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 141.123637,
                    "min": 133.997427,
                    "p50": 137.668825,
                    "p95": 141.123637,
                    "p99": 141.123637,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 784.9201049999999,
                    "min": 766.86014,
                    "p50": 774.432092,
                    "p95": 784.9201049999999,
                    "p99": 784.9201049999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 132.806637,
                    "min": 96.967046,
                    "p50": 131.642233,
                    "p95": 132.806637,
                    "p99": 132.806637,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 255.82731099999998,
                    "min": 242.27357899999998,
                    "p50": 254.865624,
                    "p95": 255.82731099999998,
                    "p99": 255.82731099999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 390.85378499999996,
                    "min": 380.97106199999996,
                    "p50": 388.33656199999996,
                    "p95": 390.85378499999996,
                    "p99": 390.85378499999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 155.292723,
                    "min": 115.624196,
                    "p50": 153.33638,
                    "p95": 155.292723,
                    "p99": 155.292723,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 409.662629,
                    "min": 400.62021,
                    "p50": 407.545163,
                    "p95": 409.662629,
                    "p99": 409.662629,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 233.842478,
                    "min": 218.790215,
                    "p50": 230.515684,
                    "p95": 233.842478,
                    "p99": 233.842478,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 461.605418,
                    "min": 418.91168899999997,
                    "p50": 452.481994,
                    "p95": 461.605418,
                    "p99": 461.605418,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.612741,
                    "min": 152.716335,
                    "p50": 174.114185,
                    "p95": 194.612741,
                    "p99": 194.612741,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.067947,
                    "min": 234.135821,
                    "p50": 270.714479,
                    "p95": 278.067947,
                    "p99": 278.067947,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 977.7430049999999,
                    "min": 958.1776249999999,
                    "p50": 968.494844,
                    "p95": 977.7430049999999,
                    "p99": 977.7430049999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 292.717379,
                    "min": 252.315844,
                    "p50": 291.767678,
                    "p95": 292.717379,
                    "p99": 292.717379,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 212.309394,
                    "min": 173.07187299999998,
                    "p50": 210.346802,
                    "p95": 212.309394,
                    "p99": 212.309394,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 349.46934999999996,
                    "min": 339.828352,
                    "p50": 347.63183499999997,
                    "p95": 349.46934999999996,
                    "p99": 349.46934999999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.349347,
                    "min": 74.444831,
                    "p50": 111.80525999999999,
                    "p95": 112.349347,
                    "p99": 112.349347,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 369.635942,
                    "min": 363.905752,
                    "p50": 365.81251199999997,
                    "p95": 369.635942,
                    "p99": 369.635942,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 514.169483,
                    "min": 501.720734,
                    "p50": 504.29664199999996,
                    "p95": 514.169483,
                    "p99": 514.169483,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1354.1564039999998,
                    "min": 1292.5000109999999,
                    "p50": 1304.9853309999999,
                    "p95": 1354.1564039999998,
                    "p99": 1354.1564039999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 165.907928,
                    "min": 127.04002799999999,
                    "p50": 164.860624,
                    "p95": 165.907928,
                    "p99": 165.907928,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.685857,
                    "min": 255.870106,
                    "p50": 291.719696,
                    "p95": 298.685857,
                    "p99": 298.685857,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.785022,
                    "min": 243.469224,
                    "p50": 251.47747099999998,
                    "p95": 252.785022,
                    "p99": 252.785022,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 462.189332,
                    "min": 430.15275499999996,
                    "p50": 456.805293,
                    "p95": 462.189332,
                    "p99": 462.189332,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 419.06093599999997,
                    "min": 407.718928,
                    "p50": 415.335273,
                    "p95": 419.06093599999997,
                    "p99": 419.06093599999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 546.851859,
                    "min": 532.203711,
                    "p50": 539.655638,
                    "p95": 546.851859,
                    "p99": 546.851859,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 673.65995,
                    "min": 627.2867709999999,
                    "p50": 667.593533,
                    "p95": 673.65995,
                    "p99": 673.65995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 590.364068,
                    "min": 575.837536,
                    "p50": 585.871413,
                    "p95": 590.364068,
                    "p99": 590.364068,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 503.168522,
                    "min": 486.59630599999997,
                    "p50": 500.79853799999995,
                    "p95": 503.168522,
                    "p99": 503.168522,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 874.720546,
                    "min": 844.461334,
                    "p50": 872.834086,
                    "p95": 874.720546,
                    "p99": 874.720546,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 334.90718499999997,
                    "min": 292.149747,
                    "p50": 332.74749399999996,
                    "p95": 334.90718499999997,
                    "p99": 334.90718499999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.58251099999998,
                    "min": 168.266564,
                    "p50": 205.855056,
                    "p95": 214.58251099999998,
                    "p99": 214.58251099999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 785.77947,
                    "min": 724.8592699999999,
                    "p50": 750.772958,
                    "p95": 785.77947,
                    "p99": 785.77947,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 388.50268,
                    "min": 334.162914,
                    "p50": 375.84398799999997,
                    "p95": 388.50268,
                    "p99": 388.50268,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 628.728486,
                    "min": 617.312925,
                    "p50": 625.8632359999999,
                    "p95": 628.728486,
                    "p99": 628.728486,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 931.090069,
                    "min": 882.675431,
                    "p50": 927.1055809999999,
                    "p95": 931.090069,
                    "p99": 931.090069,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2003.6157289999999,
                    "min": 1967.0436129999998,
                    "p50": 1992.4198729999998,
                    "p95": 2003.6157289999999,
                    "p99": 2003.6157289999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2847.786384,
                    "min": 2783.014491,
                    "p50": 2834.0031329999997,
                    "p95": 2847.786384,
                    "p99": 2847.786384,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5648.9140019999995,
                    "min": 5541.5781289999995,
                    "p50": 5575.616887,
                    "p95": 5648.9140019999995,
                    "p99": 5648.9140019999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1583.4373659999999,
                    "min": 1549.2465559999998,
                    "p50": 1567.154163,
                    "p95": 1583.4373659999999,
                    "p99": 1583.4373659999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 741.258916,
                    "min": 688.727855,
                    "p50": 735.478444,
                    "p95": 741.258916,
                    "p99": 741.258916,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 599.61853,
                    "min": 583.5130439999999,
                    "p50": 592.5701859999999,
                    "p95": 599.61853,
                    "p99": 599.61853,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1714.4417609999998,
                    "min": 1664.067887,
                    "p50": 1701.348004,
                    "p95": 1714.4417609999998,
                    "p99": 1714.4417609999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4243.500414,
                    "min": 4158.5044339999995,
                    "p50": 4189.851111,
                    "p95": 4243.500414,
                    "p99": 4243.500414,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2495.692009,
                    "min": 2417.1556929999997,
                    "p50": 2448.550332,
                    "p95": 2495.692009,
                    "p99": 2495.692009,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2145.083861,
                    "min": 2081.05958,
                    "p50": 2114.986182,
                    "p95": 2145.083861,
                    "p99": 2145.083861,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1154.1508549999999,
                    "min": 1109.729468,
                    "p50": 1150.188658,
                    "p95": 1154.1508549999999,
                    "p99": 1154.1508549999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1435.038258,
                    "min": 1404.7141689999999,
                    "p50": 1429.0337499999998,
                    "p95": 1435.038258,
                    "p99": 1435.038258,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1026.8301159999999,
                    "min": 969.117448,
                    "p50": 1007.7839389999999,
                    "p95": 1026.8301159999999,
                    "p99": 1026.8301159999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 457.63757799999996,
                    "min": 419.10344299999997,
                    "p50": 442.86268099999995,
                    "p95": 457.63757799999996,
                    "p99": 457.63757799999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1861.510625,
                    "min": 1822.4248499999999,
                    "p50": 1840.79667,
                    "p95": 1861.510625,
                    "p99": 1861.510625,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1300.615533,
                    "min": 1241.980215,
                    "p50": 1289.220509,
                    "p95": 1300.615533,
                    "p99": 1300.615533,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 427.51169699999997,
                    "min": 384.53743699999995,
                    "p50": 420.77311699999996,
                    "p95": 427.51169699999997,
                    "p99": 427.51169699999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1306.0875449999999,
                    "min": 1251.4253039999999,
                    "p50": 1291.7018409999998,
                    "p95": 1306.0875449999999,
                    "p99": 1306.0875449999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2614.015344,
                    "min": 2524.11077,
                    "p50": 2583.965541,
                    "p95": 2614.015344,
                    "p99": 2614.015344,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1443.749243,
                    "min": 1414.428404,
                    "p50": 1429.363132,
                    "p95": 1443.749243,
                    "p99": 1443.749243,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3808.685418,
                    "min": 3733.5562919999998,
                    "p50": 3763.784854,
                    "p95": 3808.685418,
                    "p99": 3808.685418,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 807.3809769999999,
                    "min": 769.850693,
                    "p50": 799.014248,
                    "p95": 807.3809769999999,
                    "p99": 807.3809769999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1194.697234,
                    "min": 1167.605826,
                    "p50": 1183.227881,
                    "p95": 1194.697234,
                    "p99": 1194.697234,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5006.185697999999,
                    "min": 4888.992547,
                    "p50": 4948.472170999999,
                    "p95": 5006.185697999999,
                    "p99": 5006.185697999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 691.413276,
                    "min": 667.885183,
                    "p50": 681.837802,
                    "p95": 691.413276,
                    "p99": 691.413276,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1728.1663859999999,
                    "min": 1672.8141489999998,
                    "p50": 1704.3460029999999,
                    "p95": 1728.1663859999999,
                    "p99": 1728.1663859999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 927.015601,
                    "min": 893.1595739999999,
                    "p50": 916.270128,
                    "p95": 927.015601,
                    "p99": 927.015601,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 550.774094,
                    "min": 504.7784,
                    "p50": 544.953534,
                    "p95": 550.774094,
                    "p99": 550.774094,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1970.861459,
                    "min": 1928.953998,
                    "p50": 1958.354997,
                    "p95": 1970.861459,
                    "p99": 1970.861459,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1842.2122029999998,
                    "min": 1788.714784,
                    "p50": 1834.0992079999999,
                    "p95": 1842.2122029999998,
                    "p99": 1842.2122029999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2239.924852,
                    "min": 2206.702848,
                    "p50": 2219.31844,
                    "p95": 2239.924852,
                    "p99": 2239.924852,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1047.190065,
                    "min": 1025.094199,
                    "p50": 1035.140367,
                    "p95": 1047.190065,
                    "p99": 1047.190065,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1562.038981,
                    "min": 1506.3334049999999,
                    "p50": 1546.8421019999998,
                    "p95": 1562.038981,
                    "p99": 1562.038981,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 872.0944149999999,
                    "min": 829.435476,
                    "p50": 866.171825,
                    "p95": 872.0944149999999,
                    "p99": 872.0944149999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 640.0784229999999,
                    "min": 604.774155,
                    "p50": 632.591447,
                    "p95": 640.0784229999999,
                    "p99": 640.0784229999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1240.0765489999999,
                    "min": 1201.028983,
                    "p50": 1228.8889649999999,
                    "p95": 1240.0765489999999,
                    "p99": 1240.0765489999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1842.325535,
                    "min": 1777.703765,
                    "p50": 1805.3392959999999,
                    "p95": 1842.325535,
                    "p99": 1842.325535,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 5951.928752,
                    "min": 5914.143074,
                    "p50": 5937.3286259999995,
                    "p95": 5951.928752,
                    "p99": 5951.928752,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2438.693081,
                    "min": 2371.23647,
                    "p50": 2405.573155,
                    "p95": 2438.693081,
                    "p99": 2438.693081,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.3602109999999,
                    "min": 681.4134799999999,
                    "p50": 692.187359,
                    "p95": 697.3602109999999,
                    "p99": 697.3602109999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.079488,
                    "min": 180.906394,
                    "p50": 220.55310699999998,
                    "p95": 227.079488,
                    "p99": 227.079488,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3035.149926,
                    "min": 2980.1760959999997,
                    "p50": 2993.6429,
                    "p95": 3035.149926,
                    "p99": 3035.149926,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.17785899999996,
                    "min": 416.489759,
                    "p50": 456.54239099999995,
                    "p95": 461.17785899999996,
                    "p99": 461.17785899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 520.474738,
                    "min": 475.99015399999996,
                    "p50": 513.598754,
                    "p95": 520.474738,
                    "p99": 520.474738,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 578.655936,
                    "min": 536.378437,
                    "p50": 572.331496,
                    "p95": 578.655936,
                    "p99": 578.655936,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1094.105654,
                    "min": 1067.97299,
                    "p50": 1081.149506,
                    "p95": 1094.105654,
                    "p99": 1094.105654,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 340.388674,
                    "min": 334.60900399999997,
                    "p50": 337.795106,
                    "p95": 340.388674,
                    "p99": 340.388674,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 398.541946,
                    "min": 368.855439,
                    "p50": 396.13179099999996,
                    "p95": 398.541946,
                    "p99": 398.541946,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 937.1349319999999,
                    "min": 916.8541369999999,
                    "p50": 928.911701,
                    "p95": 937.1349319999999,
                    "p99": 937.1349319999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 757.5528079999999,
                    "min": 712.6048079999999,
                    "p50": 752.487273,
                    "p95": 757.5528079999999,
                    "p99": 757.5528079999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.129377,
                    "min": 271.601359,
                    "p50": 277.837938,
                    "p95": 280.129377,
                    "p99": 280.129377,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 825.476601,
                    "min": 796.2088769999999,
                    "p50": 811.796172,
                    "p95": 825.476601,
                    "p99": 825.476601,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3389.331108,
                    "min": 3343.365864,
                    "p50": 3363.1040009999997,
                    "p95": 3389.331108,
                    "p99": 3389.331108,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1384.075932,
                    "min": 1337.9464659999999,
                    "p50": 1374.232579,
                    "p95": 1384.075932,
                    "p99": 1384.075932,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 996.895959,
                    "min": 966.518078,
                    "p50": 990.779104,
                    "p95": 996.895959,
                    "p99": 996.895959,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2340.4851719999997,
                    "min": 2315.654592,
                    "p50": 2323.443406,
                    "p95": 2340.4851719999997,
                    "p99": 2340.4851719999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1573.853375,
                    "min": 1521.874376,
                    "p50": 1564.9898249999999,
                    "p95": 1573.853375,
                    "p99": 1573.853375,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7675.7230819999995,
                    "min": 7591.280553,
                    "p50": 7634.0328549999995,
                    "p95": 7675.7230819999995,
                    "p99": 7675.7230819999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2164.580196,
                    "min": 2106.634784,
                    "p50": 2131.062425,
                    "p95": 2164.580196,
                    "p99": 2164.580196,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1189.380543,
                    "min": 1161.7866099999999,
                    "p50": 1180.788881,
                    "p95": 1189.380543,
                    "p99": 1189.380543,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2529.982735,
                    "min": 2496.190138,
                    "p50": 2511.939814,
                    "p95": 2529.982735,
                    "p99": 2529.982735,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5803.374413,
                    "min": 5729.680726,
                    "p50": 5740.515375999999,
                    "p95": 5803.374413,
                    "p99": 5803.374413,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2917.683771,
                    "min": 2860.180919,
                    "p50": 2891.289747,
                    "p95": 2917.683771,
                    "p99": 2917.683771,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3856.0201429999997,
                    "min": 3819.8588499999996,
                    "p50": 3836.416233,
                    "p95": 3856.0201429999997,
                    "p99": 3856.0201429999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 618.968429,
                    "min": 575.843311,
                    "p50": 615.179978,
                    "p95": 618.968429,
                    "p99": 618.968429,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2747.182452,
                    "min": 2690.3570729999997,
                    "p50": 2732.274266,
                    "p95": 2747.182452,
                    "p99": 2747.182452,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 807.171427,
                    "min": 769.015727,
                    "p50": 803.3577339999999,
                    "p95": 807.171427,
                    "p99": 807.171427,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1957.995406,
                    "min": 1908.8208399999999,
                    "p50": 1945.886356,
                    "p95": 1957.995406,
                    "p99": 1957.995406,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1777.335509,
                    "min": 1748.711775,
                    "p50": 1761.899825,
                    "p95": 1777.335509,
                    "p99": 1777.335509,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2914.3772679999997,
                    "min": 2885.286107,
                    "p50": 2888.586883,
                    "p95": 2914.3772679999997,
                    "p99": 2914.3772679999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 814.788051,
                    "min": 787.813087,
                    "p50": 803.933637,
                    "p95": 814.788051,
                    "p99": 814.788051,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1762.617383,
                    "min": 1707.821379,
                    "p50": 1747.1974539999999,
                    "p95": 1762.617383,
                    "p99": 1762.617383,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2527.942897,
                    "min": 2481.154786,
                    "p50": 2513.9187549999997,
                    "p95": 2527.942897,
                    "p99": 2527.942897,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1947.4821969999998,
                    "min": 1913.4617959999998,
                    "p50": 1939.233225,
                    "p95": 1947.4821969999998,
                    "p99": 1947.4821969999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2162.337795,
                    "min": 2125.848273,
                    "p50": 2147.866264,
                    "p95": 2162.337795,
                    "p99": 2162.337795,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3895.054839,
                    "min": 3818.478103,
                    "p50": 3853.5046549999997,
                    "p95": 3895.054839,
                    "p99": 3895.054839,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5766.404353,
                    "min": 5714.018249,
                    "p50": 5746.7117,
                    "p95": 5766.404353,
                    "p99": 5766.404353,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2346.0575639999997,
                    "min": 2302.802969,
                    "p50": 2328.5819539999998,
                    "p95": 2346.0575639999997,
                    "p99": 2346.0575639999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1003.584351,
                    "min": 979.463795,
                    "p50": 997.266978,
                    "p95": 1003.584351,
                    "p99": 1003.584351,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 615.921919,
                    "min": 576.355987,
                    "p50": 610.802596,
                    "p95": 615.921919,
                    "p99": 615.921919,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1196.402645,
                    "min": 1146.365769,
                    "p50": 1180.852882,
                    "p95": 1196.402645,
                    "p99": 1196.402645,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3395.1493889999997,
                    "min": 3311.492952,
                    "p50": 3363.319329,
                    "p95": 3395.1493889999997,
                    "p99": 3395.1493889999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1380.03721,
                    "min": 1361.1366369999998,
                    "p50": 1369.597519,
                    "p95": 1380.03721,
                    "p99": 1380.03721,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2720.456785,
                    "min": 2683.103756,
                    "p50": 2709.065009,
                    "p95": 2720.456785,
                    "p99": 2720.456785,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1578.4276519999999,
                    "min": 1560.872993,
                    "p50": 1568.8473529999999,
                    "p95": 1578.4276519999999,
                    "p99": 1578.4276519999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 878.300838,
                    "min": 868.6033719999999,
                    "p50": 874.202849,
                    "p95": 878.300838,
                    "p99": 878.300838,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 157.776424,
                    "min": 117.533625,
                    "p50": 154.074368,
                    "p95": 157.776424,
                    "p99": 157.776424,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 459.052392,
                    "min": 448.56998999999996,
                    "p50": 455.17324099999996,
                    "p95": 459.052392,
                    "p99": 459.052392,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 101.83935199999999,
                    "min": 92.606732,
                    "p50": 98.50339699999999,
                    "p95": 101.83935199999999,
                    "p99": 101.83935199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.708333,
                    "min": 34.334984,
                    "p50": 68.819356,
                    "p95": 74.708333,
                    "p99": 74.708333,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 140.995556,
                    "min": 101.279924,
                    "p50": 138.461937,
                    "p95": 140.995556,
                    "p99": 140.995556,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 377.847447,
                    "min": 366.09726,
                    "p50": 369.862084,
                    "p95": 377.847447,
                    "p99": 377.847447,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 170.384636,
                    "min": 163.940385,
                    "p50": 164.725989,
                    "p95": 170.384636,
                    "p99": 170.384636,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 153.561508,
                    "min": 133.238955,
                    "p50": 148.321826,
                    "p95": 153.561508,
                    "p99": 153.561508,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 189.39360299999998,
                    "min": 176.92732999999998,
                    "p50": 186.651917,
                    "p95": 189.39360299999998,
                    "p99": 189.39360299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.639468,
                    "min": 42.65119,
                    "p50": 80.696085,
                    "p95": 84.639468,
                    "p99": 84.639468,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 131.458214,
                    "min": 92.878418,
                    "p50": 122.78202599999999,
                    "p95": 131.458214,
                    "p99": 131.458214,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 52.14545,
                    "min": 26.060391,
                    "p50": 50.865914,
                    "p95": 52.14545,
                    "p99": 52.14545,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 108.76498799999999,
                    "min": 92.29257299999999,
                    "p50": 106.077365,
                    "p95": 108.76498799999999,
                    "p99": 108.76498799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 95.81241,
                    "min": 87.12597799999999,
                    "p50": 90.56249,
                    "p95": 95.81241,
                    "p99": 95.81241,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 117.21185899999999,
                    "min": 111.101452,
                    "p50": 114.60604599999999,
                    "p95": 117.21185899999999,
                    "p99": 117.21185899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 129.727113,
                    "min": 118.085382,
                    "p50": 124.32485799999999,
                    "p95": 129.727113,
                    "p99": 129.727113,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 294.43476799999996,
                    "min": 251.482229,
                    "p50": 291.09011499999997,
                    "p95": 294.43476799999996,
                    "p99": 294.43476799999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 211.362414,
                    "min": 196.04862799999998,
                    "p50": 207.256111,
                    "p95": 211.362414,
                    "p99": 211.362414,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.543477,
                    "min": 21.695850999999998,
                    "p50": 24.293142,
                    "p95": 24.543477,
                    "p99": 24.543477,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 111.425456,
                    "min": 104.776286,
                    "p50": 108.003039,
                    "p95": 111.425456,
                    "p99": 111.425456,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 93.07547799999999,
                    "min": 86.33106099999999,
                    "p50": 90.186628,
                    "p95": 93.07547799999999,
                    "p99": 93.07547799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 71.511419,
                    "min": 35.458262999999995,
                    "p50": 69.54722699999999,
                    "p95": 71.511419,
                    "p99": 71.511419,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 40.559141,
                    "min": 24.289399,
                    "p50": 36.420033,
                    "p95": 40.559141,
                    "p99": 40.559141,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 214.267211,
                    "min": 170.872706,
                    "p50": 209.710319,
                    "p95": 214.267211,
                    "p99": 214.267211,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 129.046249,
                    "min": 117.36362799999999,
                    "p50": 126.219231,
                    "p95": 129.046249,
                    "p99": 129.046249,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 48.782492,
                    "min": 24.419954,
                    "p50": 44.066053,
                    "p95": 48.782492,
                    "p99": 48.782492,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 50.504303,
                    "min": 48.156555999999995,
                    "p50": 48.668087,
                    "p95": 50.504303,
                    "p99": 50.504303,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 31.536966999999997,
                    "min": 27.657254,
                    "p50": 28.380298,
                    "p95": 31.536966999999997,
                    "p99": 31.536966999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 33.820169,
                    "min": 25.764979,
                    "p50": 31.496039999999997,
                    "p95": 33.820169,
                    "p99": 33.820169,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 25.897879999999997,
                    "min": 24.338299,
                    "p50": 24.744466,
                    "p95": 25.897879999999997,
                    "p99": 25.897879999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 66.384481,
                    "min": 30.454186999999997,
                    "p50": 59.843914,
                    "p95": 66.384481,
                    "p99": 66.384481,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 44.423865,
                    "min": 24.409927999999997,
                    "p50": 38.544958,
                    "p95": 44.423865,
                    "p99": 44.423865,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 57.97219,
                    "min": 47.963024999999995,
                    "p50": 51.499438,
                    "p95": 57.97219,
                    "p99": 57.97219,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.923059,
                    "min": 22.725894,
                    "p50": 25.024763999999998,
                    "p95": 27.923059,
                    "p99": 27.923059,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 52.546518999999996,
                    "min": 44.794376,
                    "p50": 47.726071999999995,
                    "p95": 52.546518999999996,
                    "p99": 52.546518999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.914592,
                    "min": 19.53764,
                    "p50": 24.439807,
                    "p95": 24.914592,
                    "p99": 24.914592,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.2958,
                    "min": 24.311543999999998,
                    "p50": 24.483705,
                    "p95": 25.2958,
                    "p99": 25.2958,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 212.28385699999998,
                    "min": 195.97212,
                    "p50": 204.87535599999998,
                    "p95": 212.28385699999998,
                    "p99": 212.28385699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 120.14624599999999,
                    "min": 77.33394299999999,
                    "p50": 115.87268999999999,
                    "p95": 120.14624599999999,
                    "p99": 120.14624599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 234.49915399999998,
                    "min": 193.281993,
                    "p50": 233.469571,
                    "p95": 234.49915399999998,
                    "p99": 234.49915399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 109.98507199999999,
                    "min": 93.86435999999999,
                    "p50": 107.25833,
                    "p95": 109.98507199999999,
                    "p99": 109.98507199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.98916299999999,
                    "min": 89.16834899999999,
                    "p50": 98.33984,
                    "p95": 103.98916299999999,
                    "p99": 103.98916299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.198106,
                    "min": 67.251087,
                    "p50": 77.286142,
                    "p95": 80.198106,
                    "p99": 80.198106,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 179.99055099999998,
                    "min": 174.239401,
                    "p50": 174.705076,
                    "p95": 179.99055099999998,
                    "p99": 179.99055099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 148.51933,
                    "min": 105.852705,
                    "p50": 145.270994,
                    "p95": 148.51933,
                    "p99": 148.51933,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 329.503305,
                    "min": 315.574387,
                    "p50": 328.194542,
                    "p95": 329.503305,
                    "p99": 329.503305,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 131.301725,
                    "min": 87.15007899999999,
                    "p50": 127.216066,
                    "p95": 131.301725,
                    "p99": 131.301725,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1002.9706639999999,
                    "min": 947.5648689999999,
                    "p50": 995.6732989999999,
                    "p95": 1002.9706639999999,
                    "p99": 1002.9706639999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.869844,
                    "min": 48.947609,
                    "p50": 82.306033,
                    "p95": 94.869844,
                    "p99": 94.869844,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 165.299318,
                    "min": 125.398608,
                    "p50": 158.303214,
                    "p95": 165.299318,
                    "p99": 165.299318,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 157.109465,
                    "min": 151.06547799999998,
                    "p50": 156.057618,
                    "p95": 157.109465,
                    "p99": 157.109465,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 425.740838,
                    "min": 385.12802,
                    "p50": 419.128356,
                    "p95": 425.740838,
                    "p99": 425.740838,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.029756,
                    "min": 52.375865999999995,
                    "p50": 58.370276999999994,
                    "p95": 62.029756,
                    "p99": 62.029756,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 186.44257199999998,
                    "min": 146.278065,
                    "p50": 184.65045899999998,
                    "p95": 186.44257199999998,
                    "p99": 186.44257199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 142.005441,
                    "min": 133.197291,
                    "p50": 137.37848599999998,
                    "p95": 142.005441,
                    "p99": 142.005441,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 523.102954,
                    "min": 505.459746,
                    "p50": 518.694316,
                    "p95": 523.102954,
                    "p99": 523.102954,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1134.982775,
                    "min": 1078.1320739999999,
                    "p50": 1124.380352,
                    "p95": 1134.982775,
                    "p99": 1134.982775,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 979.8797629999999,
                    "min": 921.921171,
                    "p50": 968.203458,
                    "p95": 979.8797629999999,
                    "p99": 979.8797629999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1450.2228109999999,
                    "min": 1421.848921,
                    "p50": 1432.6046709999998,
                    "p95": 1450.2228109999999,
                    "p99": 1450.2228109999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 502.67112,
                    "min": 492.510402,
                    "p50": 499.06771299999997,
                    "p95": 502.67112,
                    "p99": 502.67112,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 660.048307,
                    "min": 615.321948,
                    "p50": 650.987118,
                    "p95": 660.048307,
                    "p99": 660.048307,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1280.532852,
                    "min": 1273.0272619999998,
                    "p50": 1273.746293,
                    "p95": 1280.532852,
                    "p99": 1280.532852,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 812.0405049999999,
                    "min": 765.5325449999999,
                    "p50": 809.47352,
                    "p95": 812.0405049999999,
                    "p99": 812.0405049999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1489.342433,
                    "min": 1451.1450459999999,
                    "p50": 1470.611804,
                    "p95": 1489.342433,
                    "p99": 1489.342433,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 473.518538,
                    "min": 430.785512,
                    "p50": 471.410777,
                    "p95": 473.518538,
                    "p99": 473.518538,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1197.064287,
                    "min": 1179.829062,
                    "p50": 1187.2797659999999,
                    "p95": 1197.064287,
                    "p99": 1197.064287,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 910.081817,
                    "min": 867.9025469999999,
                    "p50": 904.414667,
                    "p95": 910.081817,
                    "p99": 910.081817,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1051.130776,
                    "min": 1032.018435,
                    "p50": 1043.186407,
                    "p95": 1051.130776,
                    "p99": 1051.130776,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1335.2248929999998,
                    "min": 1283.8761419999998,
                    "p50": 1326.893866,
                    "p95": 1335.2248929999998,
                    "p99": 1335.2248929999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 619.0423959999999,
                    "min": 575.700871,
                    "p50": 612.785744,
                    "p95": 619.0423959999999,
                    "p99": 619.0423959999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 761.2874419999999,
                    "min": 746.264319,
                    "p50": 753.149409,
                    "p95": 761.2874419999999,
                    "p99": 761.2874419999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 170.881148,
                    "min": 130.280261,
                    "p50": 167.780049,
                    "p95": 170.881148,
                    "p99": 170.881148,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 270.85036199999996,
                    "min": 238.942058,
                    "p50": 264.971384,
                    "p95": 270.85036199999996,
                    "p99": 270.85036199999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 328.552101,
                    "min": 289.077233,
                    "p50": 326.147949,
                    "p95": 328.552101,
                    "p99": 328.552101,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 233.7753,
                    "min": 228.270309,
                    "p50": 231.227317,
                    "p95": 233.7753,
                    "p99": 233.7753,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 429.63768999999996,
                    "min": 387.350762,
                    "p50": 422.514687,
                    "p95": 429.63768999999996,
                    "p99": 429.63768999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 138.753759,
                    "min": 109.034261,
                    "p50": 134.67414,
                    "p95": 138.753759,
                    "p99": 138.753759,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 364.766195,
                    "min": 355.816783,
                    "p50": 357.3477,
                    "p95": 364.766195,
                    "p99": 364.766195,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 306.007652,
                    "min": 277.044423,
                    "p50": 298.307572,
                    "p95": 306.007652,
                    "p99": 306.007652,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 202.751645,
                    "min": 173.28577199999998,
                    "p50": 199.480051,
                    "p95": 202.751645,
                    "p99": 202.751645,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 397.141532,
                    "min": 386.344585,
                    "p50": 392.622325,
                    "p95": 397.141532,
                    "p99": 397.141532,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 988.933282,
                    "min": 934.9075049999999,
                    "p50": 979.997224,
                    "p95": 988.933282,
                    "p99": 988.933282,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1304.716388,
                    "min": 1286.515602,
                    "p50": 1294.026609,
                    "p95": 1304.716388,
                    "p99": 1304.716388,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 359.53878599999996,
                    "min": 340.56212999999997,
                    "p50": 352.16171399999996,
                    "p95": 359.53878599999996,
                    "p99": 359.53878599999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 669.693946,
                    "min": 625.110544,
                    "p50": 668.089897,
                    "p95": 669.693946,
                    "p99": 669.693946,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1148.995858,
                    "min": 1119.584629,
                    "p50": 1133.761493,
                    "p95": 1148.995858,
                    "p99": 1148.995858,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 517.763695,
                    "min": 505.732618,
                    "p50": 511.22736599999996,
                    "p95": 517.763695,
                    "p99": 517.763695,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 833.924551,
                    "min": 813.968112,
                    "p50": 823.8270719999999,
                    "p95": 833.924551,
                    "p99": 833.924551,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 346.469999,
                    "min": 300.15705199999996,
                    "p50": 340.50075999999996,
                    "p95": 346.469999,
                    "p99": 346.469999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 193.87391,
                    "min": 152.69838,
                    "p50": 190.46228,
                    "p95": 193.87391,
                    "p99": 193.87391,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 130.616314,
                    "min": 124.19841699999999,
                    "p50": 126.40671499999999,
                    "p95": 130.616314,
                    "p99": 130.616314,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 325.103321,
                    "min": 318.27759499999996,
                    "p50": 321.620006,
                    "p95": 325.103321,
                    "p99": 325.103321,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 262.094277,
                    "min": 252.889883,
                    "p50": 258.128473,
                    "p95": 262.094277,
                    "p99": 262.094277,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 214.76481199999998,
                    "min": 210.55052999999998,
                    "p50": 211.661219,
                    "p95": 214.76481199999998,
                    "p99": 214.76481199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 306.099747,
                    "min": 257.321146,
                    "p50": 299.215215,
                    "p95": 306.099747,
                    "p99": 306.099747,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 148.168113,
                    "min": 124.79546099999999,
                    "p50": 146.26464099999998,
                    "p95": 148.168113,
                    "p99": 148.168113,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.21325,
                    "min": 65.572527,
                    "p50": 103.601811,
                    "p95": 106.21325,
                    "p99": 106.21325,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 420.393086,
                    "min": 395.940523,
                    "p50": 418.263316,
                    "p95": 420.393086,
                    "p99": 420.393086,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 370.81476799999996,
                    "min": 361.690634,
                    "p50": 366.86017799999996,
                    "p95": 370.81476799999996,
                    "p99": 370.81476799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 476.364563,
                    "min": 436.31345899999997,
                    "p50": 473.401531,
                    "p95": 476.364563,
                    "p99": 476.364563,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.266075,
                    "min": 220.874585,
                    "p50": 231.09700999999998,
                    "p95": 236.266075,
                    "p99": 236.266075,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 287.118273,
                    "min": 272.53880799999996,
                    "p50": 280.233811,
                    "p95": 287.118273,
                    "p99": 287.118273,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 172.697992,
                    "min": 130.457982,
                    "p50": 166.467229,
                    "p95": 172.697992,
                    "p99": 172.697992,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 310.853136,
                    "min": 266.94676599999997,
                    "p50": 305.846383,
                    "p95": 310.853136,
                    "p99": 310.853136,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 144.61791399999998,
                    "min": 140.97946299999998,
                    "p50": 143.705221,
                    "p95": 144.61791399999998,
                    "p99": 144.61791399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 356.064016,
                    "min": 335.126011,
                    "p50": 349.11614399999996,
                    "p95": 356.064016,
                    "p99": 356.064016,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 251.378629,
                    "min": 208.314531,
                    "p50": 245.96344,
                    "p95": 251.378629,
                    "p99": 251.378629,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 127.28977099999999,
                    "min": 83.403525,
                    "p50": 122.239543,
                    "p95": 127.28977099999999,
                    "p99": 127.28977099999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 166.317712,
                    "min": 157.825157,
                    "p50": 163.356821,
                    "p95": 166.317712,
                    "p99": 166.317712,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 296.52419399999997,
                    "min": 253.05424299999999,
                    "p50": 290.049532,
                    "p95": 296.52419399999997,
                    "p99": 296.52419399999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 336.22686799999997,
                    "min": 316.948935,
                    "p50": 327.783758,
                    "p95": 336.22686799999997,
                    "p99": 336.22686799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 458.47405699999996,
                    "min": 446.547629,
                    "p50": 455.454596,
                    "p95": 458.47405699999996,
                    "p99": 458.47405699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 189.22900199999998,
                    "min": 176.547326,
                    "p50": 183.52691,
                    "p95": 189.22900199999998,
                    "p99": 189.22900199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 411.944299,
                    "min": 366.00296299999997,
                    "p50": 404.33636099999995,
                    "p95": 411.944299,
                    "p99": 411.944299,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 206.140526,
                    "min": 194.645524,
                    "p50": 204.233037,
                    "p95": 206.140526,
                    "p99": 206.140526,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 271.180637,
                    "min": 229.911546,
                    "p50": 267.05823599999997,
                    "p95": 271.180637,
                    "p99": 271.180637,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 232.060783,
                    "min": 185.008818,
                    "p50": 225.757164,
                    "p95": 232.060783,
                    "p99": 232.060783,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 103.916772,
                    "min": 93.511845,
                    "p50": 102.068501,
                    "p95": 103.916772,
                    "p99": 103.916772,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 151.330594,
                    "min": 107.19335699999999,
                    "p50": 146.930048,
                    "p95": 151.330594,
                    "p99": 151.330594,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 215.834005,
                    "min": 209.104141,
                    "p50": 212.353559,
                    "p95": 215.834005,
                    "p99": 215.834005,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 191.56658,
                    "min": 178.876958,
                    "p50": 190.793465,
                    "p95": 191.56658,
                    "p99": 191.56658,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 423.401076,
                    "min": 378.00681399999996,
                    "p50": 416.467848,
                    "p95": 423.401076,
                    "p99": 423.401076,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 363.576895,
                    "min": 322.00064199999997,
                    "p50": 358.534975,
                    "p95": 363.576895,
                    "p99": 363.576895,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 104.784239,
                    "min": 64.651329,
                    "p50": 98.30149999999999,
                    "p95": 104.784239,
                    "p99": 104.784239,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 281.983793,
                    "min": 242.785668,
                    "p50": 275.025992,
                    "p95": 281.983793,
                    "p99": 281.983793,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 259.682971,
                    "min": 248.42097199999998,
                    "p50": 253.849682,
                    "p95": 259.682971,
                    "p99": 259.682971,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 126.07181399999999,
                    "min": 87.635907,
                    "p50": 124.61464699999999,
                    "p95": 126.07181399999999,
                    "p99": 126.07181399999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 305.21883399999996,
                    "min": 264.987624,
                    "p50": 298.673423,
                    "p95": 305.21883399999996,
                    "p99": 305.21883399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 239.27458299999998,
                    "min": 191.47664899999998,
                    "p50": 234.675141,
                    "p95": 239.27458299999998,
                    "p99": 239.27458299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 474.88877499999995,
                    "min": 451.802712,
                    "p50": 471.99627399999997,
                    "p95": 474.88877499999995,
                    "p99": 474.88877499999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 346.86283,
                    "min": 303.856849,
                    "p50": 341.573381,
                    "p95": 346.86283,
                    "p99": 346.86283,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 172.25872999999999,
                    "min": 129.463866,
                    "p50": 167.990425,
                    "p95": 172.25872999999999,
                    "p99": 172.25872999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 323.125726,
                    "min": 283.27815799999996,
                    "p50": 320.903886,
                    "p95": 323.125726,
                    "p99": 323.125726,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 483.367104,
                    "min": 435.76251199999996,
                    "p50": 468.283212,
                    "p95": 483.367104,
                    "p99": 483.367104,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 128.246587,
                    "min": 112.329043,
                    "p50": 125.363529,
                    "p95": 128.246587,
                    "p99": 128.246587,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 238.53471399999998,
                    "min": 195.606953,
                    "p50": 231.373291,
                    "p95": 238.53471399999998,
                    "p99": 238.53471399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 260.90761,
                    "min": 215.82247199999998,
                    "p50": 254.68585299999998,
                    "p95": 260.90761,
                    "p99": 260.90761,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 286.559577,
                    "min": 274.749576,
                    "p50": 281.713534,
                    "p95": 286.559577,
                    "p99": 286.559577,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 420.84428499999996,
                    "min": 404.238115,
                    "p50": 416.580631,
                    "p95": 420.84428499999996,
                    "p99": 420.84428499999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 303.16693599999996,
                    "min": 261.975331,
                    "p50": 300.365296,
                    "p95": 303.16693599999996,
                    "p99": 303.16693599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 324.87553099999997,
                    "min": 284.333455,
                    "p50": 317.20971499999996,
                    "p95": 324.87553099999997,
                    "p99": 324.87553099999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.437556,
                    "min": 64.890466,
                    "p50": 103.998644,
                    "p95": 106.437556,
                    "p99": 106.437556,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 170.885423,
                    "min": 129.57232299999998,
                    "p50": 168.228036,
                    "p95": 170.885423,
                    "p99": 170.885423,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.662022,
                    "min": 108.914968,
                    "p50": 148.676853,
                    "p95": 149.662022,
                    "p99": 149.662022,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 370.960698,
                    "min": 355.189913,
                    "p50": 368.467883,
                    "p95": 370.960698,
                    "p99": 370.960698,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 213.368822,
                    "min": 174.70747,
                    "p50": 211.50231399999998,
                    "p95": 213.368822,
                    "p99": 213.368822,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 348.94969199999997,
                    "min": 304.628059,
                    "p50": 344.923025,
                    "p95": 348.94969199999997,
                    "p99": 348.94969199999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 192.40034799999998,
                    "min": 188.082438,
                    "p50": 190.39348099999998,
                    "p95": 192.40034799999998,
                    "p99": 192.40034799999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 157.17331099999998,
                    "min": 114.99318699999999,
                    "p50": 153.61028299999998,
                    "p95": 157.17331099999998,
                    "p99": 157.17331099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 53.262681,
                    "min": 26.710380999999998,
                    "p50": 52.52297,
                    "p95": 53.262681,
                    "p99": 53.262681,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 710.749879,
                    "min": 694.073029,
                    "p50": 698.477461,
                    "p95": 710.749879,
                    "p99": 710.749879,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 171.472344,
                    "min": 130.853568,
                    "p50": 168.790452,
                    "p95": 171.472344,
                    "p99": 171.472344,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 239.38956,
                    "min": 199.920807,
                    "p50": 235.306704,
                    "p95": 239.38956,
                    "p99": 239.38956,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 110.89264999999999,
                    "min": 96.53836199999999,
                    "p50": 105.415326,
                    "p95": 110.89264999999999,
                    "p99": 110.89264999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 304.077851,
                    "min": 292.251369,
                    "p50": 298.67330799999996,
                    "p95": 304.077851,
                    "p99": 304.077851,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.08771999999999,
                    "min": 65.070465,
                    "p50": 77.892687,
                    "p95": 82.08771999999999,
                    "p99": 82.08771999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 93.348013,
                    "min": 70.93280399999999,
                    "p50": 92.058291,
                    "p95": 93.348013,
                    "p99": 93.348013,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.320637,
                    "min": 25.293017,
                    "p50": 39.927108,
                    "p95": 45.320637,
                    "p99": 45.320637,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 100.179237,
                    "min": 73.834291,
                    "p50": 97.6275,
                    "p95": 100.179237,
                    "p99": 100.179237,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 89.11521599999999,
                    "min": 72.029297,
                    "p50": 86.798919,
                    "p95": 89.11521599999999,
                    "p99": 89.11521599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 114.84671999999999,
                    "min": 109.809518,
                    "p50": 111.821384,
                    "p95": 114.84671999999999,
                    "p99": 114.84671999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 130.12966799999998,
                    "min": 123.51744099999999,
                    "p50": 124.605464,
                    "p95": 130.12966799999998,
                    "p99": 130.12966799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 121.66258599999999,
                    "min": 108.795925,
                    "p50": 119.973299,
                    "p95": 121.66258599999999,
                    "p99": 121.66258599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 370.535081,
                    "min": 365.57593299999996,
                    "p50": 368.46009,
                    "p95": 370.535081,
                    "p99": 370.535081,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 69.726536,
                    "min": 33.756325,
                    "p50": 65.354748,
                    "p95": 69.726536,
                    "p99": 69.726536,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 140.003128,
                    "min": 120.832275,
                    "p50": 131.706234,
                    "p95": 140.003128,
                    "p99": 140.003128,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 142.655855,
                    "min": 98.235582,
                    "p50": 137.769036,
                    "p95": 142.655855,
                    "p99": 142.655855,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 265.756081,
                    "min": 226.16926899999999,
                    "p50": 262.134911,
                    "p95": 265.756081,
                    "p99": 265.756081,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.195101,
                    "min": 80.007351,
                    "p50": 84.203431,
                    "p95": 85.195101,
                    "p99": 85.195101,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 338.082444,
                    "min": 296.601739,
                    "p50": 334.88406699999996,
                    "p95": 338.082444,
                    "p99": 338.082444,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 192.440532,
                    "min": 185.924986,
                    "p50": 190.133906,
                    "p95": 192.440532,
                    "p99": 192.440532,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 150.139511,
                    "min": 104.23039299999999,
                    "p50": 143.633399,
                    "p95": 150.139511,
                    "p99": 150.139511,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 152.38243699999998,
                    "min": 114.02454399999999,
                    "p50": 151.18889099999998,
                    "p95": 152.38243699999998,
                    "p99": 152.38243699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 138.743374,
                    "min": 135.04067799999999,
                    "p50": 136.30551,
                    "p95": 138.743374,
                    "p99": 138.743374,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 170.91299899999999,
                    "min": 132.417555,
                    "p50": 169.713697,
                    "p95": 170.91299899999999,
                    "p99": 170.91299899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 53.497332,
                    "min": 24.420876999999997,
                    "p50": 45.684962,
                    "p95": 53.497332,
                    "p99": 53.497332,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 788.582961,
                    "min": 750.649719,
                    "p50": 781.328751,
                    "p95": 788.582961,
                    "p99": 788.582961,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 64.403931,
                    "min": 30.503413,
                    "p50": 60.756553999999994,
                    "p95": 64.403931,
                    "p99": 64.403931,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.40463,
                    "min": 61.744083999999994,
                    "p50": 74.437913,
                    "p95": 77.40463,
                    "p99": 77.40463,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 100.72746099999999,
                    "min": 95.106184,
                    "p50": 99.485086,
                    "p95": 100.72746099999999,
                    "p99": 100.72746099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 132.93979299999998,
                    "min": 91.17687699999999,
                    "p50": 128.711757,
                    "p95": 132.93979299999998,
                    "p99": 132.93979299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 109.845383,
                    "min": 68.42526,
                    "p50": 106.09585299999999,
                    "p95": 109.845383,
                    "p99": 109.845383,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 123.312469,
                    "min": 103.352972,
                    "p50": 121.858339,
                    "p95": 123.312469,
                    "p99": 123.312469,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 96.250568,
                    "min": 52.728254,
                    "p50": 89.823443,
                    "p95": 96.250568,
                    "p99": 96.250568,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 114.717075,
                    "min": 98.75697699999999,
                    "p50": 114.140609,
                    "p95": 114.717075,
                    "p99": 114.717075,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 413.909493,
                    "min": 379.798474,
                    "p50": 409.29834,
                    "p95": 413.909493,
                    "p99": 413.909493,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 126.360677,
                    "min": 108.7032,
                    "p50": 125.569763,
                    "p95": 126.360677,
                    "p99": 126.360677,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 712.410183,
                    "min": 698.181559,
                    "p50": 707.6178209999999,
                    "p95": 712.410183,
                    "p99": 712.410183,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 135.101365,
                    "min": 121.581639,
                    "p50": 132.98316599999998,
                    "p95": 135.101365,
                    "p99": 135.101365,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.66091499999999,
                    "min": 88.690978,
                    "p50": 99.531545,
                    "p95": 102.66091499999999,
                    "p99": 102.66091499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 160.097408,
                    "min": 127.585748,
                    "p50": 153.75146999999998,
                    "p95": 160.097408,
                    "p99": 160.097408,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 176.368752,
                    "min": 168.660803,
                    "p50": 171.332829,
                    "p95": 176.368752,
                    "p99": 176.368752,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 69.85476299999999,
                    "min": 64.98103499999999,
                    "p50": 66.199874,
                    "p95": 69.85476299999999,
                    "p99": 69.85476299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 108.80746599999999,
                    "min": 99.870606,
                    "p50": 105.41131,
                    "p95": 108.80746599999999,
                    "p99": 108.80746599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 86.15096799999999,
                    "min": 46.681751,
                    "p50": 85.69649799999999,
                    "p95": 86.15096799999999,
                    "p99": 86.15096799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 138.72991399999998,
                    "min": 100.095305,
                    "p50": 137.325195,
                    "p95": 138.72991399999998,
                    "p99": 138.72991399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 122.271514,
                    "min": 81.276399,
                    "p50": 118.532102,
                    "p95": 122.271514,
                    "p99": 122.271514,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 304.76613399999997,
                    "min": 262.884579,
                    "p50": 299.82223,
                    "p95": 304.76613399999997,
                    "p99": 304.76613399999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 245.497815,
                    "min": 205.852072,
                    "p50": 237.78543499999998,
                    "p95": 245.497815,
                    "p99": 245.497815,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 113.917161,
                    "min": 93.726058,
                    "p50": 111.39828999999999,
                    "p95": 113.917161,
                    "p99": 113.917161,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 42.604441,
                    "min": 39.950404,
                    "p50": 40.63711,
                    "p95": 42.604441,
                    "p99": 42.604441,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 94.36433699999999,
                    "min": 90.774774,
                    "p50": 92.95849799999999,
                    "p95": 94.36433699999999,
                    "p99": 94.36433699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 53.506181,
                    "min": 27.062848,
                    "p50": 52.859871999999996,
                    "p95": 53.506181,
                    "p99": 53.506181,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.083657,
                    "min": 77.714204,
                    "p50": 78.512486,
                    "p95": 82.083657,
                    "p99": 82.083657,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 373.988067,
                    "min": 353.608034,
                    "p50": 370.98535899999996,
                    "p95": 373.988067,
                    "p99": 373.988067,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 123.85441999999999,
                    "min": 117.549477,
                    "p50": 122.530773,
                    "p95": 123.85441999999999,
                    "p99": 123.85441999999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 95.947559,
                    "min": 92.055731,
                    "p50": 92.40170599999999,
                    "p95": 95.947559,
                    "p99": 95.947559,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 68.334728,
                    "min": 60.093354999999995,
                    "p50": 60.266175999999994,
                    "p95": 68.334728,
                    "p99": 68.334728,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 101.072582,
                    "min": 85.687613,
                    "p50": 99.802737,
                    "p95": 101.072582,
                    "p99": 101.072582,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 191.275287,
                    "min": 182.977834,
                    "p50": 189.24296099999998,
                    "p95": 191.275287,
                    "p99": 191.275287,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.254135999999995,
                    "min": 41.484873,
                    "p50": 45.7921,
                    "p95": 48.254135999999995,
                    "p99": 48.254135999999995,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 787.14634,
                    "min": 767.0898099999999,
                    "p50": 783.2583609999999,
                    "p95": 787.14634,
                    "p99": 787.14634,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 173.333825,
                    "min": 130.64809,
                    "p50": 170.801968,
                    "p95": 173.333825,
                    "p99": 173.333825,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 83.17322,
                    "min": 53.738816,
                    "p50": 74.666006,
                    "p95": 83.17322,
                    "p99": 83.17322,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 116.02341,
                    "min": 109.974206,
                    "p50": 114.217777,
                    "p95": 116.02341,
                    "p99": 116.02341,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 145.330954,
                    "min": 138.10547499999998,
                    "p50": 144.673427,
                    "p95": 145.330954,
                    "p99": 145.330954,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 87.08751099999999,
                    "min": 46.322699,
                    "p50": 85.325458,
                    "p95": 87.08751099999999,
                    "p99": 87.08751099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 133.101655,
                    "min": 102.290392,
                    "p50": 128.823323,
                    "p95": 133.101655,
                    "p99": 133.101655,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 414.167898,
                    "min": 368.934355,
                    "p50": 408.171672,
                    "p95": 414.167898,
                    "p99": 414.167898,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 266.207773,
                    "min": 225.530982,
                    "p50": 262.258722,
                    "p95": 266.207773,
                    "p99": 266.207773,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 141.07398799999999,
                    "min": 96.93699,
                    "p50": 135.91834599999999,
                    "p95": 141.07398799999999,
                    "p99": 141.07398799999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 110.984611,
                    "min": 106.785685,
                    "p50": 109.854057,
                    "p95": 110.984611,
                    "p99": 110.984611,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 158.518139,
                    "min": 149.538335,
                    "p50": 152.833477,
                    "p95": 158.518139,
                    "p99": 158.518139,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 347.008835,
                    "min": 320.875401,
                    "p50": 338.343846,
                    "p95": 347.008835,
                    "p99": 347.008835,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.77063299999999,
                    "min": 53.968419999999995,
                    "p50": 92.28020599999999,
                    "p95": 93.77063299999999,
                    "p99": 93.77063299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 145.082323,
                    "min": 117.915337,
                    "p50": 138.09219199999998,
                    "p95": 145.082323,
                    "p99": 145.082323,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 123.650092,
                    "min": 118.878543,
                    "p50": 123.13417299999999,
                    "p95": 123.650092,
                    "p99": 123.650092,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.132156,
                    "min": 52.410208,
                    "p50": 85.457685,
                    "p95": 86.132156,
                    "p99": 86.132156,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 192.70249199999998,
                    "min": 171.297391,
                    "p50": 191.571047,
                    "p95": 192.70249199999998,
                    "p99": 192.70249199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 61.552408,
                    "min": 54.650369999999995,
                    "p50": 60.720197,
                    "p95": 61.552408,
                    "p99": 61.552408,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 104.41753,
                    "min": 95.365929,
                    "p50": 100.962153,
                    "p95": 104.41753,
                    "p99": 104.41753,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 115.90950099999999,
                    "min": 75.44019899999999,
                    "p50": 115.65619699999999,
                    "p95": 115.90950099999999,
                    "p99": 115.90950099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 159.466492,
                    "min": 145.22092999999998,
                    "p50": 152.498692,
                    "p95": 159.466492,
                    "p99": 159.466492,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 268.706001,
                    "min": 262.54914199999996,
                    "p50": 266.02382,
                    "p95": 268.706001,
                    "p99": 268.706001,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 133.985205,
                    "min": 94.96688999999999,
                    "p50": 130.797792,
                    "p95": 133.985205,
                    "p99": 133.985205,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 109.11453,
                    "min": 83.854908,
                    "p50": 108.998334,
                    "p95": 109.11453,
                    "p99": 109.11453,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 79.605256,
                    "min": 38.924816,
                    "p50": 74.337318,
                    "p95": 79.605256,
                    "p99": 79.605256,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 148.395377,
                    "min": 106.918207,
                    "p50": 145.946441,
                    "p95": 148.395377,
                    "p99": 148.395377,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 174.361257,
                    "min": 169.46670899999998,
                    "p50": 173.379573,
                    "p95": 174.361257,
                    "p99": 174.361257,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 345.249143,
                    "min": 303.69825599999996,
                    "p50": 343.13019499999996,
                    "p95": 345.249143,
                    "p99": 345.249143,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 427.793992,
                    "min": 376.164223,
                    "p50": 419.045121,
                    "p95": 427.793992,
                    "p99": 427.793992,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 808.323634,
                    "min": 793.538051,
                    "p50": 801.1446669999999,
                    "p95": 808.323634,
                    "p99": 808.323634,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.435843,
                    "min": 24.453654,
                    "p50": 45.992948999999996,
                    "p95": 47.435843,
                    "p99": 47.435843,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 378.30483699999996,
                    "min": 331.218579,
                    "p50": 376.82417799999996,
                    "p95": 378.30483699999996,
                    "p99": 378.30483699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 127.59521799999999,
                    "min": 106.18642,
                    "p50": 125.884221,
                    "p95": 127.59521799999999,
                    "p99": 127.59521799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 109.26365299999999,
                    "min": 104.605891,
                    "p50": 106.262709,
                    "p95": 109.26365299999999,
                    "p99": 109.26365299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 139.735691,
                    "min": 101.399391,
                    "p50": 137.41830199999998,
                    "p95": 139.735691,
                    "p99": 139.735691,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.289476,
                    "min": 81.294786,
                    "p50": 85.962142,
                    "p95": 87.289476,
                    "p99": 87.289476,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 70.109511,
                    "min": 33.874625,
                    "p50": 65.834527,
                    "p95": 70.109511,
                    "p99": 70.109511,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 41.017621,
                    "min": 24.893333,
                    "p50": 40.16354,
                    "p95": 41.017621,
                    "p99": 41.017621,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 115.768908,
                    "min": 88.64606599999999,
                    "p50": 111.646349,
                    "p95": 115.768908,
                    "p99": 115.768908,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 159.59453399999998,
                    "min": 133.424951,
                    "p50": 155.08495399999998,
                    "p95": 159.59453399999998,
                    "p99": 159.59453399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.56945499999999,
                    "min": 40.847453,
                    "p50": 78.228347,
                    "p95": 82.56945499999999,
                    "p99": 82.56945499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 94.37688999999999,
                    "min": 53.670629999999996,
                    "p50": 92.760831,
                    "p95": 94.37688999999999,
                    "p99": 94.37688999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 133.60216499999999,
                    "min": 93.91573299999999,
                    "p50": 129.670246,
                    "p95": 133.60216499999999,
                    "p99": 133.60216499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 306.68343999999996,
                    "min": 267.861478,
                    "p50": 301.692099,
                    "p95": 306.68343999999996,
                    "p99": 306.68343999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 104.503019,
                    "min": 99.283761,
                    "p50": 100.56779999999999,
                    "p95": 104.503019,
                    "p99": 104.503019,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 172.889617,
                    "min": 133.90895799999998,
                    "p50": 172.377604,
                    "p95": 172.889617,
                    "p99": 172.889617,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 120.480215,
                    "min": 80.040618,
                    "p50": 118.66918799999999,
                    "p95": 120.480215,
                    "p99": 120.480215,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 55.990345999999995,
                    "min": 27.252119,
                    "p50": 53.050514,
                    "p95": 55.990345999999995,
                    "p99": 55.990345999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 239.72874099999999,
                    "min": 219.417782,
                    "p50": 236.764837,
                    "p95": 239.72874099999999,
                    "p99": 239.72874099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 143.831833,
                    "min": 128.400247,
                    "p50": 139.723477,
                    "p95": 143.831833,
                    "p99": 143.831833,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 118.35829199999999,
                    "min": 75.499797,
                    "p50": 115.27278199999999,
                    "p95": 118.35829199999999,
                    "p99": 118.35829199999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 169.25422899999998,
                    "min": 126.766801,
                    "p50": 164.613678,
                    "p95": 169.25422899999998,
                    "p99": 169.25422899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 558.651829,
                    "min": 549.880305,
                    "p50": 555.525893,
                    "p95": 558.651829,
                    "p99": 558.651829,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 368.597447,
                    "min": 360.604384,
                    "p50": 365.76500699999997,
                    "p95": 368.597447,
                    "p99": 368.597447,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 430.55467,
                    "min": 420.04566,
                    "p50": 423.133787,
                    "p95": 430.55467,
                    "p99": 430.55467,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 495.218164,
                    "min": 472.831704,
                    "p50": 487.737032,
                    "p95": 495.218164,
                    "p99": 495.218164,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 269.615217,
                    "min": 246.07026599999998,
                    "p50": 264.06802,
                    "p95": 269.615217,
                    "p99": 269.615217,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 191.327268,
                    "min": 184.58202,
                    "p50": 190.72939599999998,
                    "p95": 191.327268,
                    "p99": 191.327268,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.302584,
                    "min": 222.77479499999998,
                    "p50": 240.48087099999998,
                    "p95": 242.302584,
                    "p99": 242.302584,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.250815,
                    "min": 176.224754,
                    "p50": 214.573019,
                    "p95": 218.250815,
                    "p99": 218.250815,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 295.147987,
                    "min": 249.71193599999998,
                    "p50": 290.953684,
                    "p95": 295.147987,
                    "p99": 295.147987,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 316.500815,
                    "min": 305.637978,
                    "p50": 315.400576,
                    "p95": 316.500815,
                    "p99": 316.500815,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 394.16840099999996,
                    "min": 358.143426,
                    "p50": 390.2339,
                    "p95": 394.16840099999996,
                    "p99": 394.16840099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.753108,
                    "min": 307.473929,
                    "p50": 343.392399,
                    "p95": 345.753108,
                    "p99": 345.753108,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 319.876691,
                    "min": 275.409008,
                    "p50": 317.09146699999997,
                    "p95": 319.876691,
                    "p99": 319.876691,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 367.621743,
                    "min": 326.45289099999997,
                    "p50": 363.37555699999996,
                    "p95": 367.621743,
                    "p99": 367.621743,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 391.173031,
                    "min": 356.88271199999997,
                    "p50": 383.68397999999996,
                    "p95": 391.173031,
                    "p99": 391.173031,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 141.72488199999998,
                    "min": 101.90224099999999,
                    "p50": 138.69098,
                    "p95": 141.72488199999998,
                    "p99": 141.72488199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.47843799999998,
                    "min": 125.51970499999999,
                    "p50": 166.245693,
                    "p95": 168.47843799999998,
                    "p99": 168.47843799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.91215499999998,
                    "min": 200.302952,
                    "p50": 216.510492,
                    "p95": 218.91215499999998,
                    "p99": 218.91215499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.241754,
                    "min": 156.965349,
                    "p50": 189.19260599999998,
                    "p95": 193.241754,
                    "p99": 193.241754,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 294.437028,
                    "min": 268.475377,
                    "p50": 286.753226,
                    "p95": 294.437028,
                    "p99": 294.437028,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 114.14043099999999,
                    "min": 102.36092,
                    "p50": 112.787358,
                    "p95": 114.14043099999999,
                    "p99": 114.14043099999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 244.56841799999998,
                    "min": 200.192852,
                    "p50": 240.34369199999998,
                    "p95": 244.56841799999998,
                    "p99": 244.56841799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 485.15865099999996,
                    "min": 459.229651,
                    "p50": 480.841834,
                    "p95": 485.15865099999996,
                    "p99": 485.15865099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 558.72362,
                    "min": 500.809465,
                    "p50": 547.225961,
                    "p95": 558.72362,
                    "p99": 558.72362,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 422.047422,
                    "min": 379.598284,
                    "p50": 419.01493,
                    "p95": 422.047422,
                    "p99": 422.047422,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 270.253263,
                    "min": 222.694741,
                    "p50": 265.227629,
                    "p95": 270.253263,
                    "p99": 270.253263,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 340.854262,
                    "min": 298.349644,
                    "p50": 336.393552,
                    "p95": 340.854262,
                    "p99": 340.854262,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 369.848589,
                    "min": 349.039768,
                    "p50": 366.14588599999996,
                    "p95": 369.848589,
                    "p99": 369.848589,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 351.252577,
                    "min": 306.43278599999996,
                    "p50": 346.886163,
                    "p95": 351.252577,
                    "p99": 351.252577,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 395.900745,
                    "min": 388.071938,
                    "p50": 392.065996,
                    "p95": 395.900745,
                    "p99": 395.900745,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 463.477739,
                    "min": 450.779976,
                    "p50": 459.06195599999995,
                    "p95": 463.477739,
                    "p99": 463.477739,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 323.810461,
                    "min": 281.135739,
                    "p50": 320.096274,
                    "p95": 323.810461,
                    "p99": 323.810461,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 301.169327,
                    "min": 259.99359699999997,
                    "p50": 294.6997,
                    "p95": 301.169327,
                    "p99": 301.169327,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.967171,
                    "min": 70.91592399999999,
                    "p50": 106.564302,
                    "p95": 112.967171,
                    "p99": 112.967171,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 520.5704,
                    "min": 477.637592,
                    "p50": 510.14439699999997,
                    "p95": 520.5704,
                    "p99": 520.5704,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.174143,
                    "min": 261.525919,
                    "p50": 273.85985999999997,
                    "p95": 278.174143,
                    "p99": 278.174143,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 257.759214,
                    "min": 247.00258,
                    "p50": 250.447108,
                    "p95": 257.759214,
                    "p99": 257.759214,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 183.16794199999998,
                    "min": 156.496546,
                    "p50": 179.70224199999998,
                    "p95": 183.16794199999998,
                    "p99": 183.16794199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 230.14165599999998,
                    "min": 190.02334,
                    "p50": 224.33943,
                    "p95": 230.14165599999998,
                    "p99": 230.14165599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 206.65688,
                    "min": 189.43709199999998,
                    "p50": 202.47596299999998,
                    "p95": 206.65688,
                    "p99": 206.65688,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.808708,
                    "min": 127.887609,
                    "p50": 134.780039,
                    "p95": 137.808708,
                    "p99": 137.808708,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 160.117406,
                    "min": 135.979166,
                    "p50": 157.019827,
                    "p95": 160.117406,
                    "p99": 160.117406,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 394.515657,
                    "min": 375.050767,
                    "p50": 391.72630499999997,
                    "p95": 394.515657,
                    "p99": 394.515657,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 424.849292,
                    "min": 401.456124,
                    "p50": 418.502031,
                    "p95": 424.849292,
                    "p99": 424.849292,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 348.703464,
                    "min": 325.41238899999996,
                    "p50": 339.273039,
                    "p95": 348.703464,
                    "p99": 348.703464,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 492.626159,
                    "min": 461.15759699999995,
                    "p50": 485.94388999999995,
                    "p95": 492.626159,
                    "p99": 492.626159,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 141.797881,
                    "min": 131.4967,
                    "p50": 139.964888,
                    "p95": 141.797881,
                    "p99": 141.797881,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 318.759462,
                    "min": 276.445398,
                    "p50": 314.100454,
                    "p95": 318.759462,
                    "p99": 318.759462,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 553.621486,
                    "min": 531.992215,
                    "p50": 541.9396439999999,
                    "p95": 553.621486,
                    "p99": 553.621486,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.79742299999998,
                    "min": 184.804365,
                    "p50": 191.21652899999998,
                    "p95": 194.79742299999998,
                    "p99": 194.79742299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 239.957043,
                    "min": 199.612283,
                    "p50": 238.47071499999998,
                    "p95": 239.957043,
                    "p99": 239.957043,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 216.997763,
                    "min": 209.809358,
                    "p50": 214.926201,
                    "p95": 216.997763,
                    "p99": 216.997763,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 169.615964,
                    "min": 157.610431,
                    "p50": 165.560985,
                    "p95": 169.615964,
                    "p99": 169.615964,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 266.547512,
                    "min": 227.044132,
                    "p50": 263.99848099999997,
                    "p95": 266.547512,
                    "p99": 266.547512,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 293.25730999999996,
                    "min": 274.821581,
                    "p50": 289.990959,
                    "p95": 293.25730999999996,
                    "p99": 293.25730999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.61711,
                    "min": 112.468578,
                    "p50": 114.52745,
                    "p95": 120.61711,
                    "p99": 120.61711,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 368.5388,
                    "min": 326.639474,
                    "p50": 364.287168,
                    "p95": 368.5388,
                    "p99": 368.5388,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 595.907326,
                    "min": 546.958753,
                    "p50": 591.1244439999999,
                    "p95": 595.907326,
                    "p99": 595.907326,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 374.278772,
                    "min": 331.180415,
                    "p50": 371.82253099999997,
                    "p95": 374.278772,
                    "p99": 374.278772,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 447.43589599999996,
                    "min": 403.98481899999996,
                    "p50": 444.52052499999996,
                    "p95": 447.43589599999996,
                    "p99": 447.43589599999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 299.79558299999997,
                    "min": 254.840838,
                    "p50": 294.423841,
                    "p95": 299.79558299999997,
                    "p99": 299.79558299999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 262.350529,
                    "min": 224.349435,
                    "p50": 261.060784,
                    "p95": 262.350529,
                    "p99": 262.350529,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 412.60886,
                    "min": 389.87634099999997,
                    "p50": 407.065723,
                    "p95": 412.60886,
                    "p99": 412.60886,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.927429,
                    "min": 110.91546199999999,
                    "p50": 150.0359,
                    "p95": 156.927429,
                    "p99": 156.927429,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 191.502616,
                    "min": 147.359927,
                    "p50": 186.934562,
                    "p95": 191.502616,
                    "p99": 191.502616,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 338.535963,
                    "min": 299.37748999999997,
                    "p50": 327.10486599999996,
                    "p95": 338.535963,
                    "p99": 338.535963,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 225.681353,
                    "min": 184.16178299999999,
                    "p50": 222.323174,
                    "p95": 225.681353,
                    "p99": 225.681353,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 787.250777,
                    "min": 749.67881,
                    "p50": 770.4980059999999,
                    "p95": 787.250777,
                    "p99": 787.250777,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 484.70964,
                    "min": 448.482515,
                    "p50": 478.68391599999995,
                    "p95": 484.70964,
                    "p99": 484.70964,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 684.096243,
                    "min": 662.727625,
                    "p50": 679.597175,
                    "p95": 684.096243,
                    "p99": 684.096243,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 555.512392,
                    "min": 515.296534,
                    "p50": 550.024591,
                    "p95": 555.512392,
                    "p99": 555.512392,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 522.1859029999999,
                    "min": 492.06147,
                    "p50": 515.740151,
                    "p95": 522.1859029999999,
                    "p99": 522.1859029999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1152.303445,
                    "min": 1091.2604469999999,
                    "p50": 1135.178747,
                    "p95": 1152.303445,
                    "p99": 1152.303445,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 311.19985399999996,
                    "min": 235.623932,
                    "p50": 246.18666199999998,
                    "p95": 311.19985399999996,
                    "p99": 311.19985399999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 195.301253,
                    "min": 174.79469699999999,
                    "p50": 189.227489,
                    "p95": 195.301253,
                    "p99": 195.301253,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.033922,
                    "min": 214.24408699999998,
                    "p50": 219.29272,
                    "p95": 223.033922,
                    "p99": 223.033922,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.26437999999996,
                    "min": 306.59181,
                    "p50": 316.01271299999996,
                    "p95": 319.26437999999996,
                    "p99": 319.26437999999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.717224,
                    "min": 244.63100899999998,
                    "p50": 273.62719899999996,
                    "p95": 283.717224,
                    "p99": 283.717224,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.31913899999998,
                    "min": 167.532013,
                    "p50": 205.20057799999998,
                    "p95": 208.31913899999998,
                    "p99": 208.31913899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.606073,
                    "min": 41.009598,
                    "p50": 80.31543599999999,
                    "p95": 81.606073,
                    "p99": 81.606073,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.41483799999999,
                    "min": 92.713093,
                    "p50": 96.254404,
                    "p95": 100.41483799999999,
                    "p99": 100.41483799999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 222.383729,
                    "min": 170.77534699999998,
                    "p50": 178.921817,
                    "p95": 222.383729,
                    "p99": 222.383729,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.807333,
                    "min": 84.345263,
                    "p50": 121.912129,
                    "p95": 123.807333,
                    "p99": 123.807333,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.77875899999998,
                    "min": 150.28328399999998,
                    "p50": 161.865657,
                    "p95": 166.77875899999998,
                    "p99": 166.77875899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.56418099999999,
                    "min": 70.027441,
                    "p50": 109.52126,
                    "p95": 111.56418099999999,
                    "p99": 111.56418099999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 231.211544,
                    "min": 192.227039,
                    "p50": 230.138667,
                    "p95": 231.211544,
                    "p99": 231.211544,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.153628,
                    "min": 125.913305,
                    "p50": 148.28286799999998,
                    "p95": 152.153628,
                    "p99": 152.153628,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.74677599999998,
                    "min": 96.803721,
                    "p50": 130.984238,
                    "p95": 136.74677599999998,
                    "p99": 136.74677599999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 168.01787099999999,
                    "min": 159.04313199999999,
                    "p50": 165.439381,
                    "p95": 168.01787099999999,
                    "p99": 168.01787099999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.770613,
                    "min": 52.583225,
                    "p50": 89.612129,
                    "p95": 91.770613,
                    "p99": 91.770613,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.97152599999998,
                    "min": 102.48308399999999,
                    "p50": 140.021596,
                    "p95": 143.97152599999998,
                    "p99": 143.97152599999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 149.165223,
                    "min": 91.14799599999999,
                    "p50": 127.397077,
                    "p95": 149.165223,
                    "p99": 149.165223,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.61489599999999,
                    "min": 94.716088,
                    "p50": 116.11252599999999,
                    "p95": 121.61489599999999,
                    "p99": 121.61489599999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 230.520105,
                    "min": 191.47820199999998,
                    "p50": 228.25733699999998,
                    "p95": 230.520105,
                    "p99": 230.520105,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 260.149481,
                    "min": 167.114416,
                    "p50": 204.35778499999998,
                    "p95": 260.149481,
                    "p99": 260.149481,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 354.83131699999996,
                    "min": 289.97117099999997,
                    "p50": 294.814083,
                    "p95": 354.83131699999996,
                    "p99": 354.83131699999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 435.65570099999997,
                    "min": 413.495888,
                    "p50": 421.86830299999997,
                    "p95": 435.65570099999997,
                    "p99": 435.65570099999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 195.027416,
                    "min": 151.859928,
                    "p50": 191.444311,
                    "p95": 195.027416,
                    "p99": 195.027416,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 129.933997,
                    "min": 91.915183,
                    "p50": 102.853884,
                    "p95": 129.933997,
                    "p99": 129.933997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 184.164953,
                    "min": 140.26291899999998,
                    "p50": 176.148864,
                    "p95": 184.164953,
                    "p99": 184.164953,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.85598499999999,
                    "min": 38.627154,
                    "p50": 74.696298,
                    "p95": 76.85598499999999,
                    "p99": 76.85598499999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 220.30351499999998,
                    "min": 201.25517399999998,
                    "p50": 217.455705,
                    "p95": 220.30351499999998,
                    "p99": 220.30351499999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.371318,
                    "min": 253.61641999999998,
                    "p50": 261.935066,
                    "p95": 270.371318,
                    "p99": 270.371318,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 161.210897,
                    "min": 150.4106,
                    "p50": 153.77461599999998,
                    "p95": 161.210897,
                    "p99": 161.210897,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 803.5766689999999,
                    "min": 758.107677,
                    "p50": 795.27339,
                    "p95": 803.5766689999999,
                    "p99": 803.5766689999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 214.54251599999998,
                    "min": 184.832138,
                    "p50": 211.483758,
                    "p95": 214.54251599999998,
                    "p99": 214.54251599999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 155.10896599999998,
                    "min": 116.53631499999999,
                    "p50": 154.185239,
                    "p95": 155.10896599999998,
                    "p99": 155.10896599999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 269.185918,
                    "min": 252.598445,
                    "p50": 266.917799,
                    "p95": 269.185918,
                    "p99": 269.185918,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 117.935986,
                    "min": 115.199855,
                    "p50": 115.836756,
                    "p95": 117.935986,
                    "p99": 117.935986,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 424.406314,
                    "min": 383.471229,
                    "p50": 419.812279,
                    "p95": 424.406314,
                    "p99": 424.406314,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 327.774143,
                    "min": 320.307039,
                    "p50": 324.852487,
                    "p95": 327.774143,
                    "p99": 327.774143,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 309.658839,
                    "min": 299.415796,
                    "p50": 307.167088,
                    "p95": 309.658839,
                    "p99": 309.658839,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 101.671398,
                    "min": 92.654692,
                    "p50": 97.568793,
                    "p95": 101.671398,
                    "p99": 101.671398,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 135.21876799999998,
                    "min": 108.687129,
                    "p50": 132.094124,
                    "p95": 135.21876799999998,
                    "p99": 135.21876799999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 370.484716,
                    "min": 336.962138,
                    "p50": 368.137639,
                    "p95": 370.484716,
                    "p99": 370.484716,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 194.002097,
                    "min": 154.41199699999999,
                    "p50": 191.051413,
                    "p95": 194.002097,
                    "p99": 194.002097,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 253.151593,
                    "min": 211.982667,
                    "p50": 247.09283399999998,
                    "p95": 253.151593,
                    "p99": 253.151593,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 172.882048,
                    "min": 133.986275,
                    "p50": 171.67568799999998,
                    "p95": 172.882048,
                    "p99": 172.882048,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 290.894639,
                    "min": 247.929069,
                    "p50": 284.757947,
                    "p95": 290.894639,
                    "p99": 290.894639,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 611.699903,
                    "min": 599.4230789999999,
                    "p50": 606.850918,
                    "p95": 611.699903,
                    "p99": 611.699903,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 992.98902,
                    "min": 979.24856,
                    "p50": 991.705116,
                    "p95": 992.98902,
                    "p99": 992.98902,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 231.844471,
                    "min": 208.88332499999999,
                    "p50": 229.82295499999998,
                    "p95": 231.844471,
                    "p99": 231.844471,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 116.42189499999999,
                    "min": 77.18204399999999,
                    "p50": 115.15091199999999,
                    "p95": 116.42189499999999,
                    "p99": 116.42189499999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 261.039833,
                    "min": 237.49790099999998,
                    "p50": 258.78441399999997,
                    "p95": 261.039833,
                    "p99": 261.039833,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 369.75879399999997,
                    "min": 361.473264,
                    "p50": 368.65827099999996,
                    "p95": 369.75879399999997,
                    "p99": 369.75879399999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 596.0498299999999,
                    "min": 571.635532,
                    "p50": 587.9158669999999,
                    "p95": 596.0498299999999,
                    "p99": 596.0498299999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 480.52092899999997,
                    "min": 437.898381,
                    "p50": 478.882372,
                    "p95": 480.52092899999997,
                    "p99": 480.52092899999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.695123,
                    "min": 88.12859999999999,
                    "p50": 125.61695599999999,
                    "p95": 126.695123,
                    "p99": 126.695123,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 232.54726,
                    "min": 214.481359,
                    "p50": 227.901426,
                    "p95": 232.54726,
                    "p99": 232.54726,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.937211,
                    "min": 66.702269,
                    "p50": 105.041955,
                    "p95": 132.937211,
                    "p99": 132.937211,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 193.98209599999998,
                    "min": 154.59674099999998,
                    "p50": 191.858275,
                    "p95": 193.98209599999998,
                    "p99": 193.98209599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 204.161878,
                    "min": 196.31864299999998,
                    "p50": 203.081955,
                    "p95": 204.161878,
                    "p99": 204.161878,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 105.023324,
                    "min": 45.610412,
                    "p50": 83.56582499999999,
                    "p95": 105.023324,
                    "p99": 105.023324,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 161.171483,
                    "min": 145.517842,
                    "p50": 159.09096,
                    "p95": 161.171483,
                    "p99": 161.171483,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 171.230719,
                    "min": 163.555654,
                    "p50": 170.525285,
                    "p95": 171.230719,
                    "p99": 171.230719,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.64069699999999,
                    "min": 55.240845,
                    "p50": 93.76385499999999,
                    "p95": 94.64069699999999,
                    "p99": 94.64069699999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.02104299999999,
                    "min": 64.953077,
                    "p50": 66.372265,
                    "p95": 89.02104299999999,
                    "p99": 89.02104299999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 182.65621199999998,
                    "min": 144.155082,
                    "p50": 181.77597699999998,
                    "p95": 182.65621199999998,
                    "p99": 182.65621199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.601072,
                    "min": 110.1832,
                    "p50": 148.53328,
                    "p95": 149.601072,
                    "p99": 149.601072,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 138.933884,
                    "min": 120.41359999999999,
                    "p50": 137.24085,
                    "p95": 138.933884,
                    "p99": 138.933884,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 217.45351499999998,
                    "min": 185.705944,
                    "p50": 213.321618,
                    "p95": 217.45351499999998,
                    "p99": 217.45351499999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 321.21202,
                    "min": 293.478749,
                    "p50": 312.507387,
                    "p95": 321.21202,
                    "p99": 321.21202,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 279.222144,
                    "min": 237.919004,
                    "p50": 275.401974,
                    "p95": 279.222144,
                    "p99": 279.222144,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 102.17805,
                    "min": 60.041900999999996,
                    "p50": 98.312449,
                    "p95": 102.17805,
                    "p99": 102.17805,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 439.63082299999996,
                    "min": 400.961973,
                    "p50": 432.376512,
                    "p95": 439.63082299999996,
                    "p99": 439.63082299999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 199.564144,
                    "min": 158.934475,
                    "p50": 194.907329,
                    "p95": 199.564144,
                    "p99": 199.564144,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 141.368931,
                    "min": 100.953396,
                    "p50": 138.211906,
                    "p95": 141.368931,
                    "p99": 141.368931,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 262.96743499999997,
                    "min": 253.971252,
                    "p50": 255.716378,
                    "p95": 262.96743499999997,
                    "p99": 262.96743499999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 159.393714,
                    "min": 135.991344,
                    "p50": 157.99428699999999,
                    "p95": 159.393714,
                    "p99": 159.393714,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 388.824587,
                    "min": 362.25740099999996,
                    "p50": 380.75834699999996,
                    "p95": 388.824587,
                    "p99": 388.824587,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 120.225746,
                    "min": 106.57847799999999,
                    "p50": 118.063903,
                    "p95": 120.225746,
                    "p99": 120.225746,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 339.41470799999996,
                    "min": 298.949586,
                    "p50": 337.0182,
                    "p95": 339.41470799999996,
                    "p99": 339.41470799999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 180.113281,
                    "min": 160.522057,
                    "p50": 177.566297,
                    "p95": 180.113281,
                    "p99": 180.113281,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 299.928589,
                    "min": 273.449726,
                    "p50": 297.14939599999997,
                    "p95": 299.928589,
                    "p99": 299.928589,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 241.54693,
                    "min": 198.992269,
                    "p50": 237.210782,
                    "p95": 241.54693,
                    "p99": 241.54693,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 143.187207,
                    "min": 103.85738599999999,
                    "p50": 125.74407799999999,
                    "p95": 143.187207,
                    "p99": 143.187207,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 300.053745,
                    "min": 255.916678,
                    "p50": 294.46255099999996,
                    "p95": 300.053745,
                    "p99": 300.053745,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 199.745421,
                    "min": 191.112234,
                    "p50": 193.813785,
                    "p95": 199.745421,
                    "p99": 199.745421,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 267.563584,
                    "min": 255.76978799999998,
                    "p50": 261.91119399999997,
                    "p95": 267.563584,
                    "p99": 267.563584,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 471.788503,
                    "min": 376.827004,
                    "p50": 381.83808999999997,
                    "p95": 471.788503,
                    "p99": 471.788503,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 229.128574,
                    "min": 224.19602999999998,
                    "p50": 227.765189,
                    "p95": 229.128574,
                    "p99": 229.128574,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 294.47355999999996,
                    "min": 239.748562,
                    "p50": 278.371811,
                    "p95": 294.47355999999996,
                    "p99": 294.47355999999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 683.462584,
                    "min": 545.92638,
                    "p50": 554.281967,
                    "p95": 683.462584,
                    "p99": 683.462584,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 159.460368,
                    "min": 137.242542,
                    "p50": 158.25617599999998,
                    "p95": 159.460368,
                    "p99": 159.460368,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 93.45203,
                    "min": 78.85194899999999,
                    "p50": 90.260521,
                    "p95": 93.45203,
                    "p99": 93.45203,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 211.876633,
                    "min": 203.896562,
                    "p50": 210.06532299999998,
                    "p95": 211.876633,
                    "p99": 211.876633,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 141.787274,
                    "min": 135.303538,
                    "p50": 139.308528,
                    "p95": 141.787274,
                    "p99": 141.787274,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 107.864622,
                    "min": 68.4797,
                    "p50": 107.42252699999999,
                    "p95": 107.864622,
                    "p99": 107.864622,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 180.59148,
                    "min": 159.134921,
                    "p50": 174.290711,
                    "p95": 180.59148,
                    "p99": 180.59148,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 340.867018,
                    "min": 299.05492,
                    "p50": 336.05778899999996,
                    "p95": 340.867018,
                    "p99": 340.867018,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 246.29325899999998,
                    "min": 238.70703699999999,
                    "p50": 243.769579,
                    "p95": 246.29325899999998,
                    "p99": 246.29325899999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.69122099999998,
                    "min": 194.003245,
                    "p50": 203.759371,
                    "p95": 205.69122099999998,
                    "p99": 205.69122099999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 235.025468,
                    "min": 228.91833699999998,
                    "p50": 231.758602,
                    "p95": 235.025468,
                    "p99": 235.025468,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.516969,
                    "min": 224.897992,
                    "p50": 247.66282099999998,
                    "p95": 251.516969,
                    "p99": 251.516969,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 168.693706,
                    "min": 134.324792,
                    "p50": 163.356741,
                    "p95": 168.693706,
                    "p99": 168.693706,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.184046,
                    "min": 83.630748,
                    "p50": 121.282055,
                    "p95": 125.184046,
                    "p99": 125.184046,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.579195,
                    "min": 111.17710299999999,
                    "p50": 148.949117,
                    "p95": 151.579195,
                    "p99": 151.579195,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.894707,
                    "min": 55.857327999999995,
                    "p50": 94.337121,
                    "p95": 97.894707,
                    "p99": 97.894707,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.19695499999999,
                    "min": 69.338942,
                    "p50": 107.54303999999999,
                    "p95": 111.19695499999999,
                    "p99": 111.19695499999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.381543,
                    "min": 153.225981,
                    "p50": 176.793261,
                    "p95": 177.381543,
                    "p99": 177.381543,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.058959,
                    "min": 121.43681199999999,
                    "p50": 134.60474,
                    "p95": 138.058959,
                    "p99": 138.058959,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 316.90147099999996,
                    "min": 293.59946099999996,
                    "p50": 312.781117,
                    "p95": 316.90147099999996,
                    "p99": 316.90147099999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 192.911854,
                    "min": 152.041642,
                    "p50": 190.456119,
                    "p95": 192.911854,
                    "p99": 192.911854,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 280.044294,
                    "min": 241.013387,
                    "p50": 276.85567499999996,
                    "p95": 280.044294,
                    "p99": 280.044294,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.006346,
                    "min": 41.814823,
                    "p50": 74.545181,
                    "p95": 82.006346,
                    "p99": 82.006346,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.868921,
                    "min": 179.26568,
                    "p50": 217.287649,
                    "p95": 219.868921,
                    "p99": 219.868921,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 168.986985,
                    "min": 130.01489,
                    "p50": 167.96209399999998,
                    "p95": 168.986985,
                    "p99": 168.986985,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.641482,
                    "min": 65.15646199999999,
                    "p50": 99.576752,
                    "p95": 104.641482,
                    "p99": 104.641482,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 83.49468399999999,
                    "min": 44.031853999999996,
                    "p50": 81.44555799999999,
                    "p95": 83.49468399999999,
                    "p99": 83.49468399999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 66.403548,
                    "min": 32.744754,
                    "p50": 61.012018,
                    "p95": 66.403548,
                    "p99": 66.403548,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 179.43902799999998,
                    "min": 159.30081099999998,
                    "p50": 177.014413,
                    "p95": 179.43902799999998,
                    "p99": 179.43902799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 202.515322,
                    "min": 162.698267,
                    "p50": 200.06900199999998,
                    "p95": 202.515322,
                    "p99": 202.515322,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 139.10513,
                    "min": 114.26590499999999,
                    "p50": 136.103959,
                    "p95": 139.10513,
                    "p99": 139.10513,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 253.449265,
                    "min": 215.618608,
                    "p50": 246.900062,
                    "p95": 253.449265,
                    "p99": 253.449265,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 209.535711,
                    "min": 132.32294,
                    "p50": 145.65385,
                    "p95": 209.535711,
                    "p99": 209.535711,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 116.247773,
                    "min": 107.03721999999999,
                    "p50": 113.956893,
                    "p95": 116.247773,
                    "p99": 116.247773,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 228.299047,
                    "min": 213.264128,
                    "p50": 227.792776,
                    "p95": 228.299047,
                    "p99": 228.299047,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 273.103565,
                    "min": 165.41276299999998,
                    "p50": 188.698148,
                    "p95": 273.103565,
                    "p99": 273.103565,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.799185,
                    "min": 80.797592,
                    "p50": 91.564393,
                    "p95": 98.799185,
                    "p99": 98.799185,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 128.44984,
                    "min": 103.893885,
                    "p50": 126.582909,
                    "p95": 128.44984,
                    "p99": 128.44984,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.628228,
                    "min": 328.444704,
                    "p50": 360.21085999999997,
                    "p95": 365.628228,
                    "p99": 365.628228,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 221.85199599999999,
                    "min": 120.25837299999999,
                    "p50": 156.304645,
                    "p95": 221.85199599999999,
                    "p99": 221.85199599999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 471.10455199999996,
                    "min": 429.83012399999996,
                    "p50": 467.477534,
                    "p95": 471.10455199999996,
                    "p99": 471.10455199999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.819329,
                    "min": 400.581752,
                    "p50": 406.457489,
                    "p95": 411.819329,
                    "p99": 411.819329,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 229.076946,
                    "min": 188.04115399999998,
                    "p50": 224.277357,
                    "p95": 229.076946,
                    "p99": 229.076946,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 782.920982,
                    "min": 765.2181009999999,
                    "p50": 780.992949,
                    "p95": 782.920982,
                    "p99": 782.920982,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 561.2540829999999,
                    "min": 534.645823,
                    "p50": 549.8056419999999,
                    "p95": 561.2540829999999,
                    "p99": 561.2540829999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 266.59527199999997,
                    "min": 247.94021099999998,
                    "p50": 261.262765,
                    "p95": 266.59527199999997,
                    "p99": 266.59527199999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 593.1662759999999,
                    "min": 579.562326,
                    "p50": 590.5855389999999,
                    "p95": 593.1662759999999,
                    "p99": 593.1662759999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 301.73426,
                    "min": 265.397541,
                    "p50": 297.79803899999996,
                    "p95": 301.73426,
                    "p99": 301.73426,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 488.592175,
                    "min": 473.634364,
                    "p50": 483.80987,
                    "p95": 488.592175,
                    "p99": 488.592175,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 377.864324,
                    "min": 361.526349,
                    "p50": 371.87519799999995,
                    "p95": 377.864324,
                    "p99": 377.864324,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 524.181283,
                    "min": 501.304394,
                    "p50": 519.762131,
                    "p95": 524.181283,
                    "p99": 524.181283,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 690.7804619999999,
                    "min": 677.927611,
                    "p50": 687.410413,
                    "p95": 690.7804619999999,
                    "p99": 690.7804619999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 338.498232,
                    "min": 326.558494,
                    "p50": 336.00181699999996,
                    "p95": 338.498232,
                    "p99": 338.498232,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 452.52113599999996,
                    "min": 435.534366,
                    "p50": 447.924267,
                    "p95": 452.52113599999996,
                    "p99": 452.52113599999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.741871,
                    "min": 112.516048,
                    "p50": 151.359071,
                    "p95": 151.741871,
                    "p99": 151.741871,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 189.716308,
                    "min": 147.270412,
                    "p50": 187.390567,
                    "p95": 189.716308,
                    "p99": 189.716308,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 186.935556,
                    "min": 147.616266,
                    "p50": 181.230979,
                    "p95": 186.935556,
                    "p99": 186.935556,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.634192,
                    "min": 59.376973,
                    "p50": 96.756278,
                    "p95": 100.634192,
                    "p99": 100.634192,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 222.44520799999998,
                    "min": 182.7026,
                    "p50": 216.12429,
                    "p95": 222.44520799999998,
                    "p99": 222.44520799999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 247.626792,
                    "min": 207.451334,
                    "p50": 245.163389,
                    "p95": 247.626792,
                    "p99": 247.626792,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.01415499999999,
                    "min": 103.99098199999999,
                    "p50": 112.649683,
                    "p95": 115.01415499999999,
                    "p99": 115.01415499999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 173.012573,
                    "min": 133.737822,
                    "p50": 170.73683599999998,
                    "p95": 173.012573,
                    "p99": 173.012573,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 162.447235,
                    "min": 119.79239799999999,
                    "p50": 156.01340399999998,
                    "p95": 162.447235,
                    "p99": 162.447235,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 134.354112,
                    "min": 89.87419899999999,
                    "p50": 126.281167,
                    "p95": 134.354112,
                    "p99": 134.354112,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.76818399999999,
                    "min": 77.591977,
                    "p50": 82.699803,
                    "p95": 86.76818399999999,
                    "p99": 86.76818399999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 301.87323499999997,
                    "min": 286.712519,
                    "p50": 296.532783,
                    "p95": 301.87323499999997,
                    "p99": 301.87323499999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 204.50717999999998,
                    "min": 183.260468,
                    "p50": 200.617941,
                    "p95": 204.50717999999998,
                    "p99": 204.50717999999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 232.75717899999998,
                    "min": 206.63451899999998,
                    "p50": 230.53918399999998,
                    "p95": 232.75717899999998,
                    "p99": 232.75717899999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 337.73098999999996,
                    "min": 328.46801,
                    "p50": 333.60547099999997,
                    "p95": 337.73098999999996,
                    "p99": 337.73098999999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 261.191689,
                    "min": 258.029746,
                    "p50": 260.448036,
                    "p95": 261.191689,
                    "p99": 261.191689,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.025474,
                    "min": 103.977344,
                    "p50": 141.572884,
                    "p95": 145.025474,
                    "p99": 145.025474,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.466204,
                    "min": 243.502185,
                    "p50": 281.21734699999996,
                    "p95": 283.466204,
                    "p99": 283.466204,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.046707,
                    "min": 162.215704,
                    "p50": 177.025845,
                    "p95": 179.046707,
                    "p99": 179.046707,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 233.72323699999998,
                    "min": 208.087266,
                    "p50": 232.65370099999998,
                    "p95": 233.72323699999998,
                    "p99": 233.72323699999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 252.07312299999998,
                    "min": 211.220005,
                    "p50": 247.87301499999998,
                    "p95": 252.07312299999998,
                    "p99": 252.07312299999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.337691,
                    "min": 282.548327,
                    "p50": 310.456614,
                    "p95": 319.337691,
                    "p99": 319.337691,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 197.202196,
                    "min": 185.977746,
                    "p50": 193.59854099999998,
                    "p95": 197.202196,
                    "p99": 197.202196,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.738805,
                    "min": 84.137947,
                    "p50": 122.382786,
                    "p95": 123.738805,
                    "p99": 123.738805,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.437862,
                    "min": 129.19598299999998,
                    "p50": 149.62395899999999,
                    "p95": 152.437862,
                    "p99": 152.437862,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 221.12713,
                    "min": 181.837669,
                    "p50": 218.81045899999998,
                    "p95": 221.12713,
                    "p99": 221.12713,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.04215,
                    "min": 167.599907,
                    "p50": 206.131349,
                    "p95": 208.04215,
                    "p99": 208.04215,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 457.336526,
                    "min": 415.23510799999997,
                    "p50": 453.77201099999996,
                    "p95": 457.336526,
                    "p99": 457.336526,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.971811,
                    "min": 97.938329,
                    "p50": 135.286048,
                    "p95": 137.971811,
                    "p99": 137.971811,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.770822,
                    "min": 42.441928,
                    "p50": 80.005021,
                    "p95": 83.770822,
                    "p99": 83.770822,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.553961,
                    "min": 70.229261,
                    "p50": 107.475313,
                    "p95": 110.553961,
                    "p99": 110.553961,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.431655,
                    "min": 125.746511,
                    "p50": 163.461557,
                    "p95": 165.431655,
                    "p99": 165.431655,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.64571,
                    "min": 56.500052,
                    "p50": 94.657687,
                    "p95": 96.64571,
                    "p99": 96.64571,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 673.832809,
                    "min": 656.943711,
                    "p50": 664.1090829999999,
                    "p95": 673.832809,
                    "p99": 673.832809,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 339.252082,
                    "min": 290.632506,
                    "p50": 332.694864,
                    "p95": 339.252082,
                    "p99": 339.252082,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.09651399999998,
                    "min": 158.417916,
                    "p50": 164.72753699999998,
                    "p95": 170.09651399999998,
                    "p99": 170.09651399999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.08451599999998,
                    "min": 170.94983,
                    "p50": 207.489298,
                    "p95": 211.08451599999998,
                    "p99": 211.08451599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 481.096835,
                    "min": 449.88858799999997,
                    "p50": 459.989382,
                    "p95": 481.096835,
                    "p99": 481.096835,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 293.837086,
                    "min": 287.48513299999996,
                    "p50": 292.596694,
                    "p95": 293.837086,
                    "p99": 293.837086,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 905.798359,
                    "min": 835.6236289999999,
                    "p50": 883.08132,
                    "p95": 905.798359,
                    "p99": 905.798359,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.20566599999998,
                    "min": 232.33980699999998,
                    "p50": 247.45196199999998,
                    "p95": 252.20566599999998,
                    "p99": 252.20566599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 506.98699,
                    "min": 493.534158,
                    "p50": 495.33167299999997,
                    "p95": 506.98699,
                    "p99": 506.98699,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 384.756261,
                    "min": 368.238357,
                    "p50": 375.24852999999996,
                    "p95": 384.756261,
                    "p99": 384.756261,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 551.452218,
                    "min": 514.725698,
                    "p50": 535.116767,
                    "p95": 551.452218,
                    "p99": 551.452218,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 588.307649,
                    "min": 568.322291,
                    "p50": 579.162235,
                    "p95": 588.307649,
                    "p99": 588.307649,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 779.004648,
                    "min": 723.8435969999999,
                    "p50": 762.134965,
                    "p95": 779.004648,
                    "p99": 779.004648,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 642.276255,
                    "min": 603.0687389999999,
                    "p50": 620.008523,
                    "p95": 642.276255,
                    "p99": 642.276255,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 420.06382099999996,
                    "min": 375.439284,
                    "p50": 411.946508,
                    "p95": 420.06382099999996,
                    "p99": 420.06382099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.532592,
                    "min": 55.601935,
                    "p50": 93.802652,
                    "p95": 95.532592,
                    "p99": 95.532592,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.206392,
                    "min": 207.957742,
                    "p50": 245.146381,
                    "p95": 246.206392,
                    "p99": 246.206392,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 189.24181199999998,
                    "min": 153.044962,
                    "p50": 187.014659,
                    "p95": 189.24181199999998,
                    "p99": 189.24181199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.951503,
                    "min": 126.73282499999999,
                    "p50": 161.776873,
                    "p95": 163.951503,
                    "p99": 163.951503,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.83594799999999,
                    "min": 103.824612,
                    "p50": 120.784578,
                    "p95": 122.83594799999999,
                    "p99": 122.83594799999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.040734,
                    "min": 42.295052,
                    "p50": 79.868551,
                    "p95": 86.040734,
                    "p99": 86.040734,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.97724,
                    "min": 106.692527,
                    "p50": 108.07580399999999,
                    "p95": 112.97724,
                    "p99": 112.97724,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 233.962327,
                    "min": 219.14749899999998,
                    "p50": 233.040652,
                    "p95": 233.962327,
                    "p99": 233.962327,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.568216,
                    "min": 274.147311,
                    "p50": 282.143518,
                    "p95": 283.568216,
                    "p99": 283.568216,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.330843,
                    "min": 128.736698,
                    "p50": 135.370501,
                    "p95": 137.330843,
                    "p99": 137.330843,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.156399,
                    "min": 138.17407799999998,
                    "p50": 176.50689599999998,
                    "p95": 178.156399,
                    "p99": 178.156399,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 316.797952,
                    "min": 298.607888,
                    "p50": 314.06089499999996,
                    "p95": 316.797952,
                    "p99": 316.797952,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.80696,
                    "min": 191.12224,
                    "p50": 204.663762,
                    "p95": 206.80696,
                    "p99": 206.80696,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.708093,
                    "min": 148.307245,
                    "p50": 149.448106,
                    "p95": 152.708093,
                    "p99": 152.708093,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 230.595983,
                    "min": 179.55343299999998,
                    "p50": 218.790216,
                    "p95": 230.595983,
                    "p99": 230.595983,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1072.162077,
                    "min": 1034.961574,
                    "p50": 1061.9016179999999,
                    "p95": 1072.162077,
                    "p99": 1072.162077,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 586.46517,
                    "min": 542.7995109999999,
                    "p50": 577.9332449999999,
                    "p95": 586.46517,
                    "p99": 586.46517,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 729.464973,
                    "min": 693.603698,
                    "p50": 703.563584,
                    "p95": 729.464973,
                    "p99": 729.464973,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 798.0460869999999,
                    "min": 735.910505,
                    "p50": 783.143251,
                    "p95": 798.0460869999999,
                    "p99": 798.0460869999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1000.722713,
                    "min": 951.3783149999999,
                    "p50": 975.365068,
                    "p95": 1000.722713,
                    "p99": 1000.722713,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 931.7653849999999,
                    "min": 900.803019,
                    "p50": 918.0584859999999,
                    "p95": 931.7653849999999,
                    "p99": 931.7653849999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 317.9346,
                    "min": 302.353372,
                    "p50": 312.38309899999996,
                    "p95": 317.9346,
                    "p99": 317.9346,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 652.0954939999999,
                    "min": 613.8070839999999,
                    "p50": 650.297162,
                    "p95": 652.0954939999999,
                    "p99": 652.0954939999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 863.585877,
                    "min": 819.101508,
                    "p50": 852.373108,
                    "p95": 863.585877,
                    "p99": 863.585877,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1236.696506,
                    "min": 1175.45942,
                    "p50": 1223.138397,
                    "p95": 1236.696506,
                    "p99": 1236.696506,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 383.666964,
                    "min": 351.67697999999996,
                    "p50": 374.27883399999996,
                    "p95": 383.666964,
                    "p99": 383.666964,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 521.2421039999999,
                    "min": 467.87323899999996,
                    "p50": 515.556368,
                    "p95": 521.2421039999999,
                    "p99": 521.2421039999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 247.019589,
                    "min": 203.37684399999998,
                    "p50": 243.44099799999998,
                    "p95": 247.019589,
                    "p99": 247.019589,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 453.830336,
                    "min": 420.33856599999996,
                    "p50": 448.303109,
                    "p95": 453.830336,
                    "p99": 453.830336,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1409.606769,
                    "min": 1358.460995,
                    "p50": 1391.078442,
                    "p95": 1409.606769,
                    "p99": 1409.606769,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1363.013442,
                    "min": 1341.359563,
                    "p50": 1356.567273,
                    "p95": 1363.013442,
                    "p99": 1363.013442,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 969.7049519999999,
                    "min": 945.673108,
                    "p50": 959.889236,
                    "p95": 969.7049519999999,
                    "p99": 969.7049519999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 839.771677,
                    "min": 818.988469,
                    "p50": 832.041348,
                    "p95": 839.771677,
                    "p99": 839.771677,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 649.656311,
                    "min": 594.828937,
                    "p50": 630.806081,
                    "p95": 649.656311,
                    "p99": 649.656311,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 571.941882,
                    "min": 546.2668249999999,
                    "p50": 565.785044,
                    "p95": 571.941882,
                    "p99": 571.941882,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 441.579072,
                    "min": 394.290552,
                    "p50": 431.96365299999997,
                    "p95": 441.579072,
                    "p99": 441.579072,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 909.005286,
                    "min": 886.5205659999999,
                    "p50": 900.769552,
                    "p95": 909.005286,
                    "p99": 909.005286,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 309.990979,
                    "min": 300.42362299999996,
                    "p50": 306.07815999999997,
                    "p95": 309.990979,
                    "p99": 309.990979,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 778.221624,
                    "min": 734.084298,
                    "p50": 767.9539209999999,
                    "p95": 778.221624,
                    "p99": 778.221624,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 373.917197,
                    "min": 346.884431,
                    "p50": 368.966441,
                    "p95": 373.917197,
                    "p99": 373.917197,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1200.8300689999999,
                    "min": 1161.107428,
                    "p50": 1186.399607,
                    "p95": 1200.8300689999999,
                    "p99": 1200.8300689999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 236.970363,
                    "min": 230.49900399999999,
                    "p50": 236.18658499999998,
                    "p95": 236.970363,
                    "p99": 236.970363,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 512.6577629999999,
                    "min": 495.278896,
                    "p50": 506.08733099999995,
                    "p95": 512.6577629999999,
                    "p99": 512.6577629999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1040.562793,
                    "min": 985.152848,
                    "p50": 1025.232307,
                    "p95": 1040.562793,
                    "p99": 1040.562793,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 700.2255339999999,
                    "min": 684.2862289999999,
                    "p50": 695.136163,
                    "p95": 700.2255339999999,
                    "p99": 700.2255339999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 774.870451,
                    "min": 754.592586,
                    "p50": 772.869201,
                    "p95": 774.870451,
                    "p99": 774.870451,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 438.52937099999997,
                    "min": 392.537336,
                    "p50": 434.368469,
                    "p95": 438.52937099999997,
                    "p99": 438.52937099999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 373.87911299999996,
                    "min": 336.71252,
                    "p50": 370.15369,
                    "p95": 373.87911299999996,
                    "p99": 373.87911299999996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 706.7309759999999,
                    "min": 684.4554489999999,
                    "p50": 699.799956,
                    "p95": 706.7309759999999,
                    "p99": 706.7309759999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1374.4660939999999,
                    "min": 1331.632606,
                    "p50": 1349.916182,
                    "p95": 1374.4660939999999,
                    "p99": 1374.4660939999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 305.797438,
                    "min": 296.42462,
                    "p50": 305.24463,
                    "p95": 305.797438,
                    "p99": 305.797438,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 510.14354199999997,
                    "min": 498.737713,
                    "p50": 504.30228999999997,
                    "p95": 510.14354199999997,
                    "p99": 510.14354199999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.082887,
                    "min": 206.98074699999998,
                    "p50": 236.825551,
                    "p95": 243.082887,
                    "p99": 243.082887,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1039.34878,
                    "min": 1012.652757,
                    "p50": 1034.703066,
                    "p95": 1039.34878,
                    "p99": 1039.34878,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 985.1802429999999,
                    "min": 945.943276,
                    "p50": 960.532532,
                    "p95": 985.1802429999999,
                    "p99": 985.1802429999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 840.542111,
                    "min": 814.447598,
                    "p50": 824.511666,
                    "p95": 840.542111,
                    "p99": 840.542111,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 897.958441,
                    "min": 881.636362,
                    "p50": 893.763026,
                    "p95": 897.958441,
                    "p99": 897.958441,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 642.9999829999999,
                    "min": 627.202672,
                    "p50": 634.501393,
                    "p95": 642.9999829999999,
                    "p99": 642.9999829999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1202.4579039999999,
                    "min": 1164.2904979999998,
                    "p50": 1196.258005,
                    "p95": 1202.4579039999999,
                    "p99": 1202.4579039999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 579.828504,
                    "min": 559.484108,
                    "p50": 569.2029259999999,
                    "p95": 579.828504,
                    "p99": 579.828504,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 323.17167,
                    "min": 296.837091,
                    "p50": 322.586844,
                    "p95": 323.17167,
                    "p99": 323.17167,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 198.998423,
                    "min": 181.043119,
                    "p50": 193.701902,
                    "p95": 198.998423,
                    "p99": 198.998423,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 374.13237899999996,
                    "min": 329.868625,
                    "p50": 365.041474,
                    "p95": 374.13237899999996,
                    "p99": 374.13237899999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 438.167489,
                    "min": 414.934265,
                    "p50": 419.705653,
                    "p95": 438.167489,
                    "p99": 438.167489,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 107.88158999999999,
                    "min": 78.931512,
                    "p50": 105.047956,
                    "p95": 107.88158999999999,
                    "p99": 107.88158999999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 303.35119499999996,
                    "min": 266.44699399999996,
                    "p50": 301.89865599999996,
                    "p95": 303.35119499999996,
                    "p99": 303.35119499999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 176.874224,
                    "min": 132.441552,
                    "p50": 170.148886,
                    "p95": 176.874224,
                    "p99": 176.874224,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 129.541053,
                    "min": 117.864294,
                    "p50": 124.71455999999999,
                    "p95": 129.541053,
                    "p99": 129.541053,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 721.463082,
                    "min": 654.701502,
                    "p50": 694.096473,
                    "p95": 721.463082,
                    "p99": 721.463082,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 244.03502,
                    "min": 222.018236,
                    "p50": 236.974165,
                    "p95": 244.03502,
                    "p99": 244.03502,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.419311,
                    "min": 253.28088799999998,
                    "p50": 278.934357,
                    "p95": 282.419311,
                    "p99": 282.419311,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 347.55801199999996,
                    "min": 306.44532899999996,
                    "p50": 343.23728,
                    "p95": 347.55801199999996,
                    "p99": 347.55801199999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.775007,
                    "min": 134.88166999999999,
                    "p50": 148.646793,
                    "p95": 149.775007,
                    "p99": 149.775007,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1134.782217,
                    "min": 1086.623347,
                    "p50": 1127.54903,
                    "p95": 1134.782217,
                    "p99": 1134.782217,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 495.60306099999997,
                    "min": 460.695558,
                    "p50": 476.25476999999995,
                    "p95": 495.60306099999997,
                    "p99": 495.60306099999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 259.461048,
                    "min": 227.538657,
                    "p50": 256.821995,
                    "p95": 259.461048,
                    "p99": 259.461048,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 218.625587,
                    "min": 181.309286,
                    "p50": 215.31880099999998,
                    "p95": 218.625587,
                    "p99": 218.625587,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 919.9640099999999,
                    "min": 872.282792,
                    "p50": 912.617844,
                    "p95": 919.9640099999999,
                    "p99": 919.9640099999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 323.335262,
                    "min": 315.905895,
                    "p50": 319.799405,
                    "p95": 323.335262,
                    "p99": 323.335262,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.81375799999999,
                    "min": 85.16041899999999,
                    "p50": 122.997543,
                    "p95": 125.81375799999999,
                    "p99": 125.81375799999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.99718199999998,
                    "min": 184.60751199999999,
                    "p50": 220.38807799999998,
                    "p95": 223.99718199999998,
                    "p99": 223.99718199999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.64964799999998,
                    "min": 125.51598,
                    "p50": 163.360244,
                    "p95": 165.64964799999998,
                    "p99": 165.64964799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.538714,
                    "min": 173.953916,
                    "p50": 179.03455399999999,
                    "p95": 182.538714,
                    "p99": 182.538714,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.461109,
                    "min": 44.296112,
                    "p50": 80.362287,
                    "p95": 82.461109,
                    "p99": 82.461109,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 196.25321,
                    "min": 175.348629,
                    "p50": 193.238432,
                    "p95": 196.25321,
                    "p99": 196.25321,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.310839,
                    "min": 70.66489899999999,
                    "p50": 109.05859799999999,
                    "p95": 111.310839,
                    "p99": 111.310839,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.356989,
                    "min": 225.17513499999998,
                    "p50": 234.756337,
                    "p95": 236.356989,
                    "p99": 236.356989,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.450786,
                    "min": 111.904412,
                    "p50": 150.09954399999998,
                    "p95": 153.450786,
                    "p99": 153.450786,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 288.657738,
                    "min": 245.70915,
                    "p50": 284.697786,
                    "p95": 288.657738,
                    "p99": 288.657738,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.569755,
                    "min": 170.091569,
                    "p50": 205.92939199999998,
                    "p95": 211.569755,
                    "p99": 211.569755,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.336694,
                    "min": 123.727255,
                    "p50": 136.509533,
                    "p95": 140.336694,
                    "p99": 140.336694,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.612877,
                    "min": 57.472297999999995,
                    "p50": 94.67746,
                    "p95": 100.612877,
                    "p99": 100.612877,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 253.81814,
                    "min": 247.435152,
                    "p50": 251.239857,
                    "p95": 253.81814,
                    "p99": 253.81814,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 462.21268799999996,
                    "min": 453.94156799999996,
                    "p50": 456.982847,
                    "p95": 462.21268799999996,
                    "p99": 462.21268799999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.529055,
                    "min": 164.472171,
                    "p50": 165.513333,
                    "p95": 166.529055,
                    "p99": 166.529055,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.679723,
                    "min": 176.64085699999998,
                    "p50": 179.346349,
                    "p95": 182.679723,
                    "p99": 182.679723,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.85406599999999,
                    "min": 71.887472,
                    "p50": 108.975944,
                    "p95": 114.85406599999999,
                    "p99": 114.85406599999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.461536,
                    "min": 147.85696,
                    "p50": 150.81421899999998,
                    "p95": 154.461536,
                    "p99": 154.461536,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 239.461313,
                    "min": 234.29973999999999,
                    "p50": 236.26208,
                    "p95": 239.461313,
                    "p99": 239.461313,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.039372,
                    "min": 43.357056,
                    "p50": 81.790993,
                    "p95": 84.039372,
                    "p99": 84.039372,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 464.491894,
                    "min": 419.61764,
                    "p50": 457.12740199999996,
                    "p95": 464.491894,
                    "p99": 464.491894,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 194.318273,
                    "min": 154.66557799999998,
                    "p50": 191.71955499999999,
                    "p95": 194.318273,
                    "p99": 194.318273,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 226.46386099999998,
                    "min": 210.293511,
                    "p50": 221.874999,
                    "p95": 226.46386099999998,
                    "p99": 226.46386099999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.715004,
                    "min": 112.57228699999999,
                    "p50": 123.212526,
                    "p95": 126.715004,
                    "p99": 126.715004,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 287.256577,
                    "min": 245.170089,
                    "p50": 285.09593,
                    "p95": 287.256577,
                    "p99": 287.256577,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.207869,
                    "min": 200.626242,
                    "p50": 207.26519499999998,
                    "p95": 211.207869,
                    "p99": 211.207869,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.296171,
                    "min": 129.51312,
                    "p50": 138.180996,
                    "p95": 142.296171,
                    "p99": 142.296171,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 606.208131,
                    "min": 595.366118,
                    "p50": 604.241568,
                    "p95": 606.208131,
                    "p99": 606.208131,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.44876099999999,
                    "min": 74.853459,
                    "p50": 95.161121,
                    "p95": 96.44876099999999,
                    "p99": 96.44876099999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 250.690745,
                    "min": 244.529775,
                    "p50": 249.93901699999998,
                    "p95": 250.690745,
                    "p99": 250.690745,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 322.339225,
                    "min": 313.556506,
                    "p50": 320.87681699999996,
                    "p95": 322.339225,
                    "p99": 322.339225,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "erigon": {
            "name": "erigon",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 600.595182,
                    "min": 579.454578,
                    "p50": 582.157229,
                    "p95": 600.595182,
                    "p99": 600.595182,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 973.8311719999999,
                    "min": 951.800678,
                    "p50": 962.583588,
                    "p95": 973.8311719999999,
                    "p99": 973.8311719999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 855.704399,
                    "min": 827.085061,
                    "p50": 846.5765309999999,
                    "p95": 855.704399,
                    "p99": 855.704399,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 678.35618,
                    "min": 636.548198,
                    "p50": 646.01562,
                    "p95": 678.35618,
                    "p99": 678.35618,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 780.720184,
                    "min": 761.9265019999999,
                    "p50": 779.414125,
                    "p95": 780.720184,
                    "p99": 780.720184,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1136.1441109999998,
                    "min": 887.644734,
                    "p50": 899.528521,
                    "p95": 1136.1441109999998,
                    "p99": 1136.1441109999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 241.522594,
                    "min": 204.934588,
                    "p50": 209.33771,
                    "p95": 241.522594,
                    "p99": 241.522594,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 311.957422,
                    "min": 266.091859,
                    "p50": 284.218074,
                    "p95": 311.957422,
                    "p99": 311.957422,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 354.132951,
                    "min": 328.856358,
                    "p50": 334.85940999999997,
                    "p95": 354.132951,
                    "p99": 354.132951,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1294.0358449999999,
                    "min": 1261.459548,
                    "p50": 1278.8878049999998,
                    "p95": 1294.0358449999999,
                    "p99": 1294.0358449999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 408.873971,
                    "min": 391.761464,
                    "p50": 396.835565,
                    "p95": 408.873971,
                    "p99": 408.873971,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1135.945688,
                    "min": 1109.770471,
                    "p50": 1128.19113,
                    "p95": 1135.945688,
                    "p99": 1135.945688,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 534.848484,
                    "min": 516.605279,
                    "p50": 520.817248,
                    "p95": 534.848484,
                    "p99": 534.848484,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 473.583179,
                    "min": 452.96643,
                    "p50": 459.468597,
                    "p95": 473.583179,
                    "p99": 473.583179,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 526.820446,
                    "min": 427.734918,
                    "p50": 503.153806,
                    "p95": 526.820446,
                    "p99": 526.820446,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 818.266125,
                    "min": 731.547436,
                    "p50": 775.962985,
                    "p95": 818.266125,
                    "p99": 818.266125,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1048.315063,
                    "min": 984.903103,
                    "p50": 1031.513132,
                    "p95": 1048.315063,
                    "p99": 1048.315063,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 357.404699,
                    "min": 246.824054,
                    "p50": 323.945857,
                    "p95": 357.404699,
                    "p99": 357.404699,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 555.826777,
                    "min": 488.90805,
                    "p50": 542.8988029999999,
                    "p95": 555.826777,
                    "p99": 555.826777,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 902.120266,
                    "min": 868.832153,
                    "p50": 887.2827189999999,
                    "p95": 902.120266,
                    "p99": 902.120266,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.70489599999996,
                    "min": 260.05195299999997,
                    "p50": 272.936474,
                    "p95": 286.70489599999996,
                    "p99": 286.70489599999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 442.647701,
                    "min": 377.29157899999996,
                    "p50": 419.98508899999996,
                    "p95": 442.647701,
                    "p99": 442.647701,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 474.720089,
                    "min": 438.831872,
                    "p50": 458.825136,
                    "p95": 474.720089,
                    "p99": 474.720089,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 282.38572999999997,
                    "min": 262.589832,
                    "p50": 272.241537,
                    "p95": 282.38572999999997,
                    "p99": 282.38572999999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1506.8569069999999,
                    "min": 1486.1954489999998,
                    "p50": 1504.175716,
                    "p95": 1506.8569069999999,
                    "p99": 1506.8569069999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 892.2909579999999,
                    "min": 874.6786579999999,
                    "p50": 878.7535449999999,
                    "p95": 892.2909579999999,
                    "p99": 892.2909579999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 694.629369,
                    "min": 651.314265,
                    "p50": 664.984881,
                    "p95": 694.629369,
                    "p99": 694.629369,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 622.339851,
                    "min": 603.042023,
                    "p50": 610.6207999999999,
                    "p95": 622.339851,
                    "p99": 622.339851,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 396.54251999999997,
                    "min": 365.237433,
                    "p50": 377.83783,
                    "p95": 396.54251999999997,
                    "p99": 396.54251999999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1027.894192,
                    "min": 991.4033939999999,
                    "p50": 1008.764506,
                    "p95": 1027.894192,
                    "p99": 1027.894192,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.605501,
                    "min": 164.87154999999998,
                    "p50": 173.658072,
                    "p95": 182.605501,
                    "p99": 182.605501,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 763.471083,
                    "min": 747.187413,
                    "p50": 761.270086,
                    "p95": 763.471083,
                    "p99": 763.471083,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 432.338604,
                    "min": 407.036591,
                    "p50": 416.19023999999996,
                    "p95": 432.338604,
                    "p99": 432.338604,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 345.54691299999996,
                    "min": 311.23614499999996,
                    "p50": 315.027993,
                    "p95": 345.54691299999996,
                    "p99": 345.54691299999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 244.975505,
                    "min": 212.18443299999998,
                    "p50": 223.976386,
                    "p95": 244.975505,
                    "p99": 244.975505,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 721.6811379999999,
                    "min": 699.6313,
                    "p50": 705.935969,
                    "p95": 721.6811379999999,
                    "p99": 721.6811379999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1174.204063,
                    "min": 1113.377741,
                    "p50": 1127.8790629999999,
                    "p95": 1174.204063,
                    "p99": 1174.204063,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 220.447669,
                    "min": 203.443177,
                    "p50": 215.45548499999998,
                    "p95": 220.447669,
                    "p99": 220.447669,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 790.043184,
                    "min": 760.131367,
                    "p50": 780.891026,
                    "p95": 790.043184,
                    "p99": 790.043184,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 861.88762,
                    "min": 831.0107449999999,
                    "p50": 842.440384,
                    "p95": 861.88762,
                    "p99": 861.88762,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.179128,
                    "min": 271.60225199999996,
                    "p50": 282.48661599999997,
                    "p95": 291.179128,
                    "p99": 291.179128,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 736.2110379999999,
                    "min": 707.300249,
                    "p50": 718.0284839999999,
                    "p95": 736.2110379999999,
                    "p99": 736.2110379999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1006.917963,
                    "min": 959.362588,
                    "p50": 969.674279,
                    "p95": 1006.917963,
                    "p99": 1006.917963,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 421.901013,
                    "min": 392.85623999999996,
                    "p50": 397.62892999999997,
                    "p95": 421.901013,
                    "p99": 421.901013,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 604.9142079999999,
                    "min": 575.584288,
                    "p50": 583.230784,
                    "p95": 604.9142079999999,
                    "p99": 604.9142079999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 527.3585419999999,
                    "min": 513.7304409999999,
                    "p50": 524.271636,
                    "p95": 527.3585419999999,
                    "p99": 527.3585419999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1304.3879909999998,
                    "min": 1267.016846,
                    "p50": 1274.9629129999998,
                    "p95": 1304.3879909999998,
                    "p99": 1304.3879909999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 659.202559,
                    "min": 646.316258,
                    "p50": 655.8002849999999,
                    "p95": 659.202559,
                    "p99": 659.202559,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 494.46151999999995,
                    "min": 451.98137199999996,
                    "p50": 460.524817,
                    "p95": 494.46151999999995,
                    "p99": 494.46151999999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 382.52279,
                    "min": 329.65175999999997,
                    "p50": 342.89392899999996,
                    "p95": 382.52279,
                    "p99": 382.52279,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1063.51705,
                    "min": 889.7656159999999,
                    "p50": 904.428002,
                    "p95": 1063.51705,
                    "p99": 1063.51705,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 135.892442,
                    "min": 110.157292,
                    "p50": 122.66112299999999,
                    "p95": 135.892442,
                    "p99": 135.892442,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 55.499162999999996,
                    "min": 45.139647,
                    "p50": 47.138721,
                    "p95": 55.499162999999996,
                    "p99": 55.499162999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 289.498333,
                    "min": 250.471758,
                    "p50": 263.46876299999997,
                    "p95": 289.498333,
                    "p99": 289.498333,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 501.76867799999997,
                    "min": 426.57728199999997,
                    "p50": 472.549136,
                    "p95": 501.76867799999997,
                    "p99": 501.76867799999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 98.690405,
                    "min": 75.54366,
                    "p50": 88.948246,
                    "p95": 98.690405,
                    "p99": 98.690405,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 108.415337,
                    "min": 67.62236899999999,
                    "p50": 68.643739,
                    "p95": 108.415337,
                    "p99": 108.415337,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 246.37908,
                    "min": 193.597702,
                    "p50": 212.490137,
                    "p95": 246.37908,
                    "p99": 246.37908,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 75.92236299999999,
                    "min": 49.755835999999995,
                    "p50": 54.504948999999996,
                    "p95": 75.92236299999999,
                    "p99": 75.92236299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 87.331649,
                    "min": 65.25278,
                    "p50": 80.03983,
                    "p95": 87.331649,
                    "p99": 87.331649,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 120.94156799999999,
                    "min": 104.71239899999999,
                    "p50": 107.55129799999999,
                    "p95": 120.94156799999999,
                    "p99": 120.94156799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 207.573003,
                    "min": 171.033894,
                    "p50": 176.80727199999998,
                    "p95": 207.573003,
                    "p99": 207.573003,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.861160999999996,
                    "min": 34.614187,
                    "p50": 38.317136,
                    "p95": 51.861160999999996,
                    "p99": 51.861160999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 93.29856199999999,
                    "min": 62.198522,
                    "p50": 82.968155,
                    "p95": 93.29856199999999,
                    "p99": 93.29856199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 104.843175,
                    "min": 76.697887,
                    "p50": 96.89056199999999,
                    "p95": 104.843175,
                    "p99": 104.843175,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 63.043662999999995,
                    "min": 46.972173,
                    "p50": 60.511272999999996,
                    "p95": 63.043662999999995,
                    "p99": 63.043662999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 89.115286,
                    "min": 63.989328,
                    "p50": 68.542704,
                    "p95": 89.115286,
                    "p99": 89.115286,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 104.215948,
                    "min": 70.989762,
                    "p50": 92.174888,
                    "p95": 104.215948,
                    "p99": 104.215948,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 76.273279,
                    "min": 58.787350999999994,
                    "p50": 68.992852,
                    "p95": 76.273279,
                    "p99": 76.273279,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 86.299937,
                    "min": 57.679157999999994,
                    "p50": 78.339567,
                    "p95": 86.299937,
                    "p99": 86.299937,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 308.07674499999996,
                    "min": 281.52725699999996,
                    "p50": 302.641733,
                    "p95": 308.07674499999996,
                    "p99": 308.07674499999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 179.52464,
                    "min": 162.861176,
                    "p50": 172.224076,
                    "p95": 179.52464,
                    "p99": 179.52464,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 446.30947,
                    "min": 422.946354,
                    "p50": 427.96149299999996,
                    "p95": 446.30947,
                    "p99": 446.30947,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 232.43293799999998,
                    "min": 195.503623,
                    "p50": 209.895865,
                    "p95": 232.43293799999998,
                    "p99": 232.43293799999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 372.859326,
                    "min": 340.128971,
                    "p50": 353.24650099999997,
                    "p95": 372.859326,
                    "p99": 372.859326,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1498.46752,
                    "min": 1469.452085,
                    "p50": 1482.585461,
                    "p95": 1498.46752,
                    "p99": 1498.46752,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 334.61346599999996,
                    "min": 308.083604,
                    "p50": 317.684127,
                    "p95": 334.61346599999996,
                    "p99": 334.61346599999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 419.49240699999996,
                    "min": 386.372556,
                    "p50": 400.924939,
                    "p95": 419.49240699999996,
                    "p99": 419.49240699999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 553.109435,
                    "min": 537.928239,
                    "p50": 544.456999,
                    "p95": 553.109435,
                    "p99": 553.109435,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 287.161404,
                    "min": 248.09110099999998,
                    "p50": 267.302175,
                    "p95": 287.161404,
                    "p99": 287.161404,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1217.369518,
                    "min": 1179.7287589999999,
                    "p50": 1202.4544859999999,
                    "p95": 1217.369518,
                    "p99": 1217.369518,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 255.14023699999998,
                    "min": 222.57699499999998,
                    "p50": 230.314425,
                    "p95": 255.14023699999998,
                    "p99": 255.14023699999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 405.33563599999997,
                    "min": 370.165342,
                    "p50": 378.80709099999996,
                    "p95": 405.33563599999997,
                    "p99": 405.33563599999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 929.649633,
                    "min": 890.359155,
                    "p50": 901.815764,
                    "p95": 929.649633,
                    "p99": 929.649633,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 179.49118099999998,
                    "min": 134.028872,
                    "p50": 148.045241,
                    "p95": 179.49118099999998,
                    "p99": 179.49118099999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2969.747434,
                    "min": 2928.5951999999997,
                    "p50": 2950.9346699999996,
                    "p95": 2969.747434,
                    "p99": 2969.747434,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 124.517513,
                    "min": 105.03279599999999,
                    "p50": 118.75219899999999,
                    "p95": 124.517513,
                    "p99": 124.517513,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 500.97072,
                    "min": 454.670421,
                    "p50": 464.20861299999996,
                    "p95": 500.97072,
                    "p99": 500.97072,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 656.876724,
                    "min": 592.912253,
                    "p50": 597.972189,
                    "p95": 656.876724,
                    "p99": 656.876724,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 45.986793,
                    "min": 35.276146,
                    "p50": 37.756081,
                    "p95": 45.986793,
                    "p99": 45.986793,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 56.30368,
                    "min": 49.270593,
                    "p50": 52.28803,
                    "p95": 56.30368,
                    "p99": 56.30368,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 44.585851,
                    "min": 34.570094,
                    "p50": 39.939063999999995,
                    "p95": 44.585851,
                    "p99": 44.585851,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 56.565152999999995,
                    "min": 47.543020999999996,
                    "p50": 50.590896,
                    "p95": 56.565152999999995,
                    "p99": 56.565152999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 61.658299,
                    "min": 56.863344,
                    "p50": 58.986467999999995,
                    "p95": 61.658299,
                    "p99": 61.658299,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 122.561084,
                    "min": 75.59971999999999,
                    "p50": 114.095068,
                    "p95": 122.561084,
                    "p99": 122.561084,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 66.931299,
                    "min": 61.074912,
                    "p50": 62.222418,
                    "p95": 66.931299,
                    "p99": 66.931299,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 46.680712,
                    "min": 34.423930999999996,
                    "p50": 42.747048,
                    "p95": 46.680712,
                    "p99": 46.680712,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 200.531508,
                    "min": 149.871119,
                    "p50": 179.899664,
                    "p95": 200.531508,
                    "p99": 200.531508,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 64.95653899999999,
                    "min": 48.054086,
                    "p50": 52.427695,
                    "p95": 64.95653899999999,
                    "p99": 64.95653899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 55.682725999999995,
                    "min": 44.571006999999994,
                    "p50": 48.61953,
                    "p95": 55.682725999999995,
                    "p99": 55.682725999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 64.573753,
                    "min": 44.423086,
                    "p50": 61.161136,
                    "p95": 64.573753,
                    "p99": 64.573753,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 85.12468,
                    "min": 51.369654,
                    "p50": 53.986101999999995,
                    "p95": 85.12468,
                    "p99": 85.12468,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 79.873116,
                    "min": 65.836437,
                    "p50": 73.249245,
                    "p95": 79.873116,
                    "p99": 79.873116,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 345.200631,
                    "min": 255.349797,
                    "p50": 300.98785799999996,
                    "p95": 345.200631,
                    "p99": 345.200631,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.393693,
                    "min": 67.58828,
                    "p50": 72.0783,
                    "p95": 87.393693,
                    "p99": 87.393693,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 150.551583,
                    "min": 136.41564499999998,
                    "p50": 141.025692,
                    "p95": 150.551583,
                    "p99": 150.551583,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 116.381523,
                    "min": 78.109028,
                    "p50": 82.683705,
                    "p95": 116.381523,
                    "p99": 116.381523,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 62.14535,
                    "min": 43.548452999999995,
                    "p50": 57.703709999999994,
                    "p95": 62.14535,
                    "p99": 62.14535,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 64.94761,
                    "min": 50.386423,
                    "p50": 54.399232,
                    "p95": 64.94761,
                    "p99": 64.94761,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 32.221992,
                    "min": 26.953201,
                    "p50": 27.149113,
                    "p95": 32.221992,
                    "p99": 32.221992,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 28.667088999999997,
                    "min": 26.766598,
                    "p50": 27.584630999999998,
                    "p95": 28.667088999999997,
                    "p99": 28.667088999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 34.388203,
                    "min": 26.84919,
                    "p50": 28.611092,
                    "p95": 34.388203,
                    "p99": 34.388203,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.354264999999998,
                    "min": 25.978013999999998,
                    "p50": 27.032519999999998,
                    "p95": 27.354264999999998,
                    "p99": 27.354264999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 37.93746,
                    "min": 26.782344,
                    "p50": 27.167406999999997,
                    "p95": 37.93746,
                    "p99": 37.93746,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 31.713354,
                    "min": 26.815116999999997,
                    "p50": 27.214394,
                    "p95": 31.713354,
                    "p99": 31.713354,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.966699,
                    "min": 26.562272999999998,
                    "p50": 27.117791,
                    "p95": 27.966699,
                    "p99": 27.966699,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.753021,
                    "min": 26.740821999999998,
                    "p50": 26.971657999999998,
                    "p95": 27.753021,
                    "p99": 27.753021,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 62.250436,
                    "min": 46.337171,
                    "p50": 49.321349999999995,
                    "p95": 62.250436,
                    "p99": 62.250436,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 37.970655,
                    "min": 26.500375,
                    "p50": 32.091994,
                    "p95": 37.970655,
                    "p99": 37.970655,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 63.543201999999994,
                    "min": 36.066701,
                    "p50": 38.609266,
                    "p95": 63.543201999999994,
                    "p99": 63.543201999999994,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 35.742816999999995,
                    "min": 29.487893,
                    "p50": 31.532625,
                    "p95": 35.742816999999995,
                    "p99": 35.742816999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 38.71908,
                    "min": 28.543461999999998,
                    "p50": 30.375864,
                    "p95": 38.71908,
                    "p99": 38.71908,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 35.973217999999996,
                    "min": 26.240661,
                    "p50": 27.082407,
                    "p95": 35.973217999999996,
                    "p99": 35.973217999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 120.626087,
                    "min": 86.018276,
                    "p50": 101.18791399999999,
                    "p95": 120.626087,
                    "p99": 120.626087,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 71.749882,
                    "min": 58.738431999999996,
                    "p50": 62.081886,
                    "p95": 71.749882,
                    "p99": 71.749882,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 33.245576,
                    "min": 27.110305999999998,
                    "p50": 28.960621999999997,
                    "p95": 33.245576,
                    "p99": 33.245576,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 33.599332,
                    "min": 25.80493,
                    "p50": 27.167236,
                    "p95": 33.599332,
                    "p99": 33.599332,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 340.612129,
                    "min": 314.633134,
                    "p50": 322.140756,
                    "p95": 340.612129,
                    "p99": 340.612129,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 136.343085,
                    "min": 105.375277,
                    "p50": 109.088139,
                    "p95": 136.343085,
                    "p99": 136.343085,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3013.55492,
                    "min": 2957.330866,
                    "p50": 2997.088009,
                    "p95": 3013.55492,
                    "p99": 3013.55492,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 625.32042,
                    "min": 608.635594,
                    "p50": 616.975158,
                    "p95": 625.32042,
                    "p99": 625.32042,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 255.52417899999998,
                    "min": 222.825943,
                    "p50": 235.92361799999998,
                    "p95": 255.52417899999998,
                    "p99": 255.52417899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 182.638942,
                    "min": 136.17600099999999,
                    "p50": 148.074588,
                    "p95": 182.638942,
                    "p99": 182.638942,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 234.89332,
                    "min": 197.439272,
                    "p50": 206.694405,
                    "p95": 234.89332,
                    "p99": 234.89332,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 942.900851,
                    "min": 898.544689,
                    "p50": 922.368532,
                    "p95": 942.900851,
                    "p99": 942.900851,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 456.51728299999996,
                    "min": 407.797511,
                    "p50": 419.57288,
                    "p95": 456.51728299999996,
                    "p99": 456.51728299999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 380.326693,
                    "min": 346.796748,
                    "p50": 356.285644,
                    "p95": 380.326693,
                    "p99": 380.326693,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1222.012456,
                    "min": 1192.507429,
                    "p50": 1215.39481,
                    "p95": 1222.012456,
                    "p99": 1222.012456,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1537.901685,
                    "min": 1490.656247,
                    "p50": 1521.524416,
                    "p95": 1537.901685,
                    "p99": 1537.901685,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 440.78533699999997,
                    "min": 430.964977,
                    "p50": 437.98362499999996,
                    "p95": 440.78533699999997,
                    "p99": 440.78533699999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.74081099999998,
                    "min": 163.28291099999998,
                    "p50": 174.229021,
                    "p95": 214.74081099999998,
                    "p99": 214.74081099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 571.387803,
                    "min": 535.691643,
                    "p50": 558.232635,
                    "p95": 571.387803,
                    "p99": 571.387803,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 302.84734,
                    "min": 286.336663,
                    "p50": 294.763991,
                    "p95": 302.84734,
                    "p99": 302.84734,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 390.577571,
                    "min": 374.18607599999996,
                    "p50": 381.04821999999996,
                    "p95": 390.577571,
                    "p99": 390.577571,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 507.17812,
                    "min": 456.906271,
                    "p50": 477.11785299999997,
                    "p95": 507.17812,
                    "p99": 507.17812,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 298.766905,
                    "min": 255.347041,
                    "p50": 266.294869,
                    "p95": 298.766905,
                    "p99": 298.766905,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1910.1488419999998,
                    "min": 1845.866982,
                    "p50": 1870.2679699999999,
                    "p95": 1910.1488419999998,
                    "p99": 1910.1488419999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 292.644666,
                    "min": 260.813917,
                    "p50": 285.511524,
                    "p95": 292.644666,
                    "p99": 292.644666,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 590.184413,
                    "min": 565.839114,
                    "p50": 579.817315,
                    "p95": 590.184413,
                    "p99": 590.184413,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 899.448302,
                    "min": 870.4430229999999,
                    "p50": 879.8965499999999,
                    "p95": 899.448302,
                    "p99": 899.448302,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 343.56775899999997,
                    "min": 318.916325,
                    "p50": 325.92173399999996,
                    "p95": 343.56775899999997,
                    "p99": 343.56775899999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 993.045521,
                    "min": 937.8539569999999,
                    "p50": 958.4285749999999,
                    "p95": 993.045521,
                    "p99": 993.045521,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 547.355283,
                    "min": 511.541743,
                    "p50": 518.71466,
                    "p95": 547.355283,
                    "p99": 547.355283,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1140.433204,
                    "min": 1094.125072,
                    "p50": 1113.844985,
                    "p95": 1140.433204,
                    "p99": 1140.433204,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 399.701123,
                    "min": 373.560854,
                    "p50": 385.04351199999996,
                    "p95": 399.701123,
                    "p99": 399.701123,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.880767,
                    "min": 632.719943,
                    "p50": 644.31408,
                    "p95": 673.880767,
                    "p99": 673.880767,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2548.3636079999997,
                    "min": 2457.526789,
                    "p50": 2507.2270009999997,
                    "p95": 2548.3636079999997,
                    "p99": 2548.3636079999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 719.325601,
                    "min": 674.677073,
                    "p50": 699.977544,
                    "p95": 719.325601,
                    "p99": 719.325601,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 475.210441,
                    "min": 442.95942199999996,
                    "p50": 461.630117,
                    "p95": 475.210441,
                    "p99": 475.210441,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 799.3936729999999,
                    "min": 744.77924,
                    "p50": 776.223851,
                    "p95": 799.3936729999999,
                    "p99": 799.3936729999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 240.18461299999998,
                    "min": 200.48212099999998,
                    "p50": 212.72285499999998,
                    "p95": 240.18461299999998,
                    "p99": 240.18461299999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 867.197786,
                    "min": 819.6187779999999,
                    "p50": 836.451813,
                    "p95": 867.197786,
                    "p99": 867.197786,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1307.295971,
                    "min": 1244.5287839999999,
                    "p50": 1270.3098659999998,
                    "p95": 1307.295971,
                    "p99": 1307.295971,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3171.645843,
                    "min": 3055.206693,
                    "p50": 3142.943257,
                    "p95": 3171.645843,
                    "p99": 3171.645843,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 300.075607,
                    "min": 269.48767599999996,
                    "p50": 277.671895,
                    "p95": 300.075607,
                    "p99": 300.075607,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 536.619995,
                    "min": 514.8408539999999,
                    "p50": 529.444115,
                    "p95": 536.619995,
                    "p99": 536.619995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 469.862663,
                    "min": 435.600729,
                    "p50": 445.72243399999996,
                    "p95": 469.862663,
                    "p99": 469.862663,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 894.7631849999999,
                    "min": 845.1562369999999,
                    "p50": 862.451075,
                    "p95": 894.7631849999999,
                    "p99": 894.7631849999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 791.2246349999999,
                    "min": 764.045538,
                    "p50": 779.241721,
                    "p95": 791.2246349999999,
                    "p99": 791.2246349999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1042.1898119999998,
                    "min": 1021.695491,
                    "p50": 1030.7011089999999,
                    "p95": 1042.1898119999998,
                    "p99": 1042.1898119999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1308.898673,
                    "min": 1268.300558,
                    "p50": 1292.557298,
                    "p95": 1308.898673,
                    "p99": 1308.898673,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1145.35754,
                    "min": 1097.807222,
                    "p50": 1109.217603,
                    "p95": 1145.35754,
                    "p99": 1145.35754,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 950.5378469999999,
                    "min": 942.567628,
                    "p50": 947.670621,
                    "p95": 950.5378469999999,
                    "p99": 950.5378469999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1735.34618,
                    "min": 1688.313684,
                    "p50": 1693.84233,
                    "p95": 1735.34618,
                    "p99": 1735.34618,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 630.798955,
                    "min": 601.9144,
                    "p50": 609.063285,
                    "p95": 630.798955,
                    "p99": 630.798955,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 362.72126499999996,
                    "min": 352.62611799999996,
                    "p50": 359.464406,
                    "p95": 362.72126499999996,
                    "p99": 362.72126499999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1511.388405,
                    "min": 1475.955867,
                    "p50": 1491.927907,
                    "p95": 1511.388405,
                    "p99": 1511.388405,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 705.8220789999999,
                    "min": 687.125373,
                    "p50": 695.403009,
                    "p95": 705.8220789999999,
                    "p99": 705.8220789999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1215.1988239999998,
                    "min": 1196.423403,
                    "p50": 1201.074231,
                    "p95": 1215.1988239999998,
                    "p99": 1215.1988239999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 322.69948999999997,
                    "min": 288.371355,
                    "p50": 295.098947,
                    "p95": 322.69948999999997,
                    "p99": 322.69948999999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 635.759281,
                    "min": 601.151109,
                    "p50": 620.429187,
                    "p95": 635.759281,
                    "p99": 635.759281,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 872.33376,
                    "min": 852.709254,
                    "p50": 861.0185369999999,
                    "p95": 872.33376,
                    "p99": 872.33376,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1713.253373,
                    "min": 1687.1334889999998,
                    "p50": 1706.943211,
                    "p95": 1713.253373,
                    "p99": 1713.253373,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 527.453765,
                    "min": 476.75426699999997,
                    "p50": 485.22062999999997,
                    "p95": 527.453765,
                    "p99": 527.453765,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 243.77298399999998,
                    "min": 225.959478,
                    "p50": 233.51209599999999,
                    "p95": 243.77298399999998,
                    "p99": 243.77298399999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.79044,
                    "min": 185.18420999999998,
                    "p50": 193.60650199999998,
                    "p95": 201.79044,
                    "p99": 201.79044,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 537.048293,
                    "min": 519.168761,
                    "p50": 533.506723,
                    "p95": 537.048293,
                    "p99": 537.048293,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1319.9736349999998,
                    "min": 1267.2931879999999,
                    "p50": 1281.500936,
                    "p95": 1319.9736349999998,
                    "p99": 1319.9736349999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 771.688864,
                    "min": 742.412052,
                    "p50": 760.955426,
                    "p95": 771.688864,
                    "p99": 771.688864,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 678.07169,
                    "min": 641.111503,
                    "p50": 654.851151,
                    "p95": 678.07169,
                    "p99": 678.07169,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 371.997009,
                    "min": 351.944575,
                    "p50": 365.60977499999996,
                    "p95": 371.997009,
                    "p99": 371.997009,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 458.224338,
                    "min": 435.193563,
                    "p50": 445.103032,
                    "p95": 458.224338,
                    "p99": 458.224338,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.902358,
                    "min": 313.164989,
                    "p50": 327.03677999999996,
                    "p95": 348.902358,
                    "p99": 348.902358,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.860222,
                    "min": 141.07966199999998,
                    "p50": 149.93322,
                    "p95": 185.860222,
                    "p99": 185.860222,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 579.508973,
                    "min": 561.156808,
                    "p50": 568.09484,
                    "p95": 579.508973,
                    "p99": 579.508973,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 419.330004,
                    "min": 390.971156,
                    "p50": 399.077988,
                    "p95": 419.330004,
                    "p99": 419.330004,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 642.64046,
                    "min": 618.2432739999999,
                    "p50": 626.578582,
                    "p95": 642.64046,
                    "p99": 642.64046,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2011.4729909999999,
                    "min": 1986.01477,
                    "p50": 1997.7501149999998,
                    "p95": 2011.4729909999999,
                    "p99": 2011.4729909999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4044.402834,
                    "min": 3997.934128,
                    "p50": 4020.805868,
                    "p95": 4044.402834,
                    "p99": 4044.402834,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2258.451392,
                    "min": 2176.040431,
                    "p50": 2209.394143,
                    "p95": 2258.451392,
                    "p99": 2258.451392,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5915.800228,
                    "min": 5811.536142999999,
                    "p50": 5893.791107999999,
                    "p95": 5915.800228,
                    "p99": 5915.800228,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1232.515308,
                    "min": 1204.431726,
                    "p50": 1213.305964,
                    "p95": 1232.515308,
                    "p99": 1232.515308,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1853.1965,
                    "min": 1799.204499,
                    "p50": 1814.0107719999999,
                    "p95": 1853.1965,
                    "p99": 1853.1965,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7830.81772,
                    "min": 7705.303672999999,
                    "p50": 7757.212504,
                    "p95": 7830.81772,
                    "p99": 7830.81772,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1042.05389,
                    "min": 1022.6429549999999,
                    "p50": 1037.234865,
                    "p95": 1042.05389,
                    "p99": 1042.05389,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2685.7230689999997,
                    "min": 2625.274446,
                    "p50": 2651.252227,
                    "p95": 2685.7230689999997,
                    "p99": 2685.7230689999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1412.0038339999999,
                    "min": 1379.829819,
                    "p50": 1401.176293,
                    "p95": 1412.0038339999999,
                    "p99": 1412.0038339999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 826.454745,
                    "min": 806.8829569999999,
                    "p50": 815.291509,
                    "p95": 826.454745,
                    "p99": 826.454745,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3052.215122,
                    "min": 3014.016017,
                    "p50": 3023.862353,
                    "p95": 3052.215122,
                    "p99": 3052.215122,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2849.3275439999998,
                    "min": 2795.712067,
                    "p50": 2836.487744,
                    "p95": 2849.3275439999998,
                    "p99": 2849.3275439999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3507.089427,
                    "min": 3434.183837,
                    "p50": 3455.267274,
                    "p95": 3507.089427,
                    "p99": 3507.089427,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1630.9273839999998,
                    "min": 1578.647998,
                    "p50": 1596.525524,
                    "p95": 1630.9273839999998,
                    "p99": 1630.9273839999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2449.390648,
                    "min": 2381.275796,
                    "p50": 2414.105869,
                    "p95": 2449.390648,
                    "p99": 2449.390648,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 730.016309,
                    "min": 703.1282279999999,
                    "p50": 712.707409,
                    "p95": 730.016309,
                    "p99": 730.016309,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 531.5161449999999,
                    "min": 505.07773499999996,
                    "p50": 525.938814,
                    "p95": 531.5161449999999,
                    "p99": 531.5161449999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1039.421087,
                    "min": 991.6655099999999,
                    "p50": 1001.383573,
                    "p95": 1039.421087,
                    "p99": 1039.421087,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1509.395452,
                    "min": 1477.4163879999999,
                    "p50": 1483.606063,
                    "p95": 1509.395452,
                    "p99": 1509.395452,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4961.195505,
                    "min": 4853.841208,
                    "p50": 4914.610097,
                    "p95": 4961.195505,
                    "p99": 4961.195505,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1986.9791579999999,
                    "min": 1956.909219,
                    "p50": 1980.4322889999999,
                    "p95": 1986.9791579999999,
                    "p99": 1986.9791579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 592.1104819999999,
                    "min": 550.0981449999999,
                    "p50": 564.087827,
                    "p95": 592.1104819999999,
                    "p99": 592.1104819999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.91584799999998,
                    "min": 161.344171,
                    "p50": 191.17131899999998,
                    "p95": 201.91584799999998,
                    "p99": 201.91584799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2477.621585,
                    "min": 2434.485008,
                    "p50": 2459.376808,
                    "p95": 2477.621585,
                    "p99": 2477.621585,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 386.09972999999997,
                    "min": 358.31061,
                    "p50": 378.364136,
                    "p95": 386.09972999999997,
                    "p99": 386.09972999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 445.043057,
                    "min": 403.67909599999996,
                    "p50": 418.429849,
                    "p95": 445.043057,
                    "p99": 445.043057,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 488.86633,
                    "min": 453.848326,
                    "p50": 464.666121,
                    "p95": 488.86633,
                    "p99": 488.86633,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 903.5022409999999,
                    "min": 866.2902409999999,
                    "p50": 882.360861,
                    "p95": 903.5022409999999,
                    "p99": 903.5022409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 294.547983,
                    "min": 267.687181,
                    "p50": 279.47421099999997,
                    "p95": 294.547983,
                    "p99": 294.547983,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 340.370641,
                    "min": 309.006411,
                    "p50": 319.766034,
                    "p95": 340.370641,
                    "p99": 340.370641,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 771.3831409999999,
                    "min": 744.1760519999999,
                    "p50": 761.493872,
                    "p95": 771.3831409999999,
                    "p99": 771.3831409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 628.573521,
                    "min": 606.1261109999999,
                    "p50": 617.505219,
                    "p95": 628.573521,
                    "p99": 628.573521,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 240.14139799999998,
                    "min": 212.21735099999998,
                    "p50": 223.83301,
                    "p95": 240.14139799999998,
                    "p99": 240.14139799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 699.229974,
                    "min": 651.885591,
                    "p50": 660.130321,
                    "p95": 699.229974,
                    "p99": 699.229974,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2102.832849,
                    "min": 2032.0752269999998,
                    "p50": 2070.990058,
                    "p95": 2102.832849,
                    "p99": 2102.832849,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 850.3526009999999,
                    "min": 824.9515,
                    "p50": 838.6752319999999,
                    "p95": 850.3526009999999,
                    "p99": 850.3526009999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 620.982641,
                    "min": 592.517345,
                    "p50": 604.3360369999999,
                    "p95": 620.982641,
                    "p99": 620.982641,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1432.540642,
                    "min": 1402.136393,
                    "p50": 1415.6658149999998,
                    "p95": 1432.540642,
                    "p99": 1432.540642,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 997.3186089999999,
                    "min": 938.8443209999999,
                    "p50": 959.69218,
                    "p95": 997.3186089999999,
                    "p99": 997.3186089999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4708.795301,
                    "min": 4629.165586,
                    "p50": 4679.085681,
                    "p95": 4708.795301,
                    "p99": 4708.795301,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1339.655687,
                    "min": 1292.995563,
                    "p50": 1311.487801,
                    "p95": 1339.655687,
                    "p99": 1339.655687,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 726.316071,
                    "min": 709.148019,
                    "p50": 723.070378,
                    "p95": 726.316071,
                    "p99": 726.316071,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1568.628857,
                    "min": 1527.6234299999999,
                    "p50": 1534.9508019999998,
                    "p95": 1568.628857,
                    "p99": 1568.628857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3551.431186,
                    "min": 3464.692118,
                    "p50": 3515.235108,
                    "p95": 3551.431186,
                    "p99": 3551.431186,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1788.461697,
                    "min": 1750.829204,
                    "p50": 1772.963652,
                    "p95": 1788.461697,
                    "p99": 1788.461697,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2393.004636,
                    "min": 2327.209428,
                    "p50": 2341.7933089999997,
                    "p95": 2393.004636,
                    "p99": 2393.004636,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 398.72801499999997,
                    "min": 363.102136,
                    "p50": 369.96351799999997,
                    "p95": 398.72801499999997,
                    "p99": 398.72801499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1667.722931,
                    "min": 1639.6864309999999,
                    "p50": 1663.0485489999999,
                    "p95": 1667.722931,
                    "p99": 1667.722931,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 513.559157,
                    "min": 483.17288199999996,
                    "p50": 492.02192199999996,
                    "p95": 513.559157,
                    "p99": 513.559157,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1227.620118,
                    "min": 1178.459328,
                    "p50": 1191.5297,
                    "p95": 1227.620118,
                    "p99": 1227.620118,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1082.2286649999999,
                    "min": 1057.428841,
                    "p50": 1073.938232,
                    "p95": 1082.2286649999999,
                    "p99": 1082.2286649999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1778.744624,
                    "min": 1747.776054,
                    "p50": 1766.5586389999999,
                    "p95": 1778.744624,
                    "p99": 1778.744624,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 490.399887,
                    "min": 477.75109299999997,
                    "p50": 483.99327999999997,
                    "p95": 490.399887,
                    "p99": 490.399887,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1093.6595949999999,
                    "min": 1056.930474,
                    "p50": 1069.402782,
                    "p95": 1093.6595949999999,
                    "p99": 1093.6595949999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1565.39464,
                    "min": 1515.970654,
                    "p50": 1539.251078,
                    "p95": 1565.39464,
                    "p99": 1565.39464,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1206.308282,
                    "min": 1170.7678899999999,
                    "p50": 1195.856728,
                    "p95": 1206.308282,
                    "p99": 1206.308282,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1317.289038,
                    "min": 1295.6957519999999,
                    "p50": 1308.390201,
                    "p95": 1317.289038,
                    "p99": 1317.289038,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2364.4150999999997,
                    "min": 2319.071012,
                    "p50": 2338.595527,
                    "p95": 2364.4150999999997,
                    "p99": 2364.4150999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3523.622813,
                    "min": 3472.679609,
                    "p50": 3514.354192,
                    "p95": 3523.622813,
                    "p99": 3523.622813,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1438.324015,
                    "min": 1410.800384,
                    "p50": 1423.907968,
                    "p95": 1438.324015,
                    "p99": 1438.324015,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 610.069726,
                    "min": 595.9101999999999,
                    "p50": 601.811305,
                    "p95": 610.069726,
                    "p99": 610.069726,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 401.208352,
                    "min": 367.072998,
                    "p50": 376.808053,
                    "p95": 401.208352,
                    "p99": 401.208352,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 735.609058,
                    "min": 712.708762,
                    "p50": 729.741265,
                    "p95": 735.609058,
                    "p99": 735.609058,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2079.454987,
                    "min": 2037.335302,
                    "p50": 2058.162922,
                    "p95": 2079.454987,
                    "p99": 2079.454987,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 858.0036839999999,
                    "min": 827.1498839999999,
                    "p50": 840.968904,
                    "p95": 858.0036839999999,
                    "p99": 858.0036839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1655.1471629999999,
                    "min": 1631.378011,
                    "p50": 1652.40032,
                    "p95": 1655.1471629999999,
                    "p99": 1655.1471629999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 978.5228079999999,
                    "min": 948.2825919999999,
                    "p50": 964.126212,
                    "p95": 978.5228079999999,
                    "p99": 978.5228079999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10911.892566999999,
                    "min": 10782.955412,
                    "p50": 10847.911831,
                    "p95": 10911.892566999999,
                    "p99": 10911.892566999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1568.066613,
                    "min": 1544.5282339999999,
                    "p50": 1547.0303199999998,
                    "p95": 1568.066613,
                    "p99": 1568.066613,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5465.339166,
                    "min": 5381.024936,
                    "p50": 5430.121183,
                    "p95": 5465.339166,
                    "p99": 5465.339166,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 808.50343,
                    "min": 775.772788,
                    "p50": 785.2798419999999,
                    "p95": 808.50343,
                    "p99": 808.50343,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 475.50245099999995,
                    "min": 456.064439,
                    "p50": 458.861859,
                    "p95": 475.50245099999995,
                    "p99": 475.50245099999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1353.458286,
                    "min": 1304.9202189999999,
                    "p50": 1329.304946,
                    "p95": 1353.458286,
                    "p99": 1353.458286,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4374.797358,
                    "min": 4298.630771,
                    "p50": 4335.514639999999,
                    "p95": 4374.797358,
                    "p99": 4374.797358,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1662.903898,
                    "min": 1639.940635,
                    "p50": 1645.537916,
                    "p95": 1662.903898,
                    "p99": 1662.903898,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1479.146203,
                    "min": 1426.3120669999998,
                    "p50": 1443.0268959999999,
                    "p95": 1479.146203,
                    "p99": 1479.146203,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1960.935202,
                    "min": 1906.9051969999998,
                    "p50": 1920.1129429999999,
                    "p95": 1960.935202,
                    "p99": 1960.935202,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 583.543604,
                    "min": 563.064426,
                    "p50": 570.4797619999999,
                    "p95": 583.543604,
                    "p99": 583.543604,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1226.205223,
                    "min": 1194.2600479999999,
                    "p50": 1218.61249,
                    "p95": 1226.205223,
                    "p99": 1226.205223,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 376.567823,
                    "min": 340.80514,
                    "p50": 351.514724,
                    "p95": 376.567823,
                    "p99": 376.567823,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 930.963572,
                    "min": 880.9738649999999,
                    "p50": 904.3106789999999,
                    "p95": 930.963572,
                    "p99": 930.963572,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 688.737793,
                    "min": 667.048404,
                    "p50": 679.092938,
                    "p95": 688.737793,
                    "p99": 688.737793,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1032.008707,
                    "min": 996.1099879999999,
                    "p50": 1002.367622,
                    "p95": 1032.008707,
                    "p99": 1032.008707,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1125.5376919999999,
                    "min": 1090.602443,
                    "p50": 1108.771508,
                    "p95": 1125.5376919999999,
                    "p99": 1125.5376919999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3315.193698,
                    "min": 3240.025311,
                    "p50": 3266.1816959999996,
                    "p95": 3315.193698,
                    "p99": 3315.193698,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2218.759614,
                    "min": 2166.206365,
                    "p50": 2201.7238979999997,
                    "p95": 2218.759614,
                    "p99": 2218.759614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 320.79641699999996,
                    "min": 303.83579199999997,
                    "p50": 313.088912,
                    "p95": 320.79641699999996,
                    "p99": 320.79641699999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1951.8379149999998,
                    "min": 1904.605306,
                    "p50": 1925.442805,
                    "p95": 1951.8379149999998,
                    "p99": 1951.8379149999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1468.7827089999998,
                    "min": 1435.795783,
                    "p50": 1450.9428229999999,
                    "p95": 1468.7827089999998,
                    "p99": 1468.7827089999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 990.609214,
                    "min": 959.6543969999999,
                    "p50": 981.286842,
                    "p95": 990.609214,
                    "p99": 990.609214,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 516.2497129999999,
                    "min": 496.982236,
                    "p50": 503.56335199999995,
                    "p95": 516.2497129999999,
                    "p99": 516.2497129999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4819.73305,
                    "min": 4748.2867049999995,
                    "p50": 4777.918503,
                    "p95": 4819.73305,
                    "p99": 4819.73305,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2412.060986,
                    "min": 2369.8192059999997,
                    "p50": 2403.943378,
                    "p95": 2412.060986,
                    "p99": 2412.060986,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 631.735923,
                    "min": 587.968446,
                    "p50": 600.734468,
                    "p95": 631.735923,
                    "p99": 631.735923,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 706.812331,
                    "min": 681.406918,
                    "p50": 690.509239,
                    "p95": 706.812331,
                    "p99": 706.812331,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 410.81951399999997,
                    "min": 395.823563,
                    "p50": 401.32424399999996,
                    "p95": 410.81951399999997,
                    "p99": 410.81951399999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 479.623535,
                    "min": 444.781433,
                    "p50": 459.46043899999995,
                    "p95": 479.623535,
                    "p99": 479.623535,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 229.488352,
                    "min": 208.85895499999998,
                    "p50": 217.208347,
                    "p95": 229.488352,
                    "p99": 229.488352,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 877.075483,
                    "min": 855.293111,
                    "p50": 871.675345,
                    "p95": 877.075483,
                    "p99": 877.075483,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 584.319721,
                    "min": 541.6944119999999,
                    "p50": 556.328408,
                    "p95": 584.319721,
                    "p99": 584.319721,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 755.9656239999999,
                    "min": 727.101728,
                    "p50": 745.3888589999999,
                    "p95": 755.9656239999999,
                    "p99": 755.9656239999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 377.66475299999996,
                    "min": 348.082019,
                    "p50": 354.216709,
                    "p95": 377.66475299999996,
                    "p99": 377.66475299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 659.106184,
                    "min": 633.908505,
                    "p50": 641.260448,
                    "p95": 659.106184,
                    "p99": 659.106184,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 277.183626,
                    "min": 253.532557,
                    "p50": 265.455843,
                    "p95": 277.183626,
                    "p99": 277.183626,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.37614,
                    "min": 160.61811899999998,
                    "p50": 172.17825299999998,
                    "p95": 193.37614,
                    "p99": 193.37614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1940.962576,
                    "min": 1908.5222299999998,
                    "p50": 1927.207259,
                    "p95": 1940.962576,
                    "p99": 1940.962576,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 903.6183259999999,
                    "min": 882.5996719999999,
                    "p50": 898.368537,
                    "p95": 903.6183259999999,
                    "p99": 903.6183259999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2223.618555,
                    "min": 2168.100558,
                    "p50": 2191.868779,
                    "p95": 2223.618555,
                    "p99": 2223.618555,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 818.3929959999999,
                    "min": 774.753295,
                    "p50": 800.422053,
                    "p95": 818.3929959999999,
                    "p99": 818.3929959999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 695.081145,
                    "min": 663.9773349999999,
                    "p50": 676.916059,
                    "p95": 695.081145,
                    "p99": 695.081145,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 480.29198199999996,
                    "min": 449.825268,
                    "p50": 459.673502,
                    "p95": 480.29198199999996,
                    "p99": 480.29198199999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1567.3412879999998,
                    "min": 1532.530049,
                    "p50": 1551.995641,
                    "p95": 1567.3412879999998,
                    "p99": 1567.3412879999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1250.7950059999998,
                    "min": 1202.25936,
                    "p50": 1223.37517,
                    "p95": 1250.7950059999998,
                    "p99": 1250.7950059999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3290.7634519999997,
                    "min": 3267.4373379999997,
                    "p50": 3272.3241719999996,
                    "p95": 3290.7634519999997,
                    "p99": 3290.7634519999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1019.679309,
                    "min": 982.104239,
                    "p50": 1000.433367,
                    "p95": 1019.679309,
                    "p99": 1019.679309,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10943.04709,
                    "min": 10789.965764999999,
                    "p50": 10822.333278,
                    "p95": 10943.04709,
                    "p99": 10943.04709,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 597.82317,
                    "min": 560.551839,
                    "p50": 565.865508,
                    "p95": 597.82317,
                    "p99": 597.82317,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1449.5228359999999,
                    "min": 1423.599264,
                    "p50": 1442.1685189999998,
                    "p95": 1449.5228359999999,
                    "p99": 1449.5228359999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1358.2649649999998,
                    "min": 1314.2191329999998,
                    "p50": 1334.49544,
                    "p95": 1358.2649649999998,
                    "p99": 1358.2649649999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4381.777693999999,
                    "min": 4323.411798,
                    "p50": 4350.097505,
                    "p95": 4381.777693999999,
                    "p99": 4381.777693999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 384.540664,
                    "min": 353.934374,
                    "p50": 359.844633,
                    "p95": 384.540664,
                    "p99": 384.540664,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1669.11332,
                    "min": 1632.002788,
                    "p50": 1654.357474,
                    "p95": 1669.11332,
                    "p99": 1669.11332,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1135.801739,
                    "min": 1101.985298,
                    "p50": 1116.661862,
                    "p95": 1135.801739,
                    "p99": 1135.801739,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5481.303725,
                    "min": 5405.999482,
                    "p50": 5446.890095,
                    "p95": 5481.303725,
                    "p99": 5481.303725,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 683.435391,
                    "min": 641.4867009999999,
                    "p50": 662.6157079999999,
                    "p95": 683.435391,
                    "p99": 683.435391,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 569.788947,
                    "min": 552.130674,
                    "p50": 565.933233,
                    "p95": 569.788947,
                    "p99": 569.788947,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 858.7377359999999,
                    "min": 821.48443,
                    "p50": 837.4559079999999,
                    "p95": 858.7377359999999,
                    "p99": 858.7377359999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 315.809525,
                    "min": 284.44496499999997,
                    "p50": 295.223794,
                    "p95": 315.809525,
                    "p99": 315.809525,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 388.072565,
                    "min": 372.280461,
                    "p50": 380.692857,
                    "p95": 388.072565,
                    "p99": 388.072565,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 759.9233029999999,
                    "min": 739.4362709999999,
                    "p50": 743.04723,
                    "p95": 759.9233029999999,
                    "p99": 759.9233029999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 476.966475,
                    "min": 461.701935,
                    "p50": 471.13039599999996,
                    "p95": 476.966475,
                    "p99": 476.966475,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 943.709742,
                    "min": 890.599199,
                    "p50": 916.860407,
                    "p95": 943.709742,
                    "p99": 943.709742,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 318.85983699999997,
                    "min": 279.75345,
                    "p50": 291.226775,
                    "p95": 318.85983699999997,
                    "p99": 318.85983699999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 747.686474,
                    "min": 717.174323,
                    "p50": 730.8377499999999,
                    "p95": 747.686474,
                    "p99": 747.686474,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 569.8382359999999,
                    "min": 545.700156,
                    "p50": 559.249467,
                    "p95": 569.8382359999999,
                    "p99": 569.8382359999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 667.521297,
                    "min": 629.7604349999999,
                    "p50": 636.862923,
                    "p95": 667.521297,
                    "p99": 667.521297,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 827.95304,
                    "min": 803.489506,
                    "p50": 814.905663,
                    "p95": 827.95304,
                    "p99": 827.95304,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 390.733518,
                    "min": 364.442546,
                    "p50": 387.47214199999996,
                    "p95": 390.733518,
                    "p99": 390.733518,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 490.384645,
                    "min": 456.21099599999997,
                    "p50": 471.435297,
                    "p95": 490.384645,
                    "p99": 490.384645,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 312.372264,
                    "min": 259.454123,
                    "p50": 281.84601699999996,
                    "p95": 312.372264,
                    "p99": 312.372264,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 488.55206799999996,
                    "min": 449.11961199999996,
                    "p50": 465.790327,
                    "p95": 488.55206799999996,
                    "p99": 488.55206799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 602.639402,
                    "min": 578.6195349999999,
                    "p50": 589.9181239999999,
                    "p95": 602.639402,
                    "p99": 602.639402,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 421.873739,
                    "min": 388.438876,
                    "p50": 413.739462,
                    "p95": 421.873739,
                    "p99": 421.873739,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 816.105025,
                    "min": 760.327894,
                    "p50": 794.477757,
                    "p95": 816.105025,
                    "p99": 816.105025,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 249.375847,
                    "min": 204.472376,
                    "p50": 213.29776999999999,
                    "p95": 249.375847,
                    "p99": 249.375847,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 653.641404,
                    "min": 633.915765,
                    "p50": 640.609433,
                    "p95": 653.641404,
                    "p99": 653.641404,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 561.491796,
                    "min": 498.04999,
                    "p50": 523.73288,
                    "p95": 561.491796,
                    "p99": 561.491796,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 348.663663,
                    "min": 325.375027,
                    "p50": 335.271396,
                    "p95": 348.663663,
                    "p99": 348.663663,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 735.227387,
                    "min": 711.914773,
                    "p50": 722.518746,
                    "p95": 735.227387,
                    "p99": 735.227387,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 580.761927,
                    "min": 559.944489,
                    "p50": 568.317548,
                    "p95": 580.761927,
                    "p99": 580.761927,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 763.0190359999999,
                    "min": 745.874052,
                    "p50": 752.9629189999999,
                    "p95": 763.0190359999999,
                    "p99": 763.0190359999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 209.983026,
                    "min": 201.931231,
                    "p50": 207.179321,
                    "p95": 209.983026,
                    "p99": 209.983026,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.807957,
                    "min": 382.927147,
                    "p50": 390.172467,
                    "p95": 413.807957,
                    "p99": 413.807957,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 667.359889,
                    "min": 653.997905,
                    "p50": 657.69152,
                    "p95": 667.359889,
                    "p99": 667.359889,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 305.156182,
                    "min": 290.49631899999997,
                    "p50": 300.791404,
                    "p95": 305.156182,
                    "p99": 305.156182,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 485.676016,
                    "min": 473.078337,
                    "p50": 480.95446499999997,
                    "p95": 485.676016,
                    "p99": 485.676016,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 671.3591769999999,
                    "min": 591.7233239999999,
                    "p50": 633.482592,
                    "p95": 671.3591769999999,
                    "p99": 671.3591769999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 343.352458,
                    "min": 302.39979,
                    "p50": 315.575606,
                    "p95": 343.352458,
                    "p99": 343.352458,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.42158999999998,
                    "min": 173.08724899999999,
                    "p50": 201.07235699999998,
                    "p95": 213.42158999999998,
                    "p99": 213.42158999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 630.347883,
                    "min": 567.746988,
                    "p50": 590.743709,
                    "p95": 630.347883,
                    "p99": 630.347883,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 486.644792,
                    "min": 424.222372,
                    "p50": 463.548317,
                    "p95": 486.644792,
                    "p99": 486.644792,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 387.469404,
                    "min": 340.252622,
                    "p50": 371.994466,
                    "p95": 387.469404,
                    "p99": 387.469404,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 584.6392999999999,
                    "min": 514.414621,
                    "p50": 545.052244,
                    "p95": 584.6392999999999,
                    "p99": 584.6392999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 291.68436199999996,
                    "min": 212.141909,
                    "p50": 238.444586,
                    "p95": 291.68436199999996,
                    "p99": 291.68436199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.305428,
                    "min": 136.78393,
                    "p50": 159.81234899999998,
                    "p95": 175.305428,
                    "p99": 175.305428,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 808.86961,
                    "min": 718.783225,
                    "p50": 763.0879299999999,
                    "p95": 808.86961,
                    "p99": 808.86961,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 683.1226019999999,
                    "min": 650.256081,
                    "p50": 665.8454029999999,
                    "p95": 683.1226019999999,
                    "p99": 683.1226019999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 918.609417,
                    "min": 830.30877,
                    "p50": 868.1727119999999,
                    "p95": 918.609417,
                    "p99": 918.609417,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 469.899843,
                    "min": 375.152968,
                    "p50": 403.606157,
                    "p95": 469.899843,
                    "p99": 469.899843,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 538.612088,
                    "min": 469.147539,
                    "p50": 501.61348399999997,
                    "p95": 538.612088,
                    "p99": 538.612088,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 350.496132,
                    "min": 257.588557,
                    "p50": 281.626148,
                    "p95": 350.496132,
                    "p99": 350.496132,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 532.175199,
                    "min": 480.829925,
                    "p50": 529.651542,
                    "p95": 532.175199,
                    "p99": 532.175199,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 250.402079,
                    "min": 186.182558,
                    "p50": 213.198377,
                    "p95": 250.402079,
                    "p99": 250.402079,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 627.061824,
                    "min": 573.995241,
                    "p50": 618.968862,
                    "p95": 627.061824,
                    "p99": 627.061824,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 424.77583899999996,
                    "min": 382.197834,
                    "p50": 392.029976,
                    "p95": 424.77583899999996,
                    "p99": 424.77583899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 191.11499799999999,
                    "min": 153.922898,
                    "p50": 161.325928,
                    "p95": 191.11499799999999,
                    "p99": 191.11499799999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 271.376849,
                    "min": 240.512935,
                    "p50": 260.193175,
                    "p95": 271.376849,
                    "p99": 271.376849,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 549.428353,
                    "min": 460.53418,
                    "p50": 483.24188699999996,
                    "p95": 549.428353,
                    "p99": 549.428353,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 602.219915,
                    "min": 546.750898,
                    "p50": 573.218269,
                    "p95": 602.219915,
                    "p99": 602.219915,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 840.235292,
                    "min": 746.5585659999999,
                    "p50": 788.640797,
                    "p95": 840.235292,
                    "p99": 840.235292,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 331.350207,
                    "min": 267.62992199999997,
                    "p50": 308.56791599999997,
                    "p95": 331.350207,
                    "p99": 331.350207,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 775.842015,
                    "min": 650.361772,
                    "p50": 686.367767,
                    "p95": 775.842015,
                    "p99": 775.842015,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 338.251088,
                    "min": 305.819523,
                    "p50": 320.47558799999996,
                    "p95": 338.251088,
                    "p99": 338.251088,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 500.77014799999995,
                    "min": 420.22648699999996,
                    "p50": 459.489937,
                    "p95": 500.77014799999995,
                    "p99": 500.77014799999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 404.64505199999996,
                    "min": 342.849883,
                    "p50": 376.560405,
                    "p95": 404.64505199999996,
                    "p99": 404.64505199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.22123299999998,
                    "min": 122.56679399999999,
                    "p50": 151.546199,
                    "p95": 173.22123299999998,
                    "p99": 173.22123299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 279.02790899999997,
                    "min": 219.158455,
                    "p50": 238.882862,
                    "p95": 279.02790899999997,
                    "p99": 279.02790899999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 386.55704199999997,
                    "min": 335.428561,
                    "p50": 353.392458,
                    "p95": 386.55704199999997,
                    "p99": 386.55704199999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 347.118572,
                    "min": 293.973528,
                    "p50": 317.67677699999996,
                    "p95": 347.118572,
                    "p99": 347.118572,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 800.678403,
                    "min": 739.356599,
                    "p50": 771.727722,
                    "p95": 800.678403,
                    "p99": 800.678403,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 698.8205469999999,
                    "min": 624.0839189999999,
                    "p50": 643.813983,
                    "p95": 698.8205469999999,
                    "p99": 698.8205469999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 179.867538,
                    "min": 136.32074699999998,
                    "p50": 152.07836799999998,
                    "p95": 179.867538,
                    "p99": 179.867538,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 519.988985,
                    "min": 475.28752599999996,
                    "p50": 506.00908599999997,
                    "p95": 519.988985,
                    "p99": 519.988985,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 461.90619699999996,
                    "min": 419.79945,
                    "p50": 436.357245,
                    "p95": 461.90619699999996,
                    "p99": 461.90619699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 231.99645999999998,
                    "min": 172.982298,
                    "p50": 188.472343,
                    "p95": 231.99645999999998,
                    "p99": 231.99645999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 558.603271,
                    "min": 497.34403299999997,
                    "p50": 544.970099,
                    "p95": 558.603271,
                    "p99": 558.603271,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 479.060236,
                    "min": 386.659404,
                    "p50": 392.863144,
                    "p95": 479.060236,
                    "p99": 479.060236,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 930.745428,
                    "min": 825.643121,
                    "p50": 875.2791679999999,
                    "p95": 930.745428,
                    "p99": 930.745428,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 651.8498609999999,
                    "min": 567.5360939999999,
                    "p50": 634.0312329999999,
                    "p95": 651.8498609999999,
                    "p99": 651.8498609999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 330.659679,
                    "min": 257.45013,
                    "p50": 278.95032,
                    "p95": 330.659679,
                    "p99": 330.659679,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 584.1470879999999,
                    "min": 548.421118,
                    "p50": 566.621534,
                    "p95": 584.1470879999999,
                    "p99": 584.1470879999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 955.8662959999999,
                    "min": 835.435807,
                    "p50": 865.253699,
                    "p95": 955.8662959999999,
                    "p99": 955.8662959999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.23893999999999,
                    "min": 183.56312799999998,
                    "p50": 189.834906,
                    "p95": 211.23893999999999,
                    "p99": 211.23893999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 457.206532,
                    "min": 372.91450199999997,
                    "p50": 418.578305,
                    "p95": 457.206532,
                    "p99": 457.206532,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 479.01270999999997,
                    "min": 425.381171,
                    "p50": 442.820301,
                    "p95": 479.01270999999997,
                    "p99": 479.01270999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 529.8378829999999,
                    "min": 470.79200499999996,
                    "p50": 507.15916699999997,
                    "p95": 529.8378829999999,
                    "p99": 529.8378829999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 840.151943,
                    "min": 724.02896,
                    "p50": 794.361948,
                    "p95": 840.151943,
                    "p99": 840.151943,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 590.143047,
                    "min": 511.78086399999995,
                    "p50": 527.531016,
                    "p95": 590.143047,
                    "p99": 590.143047,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 667.572725,
                    "min": 531.647562,
                    "p50": 587.5247079999999,
                    "p95": 667.572725,
                    "p99": 667.572725,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.351714,
                    "min": 137.39037,
                    "p50": 156.12255299999998,
                    "p95": 173.351714,
                    "p99": 173.351714,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.882476,
                    "min": 258.338727,
                    "p50": 284.280266,
                    "p95": 299.882476,
                    "p99": 299.882476,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 247.68320799999998,
                    "min": 219.252319,
                    "p50": 234.660843,
                    "p95": 247.68320799999998,
                    "p99": 247.68320799999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 739.1005759999999,
                    "min": 634.0982789999999,
                    "p50": 686.1237229999999,
                    "p95": 739.1005759999999,
                    "p99": 739.1005759999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 384.405956,
                    "min": 321.948384,
                    "p50": 359.212037,
                    "p95": 384.405956,
                    "p99": 384.405956,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.418639,
                    "min": 588.2919089999999,
                    "p50": 602.003119,
                    "p95": 656.418639,
                    "p99": 656.418639,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 330.640517,
                    "min": 306.121807,
                    "p50": 323.52124799999996,
                    "p95": 330.640517,
                    "p99": 330.640517,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 244.10957299999998,
                    "min": 222.89540599999998,
                    "p50": 233.78099799999998,
                    "p95": 244.10957299999998,
                    "p99": 244.10957299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.521346,
                    "min": 63.166852999999996,
                    "p50": 65.688518,
                    "p95": 86.521346,
                    "p99": 86.521346,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1207.1962879999999,
                    "min": 1165.137048,
                    "p50": 1193.6801639999999,
                    "p95": 1207.1962879999999,
                    "p99": 1207.1962879999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.89149499999996,
                    "min": 249.638444,
                    "p50": 256.04605599999996,
                    "p95": 290.89149499999996,
                    "p99": 290.89149499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 393.811993,
                    "min": 363.131147,
                    "p50": 369.81503299999997,
                    "p95": 393.811993,
                    "p99": 393.811993,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.714066,
                    "min": 136.23836799999998,
                    "p50": 143.017153,
                    "p95": 154.714066,
                    "p99": 154.714066,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 512.6245339999999,
                    "min": 480.40777699999995,
                    "p50": 487.06206599999996,
                    "p95": 512.6245339999999,
                    "p99": 512.6245339999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.21937399999999,
                    "min": 86.04145299999999,
                    "p50": 88.409455,
                    "p95": 126.21937399999999,
                    "p99": 126.21937399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 128.688647,
                    "min": 109.315862,
                    "p50": 114.36538999999999,
                    "p95": 128.688647,
                    "p99": 128.688647,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.997114999999994,
                    "min": 52.224427999999996,
                    "p50": 54.336732,
                    "p95": 60.997114999999994,
                    "p99": 60.997114999999994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 145.43501899999998,
                    "min": 121.57563999999999,
                    "p50": 129.341558,
                    "p95": 145.43501899999998,
                    "p99": 145.43501899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 144.77022399999998,
                    "min": 104.184326,
                    "p50": 125.43904599999999,
                    "p95": 144.77022399999998,
                    "p99": 144.77022399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.964876,
                    "min": 147.61802699999998,
                    "p50": 151.413232,
                    "p95": 171.964876,
                    "p99": 171.964876,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.70911099999998,
                    "min": 167.816755,
                    "p50": 179.630149,
                    "p95": 194.70911099999998,
                    "p99": 194.70911099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 170.722625,
                    "min": 157.345258,
                    "p50": 164.548501,
                    "p95": 170.722625,
                    "p99": 170.722625,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 642.102992,
                    "min": 594.294389,
                    "p50": 601.191426,
                    "p95": 642.102992,
                    "p99": 642.102992,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 80.602986,
                    "min": 75.78069099999999,
                    "p50": 77.77987,
                    "p95": 80.602986,
                    "p99": 80.602986,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 213.361414,
                    "min": 179.897572,
                    "p50": 189.267791,
                    "p95": 213.361414,
                    "p99": 213.361414,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 212.971972,
                    "min": 190.306544,
                    "p50": 199.931954,
                    "p95": 212.971972,
                    "p99": 212.971972,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 402.38491899999997,
                    "min": 377.727514,
                    "p50": 388.27968,
                    "p95": 402.38491899999997,
                    "p99": 402.38491899999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 130.04506899999998,
                    "min": 89.79182399999999,
                    "p50": 102.621715,
                    "p95": 130.04506899999998,
                    "p99": 130.04506899999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 533.482547,
                    "min": 503.124671,
                    "p50": 520.2742,
                    "p95": 533.482547,
                    "p99": 533.482547,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 277.568356,
                    "min": 261.791018,
                    "p50": 272.626315,
                    "p95": 277.568356,
                    "p99": 277.568356,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 204.216408,
                    "min": 188.268236,
                    "p50": 197.46542699999998,
                    "p95": 204.216408,
                    "p99": 204.216408,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 220.012927,
                    "min": 199.921796,
                    "p50": 206.35020899999998,
                    "p95": 220.012927,
                    "p99": 220.012927,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 206.032016,
                    "min": 177.591332,
                    "p50": 188.88695199999998,
                    "p95": 206.032016,
                    "p99": 206.032016,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 253.01535199999998,
                    "min": 230.217539,
                    "p50": 241.697057,
                    "p95": 253.01535199999998,
                    "p99": 253.01535199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.179211,
                    "min": 54.78075,
                    "p50": 56.099303,
                    "p95": 89.179211,
                    "p99": 89.179211,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1262.876832,
                    "min": 1225.6407809999998,
                    "p50": 1242.348767,
                    "p95": 1262.876832,
                    "p99": 1262.876832,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.752636,
                    "min": 66.44466299999999,
                    "p50": 69.022615,
                    "p95": 94.752636,
                    "p99": 94.752636,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.05659399999999,
                    "min": 78.900654,
                    "p50": 80.403382,
                    "p95": 113.05659399999999,
                    "p99": 113.05659399999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 139.658715,
                    "min": 114.492058,
                    "p50": 123.363642,
                    "p95": 139.658715,
                    "p99": 139.658715,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 187.895749,
                    "min": 166.095944,
                    "p50": 176.617697,
                    "p95": 187.895749,
                    "p99": 187.895749,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.39570899999998,
                    "min": 128.802851,
                    "p50": 136.19673,
                    "p95": 154.39570899999998,
                    "p99": 154.39570899999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 209.141141,
                    "min": 151.18940999999998,
                    "p50": 159.748523,
                    "p95": 209.141141,
                    "p99": 209.141141,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 133.675298,
                    "min": 103.081201,
                    "p50": 103.86187299999999,
                    "p95": 133.675298,
                    "p99": 133.675298,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 168.285942,
                    "min": 138.416536,
                    "p50": 143.242456,
                    "p95": 168.285942,
                    "p99": 168.285942,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 641.532258,
                    "min": 625.000733,
                    "p50": 633.494248,
                    "p95": 641.532258,
                    "p99": 641.532258,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 196.23297599999998,
                    "min": 176.91143,
                    "p50": 184.04899699999999,
                    "p95": 196.23297599999998,
                    "p99": 196.23297599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1261.5150589999998,
                    "min": 1208.0144149999999,
                    "p50": 1242.966686,
                    "p95": 1261.5150589999998,
                    "p99": 1261.5150589999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 206.10339,
                    "min": 190.42251399999998,
                    "p50": 197.44543199999998,
                    "p95": 206.10339,
                    "p99": 206.10339,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.385301,
                    "min": 127.817889,
                    "p50": 140.731431,
                    "p95": 154.385301,
                    "p99": 154.385301,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 251.796864,
                    "min": 232.41768499999998,
                    "p50": 240.37042499999998,
                    "p95": 251.796864,
                    "p99": 251.796864,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 296.91517,
                    "min": 257.30057899999997,
                    "p50": 281.516776,
                    "p95": 296.91517,
                    "p99": 296.91517,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.54359,
                    "min": 76.917749,
                    "p50": 81.219341,
                    "p95": 105.54359,
                    "p99": 105.54359,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 164.76825,
                    "min": 136.605529,
                    "p50": 141.365784,
                    "p95": 164.76825,
                    "p99": 164.76825,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 144.766145,
                    "min": 102.254941,
                    "p50": 115.846064,
                    "p95": 144.766145,
                    "p99": 144.766145,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 231.12379199999998,
                    "min": 199.272108,
                    "p50": 207.489431,
                    "p95": 231.12379199999998,
                    "p99": 231.12379199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 202.270139,
                    "min": 159.886428,
                    "p50": 175.401605,
                    "p95": 202.270139,
                    "p99": 202.270139,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 528.083001,
                    "min": 499.181252,
                    "p50": 506.472718,
                    "p95": 528.083001,
                    "p99": 528.083001,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 409.518735,
                    "min": 375.888554,
                    "p50": 400.843332,
                    "p95": 409.518735,
                    "p99": 409.518735,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 184.20023,
                    "min": 150.30978299999998,
                    "p50": 177.641936,
                    "p95": 184.20023,
                    "p99": 184.20023,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 59.614926999999994,
                    "min": 53.467676,
                    "p50": 55.607014,
                    "p95": 59.614926999999994,
                    "p99": 59.614926999999994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.045078,
                    "min": 114.02362199999999,
                    "p50": 122.291963,
                    "p95": 154.045078,
                    "p99": 154.045078,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 73.260706,
                    "min": 65.591712,
                    "p50": 68.69680799999999,
                    "p95": 73.260706,
                    "p99": 73.260706,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.515192,
                    "min": 89.755667,
                    "p50": 93.710636,
                    "p95": 125.515192,
                    "p99": 125.515192,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 671.577939,
                    "min": 620.132743,
                    "p50": 626.4938149999999,
                    "p95": 671.577939,
                    "p99": 671.577939,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 164.65901599999998,
                    "min": 152.37632499999998,
                    "p50": 161.57554399999998,
                    "p95": 164.65901599999998,
                    "p99": 164.65901599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 154.39630599999998,
                    "min": 104.172299,
                    "p50": 121.36299799999999,
                    "p95": 154.39630599999998,
                    "p99": 154.39630599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.42646099999999,
                    "min": 68.120161,
                    "p50": 71.84018,
                    "p95": 91.42646099999999,
                    "p99": 91.42646099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 141.518054,
                    "min": 114.575603,
                    "p50": 123.97439,
                    "p95": 141.518054,
                    "p99": 141.518054,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 311.37737899999996,
                    "min": 262.45218,
                    "p50": 273.21763799999997,
                    "p95": 311.37737899999996,
                    "p99": 311.37737899999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 58.596461,
                    "min": 54.827315999999996,
                    "p50": 56.334337999999995,
                    "p95": 58.596461,
                    "p99": 58.596461,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1257.640036,
                    "min": 1238.7338479999999,
                    "p50": 1249.725049,
                    "p95": 1257.640036,
                    "p99": 1257.640036,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 276.38631499999997,
                    "min": 234.562839,
                    "p50": 242.641913,
                    "p95": 276.38631499999997,
                    "p99": 276.38631499999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 107.066249,
                    "min": 78.750399,
                    "p50": 90.46331599999999,
                    "p95": 107.066249,
                    "p99": 107.066249,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 169.340362,
                    "min": 140.54617199999998,
                    "p50": 154.716162,
                    "p95": 169.340362,
                    "p99": 169.340362,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 210.50562399999998,
                    "min": 188.748485,
                    "p50": 199.344295,
                    "p95": 210.50562399999998,
                    "p99": 210.50562399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.54745299999999,
                    "min": 91.39537,
                    "p50": 92.74629399999999,
                    "p95": 106.54745299999999,
                    "p99": 106.54745299999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.28355499999998,
                    "min": 164.893935,
                    "p50": 175.47888899999998,
                    "p95": 183.28355499999998,
                    "p99": 183.28355499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 654.7724099999999,
                    "min": 629.863074,
                    "p50": 645.7811859999999,
                    "p95": 654.7724099999999,
                    "p99": 654.7724099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 401.57027899999997,
                    "min": 387.38949199999996,
                    "p50": 394.66644199999996,
                    "p95": 401.57027899999997,
                    "p99": 401.57027899999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 214.647153,
                    "min": 177.12224,
                    "p50": 184.21152999999998,
                    "p95": 214.647153,
                    "p99": 214.647153,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.508268,
                    "min": 128.07987,
                    "p50": 136.982476,
                    "p95": 165.508268,
                    "p99": 165.508268,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 224.79501,
                    "min": 203.657702,
                    "p50": 212.050794,
                    "p95": 224.79501,
                    "p99": 224.79501,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 539.987792,
                    "min": 512.221771,
                    "p50": 524.832584,
                    "p95": 539.987792,
                    "p99": 539.987792,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 133.757247,
                    "min": 106.31394999999999,
                    "p50": 110.55662,
                    "p95": 133.757247,
                    "p99": 133.757247,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 200.84458899999998,
                    "min": 188.28670499999998,
                    "p50": 191.75089799999998,
                    "p95": 200.84458899999998,
                    "p99": 200.84458899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 185.42265799999998,
                    "min": 159.85020699999998,
                    "p50": 167.106689,
                    "p95": 185.42265799999998,
                    "p99": 185.42265799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 110.53362999999999,
                    "min": 93.518238,
                    "p50": 97.50174299999999,
                    "p95": 110.53362999999999,
                    "p99": 110.53362999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 320.494578,
                    "min": 270.549517,
                    "p50": 296.83199099999996,
                    "p95": 320.494578,
                    "p99": 320.494578,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 103.088557,
                    "min": 67.665104,
                    "p50": 75.861727,
                    "p95": 103.088557,
                    "p99": 103.088557,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.78768599999998,
                    "min": 120.52328999999999,
                    "p50": 135.18913,
                    "p95": 153.78768599999998,
                    "p99": 153.78768599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.415379,
                    "min": 145.83435,
                    "p50": 155.178798,
                    "p95": 185.415379,
                    "p99": 185.415379,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 243.851204,
                    "min": 209.022256,
                    "p50": 218.025801,
                    "p95": 243.851204,
                    "p99": 243.851204,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 443.492826,
                    "min": 399.12208699999996,
                    "p50": 411.556207,
                    "p95": 443.492826,
                    "p99": 443.492826,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 180.89449399999998,
                    "min": 171.746082,
                    "p50": 178.348176,
                    "p95": 180.89449399999998,
                    "p99": 180.89449399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 174.822386,
                    "min": 135.006003,
                    "p50": 143.293468,
                    "p95": 174.822386,
                    "p99": 174.822386,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.907094,
                    "min": 81.173343,
                    "p50": 83.13972799999999,
                    "p95": 98.907094,
                    "p99": 98.907094,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 219.956213,
                    "min": 195.38006,
                    "p50": 204.62812699999998,
                    "p95": 219.956213,
                    "p99": 219.956213,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 267.676309,
                    "min": 242.52734099999998,
                    "p50": 246.931604,
                    "p95": 267.676309,
                    "p99": 267.676309,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 557.298556,
                    "min": 530.393726,
                    "p50": 537.471429,
                    "p95": 557.298556,
                    "p99": 557.298556,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 688.924222,
                    "min": 655.207813,
                    "p50": 663.8924509999999,
                    "p95": 688.924222,
                    "p99": 688.924222,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1327.132458,
                    "min": 1277.74319,
                    "p50": 1309.841389,
                    "p95": 1327.132458,
                    "p99": 1327.132458,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.869078,
                    "min": 55.292465,
                    "p50": 57.799884999999996,
                    "p95": 75.869078,
                    "p99": 75.869078,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 647.694455,
                    "min": 625.224742,
                    "p50": 641.288634,
                    "p95": 647.694455,
                    "p99": 647.694455,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.49191399999998,
                    "min": 179.157682,
                    "p50": 182.813299,
                    "p95": 194.49191399999998,
                    "p99": 194.49191399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 190.39645199999998,
                    "min": 140.114292,
                    "p50": 160.04286,
                    "p95": 190.39645199999998,
                    "p99": 190.39645199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.895874,
                    "min": 199.563336,
                    "p50": 209.95889599999998,
                    "p95": 237.895874,
                    "p99": 237.895874,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 127.481434,
                    "min": 104.160967,
                    "p50": 105.498752,
                    "p95": 127.481434,
                    "p99": 127.481434,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.46474099999999,
                    "min": 78.19417299999999,
                    "p50": 88.334693,
                    "p95": 96.46474099999999,
                    "p99": 96.46474099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 59.011424,
                    "min": 53.947191,
                    "p50": 54.731902,
                    "p95": 59.011424,
                    "p99": 59.011424,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 175.60185099999998,
                    "min": 150.225339,
                    "p50": 163.91786399999998,
                    "p95": 175.60185099999998,
                    "p99": 175.60185099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 254.00669499999998,
                    "min": 230.40695399999998,
                    "p50": 238.449466,
                    "p95": 254.00669499999998,
                    "p99": 254.00669499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.021941,
                    "min": 91.067399,
                    "p50": 95.480228,
                    "p95": 106.021941,
                    "p99": 106.021941,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 157.11836,
                    "min": 115.287734,
                    "p50": 120.37473999999999,
                    "p95": 157.11836,
                    "p99": 157.11836,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 219.700484,
                    "min": 190.49410899999998,
                    "p50": 203.00169,
                    "p95": 219.700484,
                    "p99": 219.700484,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 553.1681219999999,
                    "min": 508.404337,
                    "p50": 514.314312,
                    "p95": 553.1681219999999,
                    "p99": 553.1681219999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 172.69548999999998,
                    "min": 128.794643,
                    "p50": 144.227858,
                    "p95": 172.69548999999998,
                    "p99": 172.69548999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 295.017362,
                    "min": 263.72058499999997,
                    "p50": 279.587554,
                    "p95": 295.017362,
                    "p99": 295.017362,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 204.18326499999998,
                    "min": 168.231048,
                    "p50": 173.625744,
                    "p95": 204.18326499999998,
                    "p99": 204.18326499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 103.90363599999999,
                    "min": 66.099046,
                    "p50": 70.896413,
                    "p95": 103.90363599999999,
                    "p99": 103.90363599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 408.602897,
                    "min": 385.420435,
                    "p50": 395.271865,
                    "p95": 408.602897,
                    "p99": 408.602897,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 231.68518899999998,
                    "min": 202.779301,
                    "p50": 210.067297,
                    "p95": 231.68518899999998,
                    "p99": 231.68518899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.810434,
                    "min": 150.499427,
                    "p50": 162.76646399999998,
                    "p95": 178.810434,
                    "p99": 178.810434,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 298.689279,
                    "min": 257.950893,
                    "p50": 270.60603,
                    "p95": 298.689279,
                    "p99": 298.689279,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1011.959938,
                    "min": 940.9805779999999,
                    "p50": 978.9871449999999,
                    "p95": 1011.959938,
                    "p99": 1011.959938,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 668.815832,
                    "min": 620.447922,
                    "p50": 641.659578,
                    "p95": 668.815832,
                    "p99": 668.815832,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 759.298417,
                    "min": 717.000217,
                    "p50": 735.546889,
                    "p95": 759.298417,
                    "p99": 759.298417,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 902.5598229999999,
                    "min": 812.7079659999999,
                    "p50": 844.219971,
                    "p95": 902.5598229999999,
                    "p99": 902.5598229999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 467.33552499999996,
                    "min": 421.52487099999996,
                    "p50": 447.06003499999997,
                    "p95": 467.33552499999996,
                    "p99": 467.33552499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 339.570771,
                    "min": 293.222685,
                    "p50": 303.022647,
                    "p95": 339.570771,
                    "p99": 339.570771,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 422.45682999999997,
                    "min": 378.75354,
                    "p50": 407.82267099999996,
                    "p95": 422.45682999999997,
                    "p99": 422.45682999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 367.593077,
                    "min": 330.36555899999996,
                    "p50": 350.777152,
                    "p95": 367.593077,
                    "p99": 367.593077,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 535.927604,
                    "min": 476.05740499999996,
                    "p50": 495.46534399999996,
                    "p95": 535.927604,
                    "p99": 535.927604,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 568.8551289999999,
                    "min": 526.654529,
                    "p50": 535.542188,
                    "p95": 568.8551289999999,
                    "p99": 568.8551289999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 699.7151339999999,
                    "min": 664.1669079999999,
                    "p50": 684.642021,
                    "p95": 699.7151339999999,
                    "p99": 699.7151339999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 609.58088,
                    "min": 567.019146,
                    "p50": 589.585888,
                    "p95": 609.58088,
                    "p99": 609.58088,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 596.813844,
                    "min": 529.657304,
                    "p50": 558.4241979999999,
                    "p95": 596.813844,
                    "p99": 596.813844,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 692.9739589999999,
                    "min": 603.0120929999999,
                    "p50": 645.327945,
                    "p95": 692.9739589999999,
                    "p99": 692.9739589999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 734.232054,
                    "min": 663.457143,
                    "p50": 675.643977,
                    "p95": 734.232054,
                    "p99": 734.232054,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 236.19310099999998,
                    "min": 206.471012,
                    "p50": 213.02990699999998,
                    "p95": 236.19310099999998,
                    "p99": 236.19310099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 275.853779,
                    "min": 245.28045999999998,
                    "p50": 256.267493,
                    "p95": 275.853779,
                    "p99": 275.853779,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 377.20171,
                    "min": 341.635558,
                    "p50": 358.421991,
                    "p95": 377.20171,
                    "p99": 377.20171,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 325.974274,
                    "min": 290.286451,
                    "p50": 296.874267,
                    "p95": 325.974274,
                    "p99": 325.974274,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 525.66554,
                    "min": 485.95097999999996,
                    "p50": 502.072342,
                    "p95": 525.66554,
                    "p99": 525.66554,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.53243799999998,
                    "min": 153.98331199999998,
                    "p50": 170.266902,
                    "p95": 198.53243799999998,
                    "p99": 198.53243799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 430.785353,
                    "min": 391.702637,
                    "p50": 397.931291,
                    "p95": 430.785353,
                    "p99": 430.785353,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 881.216698,
                    "min": 838.945164,
                    "p50": 857.1716389999999,
                    "p95": 881.216698,
                    "p99": 881.216698,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1002.932025,
                    "min": 967.5700509999999,
                    "p50": 984.4508999999999,
                    "p95": 1002.932025,
                    "p99": 1002.932025,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 772.2558829999999,
                    "min": 722.8468379999999,
                    "p50": 733.7457099999999,
                    "p95": 772.2558829999999,
                    "p99": 772.2558829999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 446.51764599999996,
                    "min": 429.715194,
                    "p50": 440.886827,
                    "p95": 446.51764599999996,
                    "p99": 446.51764599999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 609.259744,
                    "min": 571.53948,
                    "p50": 590.233645,
                    "p95": 609.259744,
                    "p99": 609.259744,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 689.70035,
                    "min": 656.8910179999999,
                    "p50": 675.321702,
                    "p95": 689.70035,
                    "p99": 689.70035,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 636.423045,
                    "min": 607.515301,
                    "p50": 617.1791969999999,
                    "p95": 636.423045,
                    "p99": 636.423045,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 744.7874969999999,
                    "min": 706.987165,
                    "p50": 720.246531,
                    "p95": 744.7874969999999,
                    "p99": 744.7874969999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 861.9272179999999,
                    "min": 805.764694,
                    "p50": 839.8097339999999,
                    "p95": 861.9272179999999,
                    "p99": 861.9272179999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 604.072125,
                    "min": 568.165921,
                    "p50": 579.513768,
                    "p95": 604.072125,
                    "p99": 604.072125,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 576.648746,
                    "min": 527.7458389999999,
                    "p50": 537.113133,
                    "p95": 576.648746,
                    "p99": 576.648746,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 202.243667,
                    "min": 154.880687,
                    "p50": 172.257272,
                    "p95": 202.243667,
                    "p99": 202.243667,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 983.1174,
                    "min": 923.337547,
                    "p50": 941.917235,
                    "p95": 983.1174,
                    "p99": 983.1174,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 491.295302,
                    "min": 462.614528,
                    "p50": 477.617571,
                    "p95": 491.295302,
                    "p99": 491.295302,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 452.91688999999997,
                    "min": 424.649275,
                    "p50": 437.042986,
                    "p95": 452.91688999999997,
                    "p99": 452.91688999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 320.419428,
                    "min": 285.236133,
                    "p50": 299.706027,
                    "p95": 320.419428,
                    "p99": 320.419428,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 410.52561499999996,
                    "min": 372.446442,
                    "p50": 392.42053899999996,
                    "p95": 410.52561499999996,
                    "p99": 410.52561499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 374.968394,
                    "min": 340.170394,
                    "p50": 351.098577,
                    "p95": 374.968394,
                    "p99": 374.968394,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 221.78099699999999,
                    "min": 199.028371,
                    "p50": 206.876825,
                    "p95": 221.78099699999999,
                    "p99": 221.78099699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 288.033172,
                    "min": 242.058019,
                    "p50": 251.22039999999998,
                    "p95": 288.033172,
                    "p99": 288.033172,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 706.713701,
                    "min": 651.6529509999999,
                    "p50": 681.066929,
                    "p95": 706.713701,
                    "p99": 706.713701,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 739.002495,
                    "min": 695.494362,
                    "p50": 705.471995,
                    "p95": 739.002495,
                    "p99": 739.002495,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 578.201417,
                    "min": 562.594604,
                    "p50": 570.7352089999999,
                    "p95": 578.201417,
                    "p99": 578.201417,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 849.518122,
                    "min": 793.399379,
                    "p50": 822.7042869999999,
                    "p95": 849.518122,
                    "p99": 849.518122,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.73510299999998,
                    "min": 201.079988,
                    "p50": 204.04128699999998,
                    "p95": 211.73510299999998,
                    "p99": 211.73510299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 563.115959,
                    "min": 514.591309,
                    "p50": 537.071954,
                    "p95": 563.115959,
                    "p99": 563.115959,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1004.0850829999999,
                    "min": 951.848133,
                    "p50": 976.0836909999999,
                    "p95": 1004.0850829999999,
                    "p99": 1004.0850829999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.370912,
                    "min": 280.046004,
                    "p50": 289.14859,
                    "p95": 309.370912,
                    "p99": 309.370912,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 413.32228499999997,
                    "min": 386.377439,
                    "p50": 403.81905,
                    "p95": 413.32228499999997,
                    "p99": 413.32228499999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 370.881483,
                    "min": 333.210469,
                    "p50": 354.507887,
                    "p95": 370.881483,
                    "p99": 370.881483,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 268.640273,
                    "min": 238.610011,
                    "p50": 248.448616,
                    "p95": 268.640273,
                    "p99": 268.640273,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 448.67464099999995,
                    "min": 422.26694399999997,
                    "p50": 426.65025699999995,
                    "p95": 448.67464099999995,
                    "p99": 448.67464099999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 521.486012,
                    "min": 476.06710899999996,
                    "p50": 495.63827799999996,
                    "p95": 521.486012,
                    "p99": 521.486012,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 189.18035,
                    "min": 152.630248,
                    "p50": 161.69360899999998,
                    "p95": 189.18035,
                    "p99": 189.18035,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 673.055625,
                    "min": 612.8398609999999,
                    "p50": 624.3442719999999,
                    "p95": 673.055625,
                    "p99": 673.055625,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1726.1706339999998,
                    "min": 1689.21672,
                    "p50": 1708.4850589999999,
                    "p95": 1726.1706339999998,
                    "p99": 1726.1706339999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1050.12843,
                    "min": 1027.704634,
                    "p50": 1041.7099719999999,
                    "p95": 1050.12843,
                    "p99": 1050.12843,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1301.5422529999998,
                    "min": 1255.743136,
                    "p50": 1270.198435,
                    "p95": 1301.5422529999998,
                    "p99": 1301.5422529999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 850.0593339999999,
                    "min": 802.143872,
                    "p50": 820.99279,
                    "p95": 850.0593339999999,
                    "p99": 850.0593339999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 710.804718,
                    "min": 694.265193,
                    "p50": 699.693588,
                    "p95": 710.804718,
                    "p99": 710.804718,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1163.424204,
                    "min": 1131.07466,
                    "p50": 1157.054296,
                    "p95": 1163.424204,
                    "p99": 1163.424204,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 373.351949,
                    "min": 351.89829,
                    "p50": 361.345706,
                    "p95": 373.351949,
                    "p99": 373.351949,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 509.373793,
                    "min": 461.440925,
                    "p50": 487.185372,
                    "p95": 509.373793,
                    "p99": 509.373793,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 941.4073629999999,
                    "min": 915.375133,
                    "p50": 922.0310519999999,
                    "p95": 941.4073629999999,
                    "p99": 941.4073629999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 601.9027169999999,
                    "min": 588.6502039999999,
                    "p50": 595.877653,
                    "p95": 601.9027169999999,
                    "p99": 601.9027169999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2302.359427,
                    "min": 2213.8857629999998,
                    "p50": 2264.008166,
                    "p95": 2302.359427,
                    "p99": 2302.359427,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1398.9396729999999,
                    "min": 1344.23081,
                    "p50": 1374.4557029999999,
                    "p95": 1398.9396729999999,
                    "p99": 1398.9396729999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2000.7425369999999,
                    "min": 1973.24939,
                    "p50": 1984.1549169999998,
                    "p95": 2000.7425369999999,
                    "p99": 2000.7425369999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1642.7044119999998,
                    "min": 1581.9310779999998,
                    "p50": 1595.983112,
                    "p95": 1642.7044119999998,
                    "p99": 1642.7044119999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1534.101915,
                    "min": 1459.8313429999998,
                    "p50": 1493.0989989999998,
                    "p95": 1534.101915,
                    "p99": 1534.101915,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3426.8760909999996,
                    "min": 3345.3147169999997,
                    "p50": 3375.4769779999997,
                    "p95": 3426.8760909999996,
                    "p99": 3426.8760909999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1876.0649859999999,
                    "min": 1822.944074,
                    "p50": 1840.0238829999998,
                    "p95": 1876.0649859999999,
                    "p99": 1876.0649859999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1364.40222,
                    "min": 1338.166669,
                    "p50": 1344.328485,
                    "p95": 1364.40222,
                    "p99": 1364.40222,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1635.476801,
                    "min": 1579.75414,
                    "p50": 1611.731985,
                    "p95": 1635.476801,
                    "p99": 1635.476801,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2467.985073,
                    "min": 2427.157746,
                    "p50": 2436.666655,
                    "p95": 2467.985073,
                    "p99": 2467.985073,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2153.939646,
                    "min": 2111.103591,
                    "p50": 2145.496878,
                    "p95": 2153.939646,
                    "p99": 2153.939646,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1501.503739,
                    "min": 1451.401381,
                    "p50": 1476.764829,
                    "p95": 1501.503739,
                    "p99": 1501.503739,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 408.76289599999996,
                    "min": 379.816599,
                    "p50": 393.44366099999996,
                    "p95": 408.76289599999996,
                    "p99": 408.76289599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 520.186323,
                    "min": 500.71574699999996,
                    "p50": 516.875648,
                    "p95": 520.186323,
                    "p99": 520.186323,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1263.091216,
                    "min": 1215.049335,
                    "p50": 1250.91651,
                    "p95": 1263.091216,
                    "p99": 1263.091216,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 765.874545,
                    "min": 734.1207539999999,
                    "p50": 754.4425279999999,
                    "p95": 765.874545,
                    "p99": 765.874545,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1120.956367,
                    "min": 1102.0191479999999,
                    "p50": 1114.3675409999998,
                    "p95": 1120.956367,
                    "p99": 1120.956367,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 651.858557,
                    "min": 621.286884,
                    "p50": 638.636051,
                    "p95": 651.858557,
                    "p99": 651.858557,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1763.6546919999998,
                    "min": 1688.831371,
                    "p50": 1721.050235,
                    "p95": 1763.6546919999998,
                    "p99": 1763.6546919999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1005.466332,
                    "min": 979.098527,
                    "p50": 993.529651,
                    "p95": 1005.466332,
                    "p99": 1005.466332,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 879.172871,
                    "min": 861.403609,
                    "p50": 870.399902,
                    "p95": 879.172871,
                    "p99": 879.172871,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1357.301843,
                    "min": 1318.284846,
                    "p50": 1339.467309,
                    "p95": 1357.301843,
                    "p99": 1357.301843,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 562.2229649999999,
                    "min": 535.681838,
                    "p50": 551.676307,
                    "p95": 562.2229649999999,
                    "p99": 562.2229649999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1088.337311,
                    "min": 1063.9926289999999,
                    "p50": 1069.643166,
                    "p95": 1088.337311,
                    "p99": 1088.337311,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 966.019871,
                    "min": 938.0332099999999,
                    "p50": 957.5467199999999,
                    "p95": 966.019871,
                    "p99": 966.019871,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 827.5756849999999,
                    "min": 793.867792,
                    "p50": 814.482535,
                    "p95": 827.5756849999999,
                    "p99": 827.5756849999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2007.404263,
                    "min": 1970.0490149999998,
                    "p50": 1989.384576,
                    "p95": 2007.404263,
                    "p99": 2007.404263,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1742.1286089999999,
                    "min": 1709.9507649999998,
                    "p50": 1731.278715,
                    "p95": 1742.1286089999999,
                    "p99": 1742.1286089999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2662.8337979999997,
                    "min": 2581.974851,
                    "p50": 2618.307522,
                    "p95": 2662.8337979999997,
                    "p99": 2662.8337979999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3982.5840719999997,
                    "min": 3915.637154,
                    "p50": 3953.798539,
                    "p95": 3982.5840719999997,
                    "p99": 3982.5840719999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1627.1302779999999,
                    "min": 1577.031264,
                    "p50": 1589.0370229999999,
                    "p95": 1627.1302779999999,
                    "p99": 1627.1302779999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 723.983692,
                    "min": 666.44711,
                    "p50": 679.369843,
                    "p95": 723.983692,
                    "p99": 723.983692,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1488.5817439999998,
                    "min": 1449.301698,
                    "p50": 1462.229416,
                    "p95": 1488.5817439999998,
                    "p99": 1488.5817439999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 438.32192499999996,
                    "min": 410.18064999999996,
                    "p50": 419.427189,
                    "p95": 438.32192499999996,
                    "p99": 438.32192499999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1866.133361,
                    "min": 1832.6006209999998,
                    "p50": 1844.400537,
                    "p95": 1866.133361,
                    "p99": 1866.133361,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2310.216537,
                    "min": 2278.774087,
                    "p50": 2293.012354,
                    "p95": 2310.216537,
                    "p99": 2310.216537,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1212.2846009999998,
                    "min": 1186.033051,
                    "p50": 1196.786139,
                    "p95": 1212.2846009999998,
                    "p99": 1212.2846009999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3390.122239,
                    "min": 3331.832469,
                    "p50": 3362.2603689999996,
                    "p95": 3390.122239,
                    "p99": 3390.122239,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 794.38442,
                    "min": 769.582506,
                    "p50": 779.6447949999999,
                    "p95": 794.38442,
                    "p99": 794.38442,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 546.582543,
                    "min": 521.8349559999999,
                    "p50": 530.380011,
                    "p95": 546.582543,
                    "p99": 546.582543,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1047.928559,
                    "min": 1016.495719,
                    "p50": 1038.926369,
                    "p95": 1047.928559,
                    "p99": 1047.928559,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 385.48429699999997,
                    "min": 353.535682,
                    "p50": 365.68027,
                    "p95": 385.48429699999997,
                    "p99": 385.48429699999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1727.508324,
                    "min": 1674.9779819999999,
                    "p50": 1704.4768749999998,
                    "p95": 1727.508324,
                    "p99": 1727.508324,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1317.193479,
                    "min": 1253.48602,
                    "p50": 1278.734451,
                    "p95": 1317.193479,
                    "p99": 1317.193479,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1217.11495,
                    "min": 1172.040075,
                    "p50": 1195.989315,
                    "p95": 1217.11495,
                    "p99": 1217.11495,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 280.568902,
                    "min": 267.09461799999997,
                    "p50": 275.504648,
                    "p95": 280.568902,
                    "p99": 280.568902,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 457.220078,
                    "min": 433.294894,
                    "p50": 446.27773099999996,
                    "p95": 457.220078,
                    "p99": 457.220078,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1523.6756169999999,
                    "min": 1481.116626,
                    "p50": 1487.4728559999999,
                    "p95": 1523.6756169999999,
                    "p99": 1523.6756169999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 704.0875199999999,
                    "min": 683.892733,
                    "p50": 692.67284,
                    "p95": 704.0875199999999,
                    "p99": 704.0875199999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 952.797375,
                    "min": 932.4412759999999,
                    "p50": 946.71992,
                    "p95": 952.797375,
                    "p99": 952.797375,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 620.025089,
                    "min": 597.87302,
                    "p50": 609.025451,
                    "p95": 620.025089,
                    "p99": 620.025089,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1126.17357,
                    "min": 1100.66818,
                    "p50": 1118.955426,
                    "p95": 1126.17357,
                    "p99": 1126.17357,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2548.049998,
                    "min": 2497.904954,
                    "p50": 2534.297548,
                    "p95": 2548.049998,
                    "p99": 2548.049998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 4246.600151,
                    "min": 4188.058419,
                    "p50": 4217.928678,
                    "p95": 4246.600151,
                    "p99": 4246.600151,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 895.113483,
                    "min": 851.004682,
                    "p50": 864.953126,
                    "p95": 895.113483,
                    "p99": 895.113483,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 451.82159199999995,
                    "min": 409.815864,
                    "p50": 419.41578799999996,
                    "p95": 451.82159199999995,
                    "p99": 451.82159199999995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1179.1982349999998,
                    "min": 1136.851741,
                    "p50": 1150.110075,
                    "p95": 1179.1982349999998,
                    "p99": 1179.1982349999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1747.625353,
                    "min": 1694.5678309999998,
                    "p50": 1714.588442,
                    "p95": 1747.625353,
                    "p99": 1747.625353,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2858.097643,
                    "min": 2793.776861,
                    "p50": 2807.328164,
                    "p95": 2858.097643,
                    "p99": 2858.097643,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2312.186637,
                    "min": 2232.7389049999997,
                    "p50": 2283.2630489999997,
                    "p95": 2312.186637,
                    "p99": 2312.186637,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 572.7968129999999,
                    "min": 470.096227,
                    "p50": 474.47946399999995,
                    "p95": 572.7968129999999,
                    "p99": 572.7968129999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1026.060555,
                    "min": 994.973208,
                    "p50": 1002.3673759999999,
                    "p95": 1026.060555,
                    "p99": 1026.060555,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 374.364396,
                    "min": 353.581008,
                    "p50": 357.26885999999996,
                    "p95": 374.364396,
                    "p99": 374.364396,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 833.496413,
                    "min": 797.211514,
                    "p50": 817.0137669999999,
                    "p95": 833.496413,
                    "p99": 833.496413,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 896.350701,
                    "min": 856.648829,
                    "p50": 870.924708,
                    "p95": 896.350701,
                    "p99": 896.350701,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.140607,
                    "min": 241.25439899999998,
                    "p50": 251.871322,
                    "p95": 271.140607,
                    "p99": 271.140607,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 655.129584,
                    "min": 628.8679989999999,
                    "p50": 641.734889,
                    "p95": 655.129584,
                    "p99": 655.129584,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 707.813376,
                    "min": 683.4217,
                    "p50": 703.371985,
                    "p95": 707.813376,
                    "p99": 707.813376,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 342.291694,
                    "min": 299.25107399999996,
                    "p50": 308.61722199999997,
                    "p95": 342.291694,
                    "p99": 342.291694,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 235.89763499999998,
                    "min": 191.810417,
                    "p50": 200.076408,
                    "p95": 235.89763499999998,
                    "p99": 235.89763499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 781.473882,
                    "min": 745.766478,
                    "p50": 761.5816169999999,
                    "p95": 781.473882,
                    "p99": 781.473882,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 629.515956,
                    "min": 580.132291,
                    "p50": 589.874105,
                    "p95": 629.515956,
                    "p99": 629.515956,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 546.0600079999999,
                    "min": 525.532052,
                    "p50": 532.519154,
                    "p95": 546.0600079999999,
                    "p99": 546.0600079999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 788.085695,
                    "min": 757.550344,
                    "p50": 770.72979,
                    "p95": 788.085695,
                    "p99": 788.085695,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1280.7484869999998,
                    "min": 1156.932095,
                    "p50": 1177.5283889999998,
                    "p95": 1280.7484869999998,
                    "p99": 1280.7484869999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1040.182264,
                    "min": 997.9315489999999,
                    "p50": 1022.0132339999999,
                    "p95": 1040.182264,
                    "p99": 1040.182264,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 304.495256,
                    "min": 261.776893,
                    "p50": 274.924873,
                    "p95": 304.495256,
                    "p99": 304.495256,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1693.682811,
                    "min": 1656.752648,
                    "p50": 1682.318487,
                    "p95": 1693.682811,
                    "p99": 1693.682811,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 728.346853,
                    "min": 668.980088,
                    "p50": 683.887254,
                    "p95": 728.346853,
                    "p99": 728.346853,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 447.72214099999997,
                    "min": 430.148192,
                    "p50": 439.533737,
                    "p95": 447.72214099999997,
                    "p99": 447.72214099999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 972.3413459999999,
                    "min": 918.755154,
                    "p50": 932.083715,
                    "p95": 972.3413459999999,
                    "p99": 972.3413459999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 534.602363,
                    "min": 513.685898,
                    "p50": 527.477678,
                    "p95": 534.602363,
                    "p99": 534.602363,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1490.077522,
                    "min": 1449.521391,
                    "p50": 1469.750448,
                    "p95": 1490.077522,
                    "p99": 1490.077522,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 384.946398,
                    "min": 351.050232,
                    "p50": 358.60637099999997,
                    "p95": 384.946398,
                    "p99": 384.946398,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1281.530941,
                    "min": 1240.106897,
                    "p50": 1266.266496,
                    "p95": 1281.530941,
                    "p99": 1281.530941,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 620.460438,
                    "min": 590.523163,
                    "p50": 600.852575,
                    "p95": 620.460438,
                    "p99": 620.460438,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1107.889358,
                    "min": 1080.805902,
                    "p50": 1098.205956,
                    "p95": 1107.889358,
                    "p99": 1107.889358,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 865.9907129999999,
                    "min": 837.074337,
                    "p50": 851.7877609999999,
                    "p95": 865.9907129999999,
                    "p99": 865.9907129999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 331.314231,
                    "min": 301.202378,
                    "p50": 312.01381,
                    "p95": 331.314231,
                    "p99": 331.314231,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 891.3531439999999,
                    "min": 855.311935,
                    "p50": 879.6809089999999,
                    "p95": 891.3531439999999,
                    "p99": 891.3531439999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 569.015906,
                    "min": 520.152171,
                    "p50": 550.052696,
                    "p95": 569.015906,
                    "p99": 569.015906,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 870.697781,
                    "min": 754.1620849999999,
                    "p50": 762.335967,
                    "p95": 870.697781,
                    "p99": 870.697781,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1218.725884,
                    "min": 1134.383105,
                    "p50": 1173.122036,
                    "p95": 1218.725884,
                    "p99": 1218.725884,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 672.67164,
                    "min": 641.4924659999999,
                    "p50": 656.659858,
                    "p95": 672.67164,
                    "p99": 672.67164,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 874.5021529999999,
                    "min": 817.3380089999999,
                    "p50": 827.727947,
                    "p95": 874.5021529999999,
                    "p99": 874.5021529999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2004.876034,
                    "min": 1712.003759,
                    "p50": 1758.530572,
                    "p95": 2004.876034,
                    "p99": 2004.876034,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 465.50055399999997,
                    "min": 410.040376,
                    "p50": 428.67773,
                    "p95": 465.50055399999997,
                    "p99": 465.50055399999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 217.373254,
                    "min": 183.260563,
                    "p50": 189.448497,
                    "p95": 217.373254,
                    "p99": 217.373254,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 602.086725,
                    "min": 588.1272309999999,
                    "p50": 592.472494,
                    "p95": 602.086725,
                    "p99": 602.086725,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 381.61060799999996,
                    "min": 356.492845,
                    "p50": 373.57742099999996,
                    "p95": 381.61060799999996,
                    "p99": 381.61060799999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 265.076263,
                    "min": 241.987449,
                    "p50": 254.83393099999998,
                    "p95": 265.076263,
                    "p99": 265.076263,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 490.959432,
                    "min": 464.829729,
                    "p50": 479.785054,
                    "p95": 490.959432,
                    "p99": 490.959432,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1040.36394,
                    "min": 1014.969742,
                    "p50": 1027.0489169999998,
                    "p95": 1040.36394,
                    "p99": 1040.36394,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 741.49624,
                    "min": 695.0577979999999,
                    "p50": 706.166114,
                    "p95": 741.49624,
                    "p99": 741.49624,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 799.43376,
                    "min": 770.061751,
                    "p50": 783.674303,
                    "p95": 799.43376,
                    "p99": 799.43376,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 983.830833,
                    "min": 888.614879,
                    "p50": 903.095705,
                    "p95": 983.830833,
                    "p99": 983.830833,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 969.2611899999999,
                    "min": 952.6757829999999,
                    "p50": 962.8750769999999,
                    "p95": 969.2611899999999,
                    "p99": 969.2611899999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 593.358523,
                    "min": 581.563731,
                    "p50": 585.0318129999999,
                    "p95": 593.358523,
                    "p99": 593.358523,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 430.11574199999995,
                    "min": 396.26852399999996,
                    "p50": 409.712445,
                    "p95": 430.11574199999995,
                    "p99": 430.11574199999995,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 539.574129,
                    "min": 515.957737,
                    "p50": 525.842719,
                    "p95": 539.574129,
                    "p99": 539.574129,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 293.98684099999997,
                    "min": 266.555454,
                    "p50": 280.148534,
                    "p95": 293.98684099999997,
                    "p99": 293.98684099999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 365.624121,
                    "min": 333.857662,
                    "p50": 349.668366,
                    "p95": 365.624121,
                    "p99": 365.624121,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 669.8409849999999,
                    "min": 636.157784,
                    "p50": 650.1334969999999,
                    "p95": 669.8409849999999,
                    "p99": 669.8409849999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 468.21621799999997,
                    "min": 452.40588399999996,
                    "p50": 461.103343,
                    "p95": 468.21621799999997,
                    "p99": 468.21621799999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1289.7149,
                    "min": 1250.7017329999999,
                    "p50": 1272.722034,
                    "p95": 1289.7149,
                    "p99": 1289.7149,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 748.139197,
                    "min": 708.140951,
                    "p50": 728.666616,
                    "p95": 748.139197,
                    "p99": 748.139197,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1144.4846189999998,
                    "min": 1108.229633,
                    "p50": 1118.845409,
                    "p95": 1144.4846189999998,
                    "p99": 1144.4846189999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.77710499999998,
                    "min": 204.444449,
                    "p50": 213.43516,
                    "p95": 224.77710499999998,
                    "p99": 224.77710499999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 842.0333479999999,
                    "min": 823.9361759999999,
                    "p50": 833.531123,
                    "p95": 842.0333479999999,
                    "p99": 842.0333479999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 715.839514,
                    "min": 688.1749249999999,
                    "p50": 701.7999219999999,
                    "p95": 715.839514,
                    "p99": 715.839514,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 433.68958499999997,
                    "min": 358.934961,
                    "p50": 364.634285,
                    "p95": 433.68958499999997,
                    "p99": 433.68958499999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 268.374707,
                    "min": 241.63425999999998,
                    "p50": 250.06152799999998,
                    "p95": 268.374707,
                    "p99": 268.374707,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 199.34966899999998,
                    "min": 185.702012,
                    "p50": 193.653031,
                    "p95": 199.34966899999998,
                    "p99": 199.34966899999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 777.823529,
                    "min": 744.2875889999999,
                    "p50": 764.766499,
                    "p95": 777.823529,
                    "p99": 777.823529,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 902.0144349999999,
                    "min": 867.6978389999999,
                    "p50": 879.7051329999999,
                    "p95": 902.0144349999999,
                    "p99": 902.0144349999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 549.169573,
                    "min": 528.929034,
                    "p50": 536.166955,
                    "p95": 549.169573,
                    "p99": 549.169573,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1186.149607,
                    "min": 1132.114331,
                    "p50": 1149.208704,
                    "p95": 1186.149607,
                    "p99": 1186.149607,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 618.5383469999999,
                    "min": 584.345253,
                    "p50": 601.683666,
                    "p95": 618.5383469999999,
                    "p99": 618.5383469999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 438.378105,
                    "min": 411.30366899999996,
                    "p50": 425.524181,
                    "p95": 438.378105,
                    "p99": 438.378105,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1029.526519,
                    "min": 994.5616309999999,
                    "p50": 1005.1821369999999,
                    "p95": 1029.526519,
                    "p99": 1029.526519,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 835.7200409999999,
                    "min": 805.864772,
                    "p50": 824.6252159999999,
                    "p95": 835.7200409999999,
                    "p99": 835.7200409999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 331.480414,
                    "min": 302.16546999999997,
                    "p50": 310.30526599999996,
                    "p95": 331.480414,
                    "p99": 331.480414,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 498.998567,
                    "min": 463.433498,
                    "p50": 479.43830699999995,
                    "p95": 498.998567,
                    "p99": 498.998567,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1718.778016,
                    "min": 1704.129833,
                    "p50": 1713.094654,
                    "p95": 1718.778016,
                    "p99": 1718.778016,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 686.8096519999999,
                    "min": 637.306873,
                    "p50": 644.380872,
                    "p95": 686.8096519999999,
                    "p99": 686.8096519999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2289.198473,
                    "min": 2242.4719419999997,
                    "p50": 2267.525272,
                    "p95": 2289.198473,
                    "p99": 2289.198473,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1160.743057,
                    "min": 1128.797877,
                    "p50": 1145.5915129999998,
                    "p95": 1160.743057,
                    "p99": 1160.743057,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 603.836139,
                    "min": 575.269396,
                    "p50": 586.40796,
                    "p95": 603.836139,
                    "p99": 603.836139,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2288.328167,
                    "min": 2235.257319,
                    "p50": 2267.069794,
                    "p95": 2288.328167,
                    "p99": 2288.328167,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1636.931492,
                    "min": 1573.2017019999998,
                    "p50": 1591.855446,
                    "p95": 1636.931492,
                    "p99": 1636.931492,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 720.3057289999999,
                    "min": 694.137794,
                    "p50": 707.6091749999999,
                    "p95": 720.3057289999999,
                    "p99": 720.3057289999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1723.679717,
                    "min": 1682.75314,
                    "p50": 1698.050305,
                    "p95": 1723.679717,
                    "p99": 1723.679717,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 837.782933,
                    "min": 797.810786,
                    "p50": 813.9873729999999,
                    "p95": 837.782933,
                    "p99": 837.782933,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1386.8597499999998,
                    "min": 1354.729642,
                    "p50": 1372.7709419999999,
                    "p95": 1386.8597499999998,
                    "p99": 1386.8597499999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1066.844719,
                    "min": 1019.511583,
                    "p50": 1034.281453,
                    "p95": 1066.844719,
                    "p99": 1066.844719,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1505.988987,
                    "min": 1456.388762,
                    "p50": 1485.993455,
                    "p95": 1505.988987,
                    "p99": 1505.988987,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2010.225334,
                    "min": 1947.3864039999999,
                    "p50": 1984.947958,
                    "p95": 2010.225334,
                    "p99": 2010.225334,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 953.1781229999999,
                    "min": 911.242043,
                    "p50": 924.620094,
                    "p95": 953.1781229999999,
                    "p99": 953.1781229999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1283.35908,
                    "min": 1237.89925,
                    "p50": 1261.6212739999999,
                    "p95": 1283.35908,
                    "p99": 1283.35908,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 396.615458,
                    "min": 351.187229,
                    "p50": 366.446863,
                    "p95": 396.615458,
                    "p99": 396.615458,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 486.148233,
                    "min": 463.042334,
                    "p50": 477.82624599999997,
                    "p95": 486.148233,
                    "p99": 486.148233,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 664.837582,
                    "min": 644.9451,
                    "p50": 659.134235,
                    "p95": 664.837582,
                    "p99": 664.837582,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.113841,
                    "min": 276.348752,
                    "p50": 281.870346,
                    "p95": 302.113841,
                    "p99": 302.113841,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 791.6171529999999,
                    "min": 772.055253,
                    "p50": 787.2976209999999,
                    "p95": 791.6171529999999,
                    "p99": 791.6171529999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 917.24198,
                    "min": 889.1617789999999,
                    "p50": 903.682907,
                    "p95": 917.24198,
                    "p99": 917.24198,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 371.543252,
                    "min": 328.52354299999996,
                    "p50": 344.144394,
                    "p95": 371.543252,
                    "p99": 371.543252,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 615.5147019999999,
                    "min": 583.252042,
                    "p50": 592.876093,
                    "p95": 615.5147019999999,
                    "p99": 615.5147019999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 546.907662,
                    "min": 517.533427,
                    "p50": 536.926878,
                    "p95": 546.907662,
                    "p99": 546.907662,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 424.74017999999995,
                    "min": 395.685591,
                    "p50": 403.359712,
                    "p95": 424.74017999999995,
                    "p99": 424.74017999999995,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.88709599999999,
                    "min": 206.233746,
                    "p50": 215.185058,
                    "p95": 228.88709599999999,
                    "p99": 228.88709599999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1133.2856749999999,
                    "min": 1105.859624,
                    "p50": 1120.655933,
                    "p95": 1133.2856749999999,
                    "p99": 1133.2856749999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 742.3069509999999,
                    "min": 705.477161,
                    "p50": 718.3777729999999,
                    "p95": 742.3069509999999,
                    "p99": 742.3069509999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 879.0664959999999,
                    "min": 836.749526,
                    "p50": 845.4522029999999,
                    "p95": 879.0664959999999,
                    "p99": 879.0664959999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1298.47544,
                    "min": 1265.817311,
                    "p50": 1279.674933,
                    "p95": 1298.47544,
                    "p99": 1298.47544,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 988.780054,
                    "min": 953.7516069999999,
                    "p50": 976.224656,
                    "p95": 988.780054,
                    "p99": 988.780054,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 478.209654,
                    "min": 456.56332699999996,
                    "p50": 467.36053,
                    "p95": 478.209654,
                    "p99": 478.209654,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1343.115723,
                    "min": 1326.646835,
                    "p50": 1335.011039,
                    "p95": 1343.115723,
                    "p99": 1343.115723,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 784.7622769999999,
                    "min": 760.018165,
                    "p50": 774.475165,
                    "p95": 784.7622769999999,
                    "p99": 784.7622769999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1085.428093,
                    "min": 1051.984772,
                    "p50": 1073.3995419999999,
                    "p95": 1085.428093,
                    "p99": 1085.428093,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1158.658747,
                    "min": 1134.933166,
                    "p50": 1147.443806,
                    "p95": 1158.658747,
                    "p99": 1158.658747,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1657.168531,
                    "min": 1498.759805,
                    "p50": 1514.819818,
                    "p95": 1657.168531,
                    "p99": 1657.168531,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 869.3487329999999,
                    "min": 833.568505,
                    "p50": 847.381219,
                    "p95": 869.3487329999999,
                    "p99": 869.3487329999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 494.17164599999995,
                    "min": 460.327005,
                    "p50": 477.722153,
                    "p95": 494.17164599999995,
                    "p99": 494.17164599999995,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 655.847809,
                    "min": 608.434113,
                    "p50": 625.565803,
                    "p95": 655.847809,
                    "p99": 655.847809,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1004.501371,
                    "min": 976.245293,
                    "p50": 992.346181,
                    "p95": 1004.501371,
                    "p99": 1004.501371,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 918.316341,
                    "min": 900.231626,
                    "p50": 916.3114529999999,
                    "p95": 918.316341,
                    "p99": 918.316341,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2278.675217,
                    "min": 2238.345796,
                    "p50": 2265.018191,
                    "p95": 2278.675217,
                    "p99": 2278.675217,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 577.837637,
                    "min": 540.9784579999999,
                    "p50": 552.727054,
                    "p95": 577.837637,
                    "p99": 577.837637,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 271.18073799999996,
                    "min": 241.043737,
                    "p50": 246.10861799999998,
                    "p95": 271.18073799999996,
                    "p99": 271.18073799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 418.29970799999995,
                    "min": 395.92031599999996,
                    "p50": 402.784019,
                    "p95": 418.29970799999995,
                    "p99": 418.29970799999995,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 713.518687,
                    "min": 685.391413,
                    "p50": 701.20227,
                    "p95": 713.518687,
                    "p99": 713.518687,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 367.59408099999996,
                    "min": 311.254929,
                    "p50": 323.240201,
                    "p95": 367.59408099999996,
                    "p99": 367.59408099999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1309.355051,
                    "min": 1259.2881399999999,
                    "p50": 1280.0821469999998,
                    "p95": 1309.355051,
                    "p99": 1309.355051,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 638.37536,
                    "min": 604.460482,
                    "p50": 608.735406,
                    "p95": 638.37536,
                    "p99": 638.37536,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 297.765364,
                    "min": 270.656067,
                    "p50": 284.46405699999997,
                    "p95": 297.765364,
                    "p99": 297.765364,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 369.948426,
                    "min": 354.65491299999996,
                    "p50": 363.50107299999996,
                    "p95": 369.948426,
                    "p99": 369.948426,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 898.393511,
                    "min": 856.8615659999999,
                    "p50": 872.807831,
                    "p95": 898.393511,
                    "p99": 898.393511,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 553.52829,
                    "min": 520.203001,
                    "p50": 530.828708,
                    "p95": 553.52829,
                    "p99": 553.52829,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1722.785289,
                    "min": 1689.878777,
                    "p50": 1697.327708,
                    "p95": 1722.785289,
                    "p99": 1722.785289,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.83847,
                    "min": 435.910307,
                    "p50": 445.780056,
                    "p95": 479.83847,
                    "p99": 479.83847,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 958.7733549999999,
                    "min": 934.606197,
                    "p50": 951.9586059999999,
                    "p95": 958.7733549999999,
                    "p99": 958.7733549999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 709.7381869999999,
                    "min": 682.13146,
                    "p50": 693.4419899999999,
                    "p95": 709.7381869999999,
                    "p99": 709.7381869999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1051.566339,
                    "min": 1019.672699,
                    "p50": 1040.319497,
                    "p95": 1051.566339,
                    "p99": 1051.566339,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1140.995578,
                    "min": 1100.5318539999998,
                    "p50": 1124.15426,
                    "p95": 1140.995578,
                    "p99": 1140.995578,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1526.269901,
                    "min": 1477.884906,
                    "p50": 1501.7478919999999,
                    "p95": 1526.269901,
                    "p99": 1526.269901,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1223.984007,
                    "min": 1197.734957,
                    "p50": 1206.521701,
                    "p95": 1223.984007,
                    "p99": 1223.984007,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 795.809926,
                    "min": 767.7403969999999,
                    "p50": 782.896171,
                    "p95": 795.809926,
                    "p99": 795.809926,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 303.974387,
                    "min": 268.582854,
                    "p50": 278.990567,
                    "p95": 303.974387,
                    "p99": 303.974387,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1004.376668,
                    "min": 961.884242,
                    "p50": 970.0494329999999,
                    "p95": 1004.376668,
                    "p99": 1004.376668,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 727.826861,
                    "min": 706.036436,
                    "p50": 714.868849,
                    "p95": 727.826861,
                    "p99": 727.826861,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 603.287048,
                    "min": 576.9090669999999,
                    "p50": 593.6097619999999,
                    "p95": 603.287048,
                    "p99": 603.287048,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 419.886426,
                    "min": 392.166503,
                    "p50": 406.64626699999997,
                    "p95": 419.886426,
                    "p99": 419.886426,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.846092,
                    "min": 213.326385,
                    "p50": 215.57351899999998,
                    "p95": 244.846092,
                    "p99": 244.846092,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 387.75744299999997,
                    "min": 329.750742,
                    "p50": 341.869728,
                    "p95": 387.75744299999997,
                    "p99": 387.75744299999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 920.4437049999999,
                    "min": 895.836638,
                    "p50": 907.1878909999999,
                    "p95": 920.4437049999999,
                    "p99": 920.4437049999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1168.01552,
                    "min": 1103.291808,
                    "p50": 1126.356356,
                    "p95": 1168.01552,
                    "p99": 1168.01552,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.269528,
                    "min": 454.104586,
                    "p50": 464.07309899999996,
                    "p95": 477.269528,
                    "p99": 477.269528,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 682.704163,
                    "min": 641.015402,
                    "p50": 662.182041,
                    "p95": 682.704163,
                    "p99": 682.704163,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1310.672321,
                    "min": 1273.0372419999999,
                    "p50": 1286.044022,
                    "p95": 1310.672321,
                    "p99": 1310.672321,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 785.672952,
                    "min": 769.627247,
                    "p50": 779.8309959999999,
                    "p95": 785.672952,
                    "p99": 785.672952,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 539.534125,
                    "min": 518.7180119999999,
                    "p50": 532.758733,
                    "p95": 539.534125,
                    "p99": 539.534125,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 911.981353,
                    "min": 840.505359,
                    "p50": 846.556332,
                    "p95": 911.981353,
                    "p99": 911.981353,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2380.273936,
                    "min": 2351.385571,
                    "p50": 2370.6387609999997,
                    "p95": 2380.273936,
                    "p99": 2380.273936,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1286.857427,
                    "min": 1263.233082,
                    "p50": 1276.781898,
                    "p95": 1286.857427,
                    "p99": 1286.857427,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1620.282734,
                    "min": 1591.975637,
                    "p50": 1598.938079,
                    "p95": 1620.282734,
                    "p99": 1620.282734,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1765.015492,
                    "min": 1705.922016,
                    "p50": 1750.4059049999998,
                    "p95": 1765.015492,
                    "p99": 1765.015492,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2223.739792,
                    "min": 2189.4544619999997,
                    "p50": 2211.222146,
                    "p95": 2223.739792,
                    "p99": 2223.739792,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2106.7814989999997,
                    "min": 2029.841972,
                    "p50": 2049.245367,
                    "p95": 2106.7814989999997,
                    "p99": 2106.7814989999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 663.365744,
                    "min": 640.7269749999999,
                    "p50": 656.5464109999999,
                    "p95": 663.365744,
                    "p99": 663.365744,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1441.612738,
                    "min": 1417.768826,
                    "p50": 1431.826044,
                    "p95": 1441.612738,
                    "p99": 1441.612738,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1917.025971,
                    "min": 1883.8829799999999,
                    "p50": 1893.852948,
                    "p95": 1917.025971,
                    "p99": 1917.025971,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2764.777567,
                    "min": 2725.6013319999997,
                    "p50": 2758.3879709999997,
                    "p95": 2764.777567,
                    "p99": 2764.777567,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 832.88617,
                    "min": 798.0424079999999,
                    "p50": 808.014461,
                    "p95": 832.88617,
                    "p99": 832.88617,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1164.866972,
                    "min": 1102.8869479999998,
                    "p50": 1121.769139,
                    "p95": 1164.866972,
                    "p99": 1164.866972,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 505.38009999999997,
                    "min": 481.873679,
                    "p50": 495.344427,
                    "p95": 505.38009999999997,
                    "p99": 505.38009999999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 982.5267369999999,
                    "min": 950.7988449999999,
                    "p50": 968.7190569999999,
                    "p95": 982.5267369999999,
                    "p99": 982.5267369999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3142.85633,
                    "min": 3113.104879,
                    "p50": 3136.061582,
                    "p95": 3142.85633,
                    "p99": 3142.85633,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3106.803418,
                    "min": 3062.644287,
                    "p50": 3076.482779,
                    "p95": 3106.803418,
                    "p99": 3106.803418,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2181.443985,
                    "min": 2165.0583819999997,
                    "p50": 2174.130779,
                    "p95": 2181.443985,
                    "p99": 2181.443985,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1875.593821,
                    "min": 1842.736124,
                    "p50": 1863.490392,
                    "p95": 1875.593821,
                    "p99": 1875.593821,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1437.872202,
                    "min": 1393.162783,
                    "p50": 1410.8165999999999,
                    "p95": 1437.872202,
                    "p99": 1437.872202,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1276.5020479999998,
                    "min": 1236.656598,
                    "p50": 1252.914306,
                    "p95": 1276.5020479999998,
                    "p99": 1276.5020479999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 960.4042569999999,
                    "min": 931.8415289999999,
                    "p50": 942.8806169999999,
                    "p95": 960.4042569999999,
                    "p99": 960.4042569999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2035.2588979999998,
                    "min": 1978.918813,
                    "p50": 2015.522974,
                    "p95": 2035.2588979999998,
                    "p99": 2035.2588979999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 666.9193759999999,
                    "min": 635.546648,
                    "p50": 644.1860439999999,
                    "p95": 666.9193759999999,
                    "p99": 666.9193759999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1752.716833,
                    "min": 1698.960138,
                    "p50": 1729.969152,
                    "p95": 1752.716833,
                    "p99": 1752.716833,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 804.642303,
                    "min": 781.056477,
                    "p50": 790.286556,
                    "p95": 804.642303,
                    "p99": 804.642303,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2759.6182169999997,
                    "min": 2683.56337,
                    "p50": 2706.323168,
                    "p95": 2759.6182169999997,
                    "p99": 2759.6182169999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 488.886673,
                    "min": 477.45088499999997,
                    "p50": 483.123245,
                    "p95": 488.886673,
                    "p99": 488.886673,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1118.124609,
                    "min": 1078.893141,
                    "p50": 1099.532326,
                    "p95": 1118.124609,
                    "p99": 1118.124609,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2342.084462,
                    "min": 2304.96666,
                    "p50": 2331.807299,
                    "p95": 2342.084462,
                    "p99": 2342.084462,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1577.291686,
                    "min": 1538.775907,
                    "p50": 1544.346073,
                    "p95": 1577.291686,
                    "p99": 1577.291686,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1665.54946,
                    "min": 1619.247054,
                    "p50": 1637.985467,
                    "p95": 1665.54946,
                    "p99": 1665.54946,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 911.474399,
                    "min": 890.327155,
                    "p50": 909.391229,
                    "p95": 911.474399,
                    "p99": 911.474399,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 764.582909,
                    "min": 744.372447,
                    "p50": 755.0168729999999,
                    "p95": 764.582909,
                    "p99": 764.582909,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1496.767621,
                    "min": 1453.6418079999999,
                    "p50": 1484.68147,
                    "p95": 1496.767621,
                    "p99": 1496.767621,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2966.469439,
                    "min": 2909.2762869999997,
                    "p50": 2937.8690159999996,
                    "p95": 2966.469439,
                    "p99": 2966.469439,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 634.810748,
                    "min": 599.546081,
                    "p50": 624.889633,
                    "p95": 634.810748,
                    "p99": 634.810748,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1063.6675559999999,
                    "min": 1030.9783129999998,
                    "p50": 1046.686299,
                    "p95": 1063.6675559999999,
                    "p99": 1063.6675559999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 506.674849,
                    "min": 452.06589199999996,
                    "p50": 468.681921,
                    "p95": 506.674849,
                    "p99": 506.674849,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2236.715894,
                    "min": 2193.883092,
                    "p50": 2215.4835669999998,
                    "p95": 2236.715894,
                    "p99": 2236.715894,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2080.414933,
                    "min": 2041.8890829999998,
                    "p50": 2055.7795929999997,
                    "p95": 2080.414933,
                    "p99": 2080.414933,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1808.913447,
                    "min": 1763.388399,
                    "p50": 1775.4103149999999,
                    "p95": 1808.913447,
                    "p99": 1808.913447,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1977.4183659999999,
                    "min": 1902.3109559999998,
                    "p50": 1920.303168,
                    "p95": 1977.4183659999999,
                    "p99": 1977.4183659999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1373.0779679999998,
                    "min": 1319.632203,
                    "p50": 1340.876755,
                    "p95": 1373.0779679999998,
                    "p99": 1373.0779679999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2613.174921,
                    "min": 2550.448672,
                    "p50": 2575.990324,
                    "p95": 2613.174921,
                    "p99": 2613.174921,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1205.9562369999999,
                    "min": 1167.999793,
                    "p50": 1195.7331789999998,
                    "p95": 1205.9562369999999,
                    "p99": 1205.9562369999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1023.043692,
                    "min": 902.2981179999999,
                    "p50": 930.624605,
                    "p95": 1023.043692,
                    "p99": 1023.043692,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 550.0736519999999,
                    "min": 504.512274,
                    "p50": 510.728231,
                    "p95": 550.0736519999999,
                    "p99": 550.0736519999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1097.858072,
                    "min": 1050.645606,
                    "p50": 1076.696623,
                    "p95": 1097.858072,
                    "p99": 1097.858072,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1314.3708259999999,
                    "min": 1217.596488,
                    "p50": 1238.674664,
                    "p95": 1314.3708259999999,
                    "p99": 1314.3708259999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 253.42210899999998,
                    "min": 224.7994,
                    "p50": 236.53950999999998,
                    "p95": 253.42210899999998,
                    "p99": 253.42210899999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 876.099381,
                    "min": 845.0706799999999,
                    "p50": 857.929228,
                    "p95": 876.099381,
                    "p99": 876.099381,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 469.076556,
                    "min": 430.89162899999997,
                    "p50": 441.87794499999995,
                    "p95": 469.076556,
                    "p99": 469.076556,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.46270499999997,
                    "min": 293.05183,
                    "p50": 307.082671,
                    "p95": 336.46270499999997,
                    "p99": 336.46270499999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2116.8162709999997,
                    "min": 2063.135831,
                    "p50": 2102.085327,
                    "p95": 2116.8162709999997,
                    "p99": 2116.8162709999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 663.4300039999999,
                    "min": 632.350885,
                    "p50": 647.8289,
                    "p95": 663.4300039999999,
                    "p99": 663.4300039999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 825.672688,
                    "min": 777.909107,
                    "p50": 787.3764309999999,
                    "p95": 825.672688,
                    "p99": 825.672688,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1032.370337,
                    "min": 978.4676069999999,
                    "p50": 1000.589838,
                    "p95": 1032.370337,
                    "p99": 1032.370337,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 420.2181,
                    "min": 359.249513,
                    "p50": 377.720512,
                    "p95": 420.2181,
                    "p99": 420.2181,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3521.4292849999997,
                    "min": 3437.1315179999997,
                    "p50": 3464.7021139999997,
                    "p95": 3521.4292849999997,
                    "p99": 3521.4292849999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1535.30125,
                    "min": 1396.998765,
                    "p50": 1428.704194,
                    "p95": 1535.30125,
                    "p99": 1535.30125,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 767.576921,
                    "min": 705.902489,
                    "p50": 727.3102329999999,
                    "p95": 767.576921,
                    "p99": 767.576921,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 609.264943,
                    "min": 572.432817,
                    "p50": 582.514961,
                    "p95": 609.264943,
                    "p99": 609.264943,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2814.15524,
                    "min": 2750.54128,
                    "p50": 2785.9918439999997,
                    "p95": 2814.15524,
                    "p99": 2814.15524,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1283.012364,
                    "min": 1260.558852,
                    "p50": 1269.9607859999999,
                    "p95": 1283.012364,
                    "p99": 1283.012364,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 412.636512,
                    "min": 393.435632,
                    "p50": 406.44469,
                    "p95": 412.636512,
                    "p99": 412.636512,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 867.197592,
                    "min": 830.9516669999999,
                    "p50": 848.873482,
                    "p95": 867.197592,
                    "p99": 867.197592,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 611.870398,
                    "min": 581.4054179999999,
                    "p50": 585.859138,
                    "p95": 611.870398,
                    "p99": 611.870398,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 686.790833,
                    "min": 648.0150709999999,
                    "p50": 656.2756979999999,
                    "p95": 686.790833,
                    "p99": 686.790833,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.78958899999998,
                    "min": 209.69363199999998,
                    "p50": 219.779033,
                    "p95": 226.78958899999998,
                    "p99": 226.78958899999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 723.756886,
                    "min": 703.5216819999999,
                    "p50": 711.948756,
                    "p95": 723.756886,
                    "p99": 723.756886,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 358.596389,
                    "min": 333.265118,
                    "p50": 341.766174,
                    "p95": 358.596389,
                    "p99": 358.596389,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 925.2711569999999,
                    "min": 895.1865369999999,
                    "p50": 907.78999,
                    "p95": 925.2711569999999,
                    "p99": 925.2711569999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 545.4201929999999,
                    "min": 514.49275,
                    "p50": 526.53405,
                    "p95": 545.4201929999999,
                    "p99": 545.4201929999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1161.183067,
                    "min": 1104.953245,
                    "p50": 1124.546221,
                    "p95": 1161.183067,
                    "p99": 1161.183067,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 806.9208699999999,
                    "min": 766.003285,
                    "p50": 783.2882639999999,
                    "p95": 806.9208699999999,
                    "p99": 806.9208699999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.177824,
                    "min": 456.833484,
                    "p50": 464.300886,
                    "p95": 474.177824,
                    "p99": 474.177824,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.772092,
                    "min": 269.769843,
                    "p50": 275.454408,
                    "p95": 281.772092,
                    "p99": 281.772092,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 989.4814419999999,
                    "min": 960.5121879999999,
                    "p50": 973.608173,
                    "p95": 989.4814419999999,
                    "p99": 989.4814419999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1925.015913,
                    "min": 1885.345637,
                    "p50": 1909.901402,
                    "p95": 1925.015913,
                    "p99": 1925.015913,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 622.1137239999999,
                    "min": 572.286807,
                    "p50": 596.880371,
                    "p95": 622.1137239999999,
                    "p99": 622.1137239999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 687.5265079999999,
                    "min": 632.438948,
                    "p50": 647.502845,
                    "p95": 687.5265079999999,
                    "p99": 687.5265079999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.74627599999997,
                    "min": 326.410122,
                    "p50": 334.60845,
                    "p95": 344.74627599999997,
                    "p99": 344.74627599999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 550.200534,
                    "min": 510.406721,
                    "p50": 519.829915,
                    "p95": 550.200534,
                    "p99": 550.200534,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 912.626316,
                    "min": 881.557474,
                    "p50": 893.976323,
                    "p95": 912.626316,
                    "p99": 912.626316,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.83678999999998,
                    "min": 204.30745399999998,
                    "p50": 213.12332899999998,
                    "p95": 227.83678999999998,
                    "p99": 227.83678999999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1889.068204,
                    "min": 1860.870039,
                    "p50": 1870.822062,
                    "p95": 1889.068204,
                    "p99": 1889.068204,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 735.835375,
                    "min": 694.659731,
                    "p50": 706.1801379999999,
                    "p95": 735.835375,
                    "p99": 735.835375,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 867.188895,
                    "min": 817.221695,
                    "p50": 832.322365,
                    "p95": 867.188895,
                    "p99": 867.188895,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 412.776207,
                    "min": 387.00395699999996,
                    "p50": 404.051725,
                    "p95": 412.776207,
                    "p99": 412.776207,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1142.147687,
                    "min": 1085.644208,
                    "p50": 1112.210624,
                    "p95": 1142.147687,
                    "p99": 1142.147687,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 776.749046,
                    "min": 755.534778,
                    "p50": 767.212676,
                    "p95": 776.749046,
                    "p99": 776.749046,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.136716,
                    "min": 447.710942,
                    "p50": 453.970895,
                    "p95": 474.136716,
                    "p99": 474.136716,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2517.3187909999997,
                    "min": 2462.721389,
                    "p50": 2500.617429,
                    "p95": 2517.3187909999997,
                    "p99": 2517.3187909999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 284.902743,
                    "min": 266.603629,
                    "p50": 274.475138,
                    "p95": 284.902743,
                    "p99": 284.902743,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 955.169983,
                    "min": 938.0833839999999,
                    "p50": 950.126393,
                    "p95": 955.169983,
                    "p99": 955.169983,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1299.619454,
                    "min": 1239.747657,
                    "p50": 1257.853494,
                    "p95": 1299.619454,
                    "p99": 1299.619454,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1864.9605,
                    "min": 1709.278627,
                    "p50": 1849.232726,
                    "p95": 1864.9605,
                    "p99": 1864.9605,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1289.770863,
                    "min": 1156.645935,
                    "p50": 1265.264568,
                    "p95": 1289.770863,
                    "p99": 1289.770863,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1865.751196,
                    "min": 1823.699766,
                    "p50": 1852.773943,
                    "p95": 1865.751196,
                    "p99": 1865.751196,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1609.721339,
                    "min": 1565.0234149999999,
                    "p50": 1582.338466,
                    "p95": 1609.721339,
                    "p99": 1609.721339,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1260.358289,
                    "min": 1220.805282,
                    "p50": 1232.4769589999999,
                    "p95": 1260.358289,
                    "p99": 1260.358289,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1512.246719,
                    "min": 1429.498525,
                    "p50": 1474.0874589999999,
                    "p95": 1512.246719,
                    "p99": 1512.246719,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1739.2185889999998,
                    "min": 1682.163761,
                    "p50": 1707.1412249999998,
                    "p95": 1739.2185889999998,
                    "p99": 1739.2185889999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 399.136978,
                    "min": 363.69522,
                    "p50": 395.136514,
                    "p95": 399.136978,
                    "p99": 399.136978,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 522.575607,
                    "min": 510.12498,
                    "p50": 516.653144,
                    "p95": 522.575607,
                    "p99": 522.575607,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 647.007841,
                    "min": 633.676204,
                    "p50": 639.995735,
                    "p95": 647.007841,
                    "p99": 647.007841,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2459.498266,
                    "min": 2406.0455389999997,
                    "p50": 2441.808168,
                    "p95": 2459.498266,
                    "p99": 2459.498266,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 759.881128,
                    "min": 718.025417,
                    "p50": 754.233061,
                    "p95": 759.881128,
                    "p99": 759.881128,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2341.518008,
                    "min": 2117.512984,
                    "p50": 2137.006793,
                    "p95": 2341.518008,
                    "p99": 2341.518008,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1138.550383,
                    "min": 962.525482,
                    "p50": 1000.206055,
                    "p95": 1138.550383,
                    "p99": 1138.550383,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 976.2914619999999,
                    "min": 860.991509,
                    "p50": 874.8005919999999,
                    "p95": 976.2914619999999,
                    "p99": 976.2914619999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 485.60047499999996,
                    "min": 432.350239,
                    "p50": 452.099331,
                    "p95": 485.60047499999996,
                    "p99": 485.60047499999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 510.129932,
                    "min": 411.975391,
                    "p50": 449.482444,
                    "p95": 510.129932,
                    "p99": 510.129932,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 531.351605,
                    "min": 480.196143,
                    "p50": 506.174151,
                    "p95": 531.351605,
                    "p99": 531.351605,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 131.513508,
                    "min": 116.65008499999999,
                    "p50": 123.759034,
                    "p95": 131.513508,
                    "p99": 131.513508,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 235.51862599999998,
                    "min": 174.518251,
                    "p50": 207.420241,
                    "p95": 235.51862599999998,
                    "p99": 235.51862599999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 337.432073,
                    "min": 314.93267399999996,
                    "p50": 325.92048,
                    "p95": 337.432073,
                    "p99": 337.432073,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 105.142986,
                    "min": 86.40558899999999,
                    "p50": 100.971003,
                    "p95": 105.142986,
                    "p99": 105.142986,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 161.212517,
                    "min": 140.73842299999998,
                    "p50": 152.05820599999998,
                    "p95": 161.212517,
                    "p99": 161.212517,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 172.712796,
                    "min": 159.157409,
                    "p50": 168.217141,
                    "p95": 172.712796,
                    "p99": 172.712796,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 841.506188,
                    "min": 773.349377,
                    "p50": 793.0962549999999,
                    "p95": 841.506188,
                    "p99": 841.506188,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1031.286057,
                    "min": 939.443214,
                    "p50": 968.887128,
                    "p95": 1031.286057,
                    "p99": 1031.286057,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 216.796022,
                    "min": 195.950483,
                    "p50": 210.95092499999998,
                    "p95": 216.796022,
                    "p99": 216.796022,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3643.396477,
                    "min": 3358.3831569999998,
                    "p50": 3482.0231369999997,
                    "p95": 3643.396477,
                    "p99": 3643.396477,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 102.637208,
                    "min": 65.21674999999999,
                    "p50": 93.114066,
                    "p95": 102.637208,
                    "p99": 102.637208,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 165.272562,
                    "min": 141.751996,
                    "p50": 153.42499999999998,
                    "p95": 165.272562,
                    "p99": 165.272562,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1033.8381709999999,
                    "min": 937.339119,
                    "p50": 983.703094,
                    "p95": 1033.8381709999999,
                    "p99": 1033.8381709999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 907.4320319999999,
                    "min": 834.6077829999999,
                    "p50": 879.898688,
                    "p95": 907.4320319999999,
                    "p99": 907.4320319999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 858.208857,
                    "min": 669.595865,
                    "p50": 701.3452239999999,
                    "p95": 858.208857,
                    "p99": 858.208857,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 852.9278559999999,
                    "min": 760.342848,
                    "p50": 764.114155,
                    "p95": 852.9278559999999,
                    "p99": 852.9278559999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 407.31575699999996,
                    "min": 393.308339,
                    "p50": 401.832275,
                    "p95": 407.31575699999996,
                    "p99": 407.31575699999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2395.063436,
                    "min": 2190.48964,
                    "p50": 2218.941297,
                    "p95": 2395.063436,
                    "p99": 2395.063436,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1421.398589,
                    "min": 1286.379816,
                    "p50": 1302.732139,
                    "p95": 1421.398589,
                    "p99": 1421.398589,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1075.3084119999999,
                    "min": 946.8463089999999,
                    "p50": 976.1726229999999,
                    "p95": 1075.3084119999999,
                    "p99": 1075.3084119999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 958.180022,
                    "min": 899.5229529999999,
                    "p50": 906.0877839999999,
                    "p95": 958.180022,
                    "p99": 958.180022,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 579.306529,
                    "min": 541.020284,
                    "p50": 548.678471,
                    "p95": 579.306529,
                    "p99": 579.306529,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1580.863216,
                    "min": 1468.061374,
                    "p50": 1486.020059,
                    "p95": 1580.863216,
                    "p99": 1580.863216,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.086025,
                    "min": 240.23953699999998,
                    "p50": 256.554015,
                    "p95": 261.086025,
                    "p99": 261.086025,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1240.041996,
                    "min": 1092.0292279999999,
                    "p50": 1126.1403639999999,
                    "p95": 1240.041996,
                    "p99": 1240.041996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 689.219193,
                    "min": 610.307677,
                    "p50": 619.1910859999999,
                    "p95": 689.219193,
                    "p99": 689.219193,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 537.971635,
                    "min": 465.458919,
                    "p50": 473.229702,
                    "p95": 537.971635,
                    "p99": 537.971635,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 352.461586,
                    "min": 319.33748099999997,
                    "p50": 326.642049,
                    "p95": 352.461586,
                    "p99": 352.461586,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1161.4262589999998,
                    "min": 1013.20445,
                    "p50": 1056.447352,
                    "p95": 1161.4262589999998,
                    "p99": 1161.4262589999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2601.5385579999997,
                    "min": 2006.0025509999998,
                    "p50": 2403.817659,
                    "p95": 2601.5385579999997,
                    "p99": 2601.5385579999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 464.462884,
                    "min": 377.163768,
                    "p50": 450.99143999999995,
                    "p95": 464.462884,
                    "p99": 464.462884,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1750.0873609999999,
                    "min": 1378.8747779999999,
                    "p50": 1558.5328869999998,
                    "p95": 1750.0873609999999,
                    "p99": 1750.0873609999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1884.307674,
                    "min": 1471.8415069999999,
                    "p50": 1686.023579,
                    "p95": 1884.307674,
                    "p99": 1884.307674,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 600.807909,
                    "min": 472.56566,
                    "p50": 543.270392,
                    "p95": 600.807909,
                    "p99": 600.807909,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1600.391974,
                    "min": 1272.651715,
                    "p50": 1393.37465,
                    "p95": 1600.391974,
                    "p99": 1600.391974,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2170.609789,
                    "min": 1707.2649959999999,
                    "p50": 1933.742499,
                    "p95": 2170.609789,
                    "p99": 2170.609789,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 889.8208549999999,
                    "min": 707.5554989999999,
                    "p50": 782.669554,
                    "p95": 889.8208549999999,
                    "p99": 889.8208549999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1317.711629,
                    "min": 1029.413241,
                    "p50": 1128.736941,
                    "p95": 1317.711629,
                    "p99": 1317.711629,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1175.134047,
                    "min": 911.388459,
                    "p50": 1027.439674,
                    "p95": 1175.134047,
                    "p99": 1175.134047,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2855.875904,
                    "min": 2280.875553,
                    "p50": 2331.739289,
                    "p95": 2855.875904,
                    "p99": 2855.875904,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1455.885801,
                    "min": 1150.53264,
                    "p50": 1212.5572929999998,
                    "p95": 1455.885801,
                    "p99": 1455.885801,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1020.902204,
                    "min": 811.4439199999999,
                    "p50": 836.208503,
                    "p95": 1020.902204,
                    "p99": 1020.902204,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 747.34808,
                    "min": 593.430888,
                    "p50": 615.723966,
                    "p95": 747.34808,
                    "p99": 747.34808,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2010.95861,
                    "min": 1606.472691,
                    "p50": 1650.616205,
                    "p95": 2010.95861,
                    "p99": 2010.95861,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 119.08113499999999,
                    "min": 102.44914999999999,
                    "p50": 114.79625399999999,
                    "p95": 119.08113499999999,
                    "p99": 119.08113499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 49.706359,
                    "min": 27.657819,
                    "p50": 33.011925999999995,
                    "p95": 49.706359,
                    "p99": 49.706359,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 236.518861,
                    "min": 210.717776,
                    "p50": 228.555767,
                    "p95": 236.518861,
                    "p99": 236.518861,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 489.91432699999996,
                    "min": 459.14642299999997,
                    "p50": 479.115057,
                    "p95": 489.91432699999996,
                    "p99": 489.91432699999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 54.478099,
                    "min": 50.554749,
                    "p50": 52.54277,
                    "p95": 54.478099,
                    "p99": 54.478099,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 57.941691999999996,
                    "min": 46.052566,
                    "p50": 54.542676,
                    "p95": 57.941691999999996,
                    "p99": 57.941691999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 200.5488,
                    "min": 150.79782799999998,
                    "p50": 171.852585,
                    "p95": 200.5488,
                    "p99": 200.5488,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 48.186087,
                    "min": 36.076974,
                    "p50": 43.286529,
                    "p95": 48.186087,
                    "p99": 48.186087,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 31.201314,
                    "min": 24.375147,
                    "p50": 28.641374,
                    "p95": 31.201314,
                    "p99": 31.201314,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 90.99037799999999,
                    "min": 71.336285,
                    "p50": 73.32919,
                    "p95": 90.99037799999999,
                    "p99": 90.99037799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 154.106651,
                    "min": 125.867317,
                    "p50": 137.33087899999998,
                    "p95": 154.106651,
                    "p99": 154.106651,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.457164,
                    "min": 24.119279,
                    "p50": 26.606037999999998,
                    "p95": 27.457164,
                    "p99": 27.457164,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 77.943024,
                    "min": 50.937962999999996,
                    "p50": 56.207660999999995,
                    "p95": 77.943024,
                    "p99": 77.943024,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 68.330727,
                    "min": 62.188316,
                    "p50": 65.166266,
                    "p95": 68.330727,
                    "p99": 68.330727,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 109.514962,
                    "min": 38.815191999999996,
                    "p50": 53.973892,
                    "p95": 109.514962,
                    "p99": 109.514962,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 55.59735,
                    "min": 37.569372,
                    "p50": 51.388811999999994,
                    "p95": 55.59735,
                    "p99": 55.59735,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 104.23032099999999,
                    "min": 56.316393,
                    "p50": 58.681681,
                    "p95": 104.23032099999999,
                    "p99": 104.23032099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 61.435607,
                    "min": 46.929967,
                    "p50": 55.754591999999995,
                    "p95": 61.435607,
                    "p99": 61.435607,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 73.62041099999999,
                    "min": 54.707432999999995,
                    "p50": 58.611709999999995,
                    "p95": 73.62041099999999,
                    "p99": 73.62041099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 430.156316,
                    "min": 358.32413099999997,
                    "p50": 392.43765099999996,
                    "p95": 430.156316,
                    "p99": 430.156316,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 218.307056,
                    "min": 191.992383,
                    "p50": 206.615971,
                    "p95": 218.307056,
                    "p99": 218.307056,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 682.874684,
                    "min": 524.30161,
                    "p50": 599.283693,
                    "p95": 682.874684,
                    "p99": 682.874684,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 344.709161,
                    "min": 232.491984,
                    "p50": 312.741828,
                    "p95": 344.709161,
                    "p99": 344.709161,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 558.704809,
                    "min": 401.169226,
                    "p50": 445.090893,
                    "p95": 558.704809,
                    "p99": 558.704809,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2150.631633,
                    "min": 1898.257236,
                    "p50": 1957.716176,
                    "p95": 2150.631633,
                    "p99": 2150.631633,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 544.612214,
                    "min": 359.838466,
                    "p50": 491.126957,
                    "p95": 544.612214,
                    "p99": 544.612214,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 604.444387,
                    "min": 467.205634,
                    "p50": 530.5151569999999,
                    "p95": 604.444387,
                    "p99": 604.444387,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 850.539715,
                    "min": 657.011925,
                    "p50": 773.4090739999999,
                    "p95": 850.539715,
                    "p99": 850.539715,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 391.975806,
                    "min": 278.05756099999996,
                    "p50": 324.107015,
                    "p95": 391.975806,
                    "p99": 391.975806,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1676.799589,
                    "min": 1400.7218289999998,
                    "p50": 1586.623872,
                    "p95": 1676.799589,
                    "p99": 1676.799589,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.147343,
                    "min": 271.317319,
                    "p50": 285.361771,
                    "p95": 362.147343,
                    "p99": 362.147343,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 561.329736,
                    "min": 468.08424099999996,
                    "p50": 516.677947,
                    "p95": 561.329736,
                    "p99": 561.329736,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1235.698653,
                    "min": 1019.6720429999999,
                    "p50": 1130.102893,
                    "p95": 1235.698653,
                    "p99": 1235.698653,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 261.14007499999997,
                    "min": 164.10171599999998,
                    "p50": 184.94401299999998,
                    "p95": 261.14007499999997,
                    "p99": 261.14007499999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4064.39365,
                    "min": 3723.925831,
                    "p50": 3902.122282,
                    "p95": 4064.39365,
                    "p99": 4064.39365,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.565472,
                    "min": 128.153253,
                    "p50": 146.465193,
                    "p95": 173.565472,
                    "p99": 173.565472,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 617.367716,
                    "min": 523.3625549999999,
                    "p50": 606.107934,
                    "p95": 617.367716,
                    "p99": 617.367716,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 811.472143,
                    "min": 682.636303,
                    "p50": 785.051913,
                    "p95": 811.472143,
                    "p99": 811.472143,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 71.57097399999999,
                    "min": 58.802606999999995,
                    "p50": 67.01254399999999,
                    "p95": 71.57097399999999,
                    "p99": 71.57097399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 92.396304,
                    "min": 74.09597099999999,
                    "p50": 89.035489,
                    "p95": 92.396304,
                    "p99": 92.396304,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.636402,
                    "min": 26.841345,
                    "p50": 43.221737,
                    "p95": 45.636402,
                    "p99": 45.636402,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 81.363862,
                    "min": 62.225801999999995,
                    "p50": 74.60640599999999,
                    "p95": 81.363862,
                    "p99": 81.363862,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 40.077988,
                    "min": 29.043153999999998,
                    "p50": 32.653071,
                    "p95": 40.077988,
                    "p99": 40.077988,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 225.34447799999998,
                    "min": 172.926866,
                    "p50": 190.996096,
                    "p95": 225.34447799999998,
                    "p99": 225.34447799999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 111.52270899999999,
                    "min": 96.384496,
                    "p50": 103.690826,
                    "p95": 111.52270899999999,
                    "p99": 111.52270899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 80.643782,
                    "min": 57.553945999999996,
                    "p50": 76.941362,
                    "p95": 80.643782,
                    "p99": 80.643782,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 336.726882,
                    "min": 265.201668,
                    "p50": 282.712903,
                    "p95": 336.726882,
                    "p99": 336.726882,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 62.682556,
                    "min": 54.629284999999996,
                    "p50": 60.540282,
                    "p95": 62.682556,
                    "p99": 62.682556,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 58.776692999999995,
                    "min": 51.18298,
                    "p50": 53.515218999999995,
                    "p95": 58.776692999999995,
                    "p99": 58.776692999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 107.03940899999999,
                    "min": 94.61678599999999,
                    "p50": 103.260736,
                    "p95": 107.03940899999999,
                    "p99": 107.03940899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 70.377848,
                    "min": 60.394847,
                    "p50": 69.78542399999999,
                    "p95": 70.377848,
                    "p99": 70.377848,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 153.29755799999998,
                    "min": 110.405468,
                    "p50": 119.88575499999999,
                    "p95": 153.29755799999998,
                    "p99": 153.29755799999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 585.927116,
                    "min": 496.68141499999996,
                    "p50": 515.227882,
                    "p95": 585.927116,
                    "p99": 585.927116,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 91.27073899999999,
                    "min": 70.358569,
                    "p50": 82.49009,
                    "p95": 91.27073899999999,
                    "p99": 91.27073899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 247.75692099999998,
                    "min": 195.714676,
                    "p50": 221.667711,
                    "p95": 247.75692099999998,
                    "p99": 247.75692099999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 190.314327,
                    "min": 107.467975,
                    "p50": 122.51965899999999,
                    "p95": 190.314327,
                    "p99": 190.314327,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 96.89641999999999,
                    "min": 76.67353899999999,
                    "p50": 90.62941699999999,
                    "p95": 96.89641999999999,
                    "p99": 96.89641999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 72.369785,
                    "min": 67.579785,
                    "p50": 69.063324,
                    "p95": 72.369785,
                    "p99": 72.369785,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.50979,
                    "min": 18.114152999999998,
                    "p50": 26.188654,
                    "p95": 27.50979,
                    "p99": 27.50979,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.506086999999997,
                    "min": 22.990667,
                    "p50": 26.636346,
                    "p95": 27.506086999999997,
                    "p99": 27.506086999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.438475,
                    "min": 25.995887999999997,
                    "p50": 26.930562,
                    "p95": 27.438475,
                    "p99": 27.438475,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.807582,
                    "min": 24.259379,
                    "p50": 26.765866,
                    "p95": 28.807582,
                    "p99": 28.807582,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.840424,
                    "min": 19.00037,
                    "p50": 26.865928999999998,
                    "p95": 27.840424,
                    "p99": 27.840424,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.009953,
                    "min": 25.120086999999998,
                    "p50": 26.725403,
                    "p95": 28.009953,
                    "p99": 28.009953,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.290263,
                    "min": 23.5446,
                    "p50": 26.577876999999997,
                    "p95": 27.290263,
                    "p99": 27.290263,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 30.470177,
                    "min": 22.586997999999998,
                    "p50": 26.661282,
                    "p95": 30.470177,
                    "p99": 30.470177,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 48.055659999999996,
                    "min": 32.515502999999995,
                    "p50": 41.020005999999995,
                    "p95": 48.055659999999996,
                    "p99": 48.055659999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.317604,
                    "min": 26.437435999999998,
                    "p50": 26.772277,
                    "p95": 27.317604,
                    "p99": 27.317604,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 39.919222,
                    "min": 31.559828,
                    "p50": 33.389598,
                    "p95": 39.919222,
                    "p99": 39.919222,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.52854,
                    "min": 23.718239999999998,
                    "p50": 27.059207999999998,
                    "p95": 27.52854,
                    "p99": 27.52854,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.534478999999997,
                    "min": 26.156064999999998,
                    "p50": 27.097061999999998,
                    "p95": 27.534478999999997,
                    "p99": 27.534478999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.972177,
                    "min": 25.828747,
                    "p50": 26.659084999999997,
                    "p95": 28.972177,
                    "p99": 28.972177,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 144.758936,
                    "min": 80.00997,
                    "p50": 87.730944,
                    "p95": 144.758936,
                    "p99": 144.758936,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.215162,
                    "min": 25.051368999999998,
                    "p50": 27.041425,
                    "p95": 27.215162,
                    "p99": 27.215162,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 75.238961,
                    "min": 25.55221,
                    "p50": 27.174732,
                    "p95": 75.238961,
                    "p99": 75.238961,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.098912,
                    "min": 25.182025,
                    "p50": 26.816409999999998,
                    "p95": 27.098912,
                    "p99": 27.098912,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 389.34155799999996,
                    "min": 339.332092,
                    "p50": 356.337137,
                    "p95": 389.34155799999996,
                    "p99": 389.34155799999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.014976,
                    "min": 126.42441799999999,
                    "p50": 143.209438,
                    "p95": 149.014976,
                    "p99": 149.014976,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4431.432364,
                    "min": 4027.431016,
                    "p50": 4351.488536,
                    "p95": 4431.432364,
                    "p99": 4431.432364,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 965.7804219999999,
                    "min": 794.5241609999999,
                    "p50": 913.590165,
                    "p95": 965.7804219999999,
                    "p99": 965.7804219999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 367.41335899999996,
                    "min": 277.084273,
                    "p50": 333.030932,
                    "p95": 367.41335899999996,
                    "p99": 367.41335899999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.85756899999998,
                    "min": 151.099495,
                    "p50": 192.99704799999998,
                    "p95": 201.85756899999998,
                    "p99": 201.85756899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 311.49087499999996,
                    "min": 248.69444099999998,
                    "p50": 265.590717,
                    "p95": 311.49087499999996,
                    "p99": 311.49087499999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1348.248467,
                    "min": 1130.690225,
                    "p50": 1205.72802,
                    "p95": 1348.248467,
                    "p99": 1348.248467,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 655.379345,
                    "min": 471.448085,
                    "p50": 569.449669,
                    "p95": 655.379345,
                    "p99": 655.379345,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 595.416402,
                    "min": 396.587522,
                    "p50": 502.363302,
                    "p95": 595.416402,
                    "p99": 595.416402,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1713.1294619999999,
                    "min": 1495.988455,
                    "p50": 1632.609947,
                    "p95": 1713.1294619999999,
                    "p99": 1713.1294619999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2199.7561259999998,
                    "min": 1961.552773,
                    "p50": 2101.799263,
                    "p95": 2199.7561259999998,
                    "p99": 2199.7561259999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 702.2274249999999,
                    "min": 513.6967609999999,
                    "p50": 642.313274,
                    "p95": 702.2274249999999,
                    "p99": 702.2274249999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.780174,
                    "min": 216.173386,
                    "p50": 230.410516,
                    "p95": 260.780174,
                    "p99": 260.780174,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 787.951106,
                    "min": 683.82717,
                    "p50": 745.4090649999999,
                    "p95": 787.951106,
                    "p99": 787.951106,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 478.00080199999996,
                    "min": 310.27202,
                    "p50": 423.36409799999996,
                    "p95": 478.00080199999996,
                    "p99": 478.00080199999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 606.3782249999999,
                    "min": 445.90986799999996,
                    "p50": 557.8688589999999,
                    "p95": 606.3782249999999,
                    "p99": 606.3782249999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 657.565208,
                    "min": 560.8098749999999,
                    "p50": 603.022838,
                    "p95": 657.565208,
                    "p99": 657.565208,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 447.875384,
                    "min": 308.36495099999996,
                    "p50": 334.708036,
                    "p95": 447.875384,
                    "p99": 447.875384,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1589.023724,
                    "min": 1352.677944,
                    "p50": 1482.8950869999999,
                    "p95": 1589.023724,
                    "p99": 1589.023724,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 279.164745,
                    "min": 169.027088,
                    "p50": 212.129383,
                    "p95": 279.164745,
                    "p99": 279.164745,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 491.09953299999995,
                    "min": 423.189073,
                    "p50": 455.213974,
                    "p95": 491.09953299999995,
                    "p99": 491.09953299999995,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 854.9486449999999,
                    "min": 658.7285999999999,
                    "p50": 731.364827,
                    "p95": 854.9486449999999,
                    "p99": 854.9486449999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 317.594639,
                    "min": 233.18744199999998,
                    "p50": 258.456569,
                    "p95": 317.594639,
                    "p99": 317.594639,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 819.42688,
                    "min": 716.52174,
                    "p50": 778.8505759999999,
                    "p95": 819.42688,
                    "p99": 819.42688,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 499.86629,
                    "min": 390.362096,
                    "p50": 476.143968,
                    "p95": 499.86629,
                    "p99": 499.86629,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 885.875247,
                    "min": 801.3025809999999,
                    "p50": 825.0869799999999,
                    "p95": 885.875247,
                    "p99": 885.875247,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 320.387146,
                    "min": 281.544854,
                    "p50": 296.58295799999996,
                    "p95": 320.387146,
                    "p99": 320.387146,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 595.256548,
                    "min": 476.635585,
                    "p50": 552.931397,
                    "p95": 595.256548,
                    "p99": 595.256548,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2105.308537,
                    "min": 1794.5758039999998,
                    "p50": 1913.980515,
                    "p95": 2105.308537,
                    "p99": 2105.308537,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 684.6239959999999,
                    "min": 493.10776799999996,
                    "p50": 592.939399,
                    "p95": 684.6239959999999,
                    "p99": 684.6239959999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 451.675823,
                    "min": 310.883102,
                    "p50": 347.54240999999996,
                    "p95": 451.675823,
                    "p99": 451.675823,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 671.0567609999999,
                    "min": 529.341907,
                    "p50": 610.1366019999999,
                    "p95": 671.0567609999999,
                    "p99": 671.0567609999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 223.614993,
                    "min": 159.726775,
                    "p50": 168.83387,
                    "p95": 223.614993,
                    "p99": 223.614993,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 776.658196,
                    "min": 579.7172889999999,
                    "p50": 655.429304,
                    "p95": 776.658196,
                    "p99": 776.658196,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1094.4040579999998,
                    "min": 906.851471,
                    "p50": 945.4239359999999,
                    "p95": 1094.4040579999998,
                    "p99": 1094.4040579999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2602.3116689999997,
                    "min": 2399.7971279999997,
                    "p50": 2517.218696,
                    "p95": 2602.3116689999997,
                    "p99": 2602.3116689999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 497.97759399999995,
                    "min": 411.761934,
                    "p50": 483.840641,
                    "p95": 497.97759399999995,
                    "p99": 497.97759399999995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 951.561466,
                    "min": 649.948714,
                    "p50": 837.354505,
                    "p95": 951.561466,
                    "p99": 951.561466,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 726.5485309999999,
                    "min": 536.429237,
                    "p50": 543.006339,
                    "p95": 726.5485309999999,
                    "p99": 726.5485309999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1104.226394,
                    "min": 1048.472875,
                    "p50": 1064.459643,
                    "p95": 1104.226394,
                    "p99": 1104.226394,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 983.134682,
                    "min": 917.3656159999999,
                    "p50": 964.3639459999999,
                    "p95": 983.134682,
                    "p99": 983.134682,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1304.482771,
                    "min": 1248.268996,
                    "p50": 1274.1183489999999,
                    "p95": 1304.482771,
                    "p99": 1304.482771,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1636.7981399999999,
                    "min": 1566.3696439999999,
                    "p50": 1586.808579,
                    "p95": 1636.7981399999999,
                    "p99": 1636.7981399999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1421.522273,
                    "min": 1343.781477,
                    "p50": 1392.341547,
                    "p95": 1421.522273,
                    "p99": 1421.522273,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1209.785574,
                    "min": 1140.6499179999998,
                    "p50": 1199.553115,
                    "p95": 1209.785574,
                    "p99": 1209.785574,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2188.69757,
                    "min": 2096.375539,
                    "p50": 2155.1535839999997,
                    "p95": 2188.69757,
                    "p99": 2188.69757,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 796.151604,
                    "min": 765.343177,
                    "p50": 779.823767,
                    "p95": 796.151604,
                    "p99": 796.151604,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 474.83034899999996,
                    "min": 432.463869,
                    "p50": 459.78811099999996,
                    "p95": 474.83034899999996,
                    "p99": 474.83034899999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1945.165395,
                    "min": 1863.802563,
                    "p50": 1924.465467,
                    "p95": 1945.165395,
                    "p99": 1945.165395,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 936.510102,
                    "min": 869.155665,
                    "p50": 918.755455,
                    "p95": 936.510102,
                    "p99": 936.510102,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1609.402647,
                    "min": 1516.359189,
                    "p50": 1546.557626,
                    "p95": 1609.402647,
                    "p99": 1609.402647,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 916.960869,
                    "min": 895.092129,
                    "p50": 900.987858,
                    "p95": 916.960869,
                    "p99": 916.960869,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2045.8638389999999,
                    "min": 2020.37476,
                    "p50": 2040.476356,
                    "p95": 2045.8638389999999,
                    "p99": 2045.8638389999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2927.464352,
                    "min": 2859.226601,
                    "p50": 2878.7710509999997,
                    "p95": 2927.464352,
                    "p99": 2927.464352,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5745.7386,
                    "min": 5635.465791,
                    "p50": 5683.8430339999995,
                    "p95": 5745.7386,
                    "p99": 5745.7386,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1626.4102639999999,
                    "min": 1553.958424,
                    "p50": 1603.653474,
                    "p95": 1626.4102639999999,
                    "p99": 1626.4102639999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 761.290575,
                    "min": 734.8773279999999,
                    "p50": 747.8907939999999,
                    "p95": 761.290575,
                    "p99": 761.290575,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 611.332438,
                    "min": 597.999975,
                    "p50": 605.9799029999999,
                    "p95": 611.332438,
                    "p99": 611.332438,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1756.512556,
                    "min": 1710.8938489999998,
                    "p50": 1734.581557,
                    "p95": 1756.512556,
                    "p99": 1756.512556,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4304.856758,
                    "min": 4230.3415159999995,
                    "p50": 4278.429905999999,
                    "p95": 4304.856758,
                    "p99": 4304.856758,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2540.229413,
                    "min": 2480.9257009999997,
                    "p50": 2502.193112,
                    "p95": 2540.229413,
                    "p99": 2540.229413,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2174.9052899999997,
                    "min": 2116.743963,
                    "p50": 2157.1728869999997,
                    "p95": 2174.9052899999997,
                    "p99": 2174.9052899999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1184.5266629999999,
                    "min": 1134.1519469999998,
                    "p50": 1160.399347,
                    "p95": 1184.5266629999999,
                    "p99": 1184.5266629999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1464.239646,
                    "min": 1412.4372489999998,
                    "p50": 1443.389139,
                    "p95": 1464.239646,
                    "p99": 1464.239646,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1058.793068,
                    "min": 1002.957964,
                    "p50": 1028.006308,
                    "p95": 1058.793068,
                    "p99": 1058.793068,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 468.16062999999997,
                    "min": 442.94904099999997,
                    "p50": 461.25057599999997,
                    "p95": 468.16062999999997,
                    "p99": 468.16062999999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1907.911932,
                    "min": 1853.184223,
                    "p50": 1875.310481,
                    "p95": 1907.911932,
                    "p99": 1907.911932,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1324.379821,
                    "min": 1307.089423,
                    "p50": 1317.12238,
                    "p95": 1324.379821,
                    "p99": 1324.379821,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 642.562688,
                    "min": 569.254737,
                    "p50": 610.8850209999999,
                    "p95": 642.562688,
                    "p99": 642.562688,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1937.200701,
                    "min": 1861.963409,
                    "p50": 1896.064882,
                    "p95": 1937.200701,
                    "p99": 1937.200701,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3863.885663,
                    "min": 3769.354841,
                    "p50": 3836.0856019999997,
                    "p95": 3863.885663,
                    "p99": 3863.885663,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2143.325379,
                    "min": 2091.213319,
                    "p50": 2120.005237,
                    "p95": 2143.325379,
                    "p99": 2143.325379,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5625.626442,
                    "min": 5538.326709,
                    "p50": 5595.395525999999,
                    "p95": 5625.626442,
                    "p99": 5625.626442,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1201.823303,
                    "min": 1101.493403,
                    "p50": 1164.938817,
                    "p95": 1201.823303,
                    "p99": 1201.823303,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1789.576474,
                    "min": 1702.8174179999999,
                    "p50": 1756.110139,
                    "p95": 1789.576474,
                    "p99": 1789.576474,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7489.210773,
                    "min": 7366.254674999999,
                    "p50": 7429.118503,
                    "p95": 7489.210773,
                    "p99": 7489.210773,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1013.718797,
                    "min": 958.5478889999999,
                    "p50": 1000.064095,
                    "p95": 1013.718797,
                    "p99": 1013.718797,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2582.490753,
                    "min": 2484.8232829999997,
                    "p50": 2540.313112,
                    "p95": 2582.490753,
                    "p99": 2582.490753,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1363.850628,
                    "min": 1303.174162,
                    "p50": 1343.3720369999999,
                    "p95": 1363.850628,
                    "p99": 1363.850628,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 809.179459,
                    "min": 760.998422,
                    "p50": 785.2466059999999,
                    "p95": 809.179459,
                    "p99": 809.179459,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2903.217487,
                    "min": 2840.802991,
                    "p50": 2883.981777,
                    "p95": 2903.217487,
                    "p99": 2903.217487,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2724.8394,
                    "min": 2653.8133789999997,
                    "p50": 2696.83542,
                    "p95": 2724.8394,
                    "p99": 2724.8394,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3373.719127,
                    "min": 3282.472332,
                    "p50": 3303.499405,
                    "p95": 3373.719127,
                    "p99": 3373.719127,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1559.648633,
                    "min": 1498.5508969999998,
                    "p50": 1527.684732,
                    "p95": 1559.648633,
                    "p99": 1559.648633,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2338.772844,
                    "min": 2253.725456,
                    "p50": 2289.7610369999998,
                    "p95": 2338.772844,
                    "p99": 2338.772844,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 199.464971,
                    "min": 157.041216,
                    "p50": 178.05311799999998,
                    "p95": 199.464971,
                    "p99": 199.464971,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 163.148719,
                    "min": 116.80891899999999,
                    "p50": 140.130206,
                    "p95": 163.148719,
                    "p99": 163.148719,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 248.388758,
                    "min": 199.28123599999998,
                    "p50": 216.873887,
                    "p95": 248.388758,
                    "p99": 248.388758,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 382.955356,
                    "min": 270.854316,
                    "p50": 357.500093,
                    "p95": 382.955356,
                    "p99": 382.955356,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1156.888305,
                    "min": 1033.281234,
                    "p50": 1074.533701,
                    "p95": 1156.888305,
                    "p99": 1156.888305,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 473.331894,
                    "min": 425.389261,
                    "p50": 454.854938,
                    "p95": 473.331894,
                    "p99": 473.331894,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 220.42959299999998,
                    "min": 130.028912,
                    "p50": 152.34019,
                    "p95": 220.42959299999998,
                    "p99": 220.42959299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 92.498584,
                    "min": 27.979989,
                    "p50": 54.099455,
                    "p95": 92.498584,
                    "p99": 92.498584,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 635.621393,
                    "min": 466.847757,
                    "p50": 560.4718419999999,
                    "p95": 635.621393,
                    "p99": 635.621393,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.015984,
                    "min": 94.362867,
                    "p50": 99.75223,
                    "p95": 139.015984,
                    "p99": 139.015984,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 159.863349,
                    "min": 72.413302,
                    "p50": 108.473715,
                    "p95": 159.863349,
                    "p99": 159.863349,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 139.78681,
                    "min": 81.893615,
                    "p50": 117.95302799999999,
                    "p95": 139.78681,
                    "p99": 139.78681,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 248.790373,
                    "min": 169.607675,
                    "p50": 196.32132,
                    "p95": 248.790373,
                    "p99": 248.790373,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 91.116165,
                    "min": 72.823146,
                    "p50": 82.850433,
                    "p95": 91.116165,
                    "p99": 91.116165,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 135.42592,
                    "min": 88.583023,
                    "p50": 91.239775,
                    "p95": 135.42592,
                    "p99": 135.42592,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 220.506486,
                    "min": 129.795882,
                    "p50": 177.162307,
                    "p95": 220.506486,
                    "p99": 220.506486,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 190.18570699999998,
                    "min": 105.287932,
                    "p50": 142.775408,
                    "p95": 190.18570699999998,
                    "p99": 190.18570699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.52980699999999,
                    "min": 55.645885,
                    "p50": 70.339748,
                    "p95": 74.52980699999999,
                    "p99": 74.52980699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.946629,
                    "min": 133.135561,
                    "p50": 148.34216,
                    "p95": 194.946629,
                    "p99": 194.946629,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2724.646496,
                    "min": 2654.895735,
                    "p50": 2702.2375469999997,
                    "p95": 2724.646496,
                    "p99": 2724.646496,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1128.221118,
                    "min": 1048.253636,
                    "p50": 1093.114527,
                    "p95": 1128.221118,
                    "p99": 1128.221118,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 850.817179,
                    "min": 785.536481,
                    "p50": 805.689757,
                    "p95": 850.817179,
                    "p99": 850.817179,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1896.3808299999998,
                    "min": 1815.3561069999998,
                    "p50": 1861.928592,
                    "p95": 1896.3808299999998,
                    "p99": 1896.3808299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1297.125427,
                    "min": 1202.786686,
                    "p50": 1256.304599,
                    "p95": 1297.125427,
                    "p99": 1297.125427,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6156.051504,
                    "min": 5937.920870999999,
                    "p50": 6073.614184,
                    "p95": 6156.051504,
                    "p99": 6156.051504,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1756.5829039999999,
                    "min": 1675.8445609999999,
                    "p50": 1696.55189,
                    "p95": 1756.5829039999999,
                    "p99": 1756.5829039999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 999.325566,
                    "min": 928.133707,
                    "p50": 938.7457099999999,
                    "p95": 999.325566,
                    "p99": 999.325566,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2063.005736,
                    "min": 1926.073289,
                    "p50": 1986.374594,
                    "p95": 2063.005736,
                    "p99": 2063.005736,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4641.266947,
                    "min": 4517.63664,
                    "p50": 4566.224295999999,
                    "p95": 4641.266947,
                    "p99": 4641.266947,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2363.480655,
                    "min": 2255.369781,
                    "p50": 2329.0612849999998,
                    "p95": 2363.480655,
                    "p99": 2363.480655,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3084.994408,
                    "min": 2991.0364139999997,
                    "p50": 3063.026633,
                    "p95": 3084.994408,
                    "p99": 3084.994408,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 523.2673619999999,
                    "min": 461.756235,
                    "p50": 493.349672,
                    "p95": 523.2673619999999,
                    "p99": 523.2673619999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2179.558666,
                    "min": 2117.361372,
                    "p50": 2176.8534019999997,
                    "p95": 2179.558666,
                    "p99": 2179.558666,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 757.3928209999999,
                    "min": 635.059929,
                    "p50": 642.81909,
                    "p95": 757.3928209999999,
                    "p99": 757.3928209999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1598.15916,
                    "min": 1514.7714999999998,
                    "p50": 1542.5114119999998,
                    "p95": 1598.15916,
                    "p99": 1598.15916,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1436.594343,
                    "min": 1366.781929,
                    "p50": 1397.5813429999998,
                    "p95": 1436.594343,
                    "p99": 1436.594343,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2342.375956,
                    "min": 2258.522043,
                    "p50": 2304.9108269999997,
                    "p95": 2342.375956,
                    "p99": 2342.375956,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 676.7199469999999,
                    "min": 616.626273,
                    "p50": 639.255634,
                    "p95": 676.7199469999999,
                    "p99": 676.7199469999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1424.435113,
                    "min": 1362.561817,
                    "p50": 1384.4980329999999,
                    "p95": 1424.435113,
                    "p99": 1424.435113,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2116.175914,
                    "min": 1966.0253839999998,
                    "p50": 1994.864683,
                    "p95": 2116.175914,
                    "p99": 2116.175914,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1598.0872809999998,
                    "min": 1501.983604,
                    "p50": 1539.580493,
                    "p95": 1598.0872809999998,
                    "p99": 1598.0872809999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1784.7009859999998,
                    "min": 1642.130048,
                    "p50": 1711.948553,
                    "p95": 1784.7009859999998,
                    "p99": 1784.7009859999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3130.681495,
                    "min": 3002.458776,
                    "p50": 3038.311056,
                    "p95": 3130.681495,
                    "p99": 3130.681495,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4641.715285,
                    "min": 4492.03295,
                    "p50": 4557.767331999999,
                    "p95": 4641.715285,
                    "p99": 4641.715285,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1893.9422849999999,
                    "min": 1818.187129,
                    "p50": 1841.3910119999998,
                    "p95": 1893.9422849999999,
                    "p99": 1893.9422849999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 807.746237,
                    "min": 778.775622,
                    "p50": 787.613084,
                    "p95": 807.746237,
                    "p99": 807.746237,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 558.625219,
                    "min": 482.48393,
                    "p50": 493.81756099999996,
                    "p95": 558.625219,
                    "p99": 558.625219,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 980.034098,
                    "min": 925.480567,
                    "p50": 953.0514949999999,
                    "p95": 980.034098,
                    "p99": 980.034098,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2715.4558239999997,
                    "min": 2610.0079579999997,
                    "p50": 2667.3826719999997,
                    "p95": 2715.4558239999997,
                    "p99": 2715.4558239999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1150.169795,
                    "min": 1079.104141,
                    "p50": 1092.621021,
                    "p95": 1150.169795,
                    "p99": 1150.169795,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2214.5209689999997,
                    "min": 2110.744639,
                    "p50": 2140.746415,
                    "p95": 2214.5209689999997,
                    "p99": 2214.5209689999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1298.334768,
                    "min": 1191.673227,
                    "p50": 1241.700656,
                    "p95": 1298.334768,
                    "p99": 1298.334768,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1431.40222,
                    "min": 1332.285524,
                    "p50": 1393.023364,
                    "p95": 1431.40222,
                    "p99": 1431.40222,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 249.537216,
                    "min": 185.390218,
                    "p50": 204.285596,
                    "p95": 249.537216,
                    "p99": 249.537216,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 748.0579819999999,
                    "min": 659.1649,
                    "p50": 728.2184239999999,
                    "p95": 748.0579819999999,
                    "p99": 748.0579819999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 179.544369,
                    "min": 111.06269499999999,
                    "p50": 120.290612,
                    "p95": 179.544369,
                    "p99": 179.544369,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 111.65526399999999,
                    "min": 64.066554,
                    "p50": 85.89526699999999,
                    "p95": 111.65526399999999,
                    "p99": 111.65526399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 255.103581,
                    "min": 152.38627499999998,
                    "p50": 183.91968699999998,
                    "p95": 255.103581,
                    "p99": 255.103581,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 644.122524,
                    "min": 479.85997599999996,
                    "p50": 542.955905,
                    "p95": 644.122524,
                    "p99": 644.122524,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 340.293277,
                    "min": 181.255268,
                    "p50": 216.71344299999998,
                    "p95": 340.293277,
                    "p99": 340.293277,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 207.500678,
                    "min": 183.998088,
                    "p50": 194.158189,
                    "p95": 207.500678,
                    "p99": 207.500678,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 309.854579,
                    "min": 211.874695,
                    "p50": 287.517542,
                    "p95": 309.854579,
                    "p99": 309.854579,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 147.300634,
                    "min": 86.219522,
                    "p50": 100.466483,
                    "p95": 147.300634,
                    "p99": 147.300634,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 226.84518,
                    "min": 161.656914,
                    "p50": 172.396516,
                    "p95": 226.84518,
                    "p99": 226.84518,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 117.034764,
                    "min": 59.358095999999996,
                    "p50": 70.409126,
                    "p95": 117.034764,
                    "p99": 117.034764,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 197.914726,
                    "min": 117.492172,
                    "p50": 132.980956,
                    "p95": 197.914726,
                    "p99": 197.914726,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 144.03230399999998,
                    "min": 81.706149,
                    "p50": 108.35814699999999,
                    "p95": 144.03230399999998,
                    "p99": 144.03230399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.548149,
                    "min": 136.267667,
                    "p50": 147.19047,
                    "p95": 163.548149,
                    "p99": 163.548149,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 201.15873,
                    "min": 149.864195,
                    "p50": 156.734073,
                    "p95": 201.15873,
                    "p99": 201.15873,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 441.817013,
                    "min": 388.590753,
                    "p50": 416.96702799999997,
                    "p95": 441.817013,
                    "p99": 441.817013,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 350.60770299999996,
                    "min": 241.081989,
                    "p50": 324.722002,
                    "p95": 350.60770299999996,
                    "p99": 350.60770299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 96.729919,
                    "min": 49.468053,
                    "p50": 78.94090299999999,
                    "p95": 96.729919,
                    "p99": 96.729919,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 439.75381999999996,
                    "min": 384.03849499999995,
                    "p50": 421.56915799999996,
                    "p95": 439.75381999999996,
                    "p99": 439.75381999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 346.82642899999996,
                    "min": 247.363314,
                    "p50": 322.033049,
                    "p95": 346.82642899999996,
                    "p99": 346.82642899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 264.267814,
                    "min": 177.95370499999999,
                    "p50": 247.84343199999998,
                    "p95": 264.267814,
                    "p99": 264.267814,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 204.807883,
                    "min": 81.831779,
                    "p50": 106.69387499999999,
                    "p95": 204.807883,
                    "p99": 204.807883,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1049.4110839999998,
                    "min": 863.710619,
                    "p50": 952.5974679999999,
                    "p95": 1049.4110839999998,
                    "p99": 1049.4110839999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 593.49229,
                    "min": 406.49979299999995,
                    "p50": 489.636847,
                    "p95": 593.49229,
                    "p99": 593.49229,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 158.403891,
                    "min": 91.69651999999999,
                    "p50": 141.170372,
                    "p95": 158.403891,
                    "p99": 158.403891,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 269.256245,
                    "min": 107.37590499999999,
                    "p50": 151.18645899999999,
                    "p95": 269.256245,
                    "p99": 269.256245,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 135.302841,
                    "min": 60.447621,
                    "p50": 97.123623,
                    "p95": 135.302841,
                    "p99": 135.302841,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 190.868448,
                    "min": 102.565844,
                    "p50": 142.92672,
                    "p95": 190.868448,
                    "p99": 190.868448,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 165.42745499999998,
                    "min": 47.246465,
                    "p50": 59.116907999999995,
                    "p95": 165.42745499999998,
                    "p99": 165.42745499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 206.00443099999998,
                    "min": 148.18714699999998,
                    "p50": 167.254688,
                    "p95": 206.00443099999998,
                    "p99": 206.00443099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 138.94705199999999,
                    "min": 79.358406,
                    "p50": 115.906515,
                    "p95": 138.94705199999999,
                    "p99": 138.94705199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 226.97655,
                    "min": 140.133648,
                    "p50": 150.583038,
                    "p95": 226.97655,
                    "p99": 226.97655,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.324406,
                    "min": 79.710396,
                    "p50": 89.300072,
                    "p95": 117.324406,
                    "p99": 117.324406,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 230.17134399999998,
                    "min": 126.00682599999999,
                    "p50": 133.911733,
                    "p95": 230.17134399999998,
                    "p99": 230.17134399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 104.57235899999999,
                    "min": 46.790715,
                    "p50": 69.71038899999999,
                    "p95": 104.57235899999999,
                    "p99": 104.57235899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.284632,
                    "min": 42.46102,
                    "p50": 50.489709999999995,
                    "p95": 106.284632,
                    "p99": 106.284632,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 305.158887,
                    "min": 222.85796599999998,
                    "p50": 299.30336,
                    "p95": 305.158887,
                    "p99": 305.158887,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 178.48120899999998,
                    "min": 128.99002199999998,
                    "p50": 174.05167799999998,
                    "p95": 178.48120899999998,
                    "p99": 178.48120899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 302.980812,
                    "min": 258.77268699999996,
                    "p50": 282.97524699999997,
                    "p95": 302.980812,
                    "p99": 302.980812,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 187.527268,
                    "min": 116.593621,
                    "p50": 123.18513499999999,
                    "p95": 187.527268,
                    "p99": 187.527268,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 114.44818,
                    "min": 87.561583,
                    "p50": 104.72619999999999,
                    "p95": 114.44818,
                    "p99": 114.44818,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.87889,
                    "min": 45.68881,
                    "p50": 84.560003,
                    "p95": 93.87889,
                    "p99": 93.87889,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 263.100508,
                    "min": 180.404102,
                    "p50": 198.18588799999998,
                    "p95": 263.100508,
                    "p99": 263.100508,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 200.11319699999999,
                    "min": 132.426569,
                    "p50": 168.34993699999998,
                    "p95": 200.11319699999999,
                    "p99": 200.11319699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 490.496858,
                    "min": 386.494311,
                    "p50": 441.02493599999997,
                    "p95": 490.496858,
                    "p99": 490.496858,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 202.22459899999998,
                    "min": 102.764957,
                    "p50": 141.212231,
                    "p95": 202.22459899999998,
                    "p99": 202.22459899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1430.607413,
                    "min": 1271.7423059999999,
                    "p50": 1332.915146,
                    "p95": 1430.607413,
                    "p99": 1430.607413,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 129.638832,
                    "min": 57.178445999999994,
                    "p50": 95.52288399999999,
                    "p95": 129.638832,
                    "p99": 129.638832,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 240.86845599999998,
                    "min": 182.934932,
                    "p50": 214.464484,
                    "p95": 240.86845599999998,
                    "p99": 240.86845599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 229.36426699999998,
                    "min": 157.729719,
                    "p50": 178.28305699999999,
                    "p95": 229.36426699999998,
                    "p99": 229.36426699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 573.668175,
                    "min": 467.973321,
                    "p50": 540.6212859999999,
                    "p95": 573.668175,
                    "p99": 573.668175,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.133119,
                    "min": 65.997665,
                    "p50": 68.525702,
                    "p95": 122.133119,
                    "p99": 122.133119,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 258.509346,
                    "min": 184.441744,
                    "p50": 221.140594,
                    "p95": 258.509346,
                    "p99": 258.509346,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 183.768298,
                    "min": 126.909922,
                    "p50": 151.37809199999998,
                    "p95": 183.768298,
                    "p99": 183.768298,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 700.4011949999999,
                    "min": 599.050569,
                    "p50": 675.1707789999999,
                    "p95": 700.4011949999999,
                    "p99": 700.4011949999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 956.102097,
                    "min": 934.9481049999999,
                    "p50": 941.4793179999999,
                    "p95": 956.102097,
                    "p99": 956.102097,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 822.1948279999999,
                    "min": 805.618446,
                    "p50": 813.3547729999999,
                    "p95": 822.1948279999999,
                    "p99": 822.1948279999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1212.110842,
                    "min": 1187.654022,
                    "p50": 1205.486506,
                    "p95": 1212.110842,
                    "p99": 1212.110842,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 423.840212,
                    "min": 390.35058799999996,
                    "p50": 417.832695,
                    "p95": 423.840212,
                    "p99": 423.840212,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 556.6216989999999,
                    "min": 533.147234,
                    "p50": 550.44657,
                    "p95": 556.6216989999999,
                    "p99": 556.6216989999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1079.071752,
                    "min": 1066.736144,
                    "p50": 1072.714226,
                    "p95": 1079.071752,
                    "p99": 1079.071752,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 690.068459,
                    "min": 668.451744,
                    "p50": 682.475452,
                    "p95": 690.068459,
                    "p99": 690.068459,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1578.2477119999999,
                    "min": 1491.750086,
                    "p50": 1532.021101,
                    "p95": 1578.2477119999999,
                    "p99": 1578.2477119999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 476.419758,
                    "min": 443.803749,
                    "p50": 469.462746,
                    "p95": 476.419758,
                    "p99": 476.419758,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1223.722525,
                    "min": 1155.9974009999999,
                    "p50": 1203.0113059999999,
                    "p95": 1223.722525,
                    "p99": 1223.722525,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 947.724208,
                    "min": 886.2650649999999,
                    "p50": 910.381715,
                    "p95": 947.724208,
                    "p99": 947.724208,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1076.38968,
                    "min": 1035.264127,
                    "p50": 1059.318785,
                    "p95": 1076.38968,
                    "p99": 1076.38968,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1369.32644,
                    "min": 1316.579782,
                    "p50": 1348.473137,
                    "p95": 1369.32644,
                    "p99": 1369.32644,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 625.5265099999999,
                    "min": 604.547153,
                    "p50": 612.071975,
                    "p95": 625.5265099999999,
                    "p99": 625.5265099999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 783.993925,
                    "min": 743.961877,
                    "p50": 768.034267,
                    "p95": 783.993925,
                    "p99": 783.993925,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1136.065501,
                    "min": 998.1259709999999,
                    "p50": 1126.94469,
                    "p95": 1136.065501,
                    "p99": 1136.065501,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1983.226481,
                    "min": 1722.565185,
                    "p50": 1949.010857,
                    "p95": 1983.226481,
                    "p99": 1983.226481,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2543.936795,
                    "min": 2196.518193,
                    "p50": 2509.5688999999998,
                    "p95": 2543.936795,
                    "p99": 2543.936795,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1720.742104,
                    "min": 1496.718668,
                    "p50": 1695.355098,
                    "p95": 1720.742104,
                    "p99": 1720.742104,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3376.666764,
                    "min": 2956.548938,
                    "p50": 3345.277713,
                    "p95": 3376.666764,
                    "p99": 3376.666764,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 887.327697,
                    "min": 763.4377939999999,
                    "p50": 859.5199779999999,
                    "p95": 887.327697,
                    "p99": 887.327697,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2820.9805539999998,
                    "min": 2449.3028999999997,
                    "p50": 2766.718272,
                    "p95": 2820.9805539999998,
                    "p99": 2820.9805539999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2265.151335,
                    "min": 1963.735223,
                    "p50": 2214.486143,
                    "p95": 2265.151335,
                    "p99": 2265.151335,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1412.820229,
                    "min": 1244.8808709999998,
                    "p50": 1393.089906,
                    "p95": 1412.820229,
                    "p99": 1412.820229,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3107.830646,
                    "min": 2679.452741,
                    "p50": 3073.514785,
                    "p95": 3107.830646,
                    "p99": 3107.830646,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 829.9581959999999,
                    "min": 792.361329,
                    "p50": 822.572414,
                    "p95": 829.9581959999999,
                    "p99": 829.9581959999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1095.753582,
                    "min": 1077.107051,
                    "p50": 1086.974007,
                    "p95": 1095.753582,
                    "p99": 1095.753582,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 304.157879,
                    "min": 294.030327,
                    "p50": 301.70190099999996,
                    "p95": 304.157879,
                    "p99": 304.157879,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 574.02974,
                    "min": 530.145274,
                    "p50": 560.2216589999999,
                    "p95": 574.02974,
                    "p99": 574.02974,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 963.524186,
                    "min": 922.165534,
                    "p50": 951.6912629999999,
                    "p95": 963.524186,
                    "p99": 963.524186,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 442.074182,
                    "min": 393.776323,
                    "p50": 429.198013,
                    "p95": 442.074182,
                    "p99": 442.074182,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 710.3596749999999,
                    "min": 689.451479,
                    "p50": 702.495578,
                    "p95": 710.3596749999999,
                    "p99": 710.3596749999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2408.4750759999997,
                    "min": 2109.1296469999997,
                    "p50": 2336.237424,
                    "p95": 2408.4750759999997,
                    "p99": 2408.4750759999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1196.685825,
                    "min": 1067.8267019999998,
                    "p50": 1173.560509,
                    "p95": 1196.685825,
                    "p99": 1196.685825,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 715.843846,
                    "min": 614.854457,
                    "p50": 683.8733149999999,
                    "p95": 715.843846,
                    "p99": 715.843846,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2164.344859,
                    "min": 1940.652191,
                    "p50": 2097.799723,
                    "p95": 2164.344859,
                    "p99": 2164.344859,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1693.219766,
                    "min": 1490.371159,
                    "p50": 1662.9523749999998,
                    "p95": 1693.219766,
                    "p99": 1693.219766,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1345.331866,
                    "min": 1214.392639,
                    "p50": 1300.220625,
                    "p95": 1345.331866,
                    "p99": 1345.331866,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1998.9613279999999,
                    "min": 1795.4213149999998,
                    "p50": 1978.66021,
                    "p95": 1998.9613279999999,
                    "p99": 1998.9613279999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 860.24667,
                    "min": 761.65798,
                    "p50": 841.217912,
                    "p95": 860.24667,
                    "p99": 860.24667,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 554.625484,
                    "min": 470.291902,
                    "p50": 524.4226209999999,
                    "p95": 554.625484,
                    "p99": 554.625484,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2896.821845,
                    "min": 2622.4540859999997,
                    "p50": 2871.169528,
                    "p95": 2896.821845,
                    "p99": 2896.821845,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2500.948994,
                    "min": 2226.531231,
                    "p50": 2452.468422,
                    "p95": 2500.948994,
                    "p99": 2500.948994,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3298.57988,
                    "min": 2963.0747079999996,
                    "p50": 3266.448856,
                    "p95": 3298.57988,
                    "p99": 3298.57988,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1513.192128,
                    "min": 1340.476804,
                    "p50": 1486.9381919999998,
                    "p95": 1513.192128,
                    "p99": 1513.192128,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1853.5230379999998,
                    "min": 1639.187152,
                    "p50": 1824.3955409999999,
                    "p95": 1853.5230379999998,
                    "p99": 1853.5230379999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1027.316439,
                    "min": 917.174146,
                    "p50": 996.4082099999999,
                    "p95": 1027.316439,
                    "p99": 1027.316439,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2239.05895,
                    "min": 2046.952629,
                    "p50": 2211.867005,
                    "p95": 2239.05895,
                    "p99": 2239.05895,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 914.230249,
                    "min": 799.765956,
                    "p50": 844.231593,
                    "p95": 914.230249,
                    "p99": 914.230249,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2632.482399,
                    "min": 2347.37063,
                    "p50": 2550.013379,
                    "p95": 2632.482399,
                    "p99": 2632.482399,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1731.205054,
                    "min": 1575.2474789999999,
                    "p50": 1686.497736,
                    "p95": 1731.205054,
                    "p99": 1731.205054,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 712.8258159999999,
                    "min": 660.678047,
                    "p50": 700.5487989999999,
                    "p95": 712.8258159999999,
                    "p99": 712.8258159999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1061.022608,
                    "min": 968.5217719999999,
                    "p50": 1031.076634,
                    "p95": 1061.022608,
                    "p99": 1061.022608,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2059.174798,
                    "min": 1882.8878209999998,
                    "p50": 2030.712231,
                    "p95": 2059.174798,
                    "p99": 2059.174798,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2396.1514549999997,
                    "min": 2153.6372859999997,
                    "p50": 2376.551837,
                    "p95": 2396.1514549999997,
                    "p99": 2396.1514549999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3410.7257769999997,
                    "min": 3122.5052579999997,
                    "p50": 3354.228004,
                    "p95": 3410.7257769999997,
                    "p99": 3410.7257769999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1220.494669,
                    "min": 1090.205647,
                    "p50": 1186.208335,
                    "p95": 1220.494669,
                    "p99": 1220.494669,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2986.063411,
                    "min": 2716.9003949999997,
                    "p50": 2954.522715,
                    "p95": 2986.063411,
                    "p99": 2986.063411,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1376.617297,
                    "min": 1235.0978029999999,
                    "p50": 1369.488093,
                    "p95": 1376.617297,
                    "p99": 1376.617297,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1887.6591159999998,
                    "min": 1686.2036799999998,
                    "p50": 1880.100052,
                    "p95": 1887.6591159999998,
                    "p99": 1887.6591159999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1548.662359,
                    "min": 1403.693471,
                    "p50": 1535.0137109999998,
                    "p95": 1548.662359,
                    "p99": 1548.662359,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 560.167728,
                    "min": 512.437112,
                    "p50": 535.361527,
                    "p95": 560.167728,
                    "p99": 560.167728,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 869.690111,
                    "min": 774.8074839999999,
                    "p50": 860.9146599999999,
                    "p95": 869.690111,
                    "p99": 869.690111,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1365.622612,
                    "min": 1218.150517,
                    "p50": 1345.901138,
                    "p95": 1365.622612,
                    "p99": 1365.622612,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1192.5986229999999,
                    "min": 1068.615477,
                    "p50": 1181.168379,
                    "p95": 1192.5986229999999,
                    "p99": 1192.5986229999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2938.7290789999997,
                    "min": 2624.2877289999997,
                    "p50": 2873.167956,
                    "p95": 2938.7290789999997,
                    "p99": 2938.7290789999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2516.557715,
                    "min": 2243.493639,
                    "p50": 2452.194396,
                    "p95": 2516.557715,
                    "p99": 2516.557715,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 531.30167,
                    "min": 476.05834899999996,
                    "p50": 527.633937,
                    "p95": 531.30167,
                    "p99": 531.30167,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1851.44643,
                    "min": 1662.284555,
                    "p50": 1808.789173,
                    "p95": 1851.44643,
                    "p99": 1851.44643,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1705.6031759999998,
                    "min": 1530.350893,
                    "p50": 1666.85565,
                    "p95": 1705.6031759999998,
                    "p99": 1705.6031759999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 700.946247,
                    "min": 612.732399,
                    "p50": 689.164773,
                    "p95": 700.946247,
                    "p99": 700.946247,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2034.789067,
                    "min": 1813.725346,
                    "p50": 1988.815764,
                    "p95": 2034.789067,
                    "p99": 2034.789067,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1518.222382,
                    "min": 1357.383317,
                    "p50": 1488.9141519999998,
                    "p95": 1518.222382,
                    "p99": 1518.222382,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3367.818211,
                    "min": 2983.430546,
                    "p50": 3280.8633,
                    "p95": 3367.818211,
                    "p99": 3367.818211,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2343.252954,
                    "min": 2080.434311,
                    "p50": 2302.5858399999997,
                    "p95": 2343.252954,
                    "p99": 2343.252954,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1028.674454,
                    "min": 907.905055,
                    "p50": 1002.219114,
                    "p95": 1028.674454,
                    "p99": 1028.674454,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2173.158775,
                    "min": 1939.925299,
                    "p50": 2160.335208,
                    "p95": 2173.158775,
                    "p99": 2173.158775,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3392.230561,
                    "min": 2965.508246,
                    "p50": 3300.198086,
                    "p95": 3392.230561,
                    "p99": 3392.230561,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 713.6073269999999,
                    "min": 602.786462,
                    "p50": 675.445463,
                    "p95": 713.6073269999999,
                    "p99": 713.6073269999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1578.539147,
                    "min": 1359.636403,
                    "p50": 1493.129352,
                    "p95": 1578.539147,
                    "p99": 1578.539147,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1704.042328,
                    "min": 1493.4592499999999,
                    "p50": 1663.212716,
                    "p95": 1704.042328,
                    "p99": 1704.042328,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1835.308532,
                    "min": 1660.63474,
                    "p50": 1774.4305849999998,
                    "p95": 1835.308532,
                    "p99": 1835.308532,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2896.653671,
                    "min": 2596.9230749999997,
                    "p50": 2848.16901,
                    "p95": 2896.653671,
                    "p99": 2896.653671,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2016.118168,
                    "min": 1793.428404,
                    "p50": 1964.5922959999998,
                    "p95": 2016.118168,
                    "p99": 2016.118168,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2196.547234,
                    "min": 1954.225913,
                    "p50": 2137.2057729999997,
                    "p95": 2196.547234,
                    "p99": 2196.547234,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 528.934121,
                    "min": 482.591812,
                    "p50": 499.09986,
                    "p95": 528.934121,
                    "p99": 528.934121,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1020.8204489999999,
                    "min": 893.156531,
                    "p50": 996.563093,
                    "p95": 1020.8204489999999,
                    "p99": 1020.8204489999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 868.821596,
                    "min": 772.476139,
                    "p50": 854.2715159999999,
                    "p95": 868.821596,
                    "p99": 868.821596,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2486.81947,
                    "min": 2223.6184089999997,
                    "p50": 2461.6413979999998,
                    "p95": 2486.81947,
                    "p99": 2486.81947,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1344.874861,
                    "min": 1213.544181,
                    "p50": 1323.005216,
                    "p95": 1344.874861,
                    "p99": 1344.874861,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2333.629388,
                    "min": 2081.763892,
                    "p50": 2292.224863,
                    "p95": 2333.629388,
                    "p99": 2333.629388,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1193.950576,
                    "min": 1045.22633,
                    "p50": 1141.942575,
                    "p95": 1193.950576,
                    "p99": 1193.950576,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 845.828479,
                    "min": 765.0872889999999,
                    "p50": 827.545337,
                    "p95": 845.828479,
                    "p99": 845.828479,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.16926999999998,
                    "min": 188.139546,
                    "p50": 202.72652499999998,
                    "p95": 214.16926999999998,
                    "p99": 214.16926999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4407.2646239999995,
                    "min": 4039.77535,
                    "p50": 4340.377646,
                    "p95": 4407.2646239999995,
                    "p99": 4407.2646239999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 936.798832,
                    "min": 835.206148,
                    "p50": 913.191654,
                    "p95": 936.798832,
                    "p99": 936.798832,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1401.580021,
                    "min": 1254.502881,
                    "p50": 1331.512824,
                    "p95": 1401.580021,
                    "p99": 1401.580021,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 477.11220599999996,
                    "min": 432.477693,
                    "p50": 463.466102,
                    "p95": 477.11220599999996,
                    "p99": 477.11220599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1811.571463,
                    "min": 1652.7151769999998,
                    "p50": 1767.006255,
                    "p95": 1811.571463,
                    "p99": 1811.571463,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.86425099999997,
                    "min": 265.201364,
                    "p50": 293.70412,
                    "p95": 303.86425099999997,
                    "p99": 303.86425099999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 404.560681,
                    "min": 354.726518,
                    "p50": 383.991388,
                    "p95": 404.560681,
                    "p99": 404.560681,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.907469,
                    "min": 129.927911,
                    "p50": 162.316743,
                    "p95": 173.907469,
                    "p99": 173.907469,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.90020599999997,
                    "min": 390.823124,
                    "p50": 420.669733,
                    "p95": 435.90020599999997,
                    "p99": 435.90020599999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.009707,
                    "min": 303.61614,
                    "p50": 326.56321499999996,
                    "p95": 346.009707,
                    "p99": 346.009707,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 534.642698,
                    "min": 479.77428499999996,
                    "p50": 518.4526139999999,
                    "p95": 534.642698,
                    "p99": 534.642698,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 610.860281,
                    "min": 557.0729299999999,
                    "p50": 593.852889,
                    "p95": 610.860281,
                    "p99": 610.860281,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 567.794847,
                    "min": 522.680925,
                    "p50": 547.7607929999999,
                    "p95": 567.794847,
                    "p99": 567.794847,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2263.655932,
                    "min": 2046.429878,
                    "p50": 2188.292791,
                    "p95": 2263.655932,
                    "p99": 2263.655932,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.945969,
                    "min": 239.757004,
                    "p50": 250.207538,
                    "p95": 258.945969,
                    "p99": 258.945969,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 664.323886,
                    "min": 603.319848,
                    "p50": 646.028658,
                    "p95": 664.323886,
                    "p99": 664.323886,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 703.9573009999999,
                    "min": 643.4597249999999,
                    "p50": 696.601813,
                    "p95": 703.9573009999999,
                    "p99": 703.9573009999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1072.195722,
                    "min": 1007.991631,
                    "p50": 1039.81298,
                    "p95": 1072.195722,
                    "p99": 1072.195722,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 245.28083099999998,
                    "min": 227.25477899999998,
                    "p50": 240.846869,
                    "p95": 245.28083099999998,
                    "p99": 245.28083099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1408.2454539999999,
                    "min": 1339.950061,
                    "p50": 1372.084981,
                    "p95": 1408.2454539999999,
                    "p99": 1408.2454539999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 717.775768,
                    "min": 658.239699,
                    "p50": 704.2026149999999,
                    "p95": 717.775768,
                    "p99": 717.775768,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 514.720629,
                    "min": 475.77491599999996,
                    "p50": 510.354965,
                    "p95": 514.720629,
                    "p99": 514.720629,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 554.400079,
                    "min": 503.473098,
                    "p50": 540.713742,
                    "p95": 554.400079,
                    "p99": 554.400079,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 482.37985299999997,
                    "min": 452.568765,
                    "p50": 473.01543899999996,
                    "p95": 482.37985299999997,
                    "p99": 482.37985299999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 635.157194,
                    "min": 588.677278,
                    "p50": 617.722001,
                    "p95": 635.157194,
                    "p99": 635.157194,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 141.07476599999998,
                    "min": 126.809282,
                    "p50": 139.385311,
                    "p95": 141.07476599999998,
                    "p99": 141.07476599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3441.2594209999997,
                    "min": 3269.537332,
                    "p50": 3385.184954,
                    "p95": 3441.2594209999997,
                    "p99": 3441.2594209999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 173.51178099999998,
                    "min": 153.34353199999998,
                    "p50": 170.76149999999998,
                    "p95": 173.51178099999998,
                    "p99": 173.51178099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 209.632711,
                    "min": 170.598116,
                    "p50": 204.873267,
                    "p95": 209.632711,
                    "p99": 209.632711,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 312.143718,
                    "min": 281.669451,
                    "p50": 302.221019,
                    "p95": 312.143718,
                    "p99": 312.143718,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 450.44411499999995,
                    "min": 418.349894,
                    "p50": 435.436037,
                    "p95": 450.44411499999995,
                    "p99": 450.44411499999995,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 345.453731,
                    "min": 319.428477,
                    "p50": 337.112245,
                    "p95": 345.453731,
                    "p99": 345.453731,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 415.554897,
                    "min": 368.352308,
                    "p50": 403.46525499999996,
                    "p95": 415.554897,
                    "p99": 415.554897,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 277.834722,
                    "min": 234.277132,
                    "p50": 269.180779,
                    "p95": 277.834722,
                    "p99": 277.834722,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 380.04173199999997,
                    "min": 369.575599,
                    "p50": 374.976745,
                    "p95": 380.04173199999997,
                    "p99": 380.04173199999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1739.233377,
                    "min": 1685.8207169999998,
                    "p50": 1719.539931,
                    "p95": 1739.233377,
                    "p99": 1739.233377,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 606.575577,
                    "min": 540.701405,
                    "p50": 599.024878,
                    "p95": 606.575577,
                    "p99": 606.575577,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4382.9445829999995,
                    "min": 4015.9563599999997,
                    "p50": 4337.622999,
                    "p95": 4382.9445829999995,
                    "p99": 4382.9445829999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 649.878203,
                    "min": 595.983466,
                    "p50": 623.5719429999999,
                    "p95": 649.878203,
                    "p99": 649.878203,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 430.990101,
                    "min": 360.164545,
                    "p50": 419.257074,
                    "p95": 430.990101,
                    "p99": 430.990101,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 806.689983,
                    "min": 728.833257,
                    "p50": 768.6721229999999,
                    "p95": 806.689983,
                    "p99": 806.689983,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 915.076745,
                    "min": 828.382434,
                    "p50": 892.1449399999999,
                    "p95": 915.076745,
                    "p99": 915.076745,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.113603,
                    "min": 203.72252899999998,
                    "p50": 250.617232,
                    "p95": 259.113603,
                    "p99": 259.113603,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 477.408083,
                    "min": 433.579326,
                    "p50": 467.42832899999996,
                    "p95": 477.408083,
                    "p99": 477.408083,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.026587,
                    "min": 311.608383,
                    "p50": 334.507315,
                    "p95": 346.026587,
                    "p99": 346.026587,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 693.041247,
                    "min": 638.005725,
                    "p50": 678.710231,
                    "p95": 693.041247,
                    "p99": 693.041247,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 579.099972,
                    "min": 513.760348,
                    "p50": 551.864508,
                    "p95": 579.099972,
                    "p99": 579.099972,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1781.335046,
                    "min": 1639.847209,
                    "p50": 1752.276909,
                    "p95": 1781.335046,
                    "p99": 1781.335046,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1352.220851,
                    "min": 1241.9975709999999,
                    "p50": 1332.823971,
                    "p95": 1352.220851,
                    "p99": 1352.220851,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.096307,
                    "min": 456.635678,
                    "p50": 517.8698069999999,
                    "p95": 522.096307,
                    "p99": 522.096307,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 171.593819,
                    "min": 159.179777,
                    "p50": 162.139105,
                    "p95": 171.593819,
                    "p99": 171.593819,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 393.951503,
                    "min": 362.08300399999996,
                    "p50": 384.346339,
                    "p95": 393.951503,
                    "p99": 393.951503,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 224.850519,
                    "min": 197.90442299999998,
                    "p50": 214.65064199999998,
                    "p95": 224.850519,
                    "p99": 224.850519,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 302.731383,
                    "min": 278.908713,
                    "p50": 294.343205,
                    "p95": 302.731383,
                    "p99": 302.731383,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2234.314397,
                    "min": 2048.5863759999997,
                    "p50": 2193.515036,
                    "p95": 2234.314397,
                    "p99": 2234.314397,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 439.806319,
                    "min": 426.454544,
                    "p50": 436.585203,
                    "p95": 439.806319,
                    "p99": 439.806319,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 299.473112,
                    "min": 280.234079,
                    "p50": 286.816833,
                    "p95": 299.473112,
                    "p99": 299.473112,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 189.276007,
                    "min": 162.680782,
                    "p50": 183.699706,
                    "p95": 189.276007,
                    "p99": 189.276007,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 338.99715699999996,
                    "min": 310.971901,
                    "p50": 334.811596,
                    "p95": 338.99715699999996,
                    "p99": 338.99715699999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 772.720368,
                    "min": 738.272669,
                    "p50": 756.272514,
                    "p95": 772.720368,
                    "p99": 772.720368,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.49943399999998,
                    "min": 112.518226,
                    "p50": 145.27022,
                    "p95": 150.49943399999998,
                    "p99": 150.49943399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3701.990923,
                    "min": 3565.537339,
                    "p50": 3631.813965,
                    "p95": 3701.990923,
                    "p99": 3701.990923,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 680.2751519999999,
                    "min": 654.611776,
                    "p50": 663.084383,
                    "p95": 680.2751519999999,
                    "p99": 680.2751519999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.473155,
                    "min": 206.68921999999998,
                    "p50": 213.931297,
                    "p95": 223.473155,
                    "p99": 223.473155,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 414.674579,
                    "min": 362.136311,
                    "p50": 399.649272,
                    "p95": 414.674579,
                    "p99": 414.674579,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 554.778568,
                    "min": 520.404218,
                    "p50": 547.8277889999999,
                    "p95": 554.778568,
                    "p99": 554.778568,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 259.143785,
                    "min": 224.09077,
                    "p50": 253.400557,
                    "p95": 259.143785,
                    "p99": 259.143785,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 480.91729499999997,
                    "min": 442.622931,
                    "p50": 473.183952,
                    "p95": 480.91729499999997,
                    "p99": 480.91729499999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1873.689175,
                    "min": 1770.746111,
                    "p50": 1834.4077599999998,
                    "p95": 1873.689175,
                    "p99": 1873.689175,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1146.545605,
                    "min": 1095.167815,
                    "p50": 1111.169848,
                    "p95": 1146.545605,
                    "p99": 1146.545605,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 516.323102,
                    "min": 482.37994999999995,
                    "p50": 510.059599,
                    "p95": 516.323102,
                    "p99": 516.323102,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 369.47502399999996,
                    "min": 331.977245,
                    "p50": 365.375166,
                    "p95": 369.47502399999996,
                    "p99": 369.47502399999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 592.972928,
                    "min": 553.4928649999999,
                    "p50": 578.653095,
                    "p95": 592.972928,
                    "p99": 592.972928,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1509.929661,
                    "min": 1438.829468,
                    "p50": 1468.819067,
                    "p95": 1509.929661,
                    "p99": 1509.929661,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 351.65347299999996,
                    "min": 329.52809199999996,
                    "p50": 344.920349,
                    "p95": 351.65347299999996,
                    "p99": 351.65347299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 625.7549799999999,
                    "min": 548.810418,
                    "p50": 596.196736,
                    "p95": 625.7549799999999,
                    "p99": 625.7549799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 545.7158459999999,
                    "min": 487.54857999999996,
                    "p50": 524.902013,
                    "p95": 545.7158459999999,
                    "p99": 545.7158459999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.892693,
                    "min": 288.15314,
                    "p50": 294.11789699999997,
                    "p95": 313.892693,
                    "p99": 313.892693,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 916.475013,
                    "min": 859.616132,
                    "p50": 887.338846,
                    "p95": 916.475013,
                    "p99": 916.475013,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.43331899999998,
                    "min": 170.972433,
                    "p50": 208.031699,
                    "p95": 217.43331899999998,
                    "p99": 217.43331899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 393.540379,
                    "min": 365.660277,
                    "p50": 385.55147,
                    "p95": 393.540379,
                    "p99": 393.540379,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 493.371421,
                    "min": 434.197049,
                    "p50": 462.55897999999996,
                    "p95": 493.371421,
                    "p99": 493.371421,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 708.8457179999999,
                    "min": 666.695523,
                    "p50": 690.238213,
                    "p95": 708.8457179999999,
                    "p99": 708.8457179999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1389.2953559999999,
                    "min": 1284.303619,
                    "p50": 1335.718071,
                    "p95": 1389.2953559999999,
                    "p99": 1389.2953559999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 569.013744,
                    "min": 529.979742,
                    "p50": 554.102839,
                    "p95": 569.013744,
                    "p99": 569.013744,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.395148,
                    "min": 379.914671,
                    "p50": 427.333021,
                    "p95": 435.395148,
                    "p99": 435.395148,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.250033,
                    "min": 227.273915,
                    "p50": 248.757834,
                    "p95": 260.250033,
                    "p99": 260.250033,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 665.6949999999999,
                    "min": 583.541018,
                    "p50": 654.472988,
                    "p95": 665.6949999999999,
                    "p99": 665.6949999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 815.272827,
                    "min": 752.7706509999999,
                    "p50": 801.0834159999999,
                    "p95": 815.272827,
                    "p99": 815.272827,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1792.2150379999998,
                    "min": 1694.924787,
                    "p50": 1782.882056,
                    "p95": 1792.2150379999998,
                    "p99": 1792.2150379999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2244.921598,
                    "min": 2115.942501,
                    "p50": 2202.8019099999997,
                    "p95": 2244.921598,
                    "p99": 2244.921598,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4461.6836109999995,
                    "min": 4200.7933219999995,
                    "p50": 4416.2148369999995,
                    "p95": 4461.6836109999995,
                    "p99": 4461.6836109999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 171.405663,
                    "min": 156.77138499999998,
                    "p50": 169.324321,
                    "p95": 171.405663,
                    "p99": 171.405663,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2231.5051399999998,
                    "min": 1989.603361,
                    "p50": 2195.495963,
                    "p95": 2231.5051399999998,
                    "p99": 2231.5051399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 605.829297,
                    "min": 557.04121,
                    "p50": 594.111461,
                    "p95": 605.829297,
                    "p99": 605.829297,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 475.809825,
                    "min": 435.899141,
                    "p50": 447.00694899999996,
                    "p95": 475.809825,
                    "p99": 475.809825,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 692.2087369999999,
                    "min": 620.084802,
                    "p50": 686.87211,
                    "p95": 692.2087369999999,
                    "p99": 692.2087369999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.675799,
                    "min": 311.852371,
                    "p50": 343.483102,
                    "p95": 345.675799,
                    "p99": 345.675799,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.370165,
                    "min": 212.149405,
                    "p50": 238.900001,
                    "p95": 256.370165,
                    "p99": 256.370165,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.150507,
                    "min": 151.777495,
                    "p50": 162.975192,
                    "p95": 170.150507,
                    "p99": 170.150507,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.789601,
                    "min": 463.914067,
                    "p50": 502.883155,
                    "p95": 516.789601,
                    "p99": 516.789601,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 804.238494,
                    "min": 726.585928,
                    "p50": 790.452772,
                    "p95": 804.238494,
                    "p99": 804.238494,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.983516,
                    "min": 248.371523,
                    "p50": 293.55177699999996,
                    "p95": 304.983516,
                    "p99": 304.983516,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 388.802412,
                    "min": 332.12238199999996,
                    "p50": 376.313399,
                    "p95": 388.802412,
                    "p99": 388.802412,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 651.276697,
                    "min": 577.0141699999999,
                    "p50": 637.363937,
                    "p95": 651.276697,
                    "p99": 651.276697,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1787.246402,
                    "min": 1630.771197,
                    "p50": 1746.0075009999998,
                    "p95": 1787.246402,
                    "p99": 1787.246402,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.30310699999995,
                    "min": 395.182595,
                    "p50": 416.05224999999996,
                    "p95": 435.30310699999995,
                    "p99": 435.30310699999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 927.686324,
                    "min": 836.996225,
                    "p50": 887.027387,
                    "p95": 927.686324,
                    "p99": 927.686324,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 565.488302,
                    "min": 520.515376,
                    "p50": 548.323459,
                    "p95": 565.488302,
                    "p99": 565.488302,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 216.68695699999998,
                    "min": 163.722673,
                    "p50": 207.922003,
                    "p95": 216.68695699999998,
                    "p99": 216.68695699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1383.96955,
                    "min": 1222.274135,
                    "p50": 1318.1884929999999,
                    "p95": 1383.96955,
                    "p99": 1383.96955,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 820.7281849999999,
                    "min": 731.231918,
                    "p50": 799.318819,
                    "p95": 820.7281849999999,
                    "p99": 820.7281849999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 626.600831,
                    "min": 560.60523,
                    "p50": 616.580917,
                    "p95": 626.600831,
                    "p99": 626.600831,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1023.40712,
                    "min": 916.5378069999999,
                    "p50": 988.004322,
                    "p95": 1023.40712,
                    "p99": 1023.40712,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3988.994573,
                    "min": 3497.4057909999997,
                    "p50": 3844.1396729999997,
                    "p95": 3988.994573,
                    "p99": 3988.994573,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2591.418737,
                    "min": 2332.3596979999998,
                    "p50": 2525.897739,
                    "p95": 2591.418737,
                    "p99": 2591.418737,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2950.195268,
                    "min": 2640.0644199999997,
                    "p50": 2895.954836,
                    "p95": 2950.195268,
                    "p99": 2950.195268,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3451.948317,
                    "min": 3073.001215,
                    "p50": 3388.4038579999997,
                    "p95": 3451.948317,
                    "p99": 3451.948317,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1798.740895,
                    "min": 1589.263413,
                    "p50": 1769.0742659999999,
                    "p95": 1798.740895,
                    "p99": 1798.740895,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1226.20679,
                    "min": 1062.54808,
                    "p50": 1210.175999,
                    "p95": 1226.20679,
                    "p99": 1226.20679,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1579.3733459999999,
                    "min": 1418.107354,
                    "p50": 1542.028539,
                    "p95": 1579.3733459999999,
                    "p99": 1579.3733459999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1403.605024,
                    "min": 1241.432306,
                    "p50": 1356.985272,
                    "p95": 1403.605024,
                    "p99": 1403.605024,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1978.7052749999998,
                    "min": 1758.683436,
                    "p50": 1951.897686,
                    "p95": 1978.7052749999998,
                    "p99": 1978.7052749999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2181.7791819999998,
                    "min": 1929.511873,
                    "p50": 2116.379571,
                    "p95": 2181.7791819999998,
                    "p99": 2181.7791819999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2797.403818,
                    "min": 2482.110409,
                    "p50": 2698.8819679999997,
                    "p95": 2797.403818,
                    "p99": 2797.403818,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2425.750806,
                    "min": 2131.1233429999997,
                    "p50": 2326.104722,
                    "p95": 2425.750806,
                    "p99": 2425.750806,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2174.1874589999998,
                    "min": 1949.8526419999998,
                    "p50": 2147.720515,
                    "p95": 2174.1874589999998,
                    "p99": 2174.1874589999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2583.519383,
                    "min": 2261.0585579999997,
                    "p50": 2527.84265,
                    "p95": 2583.519383,
                    "p99": 2583.519383,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2803.424148,
                    "min": 2468.932861,
                    "p50": 2735.845429,
                    "p95": 2803.424148,
                    "p99": 2803.424148,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 825.3305369999999,
                    "min": 730.7188639999999,
                    "p50": 800.400415,
                    "p95": 825.3305369999999,
                    "p99": 825.3305369999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1008.8122169999999,
                    "min": 897.4871589999999,
                    "p50": 983.992039,
                    "p95": 1008.8122169999999,
                    "p99": 1008.8122169999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1422.3951969999998,
                    "min": 1240.409774,
                    "p50": 1384.270716,
                    "p95": 1422.3951969999998,
                    "p99": 1422.3951969999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1221.366417,
                    "min": 1078.807573,
                    "p50": 1160.5856489999999,
                    "p95": 1221.366417,
                    "p99": 1221.366417,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1988.225322,
                    "min": 1752.377148,
                    "p50": 1942.436043,
                    "p95": 1988.225322,
                    "p99": 1988.225322,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 624.402612,
                    "min": 543.516804,
                    "p50": 603.769176,
                    "p95": 624.402612,
                    "p99": 624.402612,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1618.013863,
                    "min": 1407.814555,
                    "p50": 1548.632416,
                    "p95": 1618.013863,
                    "p99": 1618.013863,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3451.094752,
                    "min": 3036.250083,
                    "p50": 3370.8028489999997,
                    "p95": 3451.094752,
                    "p99": 3451.094752,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3978.602919,
                    "min": 3515.873951,
                    "p50": 3876.5959199999998,
                    "p95": 3978.602919,
                    "p99": 3978.602919,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2959.361611,
                    "min": 2635.363829,
                    "p50": 2921.0612349999997,
                    "p95": 2959.361611,
                    "p99": 2959.361611,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1791.4911299999999,
                    "min": 1609.9313559999998,
                    "p50": 1781.621776,
                    "p95": 1791.4911299999999,
                    "p99": 1791.4911299999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2376.089211,
                    "min": 2129.5717099999997,
                    "p50": 2327.6713219999997,
                    "p95": 2376.089211,
                    "p99": 2376.089211,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2634.016759,
                    "min": 2336.8310779999997,
                    "p50": 2587.279842,
                    "p95": 2634.016759,
                    "p99": 2634.016759,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2462.615025,
                    "min": 2197.202918,
                    "p50": 2392.986629,
                    "p95": 2462.615025,
                    "p99": 2462.615025,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2825.512183,
                    "min": 2516.102225,
                    "p50": 2762.037566,
                    "p95": 2825.512183,
                    "p99": 2825.512183,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3294.2571789999997,
                    "min": 2936.0898509999997,
                    "p50": 3227.356629,
                    "p95": 3294.2571789999997,
                    "p99": 3294.2571789999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2272.8685889999997,
                    "min": 2001.741769,
                    "p50": 2216.638544,
                    "p95": 2272.8685889999997,
                    "p99": 2272.8685889999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2098.96096,
                    "min": 1853.2752289999999,
                    "p50": 2038.3799439999998,
                    "p95": 2098.96096,
                    "p99": 2098.96096,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 589.7844799999999,
                    "min": 523.9618419999999,
                    "p50": 572.176791,
                    "p95": 589.7844799999999,
                    "p99": 589.7844799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3766.503774,
                    "min": 3320.90973,
                    "p50": 3702.2858589999996,
                    "p95": 3766.503774,
                    "p99": 3766.503774,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1881.2258009999998,
                    "min": 1670.1506359999998,
                    "p50": 1837.670793,
                    "p95": 1881.2258009999998,
                    "p99": 1881.2258009999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1718.4116569999999,
                    "min": 1511.314823,
                    "p50": 1669.1803699999998,
                    "p95": 1718.4116569999999,
                    "p99": 1718.4116569999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1158.417526,
                    "min": 1027.06683,
                    "p50": 1121.298362,
                    "p95": 1158.417526,
                    "p99": 1158.417526,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1505.9244549999999,
                    "min": 1363.680185,
                    "p50": 1471.372783,
                    "p95": 1505.9244549999999,
                    "p99": 1505.9244549999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1339.4832259999998,
                    "min": 1206.8526419999998,
                    "p50": 1299.3596679999998,
                    "p95": 1339.4832259999998,
                    "p99": 1339.4832259999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 782.949791,
                    "min": 703.5800469999999,
                    "p50": 760.5399269999999,
                    "p95": 782.949791,
                    "p99": 782.949791,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 968.747387,
                    "min": 866.898057,
                    "p50": 923.6314259999999,
                    "p95": 968.747387,
                    "p99": 968.747387,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2795.157664,
                    "min": 2470.568644,
                    "p50": 2708.11984,
                    "p95": 2795.157664,
                    "p99": 2795.157664,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2990.758417,
                    "min": 2630.801214,
                    "p50": 2903.7437769999997,
                    "p95": 2990.758417,
                    "p99": 2990.758417,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2390.468062,
                    "min": 2121.468641,
                    "p50": 2338.5829329999997,
                    "p95": 2390.468062,
                    "p99": 2390.468062,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3470.9226249999997,
                    "min": 3100.014695,
                    "p50": 3412.4290739999997,
                    "p95": 3470.9226249999997,
                    "p99": 3470.9226249999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 827.1769869999999,
                    "min": 740.094127,
                    "p50": 796.457376,
                    "p95": 827.1769869999999,
                    "p99": 827.1769869999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2192.995344,
                    "min": 1966.5728869999998,
                    "p50": 2149.94204,
                    "p95": 2192.995344,
                    "p99": 2192.995344,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3923.998799,
                    "min": 3542.444638,
                    "p50": 3845.033927,
                    "p95": 3923.998799,
                    "p99": 3923.998799,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1202.271168,
                    "min": 1080.039458,
                    "p50": 1175.986614,
                    "p95": 1202.271168,
                    "p99": 1202.271168,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1625.2251139999998,
                    "min": 1410.606789,
                    "p50": 1562.720427,
                    "p95": 1625.2251139999998,
                    "p99": 1625.2251139999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1416.0453149999998,
                    "min": 1239.884652,
                    "p50": 1381.284179,
                    "p95": 1416.0453149999998,
                    "p99": 1416.0453149999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1017.3541329999999,
                    "min": 903.071067,
                    "p50": 979.4022789999999,
                    "p95": 1017.3541329999999,
                    "p99": 1017.3541329999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1795.8104979999998,
                    "min": 1627.1774699999999,
                    "p50": 1753.777703,
                    "p95": 1795.8104979999998,
                    "p99": 1795.8104979999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1972.3154399999999,
                    "min": 1771.809022,
                    "p50": 1928.203783,
                    "p95": 1972.3154399999999,
                    "p99": 1972.3154399999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 631.360461,
                    "min": 564.186432,
                    "p50": 617.444443,
                    "p95": 631.360461,
                    "p99": 631.360461,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2586.1207569999997,
                    "min": 2303.9104429999998,
                    "p50": 2531.054699,
                    "p95": 2586.1207569999997,
                    "p99": 2586.1207569999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1606.312373,
                    "min": 1487.141335,
                    "p50": 1584.35342,
                    "p95": 1606.312373,
                    "p99": 1606.312373,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 976.589492,
                    "min": 920.75991,
                    "p50": 960.442628,
                    "p95": 976.589492,
                    "p99": 976.589492,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1168.4958609999999,
                    "min": 1125.8430919999998,
                    "p50": 1143.535061,
                    "p95": 1168.4958609999999,
                    "p99": 1168.4958609999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 753.578952,
                    "min": 725.123705,
                    "p50": 740.916515,
                    "p95": 753.578952,
                    "p99": 753.578952,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 651.982764,
                    "min": 601.922957,
                    "p50": 639.7434989999999,
                    "p95": 651.982764,
                    "p99": 651.982764,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1051.982941,
                    "min": 1031.197472,
                    "p50": 1051.148799,
                    "p95": 1051.982941,
                    "p99": 1051.982941,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 342.125896,
                    "min": 334.484641,
                    "p50": 338.974833,
                    "p95": 342.125896,
                    "p99": 342.125896,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 444.709865,
                    "min": 434.45275799999996,
                    "p50": 439.039951,
                    "p95": 444.709865,
                    "p99": 444.709865,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 859.6042339999999,
                    "min": 830.567501,
                    "p50": 852.5047559999999,
                    "p95": 859.6042339999999,
                    "p99": 859.6042339999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 545.386881,
                    "min": 533.26971,
                    "p50": 537.798417,
                    "p95": 545.386881,
                    "p99": 545.386881,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2077.199146,
                    "min": 2021.8115409999998,
                    "p50": 2050.674684,
                    "p95": 2077.199146,
                    "p99": 2077.199146,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1262.007151,
                    "min": 1234.546586,
                    "p50": 1244.871082,
                    "p95": 1262.007151,
                    "p99": 1262.007151,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1844.56038,
                    "min": 1771.9614809999998,
                    "p50": 1808.376992,
                    "p95": 1844.56038,
                    "p99": 1844.56038,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1466.564087,
                    "min": 1426.1844119999998,
                    "p50": 1454.943613,
                    "p95": 1466.564087,
                    "p99": 1466.564087,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1398.264608,
                    "min": 1332.638471,
                    "p50": 1348.586122,
                    "p95": 1398.264608,
                    "p99": 1398.264608,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3113.276598,
                    "min": 3025.645019,
                    "p50": 3055.132548,
                    "p95": 3113.276598,
                    "p99": 3113.276598,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2207.0719409999997,
                    "min": 1835.5255969999998,
                    "p50": 2136.9802689999997,
                    "p95": 2207.0719409999997,
                    "p99": 2207.0719409999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1683.627231,
                    "min": 1363.864605,
                    "p50": 1549.012653,
                    "p95": 1683.627231,
                    "p99": 1683.627231,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1999.1788239999998,
                    "min": 1610.8809219999998,
                    "p50": 1842.547077,
                    "p95": 1999.1788239999998,
                    "p99": 1999.1788239999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3056.287137,
                    "min": 2470.42739,
                    "p50": 2818.566714,
                    "p95": 3056.287137,
                    "p99": 3056.287137,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2715.91162,
                    "min": 2169.788936,
                    "p50": 2496.897767,
                    "p95": 2715.91162,
                    "p99": 2715.91162,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1837.4820559999998,
                    "min": 1495.8691119999999,
                    "p50": 1706.8551029999999,
                    "p95": 1837.4820559999998,
                    "p99": 1837.4820559999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 494.736468,
                    "min": 384.99073,
                    "p50": 453.454774,
                    "p95": 494.736468,
                    "p99": 494.736468,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 630.710634,
                    "min": 525.244682,
                    "p50": 593.846549,
                    "p95": 630.710634,
                    "p99": 630.710634,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1549.3735399999998,
                    "min": 1247.7491109999999,
                    "p50": 1432.586946,
                    "p95": 1549.3735399999998,
                    "p99": 1549.3735399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 944.889814,
                    "min": 765.2334069999999,
                    "p50": 869.948185,
                    "p95": 944.889814,
                    "p99": 944.889814,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1406.082476,
                    "min": 1135.64259,
                    "p50": 1282.5960169999998,
                    "p95": 1406.082476,
                    "p99": 1406.082476,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 794.007609,
                    "min": 653.690753,
                    "p50": 733.007496,
                    "p95": 794.007609,
                    "p99": 794.007609,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2157.476819,
                    "min": 1731.574782,
                    "p50": 1978.4424669999999,
                    "p95": 2157.476819,
                    "p99": 2157.476819,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1256.6259619999998,
                    "min": 1007.559579,
                    "p50": 1156.568071,
                    "p95": 1256.6259619999998,
                    "p99": 1256.6259619999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1102.5641839999998,
                    "min": 872.9854859999999,
                    "p50": 1011.109656,
                    "p95": 1102.5641839999998,
                    "p99": 1102.5641839999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1505.6596499999998,
                    "min": 1196.124047,
                    "p50": 1309.0607659999998,
                    "p95": 1505.6596499999998,
                    "p99": 1505.6596499999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 617.5024559999999,
                    "min": 499.341238,
                    "p50": 519.267282,
                    "p95": 617.5024559999999,
                    "p99": 617.5024559999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1217.878493,
                    "min": 967.318776,
                    "p50": 1035.336963,
                    "p95": 1217.878493,
                    "p99": 1217.878493,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1067.554936,
                    "min": 835.0970289999999,
                    "p50": 914.708275,
                    "p95": 1067.554936,
                    "p99": 1067.554936,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 908.2027459999999,
                    "min": 724.9244679999999,
                    "p50": 797.93219,
                    "p95": 908.2027459999999,
                    "p99": 908.2027459999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2244.001523,
                    "min": 1775.694835,
                    "p50": 1941.432987,
                    "p95": 2244.001523,
                    "p99": 2244.001523,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1953.542949,
                    "min": 1549.5534539999999,
                    "p50": 1678.962544,
                    "p95": 1953.542949,
                    "p99": 1953.542949,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2976.9082949999997,
                    "min": 2374.801932,
                    "p50": 2573.814393,
                    "p95": 2976.9082949999997,
                    "p99": 2976.9082949999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4441.46819,
                    "min": 3484.073629,
                    "p50": 3832.524071,
                    "p95": 4441.46819,
                    "p99": 4441.46819,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1793.135155,
                    "min": 1436.7539339999998,
                    "p50": 1559.414415,
                    "p95": 1793.135155,
                    "p99": 1793.135155,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 769.31304,
                    "min": 612.467669,
                    "p50": 672.985673,
                    "p95": 769.31304,
                    "p99": 769.31304,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1643.7544719999999,
                    "min": 1303.2056579999999,
                    "p50": 1438.4864719999998,
                    "p95": 1643.7544719999999,
                    "p99": 1643.7544719999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 480.35585999999995,
                    "min": 378.197212,
                    "p50": 423.283866,
                    "p95": 480.35585999999995,
                    "p99": 480.35585999999995,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2089.1977349999997,
                    "min": 1646.9799739999999,
                    "p50": 1814.2371919999998,
                    "p95": 2089.1977349999997,
                    "p99": 2089.1977349999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2603.1419029999997,
                    "min": 2059.205099,
                    "p50": 2277.62792,
                    "p95": 2603.1419029999997,
                    "p99": 2603.1419029999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1359.605523,
                    "min": 1073.137826,
                    "p50": 1177.925878,
                    "p95": 1359.605523,
                    "p99": 1359.605523,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2371.979023,
                    "min": 2268.338191,
                    "p50": 2329.859265,
                    "p95": 2371.979023,
                    "p99": 2371.979023,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 573.022019,
                    "min": 530.275862,
                    "p50": 551.490676,
                    "p95": 573.022019,
                    "p99": 573.022019,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 391.22464299999996,
                    "min": 376.39012399999996,
                    "p50": 384.057101,
                    "p95": 391.22464299999996,
                    "p99": 391.22464299999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 740.398907,
                    "min": 695.579451,
                    "p50": 721.516404,
                    "p95": 740.398907,
                    "p99": 740.398907,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.523516,
                    "min": 265.694275,
                    "p50": 270.343393,
                    "p95": 307.523516,
                    "p99": 307.523516,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1209.468154,
                    "min": 1151.98066,
                    "p50": 1170.130193,
                    "p95": 1209.468154,
                    "p99": 1209.468154,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 917.9789109999999,
                    "min": 861.61822,
                    "p50": 892.1919859999999,
                    "p95": 917.9789109999999,
                    "p99": 917.9789109999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 856.683556,
                    "min": 824.46934,
                    "p50": 843.084171,
                    "p95": 856.683556,
                    "p99": 856.683556,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 217.83872599999998,
                    "min": 176.39862499999998,
                    "p50": 210.897157,
                    "p95": 217.83872599999998,
                    "p99": 217.83872599999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 336.072019,
                    "min": 293.682813,
                    "p50": 324.59076699999997,
                    "p95": 336.072019,
                    "p99": 336.072019,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1070.165493,
                    "min": 1029.229924,
                    "p50": 1043.2747809999998,
                    "p95": 1070.165493,
                    "p99": 1070.165493,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 507.694753,
                    "min": 481.86041,
                    "p50": 497.206547,
                    "p95": 507.694753,
                    "p99": 507.694753,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 682.351172,
                    "min": 655.27914,
                    "p50": 673.0069609999999,
                    "p95": 682.351172,
                    "p99": 682.351172,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 449.48121699999996,
                    "min": 424.11515299999996,
                    "p50": 438.925951,
                    "p95": 449.48121699999996,
                    "p99": 449.48121699999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 806.603271,
                    "min": 767.228974,
                    "p50": 784.235508,
                    "p95": 806.603271,
                    "p99": 806.603271,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1799.9885029999998,
                    "min": 1733.256708,
                    "p50": 1753.456976,
                    "p95": 1799.9885029999998,
                    "p99": 1799.9885029999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3001.0260249999997,
                    "min": 2873.975973,
                    "p50": 2923.945233,
                    "p95": 3001.0260249999997,
                    "p99": 3001.0260249999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 632.067315,
                    "min": 599.645075,
                    "p50": 611.3192869999999,
                    "p95": 632.067315,
                    "p99": 632.067315,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 465.83892399999996,
                    "min": 446.895496,
                    "p50": 459.79682499999996,
                    "p95": 465.83892399999996,
                    "p99": 465.83892399999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1277.808129,
                    "min": 1208.603196,
                    "p50": 1245.230547,
                    "p95": 1277.808129,
                    "p99": 1277.808129,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1867.36538,
                    "min": 1801.059793,
                    "p50": 1832.191047,
                    "p95": 1867.36538,
                    "p99": 1867.36538,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3090.5465289999997,
                    "min": 2989.4185319999997,
                    "p50": 3066.567972,
                    "p95": 3090.5465289999997,
                    "p99": 3090.5465289999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2476.3119859999997,
                    "min": 2404.8498259999997,
                    "p50": 2455.41898,
                    "p95": 2476.3119859999997,
                    "p99": 2476.3119859999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 528.393246,
                    "min": 502.371626,
                    "p50": 522.429892,
                    "p95": 528.393246,
                    "p99": 528.393246,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1143.226195,
                    "min": 1059.323252,
                    "p50": 1095.556491,
                    "p95": 1143.226195,
                    "p99": 1143.226195,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 404.161371,
                    "min": 385.122822,
                    "p50": 398.604381,
                    "p95": 404.161371,
                    "p99": 404.161371,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1002.799042,
                    "min": 839.7951959999999,
                    "p50": 884.179905,
                    "p95": 1002.799042,
                    "p99": 1002.799042,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 951.555885,
                    "min": 916.247947,
                    "p50": 949.6483499999999,
                    "p95": 951.555885,
                    "p99": 951.555885,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.41443,
                    "min": 264.71831399999996,
                    "p50": 279.372077,
                    "p95": 281.41443,
                    "p99": 281.41443,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 711.982617,
                    "min": 665.192594,
                    "p50": 692.590472,
                    "p95": 711.982617,
                    "p99": 711.982617,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 766.75074,
                    "min": 708.333083,
                    "p50": 747.5621709999999,
                    "p95": 766.75074,
                    "p99": 766.75074,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.637236,
                    "min": 315.100447,
                    "p50": 332.77782199999996,
                    "p95": 344.637236,
                    "p99": 344.637236,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.79057899999998,
                    "min": 183.87908199999998,
                    "p50": 216.533009,
                    "p95": 222.79057899999998,
                    "p99": 222.79057899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 839.294811,
                    "min": 802.1528959999999,
                    "p50": 815.9847139999999,
                    "p95": 839.294811,
                    "p99": 839.294811,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 648.334018,
                    "min": 607.904335,
                    "p50": 632.955784,
                    "p95": 648.334018,
                    "p99": 648.334018,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 614.315472,
                    "min": 548.317126,
                    "p50": 580.183625,
                    "p95": 614.315472,
                    "p99": 614.315472,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 978.425852,
                    "min": 930.9735609999999,
                    "p50": 961.502486,
                    "p95": 978.425852,
                    "p99": 978.425852,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1499.98355,
                    "min": 1436.572078,
                    "p50": 1489.671052,
                    "p95": 1499.98355,
                    "p99": 1499.98355,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1304.484436,
                    "min": 1219.037102,
                    "p50": 1288.5600849999998,
                    "p95": 1304.484436,
                    "p99": 1304.484436,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 358.941371,
                    "min": 306.32931199999996,
                    "p50": 346.40009399999997,
                    "p95": 358.941371,
                    "p99": 358.941371,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2143.771713,
                    "min": 2055.174083,
                    "p50": 2127.555583,
                    "p95": 2143.771713,
                    "p99": 2143.771713,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 885.461022,
                    "min": 813.9614439999999,
                    "p50": 867.8281179999999,
                    "p95": 885.461022,
                    "p99": 885.461022,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 569.953726,
                    "min": 528.862313,
                    "p50": 559.797088,
                    "p95": 569.953726,
                    "p99": 569.953726,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1200.163646,
                    "min": 1149.825345,
                    "p50": 1180.9664659999999,
                    "p95": 1200.163646,
                    "p99": 1200.163646,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 677.8031169999999,
                    "min": 656.1668119999999,
                    "p50": 661.2466529999999,
                    "p95": 677.8031169999999,
                    "p99": 677.8031169999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1882.848462,
                    "min": 1816.5865139999999,
                    "p50": 1851.986796,
                    "p95": 1882.848462,
                    "p99": 1882.848462,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 459.02379299999996,
                    "min": 422.216752,
                    "p50": 451.344514,
                    "p95": 459.02379299999996,
                    "p99": 459.02379299999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1616.071201,
                    "min": 1569.8999589999999,
                    "p50": 1594.737353,
                    "p95": 1616.071201,
                    "p99": 1616.071201,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 773.376308,
                    "min": 721.9131239999999,
                    "p50": 760.723482,
                    "p95": 773.376308,
                    "p99": 773.376308,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1398.9537659999999,
                    "min": 1373.685418,
                    "p50": 1390.2052469999999,
                    "p95": 1398.9537659999999,
                    "p99": 1398.9537659999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1105.824672,
                    "min": 1054.4409819999998,
                    "p50": 1079.080949,
                    "p95": 1105.824672,
                    "p99": 1105.824672,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 746.3969109999999,
                    "min": 602.405475,
                    "p50": 647.857276,
                    "p95": 746.3969109999999,
                    "p99": 746.3969109999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2171.00623,
                    "min": 1725.5676999999998,
                    "p50": 1844.10728,
                    "p95": 2171.00623,
                    "p99": 2171.00623,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1321.700682,
                    "min": 1059.010657,
                    "p50": 1125.60061,
                    "p95": 1321.700682,
                    "p99": 1321.700682,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1916.695332,
                    "min": 1511.9705689999998,
                    "p50": 1640.424513,
                    "p95": 1916.695332,
                    "p99": 1916.695332,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2898.507283,
                    "min": 2292.692748,
                    "p50": 2489.772631,
                    "p95": 2898.507283,
                    "p99": 2898.507283,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1609.6777949999998,
                    "min": 1284.461572,
                    "p50": 1398.5576059999999,
                    "p95": 1609.6777949999998,
                    "p99": 1609.6777949999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2033.190155,
                    "min": 1623.223712,
                    "p50": 1777.701632,
                    "p95": 2033.190155,
                    "p99": 2033.190155,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4327.4518339999995,
                    "min": 3415.209476,
                    "p50": 3750.500462,
                    "p95": 4327.4518339999995,
                    "p99": 4327.4518339999995,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1028.923534,
                    "min": 817.14301,
                    "p50": 903.44957,
                    "p95": 1028.923534,
                    "p99": 1028.923534,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 461.21356199999997,
                    "min": 349.068296,
                    "p50": 404.415275,
                    "p95": 461.21356199999997,
                    "p99": 461.21356199999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1457.401518,
                    "min": 1169.631151,
                    "p50": 1266.227116,
                    "p95": 1457.401518,
                    "p99": 1457.401518,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 887.826338,
                    "min": 719.782413,
                    "p50": 762.090187,
                    "p95": 887.826338,
                    "p99": 887.826338,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 606.311478,
                    "min": 483.365184,
                    "p50": 513.714218,
                    "p95": 606.311478,
                    "p99": 606.311478,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1165.488284,
                    "min": 946.326118,
                    "p50": 1002.152287,
                    "p95": 1165.488284,
                    "p99": 1165.488284,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2521.253989,
                    "min": 1996.7136779999998,
                    "p50": 2184.9866469999997,
                    "p95": 2521.253989,
                    "p99": 2521.253989,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1739.2804079999999,
                    "min": 1373.780164,
                    "p50": 1511.702947,
                    "p95": 1739.2804079999999,
                    "p99": 1739.2804079999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1396.43056,
                    "min": 1368.1209239999998,
                    "p50": 1383.9411659999998,
                    "p95": 1396.43056,
                    "p99": 1396.43056,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1632.636077,
                    "min": 1606.242004,
                    "p50": 1624.6844839999999,
                    "p95": 1632.636077,
                    "p99": 1632.636077,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1758.0364319999999,
                    "min": 1706.678302,
                    "p50": 1726.559996,
                    "p95": 1758.0364319999999,
                    "p99": 1758.0364319999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1073.145033,
                    "min": 1044.269564,
                    "p50": 1057.896455,
                    "p95": 1073.145033,
                    "p99": 1073.145033,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 729.7929029999999,
                    "min": 686.267163,
                    "p50": 720.8042049999999,
                    "p95": 729.7929029999999,
                    "p99": 729.7929029999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 961.0474549999999,
                    "min": 931.283338,
                    "p50": 942.3514869999999,
                    "p95": 961.0474549999999,
                    "p99": 961.0474549999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 500.67587199999997,
                    "min": 475.97040599999997,
                    "p50": 492.68350899999996,
                    "p95": 500.67587199999997,
                    "p99": 500.67587199999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 620.147649,
                    "min": 592.8350469999999,
                    "p50": 611.072197,
                    "p95": 620.147649,
                    "p99": 620.147649,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1196.179561,
                    "min": 1123.145088,
                    "p50": 1166.125331,
                    "p95": 1196.179561,
                    "p99": 1196.179561,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 845.1034149999999,
                    "min": 819.3635869999999,
                    "p50": 837.7620149999999,
                    "p95": 845.1034149999999,
                    "p99": 845.1034149999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2344.307972,
                    "min": 2259.608949,
                    "p50": 2304.783516,
                    "p95": 2344.307972,
                    "p99": 2344.307972,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1312.247046,
                    "min": 1273.322315,
                    "p50": 1279.641502,
                    "p95": 1312.247046,
                    "p99": 1312.247046,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2046.5727949999998,
                    "min": 1995.794982,
                    "p50": 2026.5266299999998,
                    "p95": 2046.5727949999998,
                    "p99": 2046.5727949999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 383.51271199999996,
                    "min": 367.587635,
                    "p50": 379.048615,
                    "p95": 383.51271199999996,
                    "p99": 383.51271199999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1545.841567,
                    "min": 1479.537844,
                    "p50": 1512.8261009999999,
                    "p95": 1545.841567,
                    "p99": 1545.841567,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1003.30522,
                    "min": 946.416356,
                    "p50": 979.6305289999999,
                    "p95": 1003.30522,
                    "p99": 1003.30522,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 510.35184399999997,
                    "min": 495.140494,
                    "p50": 504.41849299999996,
                    "p95": 510.35184399999997,
                    "p99": 510.35184399999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 366.84281999999996,
                    "min": 315.57030299999997,
                    "p50": 350.83300399999996,
                    "p95": 366.84281999999996,
                    "p99": 366.84281999999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 276.974081,
                    "min": 238.404497,
                    "p50": 272.467146,
                    "p95": 276.974081,
                    "p99": 276.974081,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1077.808889,
                    "min": 1027.949228,
                    "p50": 1055.584383,
                    "p95": 1077.808889,
                    "p99": 1077.808889,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1238.510446,
                    "min": 1166.001792,
                    "p50": 1205.171202,
                    "p95": 1238.510446,
                    "p99": 1238.510446,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 752.153062,
                    "min": 699.6471389999999,
                    "p50": 741.945925,
                    "p95": 752.153062,
                    "p99": 752.153062,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1632.8888709999999,
                    "min": 1561.08916,
                    "p50": 1594.096376,
                    "p95": 1632.8888709999999,
                    "p99": 1632.8888709999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 834.910134,
                    "min": 807.397372,
                    "p50": 817.8989889999999,
                    "p95": 834.910134,
                    "p99": 834.910134,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 597.165759,
                    "min": 578.901134,
                    "p50": 582.29153,
                    "p95": 597.165759,
                    "p99": 597.165759,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1437.740948,
                    "min": 1383.118452,
                    "p50": 1406.717973,
                    "p95": 1437.740948,
                    "p99": 1437.740948,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1183.716238,
                    "min": 1108.92897,
                    "p50": 1133.400155,
                    "p95": 1183.716238,
                    "p99": 1183.716238,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 440.283347,
                    "min": 393.81762399999997,
                    "p50": 425.33028199999995,
                    "p95": 440.283347,
                    "p99": 440.283347,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 683.455064,
                    "min": 653.189844,
                    "p50": 656.229504,
                    "p95": 683.455064,
                    "p99": 683.455064,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2436.0927739999997,
                    "min": 2339.390218,
                    "p50": 2377.564078,
                    "p95": 2436.0927739999997,
                    "p99": 2436.0927739999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 915.851897,
                    "min": 860.7759639999999,
                    "p50": 898.181165,
                    "p95": 915.851897,
                    "p99": 915.851897,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3261.524998,
                    "min": 3108.387217,
                    "p50": 3151.525922,
                    "p95": 3261.524998,
                    "p99": 3261.524998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1052.863773,
                    "min": 1009.5357779999999,
                    "p50": 1036.2561269999999,
                    "p95": 1052.863773,
                    "p99": 1052.863773,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 551.232985,
                    "min": 537.835004,
                    "p50": 544.2845669999999,
                    "p95": 551.232985,
                    "p99": 551.232985,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2086.569938,
                    "min": 2044.0798399999999,
                    "p50": 2078.501506,
                    "p95": 2086.569938,
                    "p99": 2086.569938,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1479.737839,
                    "min": 1444.252646,
                    "p50": 1459.648899,
                    "p95": 1479.737839,
                    "p99": 1479.737839,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 654.453003,
                    "min": 639.229163,
                    "p50": 648.901256,
                    "p95": 654.453003,
                    "p99": 654.453003,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1573.255496,
                    "min": 1542.6576539999999,
                    "p50": 1562.995764,
                    "p95": 1573.255496,
                    "p99": 1573.255496,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 754.66442,
                    "min": 717.6131419999999,
                    "p50": 741.6429079999999,
                    "p95": 754.66442,
                    "p99": 754.66442,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1260.653026,
                    "min": 1227.785324,
                    "p50": 1257.2249749999999,
                    "p95": 1260.653026,
                    "p99": 1260.653026,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 969.5181269999999,
                    "min": 914.707098,
                    "p50": 941.876618,
                    "p95": 969.5181269999999,
                    "p99": 969.5181269999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1378.026783,
                    "min": 1326.622008,
                    "p50": 1352.877247,
                    "p95": 1378.026783,
                    "p99": 1378.026783,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1836.0261449999998,
                    "min": 1790.088871,
                    "p50": 1800.403777,
                    "p95": 1836.0261449999998,
                    "p99": 1836.0261449999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 863.227369,
                    "min": 831.366241,
                    "p50": 845.709217,
                    "p95": 863.227369,
                    "p99": 863.227369,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1161.649843,
                    "min": 1143.214059,
                    "p50": 1155.09113,
                    "p95": 1161.649843,
                    "p99": 1161.649843,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 352.69501199999996,
                    "min": 332.78860199999997,
                    "p50": 339.246692,
                    "p95": 352.69501199999996,
                    "p99": 352.69501199999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 447.20696,
                    "min": 431.713985,
                    "p50": 442.963847,
                    "p95": 447.20696,
                    "p99": 447.20696,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1416.770479,
                    "min": 1371.414456,
                    "p50": 1393.4195909999999,
                    "p95": 1416.770479,
                    "p99": 1416.770479,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 598.2969499999999,
                    "min": 566.178367,
                    "p50": 574.365108,
                    "p95": 598.2969499999999,
                    "p99": 598.2969499999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1717.6654079999998,
                    "min": 1629.0511259999998,
                    "p50": 1678.5287409999999,
                    "p95": 1717.6654079999998,
                    "p99": 1717.6654079999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1962.5795469999998,
                    "min": 1891.865319,
                    "p50": 1915.168878,
                    "p95": 1962.5795469999998,
                    "p99": 1962.5795469999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 717.916043,
                    "min": 697.762129,
                    "p50": 707.591332,
                    "p95": 717.916043,
                    "p99": 717.916043,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1256.847391,
                    "min": 1227.522918,
                    "p50": 1253.0829139999998,
                    "p95": 1256.847391,
                    "p99": 1256.847391,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1132.8279089999999,
                    "min": 1101.693456,
                    "p50": 1119.105372,
                    "p95": 1132.8279089999999,
                    "p99": 1132.8279089999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 855.886995,
                    "min": 832.108989,
                    "p50": 846.5957539999999,
                    "p95": 855.886995,
                    "p99": 855.886995,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 448.958213,
                    "min": 432.75091299999997,
                    "p50": 440.56959,
                    "p95": 448.958213,
                    "p99": 448.958213,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2426.106737,
                    "min": 2363.6659259999997,
                    "p50": 2393.800694,
                    "p95": 2426.106737,
                    "p99": 2426.106737,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1544.4513339999999,
                    "min": 1499.3057,
                    "p50": 1517.251679,
                    "p95": 1544.4513339999999,
                    "p99": 1544.4513339999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1811.5974139999998,
                    "min": 1759.062532,
                    "p50": 1787.766999,
                    "p95": 1811.5974139999998,
                    "p99": 1811.5974139999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2781.598137,
                    "min": 2690.2938099999997,
                    "p50": 2724.669006,
                    "p95": 2781.598137,
                    "p99": 2781.598137,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2095.772089,
                    "min": 2024.737185,
                    "p50": 2054.6459609999997,
                    "p95": 2095.772089,
                    "p99": 2095.772089,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1007.218344,
                    "min": 962.9175429999999,
                    "p50": 976.3100629999999,
                    "p95": 1007.218344,
                    "p99": 1007.218344,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1842.90872,
                    "min": 1781.355991,
                    "p50": 1814.93482,
                    "p95": 1842.90872,
                    "p99": 1842.90872,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1069.4747009999999,
                    "min": 1041.184298,
                    "p50": 1058.621738,
                    "p95": 1069.4747009999999,
                    "p99": 1069.4747009999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1483.427643,
                    "min": 1452.294482,
                    "p50": 1465.2622689999998,
                    "p95": 1483.427643,
                    "p99": 1483.427643,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1583.67534,
                    "min": 1521.674029,
                    "p50": 1569.7124259999998,
                    "p95": 1583.67534,
                    "p99": 1583.67534,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2110.990982,
                    "min": 2056.5561749999997,
                    "p50": 2076.476596,
                    "p95": 2110.990982,
                    "p99": 2110.990982,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1189.1206399999999,
                    "min": 1142.328335,
                    "p50": 1158.087741,
                    "p95": 1189.1206399999999,
                    "p99": 1189.1206399999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 658.650863,
                    "min": 616.5790119999999,
                    "p50": 650.470523,
                    "p95": 658.650863,
                    "p99": 658.650863,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 874.58832,
                    "min": 839.901631,
                    "p50": 864.3611659999999,
                    "p95": 874.58832,
                    "p99": 874.58832,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1391.965723,
                    "min": 1351.006762,
                    "p50": 1364.967427,
                    "p95": 1391.965723,
                    "p99": 1391.965723,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1280.494671,
                    "min": 1254.538926,
                    "p50": 1264.08566,
                    "p95": 1280.494671,
                    "p99": 1280.494671,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3147.604135,
                    "min": 3064.670263,
                    "p50": 3103.5785619999997,
                    "p95": 3147.604135,
                    "p99": 3147.604135,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 764.6732609999999,
                    "min": 721.388755,
                    "p50": 753.374208,
                    "p95": 764.6732609999999,
                    "p99": 764.6732609999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 347.059349,
                    "min": 341.457971,
                    "p50": 343.563937,
                    "p95": 347.059349,
                    "p99": 347.059349,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 554.204524,
                    "min": 548.210685,
                    "p50": 552.722119,
                    "p95": 554.204524,
                    "p99": 554.204524,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 970.558603,
                    "min": 950.610499,
                    "p50": 963.468043,
                    "p95": 970.558603,
                    "p99": 970.558603,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 454.05008,
                    "min": 441.33725599999997,
                    "p50": 448.91639599999996,
                    "p95": 454.05008,
                    "p99": 454.05008,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1599.3395209999999,
                    "min": 1533.699848,
                    "p50": 1561.1372509999999,
                    "p95": 1599.3395209999999,
                    "p99": 1599.3395209999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 759.417655,
                    "min": 740.502622,
                    "p50": 752.96623,
                    "p95": 759.417655,
                    "p99": 759.417655,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 354.926826,
                    "min": 336.85423499999996,
                    "p50": 346.497834,
                    "p95": 354.926826,
                    "p99": 354.926826,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 458.31702199999995,
                    "min": 427.762119,
                    "p50": 443.45854599999996,
                    "p95": 458.31702199999995,
                    "p99": 458.31702199999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1075.0938529999999,
                    "min": 1010.9325289999999,
                    "p50": 1052.38609,
                    "p95": 1075.0938529999999,
                    "p99": 1075.0938529999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 658.489364,
                    "min": 619.223288,
                    "p50": 645.708095,
                    "p95": 658.489364,
                    "p99": 658.489364,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2143.571328,
                    "min": 2050.30831,
                    "p50": 2077.955038,
                    "p95": 2143.571328,
                    "p99": 2143.571328,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 567.464832,
                    "min": 520.846247,
                    "p50": 548.836003,
                    "p95": 567.464832,
                    "p99": 567.464832,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1190.005475,
                    "min": 1117.8196699999999,
                    "p50": 1170.15525,
                    "p95": 1190.005475,
                    "p99": 1190.005475,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 874.7867709999999,
                    "min": 849.863614,
                    "p50": 854.482985,
                    "p95": 874.7867709999999,
                    "p99": 874.7867709999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1289.2544759999998,
                    "min": 1243.035766,
                    "p50": 1274.43987,
                    "p95": 1289.2544759999998,
                    "p99": 1289.2544759999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1406.8910819999999,
                    "min": 1347.2620829999998,
                    "p50": 1373.390668,
                    "p95": 1406.8910819999999,
                    "p99": 1406.8910819999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1869.7723099999998,
                    "min": 1790.900275,
                    "p50": 1834.191402,
                    "p95": 1869.7723099999998,
                    "p99": 1869.7723099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1495.8580849999998,
                    "min": 1439.703256,
                    "p50": 1476.1700309999999,
                    "p95": 1495.8580849999998,
                    "p99": 1495.8580849999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 976.835106,
                    "min": 928.038092,
                    "p50": 952.251808,
                    "p95": 976.835106,
                    "p99": 976.835106,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 551.394049,
                    "min": 501.53150899999997,
                    "p50": 534.6418249999999,
                    "p95": 551.394049,
                    "p99": 551.394049,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1950.263909,
                    "min": 1887.2435309999998,
                    "p50": 1912.5791789999998,
                    "p95": 1950.263909,
                    "p99": 1950.263909,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1441.18691,
                    "min": 1389.289621,
                    "p50": 1414.4448109999998,
                    "p95": 1441.18691,
                    "p99": 1441.18691,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1186.152724,
                    "min": 1144.5988069999999,
                    "p50": 1163.824323,
                    "p95": 1186.152724,
                    "p99": 1186.152724,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 804.8648539999999,
                    "min": 768.3600859999999,
                    "p50": 787.568844,
                    "p95": 804.8648539999999,
                    "p99": 804.8648539999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 421.54100999999997,
                    "min": 395.44379599999996,
                    "p50": 409.85139799999996,
                    "p95": 421.54100999999997,
                    "p99": 421.54100999999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 676.9423909999999,
                    "min": 623.00663,
                    "p50": 665.6678469999999,
                    "p95": 676.9423909999999,
                    "p99": 676.9423909999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1816.534211,
                    "min": 1735.685892,
                    "p50": 1799.128076,
                    "p95": 1816.534211,
                    "p99": 1816.534211,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2251.4920779999998,
                    "min": 2165.9919179999997,
                    "p50": 2241.062515,
                    "p95": 2251.4920779999998,
                    "p99": 2251.4920779999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 949.831506,
                    "min": 882.0022319999999,
                    "p50": 913.084932,
                    "p95": 949.831506,
                    "p99": 949.831506,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1303.939923,
                    "min": 1244.498325,
                    "p50": 1288.6334809999998,
                    "p95": 1303.939923,
                    "p99": 1303.939923,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2574.55327,
                    "min": 2496.939292,
                    "p50": 2538.2204159999997,
                    "p95": 2574.55327,
                    "p99": 2574.55327,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1556.4980719999999,
                    "min": 1504.0105429999999,
                    "p50": 1529.1463039999999,
                    "p95": 1556.4980719999999,
                    "p99": 1556.4980719999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1057.012014,
                    "min": 1010.844166,
                    "p50": 1052.22587,
                    "p95": 1057.012014,
                    "p99": 1057.012014,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1692.520431,
                    "min": 1638.996027,
                    "p50": 1662.9190449999999,
                    "p95": 1692.520431,
                    "p99": 1692.520431,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2621.853389,
                    "min": 2425.39544,
                    "p50": 2505.053411,
                    "p95": 2621.853389,
                    "p99": 2621.853389,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1401.042195,
                    "min": 1322.3361599999998,
                    "p50": 1358.529096,
                    "p95": 1401.042195,
                    "p99": 1401.042195,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1742.809478,
                    "min": 1633.7884569999999,
                    "p50": 1687.873815,
                    "p95": 1742.809478,
                    "p99": 1742.809478,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1935.203941,
                    "min": 1799.862786,
                    "p50": 1847.80233,
                    "p95": 1935.203941,
                    "p99": 1935.203941,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2439.12058,
                    "min": 2280.1600169999997,
                    "p50": 2332.906093,
                    "p95": 2439.12058,
                    "p99": 2439.12058,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2255.7116699999997,
                    "min": 2119.679133,
                    "p50": 2158.8485689999998,
                    "p95": 2255.7116699999997,
                    "p99": 2255.7116699999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 718.151937,
                    "min": 675.509872,
                    "p50": 694.028161,
                    "p95": 718.151937,
                    "p99": 718.151937,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1579.586721,
                    "min": 1450.849573,
                    "p50": 1516.7553289999998,
                    "p95": 1579.586721,
                    "p99": 1579.586721,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2093.66797,
                    "min": 1967.787173,
                    "p50": 1990.4467929999998,
                    "p95": 2093.66797,
                    "p99": 2093.66797,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3031.4582379999997,
                    "min": 2841.7906789999997,
                    "p50": 2897.561641,
                    "p95": 3031.4582379999997,
                    "p99": 3031.4582379999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 888.1427339999999,
                    "min": 836.528062,
                    "p50": 859.373431,
                    "p95": 888.1427339999999,
                    "p99": 888.1427339999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1231.390666,
                    "min": 1164.683869,
                    "p50": 1180.760747,
                    "p95": 1231.390666,
                    "p99": 1231.390666,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 535.183714,
                    "min": 520.405035,
                    "p50": 531.9429759999999,
                    "p95": 535.183714,
                    "p99": 535.183714,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1068.010153,
                    "min": 1000.1861779999999,
                    "p50": 1022.4844439999999,
                    "p95": 1068.010153,
                    "p99": 1068.010153,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3494.430485,
                    "min": 3246.028414,
                    "p50": 3306.9750139999996,
                    "p95": 3494.430485,
                    "p99": 3494.430485,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3490.8001099999997,
                    "min": 3270.084864,
                    "p50": 3354.086253,
                    "p95": 3490.8001099999997,
                    "p99": 3490.8001099999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2444.146382,
                    "min": 2303.073589,
                    "p50": 2348.123691,
                    "p95": 2444.146382,
                    "p99": 2444.146382,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2086.490547,
                    "min": 1977.627495,
                    "p50": 2018.282689,
                    "p95": 2086.490547,
                    "p99": 2086.490547,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1584.069346,
                    "min": 1480.794968,
                    "p50": 1509.679033,
                    "p95": 1584.069346,
                    "p99": 1584.069346,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1413.352557,
                    "min": 1325.499818,
                    "p50": 1357.909966,
                    "p95": 1413.352557,
                    "p99": 1413.352557,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1072.1506279999999,
                    "min": 1003.855566,
                    "p50": 1028.6384759999999,
                    "p95": 1072.1506279999999,
                    "p99": 1072.1506279999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2272.499219,
                    "min": 2113.161332,
                    "p50": 2177.559388,
                    "p95": 2272.499219,
                    "p99": 2272.499219,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 724.349382,
                    "min": 672.966652,
                    "p50": 698.917345,
                    "p95": 724.349382,
                    "p99": 724.349382,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1916.831508,
                    "min": 1798.348759,
                    "p50": 1849.4166619999999,
                    "p95": 1916.831508,
                    "p99": 1916.831508,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 901.1069269999999,
                    "min": 831.534678,
                    "p50": 856.831428,
                    "p95": 901.1069269999999,
                    "p99": 901.1069269999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3054.247141,
                    "min": 2870.896312,
                    "p50": 2924.51728,
                    "p95": 3054.247141,
                    "p99": 3054.247141,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 537.690971,
                    "min": 518.0524449999999,
                    "p50": 534.526653,
                    "p95": 537.690971,
                    "p99": 537.690971,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1225.804099,
                    "min": 1154.622807,
                    "p50": 1184.855985,
                    "p95": 1225.804099,
                    "p99": 1225.804099,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2589.0443969999997,
                    "min": 2458.835278,
                    "p50": 2516.1344919999997,
                    "p95": 2589.0443969999997,
                    "p99": 2589.0443969999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1775.45903,
                    "min": 1653.3244579999998,
                    "p50": 1683.289012,
                    "p95": 1775.45903,
                    "p99": 1775.45903,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1936.591493,
                    "min": 1811.526785,
                    "p50": 1863.5924909999999,
                    "p95": 1936.591493,
                    "p99": 1936.591493,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1073.468981,
                    "min": 1004.4380689999999,
                    "p50": 1023.613203,
                    "p95": 1073.468981,
                    "p99": 1073.468981,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 900.7636759999999,
                    "min": 847.1104459999999,
                    "p50": 873.59597,
                    "p95": 900.7636759999999,
                    "p99": 900.7636759999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1771.4775379999999,
                    "min": 1656.8569949999999,
                    "p50": 1701.8665349999999,
                    "p95": 1771.4775379999999,
                    "p99": 1771.4775379999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3514.0255629999997,
                    "min": 3277.986356,
                    "p50": 3368.086033,
                    "p95": 3514.0255629999997,
                    "p99": 3514.0255629999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 736.545156,
                    "min": 680.32364,
                    "p50": 701.5860359999999,
                    "p95": 736.545156,
                    "p99": 736.545156,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1265.4726859999998,
                    "min": 1167.852013,
                    "p50": 1206.71275,
                    "p95": 1265.4726859999998,
                    "p99": 1265.4726859999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 558.931415,
                    "min": 522.2599799999999,
                    "p50": 532.707351,
                    "p95": 558.931415,
                    "p99": 558.931415,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2637.200669,
                    "min": 2452.724859,
                    "p50": 2533.8288159999997,
                    "p95": 2637.200669,
                    "p99": 2637.200669,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2471.419262,
                    "min": 2276.383714,
                    "p50": 2366.162245,
                    "p95": 2471.419262,
                    "p99": 2471.419262,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2117.0023779999997,
                    "min": 1969.7352019999998,
                    "p50": 2033.4273699999999,
                    "p95": 2117.0023779999997,
                    "p99": 2117.0023779999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2255.7823479999997,
                    "min": 2138.907063,
                    "p50": 2173.875244,
                    "p95": 2255.7823479999997,
                    "p99": 2255.7823479999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1597.286834,
                    "min": 1496.8838819999999,
                    "p50": 1528.861254,
                    "p95": 1597.286834,
                    "p99": 1597.286834,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3086.072205,
                    "min": 2879.291112,
                    "p50": 2940.409969,
                    "p95": 3086.072205,
                    "p99": 3086.072205,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1427.109449,
                    "min": 1333.293829,
                    "p50": 1368.7377299999998,
                    "p95": 1427.109449,
                    "p99": 1427.109449,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 828.0748169999999,
                    "min": 798.588501,
                    "p50": 814.4750449999999,
                    "p95": 828.0748169999999,
                    "p99": 828.0748169999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.81638899999996,
                    "min": 443.65635,
                    "p50": 458.039715,
                    "p95": 461.81638899999996,
                    "p99": 461.81638899999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 941.5352879999999,
                    "min": 908.6234059999999,
                    "p50": 930.806081,
                    "p95": 941.5352879999999,
                    "p99": 941.5352879999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1095.348545,
                    "min": 1045.878004,
                    "p50": 1084.9691559999999,
                    "p95": 1095.348545,
                    "p99": 1095.348545,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 219.621869,
                    "min": 202.55530299999998,
                    "p50": 215.596793,
                    "p95": 219.621869,
                    "p99": 219.621869,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 764.3048309999999,
                    "min": 729.845393,
                    "p50": 750.9015059999999,
                    "p95": 764.3048309999999,
                    "p99": 764.3048309999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 402.346885,
                    "min": 377.538303,
                    "p50": 393.047481,
                    "p95": 402.346885,
                    "p99": 402.346885,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 279.384024,
                    "min": 265.767811,
                    "p50": 275.777275,
                    "p95": 279.384024,
                    "p99": 279.384024,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1850.1048429999998,
                    "min": 1789.7288159999998,
                    "p50": 1820.194679,
                    "p95": 1850.1048429999998,
                    "p99": 1850.1048429999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 581.102816,
                    "min": 541.097904,
                    "p50": 567.1795979999999,
                    "p95": 581.102816,
                    "p99": 581.102816,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 710.874293,
                    "min": 652.260716,
                    "p50": 687.967059,
                    "p95": 710.874293,
                    "p99": 710.874293,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 873.34375,
                    "min": 846.440265,
                    "p50": 869.054076,
                    "p95": 873.34375,
                    "p99": 873.34375,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.20671699999997,
                    "min": 305.851941,
                    "p50": 338.35421099999996,
                    "p95": 346.20671699999997,
                    "p99": 346.20671699999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3055.344509,
                    "min": 2948.4694839999997,
                    "p50": 3016.569888,
                    "p95": 3055.344509,
                    "p99": 3055.344509,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1255.338192,
                    "min": 1204.4162489999999,
                    "p50": 1233.424696,
                    "p95": 1255.338192,
                    "p99": 1255.338192,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 643.159646,
                    "min": 612.687688,
                    "p50": 627.5068729999999,
                    "p95": 643.159646,
                    "p99": 643.159646,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 520.010447,
                    "min": 486.999975,
                    "p50": 513.44337,
                    "p95": 520.010447,
                    "p99": 520.010447,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2455.147128,
                    "min": 2358.4416889999998,
                    "p50": 2404.410303,
                    "p95": 2455.147128,
                    "p99": 2455.147128,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2731.17375,
                    "min": 2691.6519559999997,
                    "p50": 2693.673014,
                    "p95": 2731.17375,
                    "p99": 2731.17375,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 867.111556,
                    "min": 809.588986,
                    "p50": 842.904056,
                    "p95": 867.111556,
                    "p99": 867.111556,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1797.662345,
                    "min": 1739.665476,
                    "p50": 1785.6395659999998,
                    "p95": 1797.662345,
                    "p99": 1797.662345,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1261.072218,
                    "min": 1238.573706,
                    "p50": 1248.604302,
                    "p95": 1261.072218,
                    "p99": 1261.072218,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1392.3590319999998,
                    "min": 1374.19681,
                    "p50": 1384.1880159999998,
                    "p95": 1392.3590319999998,
                    "p99": 1392.3590319999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 446.857956,
                    "min": 419.23700099999996,
                    "p50": 439.747883,
                    "p95": 446.857956,
                    "p99": 446.857956,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1539.7403239999999,
                    "min": 1474.2107919999999,
                    "p50": 1520.782678,
                    "p95": 1539.7403239999999,
                    "p99": 1539.7403239999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 718.723522,
                    "min": 700.268465,
                    "p50": 709.455422,
                    "p95": 718.723522,
                    "p99": 718.723522,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1927.719226,
                    "min": 1868.8837159999998,
                    "p50": 1912.3874329999999,
                    "p95": 1927.719226,
                    "p99": 1927.719226,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1135.6423949999999,
                    "min": 1088.434544,
                    "p50": 1109.705057,
                    "p95": 1135.6423949999999,
                    "p99": 1135.6423949999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2428.739921,
                    "min": 2370.1336779999997,
                    "p50": 2403.073238,
                    "p95": 2428.739921,
                    "p99": 2428.739921,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1656.997603,
                    "min": 1630.909686,
                    "p50": 1650.220501,
                    "p95": 1656.997603,
                    "p99": 1656.997603,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 991.998196,
                    "min": 970.0018349999999,
                    "p50": 981.6705039999999,
                    "p95": 991.998196,
                    "p99": 991.998196,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 580.6507389999999,
                    "min": 551.219331,
                    "p50": 575.490054,
                    "p95": 580.6507389999999,
                    "p99": 580.6507389999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2079.888253,
                    "min": 2019.4431129999998,
                    "p50": 2055.5088849999997,
                    "p95": 2079.888253,
                    "p99": 2079.888253,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4102.224505,
                    "min": 4045.1295189999996,
                    "p50": 4083.420734,
                    "p95": 4102.224505,
                    "p99": 4102.224505,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 918.316865,
                    "min": 901.283097,
                    "p50": 909.406744,
                    "p95": 918.316865,
                    "p99": 918.316865,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1031.5686859999998,
                    "min": 1002.4344219999999,
                    "p50": 1017.0913479999999,
                    "p95": 1031.5686859999998,
                    "p99": 1031.5686859999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 529.791174,
                    "min": 510.523083,
                    "p50": 525.3506259999999,
                    "p95": 529.791174,
                    "p99": 529.791174,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 830.3331069999999,
                    "min": 809.742044,
                    "p50": 817.8806619999999,
                    "p95": 830.3331069999999,
                    "p99": 830.3331069999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1417.128136,
                    "min": 1384.975377,
                    "p50": 1397.606657,
                    "p95": 1417.128136,
                    "p99": 1417.128136,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 336.843602,
                    "min": 295.99253,
                    "p50": 329.838395,
                    "p95": 336.843602,
                    "p99": 336.843602,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3062.274286,
                    "min": 2944.537628,
                    "p50": 2958.3817679999997,
                    "p95": 3062.274286,
                    "p99": 3062.274286,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1142.110786,
                    "min": 1086.915614,
                    "p50": 1112.08834,
                    "p95": 1142.110786,
                    "p99": 1142.110786,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1335.648968,
                    "min": 1281.445925,
                    "p50": 1307.244618,
                    "p95": 1335.648968,
                    "p99": 1335.648968,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 638.324318,
                    "min": 616.89681,
                    "p50": 620.502843,
                    "p95": 638.324318,
                    "p99": 638.324318,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1788.189813,
                    "min": 1728.109633,
                    "p50": 1742.378958,
                    "p95": 1788.189813,
                    "p99": 1788.189813,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1233.543567,
                    "min": 1166.959631,
                    "p50": 1214.412759,
                    "p95": 1233.543567,
                    "p99": 1233.543567,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 737.009118,
                    "min": 712.315336,
                    "p50": 723.588973,
                    "p95": 737.009118,
                    "p99": 737.009118,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4002.4905289999997,
                    "min": 3908.643709,
                    "p50": 3945.779884,
                    "p95": 4002.4905289999997,
                    "p99": 4002.4905289999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 429.297846,
                    "min": 422.978801,
                    "p50": 426.638213,
                    "p95": 429.297846,
                    "p99": 429.297846,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1524.548168,
                    "min": 1484.9310249999999,
                    "p50": 1497.038691,
                    "p95": 1524.548168,
                    "p99": 1524.548168,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2022.1296949999999,
                    "min": 1976.731844,
                    "p50": 1984.4278769999999,
                    "p95": 2022.1296949999999,
                    "p99": 2022.1296949999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom16KBytes",
        "RipemdFrom8Bytes",
        "RipemdFrom1024Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}