{
    "clients": {
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2036.4770039999999,
                    "min": 1756.7383539999998,
                    "p50": 1857.7963969999998,
                    "p95": 2036.4770039999999,
                    "p99": 2036.4770039999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1262.9733059999999,
                    "min": 1142.986353,
                    "p50": 1244.773553,
                    "p95": 1262.9733059999999,
                    "p99": 1262.9733059999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1841.10411,
                    "min": 1834.094846,
                    "p50": 1839.797165,
                    "p95": 1841.10411,
                    "p99": 1841.10411,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1596.110308,
                    "min": 1569.8800199999998,
                    "p50": 1580.244217,
                    "p95": 1596.110308,
                    "p99": 1596.110308,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1236.667532,
                    "min": 1216.270501,
                    "p50": 1226.7754169999998,
                    "p95": 1236.667532,
                    "p99": 1236.667532,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1478.665059,
                    "min": 1455.482624,
                    "p50": 1467.7287199999998,
                    "p95": 1478.665059,
                    "p99": 1478.665059,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1705.925325,
                    "min": 1693.1557269999998,
                    "p50": 1704.18227,
                    "p95": 1705.925325,
                    "p99": 1705.925325,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 394.69816199999997,
                    "min": 389.063501,
                    "p50": 393.22058599999997,
                    "p95": 394.69816199999997,
                    "p99": 394.69816199999997,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 519.774186,
                    "min": 508.758431,
                    "p50": 511.281958,
                    "p95": 519.774186,
                    "p99": 519.774186,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 647.095509,
                    "min": 612.488106,
                    "p50": 643.653313,
                    "p95": 647.095509,
                    "p99": 647.095509,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2443.384207,
                    "min": 2410.842302,
                    "p50": 2442.762616,
                    "p95": 2443.384207,
                    "p99": 2443.384207,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 763.149185,
                    "min": 741.2484979999999,
                    "p50": 757.3274759999999,
                    "p95": 763.149185,
                    "p99": 763.149185,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2143.696034,
                    "min": 2109.209093,
                    "p50": 2140.65116,
                    "p95": 2143.696034,
                    "p99": 2143.696034,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 998.74853,
                    "min": 985.3644869999999,
                    "p50": 995.3124799999999,
                    "p95": 998.74853,
                    "p99": 998.74853,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 879.77031,
                    "min": 862.142401,
                    "p50": 876.122968,
                    "p95": 879.77031,
                    "p99": 879.77031,
                    "n": 4,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 489.73355899999996,
                    "min": 428.196145,
                    "p50": 466.39298199999996,
                    "p95": 489.73355899999996,
                    "p99": 489.73355899999996,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 634.340658,
                    "min": 436.955521,
                    "p50": 554.5923839999999,
                    "p95": 634.340658,
                    "p99": 634.340658,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 558.966998,
                    "min": 493.38169899999997,
                    "p50": 554.40149,
                    "p95": 558.966998,
                    "p99": 558.966998,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 141.777788,
                    "min": 112.105717,
                    "p50": 118.596851,
                    "p95": 141.777788,
                    "p99": 141.777788,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 211.28770699999998,
                    "min": 191.22068399999998,
                    "p50": 208.808045,
                    "p95": 211.28770699999998,
                    "p99": 211.28770699999998,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 419.23425599999996,
                    "min": 332.67989,
                    "p50": 339.747726,
                    "p95": 419.23425599999996,
                    "p99": 419.23425599999996,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 107.31702,
                    "min": 99.199991,
                    "p50": 105.675017,
                    "p95": 107.31702,
                    "p99": 107.31702,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 165.298693,
                    "min": 142.006456,
                    "p50": 153.917156,
                    "p95": 165.298693,
                    "p99": 165.298693,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 167.82809899999998,
                    "min": 142.245743,
                    "p50": 165.19600599999998,
                    "p95": 167.82809899999998,
                    "p99": 167.82809899999998,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 811.74651,
                    "min": 770.239555,
                    "p50": 790.871306,
                    "p95": 811.74651,
                    "p99": 811.74651,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1065.57096,
                    "min": 968.72106,
                    "p50": 985.3437769999999,
                    "p95": 1065.57096,
                    "p99": 1065.57096,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 232.23631,
                    "min": 199.024653,
                    "p50": 205.258692,
                    "p95": 232.23631,
                    "p99": 232.23631,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3459.242099,
                    "min": 3398.1288729999997,
                    "p50": 3444.830074,
                    "p95": 3459.242099,
                    "p99": 3459.242099,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 95.609534,
                    "min": 86.614965,
                    "p50": 95.449387,
                    "p95": 95.609534,
                    "p99": 95.609534,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 167.784304,
                    "min": 136.21606599999998,
                    "p50": 148.65925199999998,
                    "p95": 167.784304,
                    "p99": 167.784304,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1017.59615,
                    "min": 951.3761639999999,
                    "p50": 974.424193,
                    "p95": 1017.59615,
                    "p99": 1017.59615,
                    "n": 4,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 932.172328,
                    "min": 865.693285,
                    "p50": 905.659397,
                    "p95": 932.172328,
                    "p99": 932.172328,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 765.641772,
                    "min": 691.543763,
                    "p50": 749.708855,
                    "p95": 765.641772,
                    "p99": 765.641772,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 798.990176,
                    "min": 767.2179289999999,
                    "p50": 786.8168479999999,
                    "p95": 798.990176,
                    "p99": 798.990176,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 439.41434899999996,
                    "min": 379.601523,
                    "p50": 430.004941,
                    "p95": 439.41434899999996,
                    "p99": 439.41434899999996,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2350.617764,
                    "min": 2183.431706,
                    "p50": 2342.869303,
                    "p95": 2350.617764,
                    "p99": 2350.617764,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1395.3497969999999,
                    "min": 1264.876906,
                    "p50": 1328.6618119999998,
                    "p95": 1395.3497969999999,
                    "p99": 1395.3497969999999,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1019.8187959999999,
                    "min": 936.052285,
                    "p50": 1006.7283799999999,
                    "p95": 1019.8187959999999,
                    "p99": 1019.8187959999999,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 966.3934479999999,
                    "min": 884.3195939999999,
                    "p50": 899.2199139999999,
                    "p95": 966.3934479999999,
                    "p99": 966.3934479999999,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 555.627849,
                    "min": 505.41715899999997,
                    "p50": 541.2284609999999,
                    "p95": 555.627849,
                    "p99": 555.627849,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1575.491245,
                    "min": 1454.862204,
                    "p50": 1468.97365,
                    "p95": 1575.491245,
                    "p99": 1575.491245,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 252.958112,
                    "min": 220.081765,
                    "p50": 249.537453,
                    "p95": 252.958112,
                    "p99": 252.958112,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1193.837122,
                    "min": 1084.609914,
                    "p50": 1128.717899,
                    "p95": 1193.837122,
                    "p99": 1193.837122,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 649.374066,
                    "min": 603.9427909999999,
                    "p50": 614.822453,
                    "p95": 649.374066,
                    "p99": 649.374066,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 494.334708,
                    "min": 464.998693,
                    "p50": 470.429023,
                    "p95": 494.334708,
                    "p99": 494.334708,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 358.19687999999996,
                    "min": 315.449552,
                    "p50": 325.727899,
                    "p95": 358.19687999999996,
                    "p99": 358.19687999999996,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1130.05759,
                    "min": 1042.835412,
                    "p50": 1055.058704,
                    "p95": 1130.05759,
                    "p99": 1130.05759,
                    "n": 4,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2829.72764,
                    "min": 2001.637051,
                    "p50": 2545.798031,
                    "p95": 2829.72764,
                    "p99": 2829.72764,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 479.469904,
                    "min": 376.473552,
                    "p50": 458.988743,
                    "p95": 479.469904,
                    "p99": 479.469904,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1722.939475,
                    "min": 1399.2687819999999,
                    "p50": 1718.859365,
                    "p95": 1722.939475,
                    "p99": 1722.939475,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1908.262782,
                    "min": 1505.752632,
                    "p50": 1889.667616,
                    "p95": 1908.262782,
                    "p99": 1908.262782,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 607.447854,
                    "min": 497.426047,
                    "p50": 606.440582,
                    "p95": 607.447854,
                    "p99": 607.447854,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1628.727384,
                    "min": 1283.67977,
                    "p50": 1607.882118,
                    "p95": 1628.727384,
                    "p99": 1628.727384,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2158.414639,
                    "min": 1748.8980569999999,
                    "p50": 2141.442471,
                    "p95": 2158.414639,
                    "p99": 2158.414639,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 890.8826019999999,
                    "min": 717.148232,
                    "p50": 868.118973,
                    "p95": 890.8826019999999,
                    "p99": 890.8826019999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1312.051039,
                    "min": 1061.4930809999998,
                    "p50": 1310.368513,
                    "p95": 1312.051039,
                    "p99": 1312.051039,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1172.821355,
                    "min": 945.676917,
                    "p50": 1169.3991939999999,
                    "p95": 1172.821355,
                    "p99": 1172.821355,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2865.967037,
                    "min": 2300.673647,
                    "p50": 2865.329718,
                    "p95": 2865.967037,
                    "p99": 2865.967037,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1456.7405899999999,
                    "min": 1152.2168219999999,
                    "p50": 1449.1394799999998,
                    "p95": 1456.7405899999999,
                    "p99": 1456.7405899999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1027.434761,
                    "min": 819.882404,
                    "p50": 1026.329172,
                    "p95": 1027.434761,
                    "p99": 1027.434761,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 745.407255,
                    "min": 570.805541,
                    "p50": 735.9820119999999,
                    "p95": 745.407255,
                    "p99": 745.407255,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2023.380606,
                    "min": 1616.97598,
                    "p50": 2013.7993159999999,
                    "p95": 2023.380606,
                    "p99": 2023.380606,
                    "n": 4,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 122.233719,
                    "min": 109.294485,
                    "p50": 120.95343799999999,
                    "p95": 122.233719,
                    "p99": 122.233719,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 40.363685,
                    "min": 37.694756,
                    "p50": 40.062717,
                    "p95": 40.363685,
                    "p99": 40.363685,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 217.171295,
                    "min": 198.243115,
                    "p50": 211.11790499999998,
                    "p95": 217.171295,
                    "p99": 217.171295,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 477.185839,
                    "min": 458.450404,
                    "p50": 475.12170399999997,
                    "p95": 477.185839,
                    "p99": 477.185839,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 53.294483,
                    "min": 43.368255,
                    "p50": 52.358024,
                    "p95": 53.294483,
                    "p99": 53.294483,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 52.257318,
                    "min": 49.295243,
                    "p50": 51.07299,
                    "p95": 52.257318,
                    "p99": 52.257318,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 192.825919,
                    "min": 170.809397,
                    "p50": 190.42433499999999,
                    "p95": 192.825919,
                    "p99": 192.825919,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 50.780922,
                    "min": 26.793436,
                    "p50": 48.971970999999996,
                    "p95": 50.780922,
                    "p99": 50.780922,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 30.399732999999998,
                    "min": 26.698658,
                    "p50": 30.182563,
                    "p95": 30.399732999999998,
                    "p99": 30.399732999999998,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 77.933055,
                    "min": 72.01355199999999,
                    "p50": 76.551982,
                    "p95": 77.933055,
                    "p99": 77.933055,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 141.891572,
                    "min": 122.152654,
                    "p50": 130.290299,
                    "p95": 141.891572,
                    "p99": 141.891572,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.456567,
                    "min": 22.979027,
                    "p50": 26.815056,
                    "p95": 27.456567,
                    "p99": 27.456567,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 54.200464,
                    "min": 37.829176,
                    "p50": 52.690537,
                    "p95": 54.200464,
                    "p99": 54.200464,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 69.249057,
                    "min": 61.756248,
                    "p50": 64.105313,
                    "p95": 69.249057,
                    "p99": 69.249057,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 86.80506299999999,
                    "min": 49.498037,
                    "p50": 59.896403,
                    "p95": 86.80506299999999,
                    "p99": 86.80506299999999,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 53.600640999999996,
                    "min": 37.79664,
                    "p50": 52.969362,
                    "p95": 53.600640999999996,
                    "p99": 53.600640999999996,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 87.608068,
                    "min": 57.357391,
                    "p50": 59.749573,
                    "p95": 87.608068,
                    "p99": 87.608068,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 58.4098,
                    "min": 49.677062,
                    "p50": 53.187431999999994,
                    "p95": 58.4098,
                    "p99": 58.4098,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 57.983931999999996,
                    "min": 47.707037,
                    "p50": 55.517042,
                    "p95": 57.983931999999996,
                    "p99": 57.983931999999996,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 401.385811,
                    "min": 372.506989,
                    "p50": 381.029364,
                    "p95": 401.385811,
                    "p99": 401.385811,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 224.52433599999998,
                    "min": 166.112401,
                    "p50": 210.607624,
                    "p95": 224.52433599999998,
                    "p99": 224.52433599999998,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 635.669121,
                    "min": 543.982797,
                    "p50": 607.6537529999999,
                    "p95": 635.669121,
                    "p99": 635.669121,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 334.316023,
                    "min": 235.203372,
                    "p50": 318.91040499999997,
                    "p95": 334.316023,
                    "p99": 334.316023,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.893139,
                    "min": 372.55596599999996,
                    "p50": 508.261661,
                    "p95": 522.893139,
                    "p99": 522.893139,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2262.685878,
                    "min": 1921.8003669999998,
                    "p50": 2221.066908,
                    "p95": 2262.685878,
                    "p99": 2262.685878,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 569.137215,
                    "min": 417.450286,
                    "p50": 470.522726,
                    "p95": 569.137215,
                    "p99": 569.137215,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 583.853977,
                    "min": 477.694153,
                    "p50": 505.234271,
                    "p95": 583.853977,
                    "p99": 583.853977,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 823.038223,
                    "min": 635.329659,
                    "p50": 780.885896,
                    "p95": 823.038223,
                    "p99": 823.038223,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 340.48537699999997,
                    "min": 301.92353299999996,
                    "p50": 325.748547,
                    "p95": 340.48537699999997,
                    "p99": 340.48537699999997,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1696.33142,
                    "min": 1565.429854,
                    "p50": 1655.280284,
                    "p95": 1696.33142,
                    "p99": 1696.33142,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 294.63883899999996,
                    "min": 268.65617599999996,
                    "p50": 287.714109,
                    "p95": 294.63883899999996,
                    "p99": 294.63883899999996,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 497.599963,
                    "min": 425.00111799999996,
                    "p50": 485.732647,
                    "p95": 497.599963,
                    "p99": 497.599963,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1296.4213539999998,
                    "min": 1019.0239939999999,
                    "p50": 1201.814899,
                    "p95": 1296.4213539999998,
                    "p99": 1296.4213539999998,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 188.48544099999998,
                    "min": 170.06111199999998,
                    "p50": 174.468221,
                    "p95": 188.48544099999998,
                    "p99": 188.48544099999998,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4242.361231,
                    "min": 3765.3021019999996,
                    "p50": 3912.406697,
                    "p95": 4242.361231,
                    "p99": 4242.361231,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 167.12274299999999,
                    "min": 138.69744799999998,
                    "p50": 151.52796999999998,
                    "p95": 167.12274299999999,
                    "p99": 167.12274299999999,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 586.679753,
                    "min": 522.998175,
                    "p50": 561.478942,
                    "p95": 586.679753,
                    "p99": 586.679753,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 896.770935,
                    "min": 717.363162,
                    "p50": 830.151114,
                    "p95": 896.770935,
                    "p99": 896.770935,
                    "n": 4,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 61.750361999999996,
                    "min": 56.417986,
                    "p50": 58.757898999999995,
                    "p95": 61.750361999999996,
                    "p99": 61.750361999999996,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 91.28927999999999,
                    "min": 69.428058,
                    "p50": 82.443817,
                    "p95": 91.28927999999999,
                    "p99": 91.28927999999999,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 56.073871999999994,
                    "min": 43.885621,
                    "p50": 50.683232,
                    "p95": 56.073871999999994,
                    "p99": 56.073871999999994,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 73.829955,
                    "min": 66.77944099999999,
                    "p50": 71.733504,
                    "p95": 73.829955,
                    "p99": 73.829955,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 40.790195,
                    "min": 31.432485,
                    "p50": 40.764621999999996,
                    "p95": 40.790195,
                    "p99": 40.790195,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 185.40509699999998,
                    "min": 155.044464,
                    "p50": 170.011454,
                    "p95": 185.40509699999998,
                    "p99": 185.40509699999998,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 108.928936,
                    "min": 102.99460499999999,
                    "p50": 106.02619999999999,
                    "p95": 108.928936,
                    "p99": 108.928936,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 79.469652,
                    "min": 54.83244,
                    "p50": 76.09816,
                    "p95": 79.469652,
                    "p99": 79.469652,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 319.501101,
                    "min": 254.61965899999998,
                    "p50": 305.383686,
                    "p95": 319.501101,
                    "p99": 319.501101,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 61.576142,
                    "min": 57.488426,
                    "p50": 59.767495,
                    "p95": 61.576142,
                    "p99": 61.576142,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 62.825286999999996,
                    "min": 53.738169,
                    "p50": 59.230919,
                    "p95": 62.825286999999996,
                    "p99": 62.825286999999996,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 107.46284299999999,
                    "min": 92.56526199999999,
                    "p50": 106.671269,
                    "p95": 107.46284299999999,
                    "p99": 107.46284299999999,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 71.061418,
                    "min": 65.332611,
                    "p50": 70.43144099999999,
                    "p95": 71.061418,
                    "p99": 71.061418,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 122.16644699999999,
                    "min": 105.68162099999999,
                    "p50": 117.95429999999999,
                    "p95": 122.16644699999999,
                    "p99": 122.16644699999999,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 550.945235,
                    "min": 500.082244,
                    "p50": 542.628968,
                    "p95": 550.945235,
                    "p99": 550.945235,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 85.51747499999999,
                    "min": 69.315694,
                    "p50": 81.678772,
                    "p95": 85.51747499999999,
                    "p99": 85.51747499999999,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 312.380353,
                    "min": 212.272998,
                    "p50": 235.23002699999998,
                    "p95": 312.380353,
                    "p99": 312.380353,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 189.950188,
                    "min": 123.603111,
                    "p50": 179.771526,
                    "p95": 189.950188,
                    "p99": 189.950188,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 153.505852,
                    "min": 89.630155,
                    "p50": 96.468415,
                    "p95": 153.505852,
                    "p99": 153.505852,
                    "n": 4,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 64.928482,
                    "min": 47.847201999999996,
                    "p50": 64.17862099999999,
                    "p95": 64.928482,
                    "p99": 64.928482,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.264333999999998,
                    "min": 12.900326999999999,
                    "p50": 26.798942,
                    "p95": 27.264333999999998,
                    "p99": 27.264333999999998,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.299440999999998,
                    "min": 26.448535,
                    "p50": 27.096508999999998,
                    "p95": 27.299440999999998,
                    "p99": 27.299440999999998,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.028022,
                    "min": 13.374573,
                    "p50": 26.821234,
                    "p95": 27.028022,
                    "p99": 27.028022,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.194754999999997,
                    "min": 24.484426,
                    "p50": 27.044421,
                    "p95": 27.194754999999997,
                    "p99": 27.194754999999997,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.979757,
                    "min": 26.579942,
                    "p50": 26.950533,
                    "p95": 26.979757,
                    "p99": 26.979757,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.190544,
                    "min": 23.298344,
                    "p50": 27.180231,
                    "p95": 27.190544,
                    "p99": 27.190544,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 31.300468,
                    "min": 19.271922,
                    "p50": 27.118087,
                    "p95": 31.300468,
                    "p99": 31.300468,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.639599999999998,
                    "min": 22.211951,
                    "p50": 26.3523,
                    "p95": 26.639599999999998,
                    "p99": 26.639599999999998,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 47.58562,
                    "min": 39.05374,
                    "p50": 41.820806999999995,
                    "p95": 47.58562,
                    "p99": 47.58562,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.33407,
                    "min": 23.217401,
                    "p50": 27.201615,
                    "p95": 27.33407,
                    "p99": 27.33407,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 36.783755,
                    "min": 26.805265,
                    "p50": 34.785283,
                    "p95": 36.783755,
                    "p99": 36.783755,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.635113,
                    "min": 26.858173999999998,
                    "p50": 26.931644,
                    "p95": 27.635113,
                    "p99": 27.635113,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.341027999999998,
                    "min": 25.826293999999997,
                    "p50": 27.209134,
                    "p95": 27.341027999999998,
                    "p99": 27.341027999999998,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.99103,
                    "min": 20.082801,
                    "p50": 26.62624,
                    "p95": 26.99103,
                    "p99": 26.99103,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 126.58668999999999,
                    "min": 85.659568,
                    "p50": 123.87392799999999,
                    "p95": 126.58668999999999,
                    "p99": 126.58668999999999,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.412439,
                    "min": 26.025866999999998,
                    "p50": 26.317605999999998,
                    "p95": 26.412439,
                    "p99": 26.412439,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.408977999999998,
                    "min": 26.376839,
                    "p50": 26.798226999999997,
                    "p95": 27.408977999999998,
                    "p99": 27.408977999999998,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.105946,
                    "min": 26.628631,
                    "p50": 26.973318,
                    "p95": 27.105946,
                    "p99": 27.105946,
                    "n": 4,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 363.102786,
                    "min": 350.21160399999997,
                    "p50": 356.90644599999996,
                    "p95": 363.102786,
                    "p99": 363.102786,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.740745,
                    "min": 130.775638,
                    "p50": 143.080549,
                    "p95": 144.740745,
                    "p99": 144.740745,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4559.186554,
                    "min": 4182.690488,
                    "p50": 4260.366115,
                    "p95": 4559.186554,
                    "p99": 4559.186554,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 947.317998,
                    "min": 843.8252789999999,
                    "p50": 907.065389,
                    "p95": 947.317998,
                    "p99": 947.317998,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 301.085089,
                    "min": 276.11192,
                    "p50": 297.64775499999996,
                    "p95": 301.085089,
                    "p99": 301.085089,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 174.30166599999998,
                    "min": 156.525463,
                    "p50": 172.607127,
                    "p95": 174.30166599999998,
                    "p99": 174.30166599999998,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 275.287688,
                    "min": 211.830679,
                    "p50": 258.737018,
                    "p95": 275.287688,
                    "p99": 275.287688,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1351.752564,
                    "min": 1053.0232819999999,
                    "p50": 1300.443652,
                    "p95": 1351.752564,
                    "p99": 1351.752564,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 673.811197,
                    "min": 495.968956,
                    "p50": 599.236901,
                    "p95": 673.811197,
                    "p99": 673.811197,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 551.852521,
                    "min": 417.90061399999996,
                    "p50": 519.5960289999999,
                    "p95": 551.852521,
                    "p99": 551.852521,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1696.83792,
                    "min": 1406.90311,
                    "p50": 1585.270323,
                    "p95": 1696.83792,
                    "p99": 1696.83792,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2161.270093,
                    "min": 1917.866253,
                    "p50": 2136.410337,
                    "p95": 2161.270093,
                    "p99": 2161.270093,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 689.0975569999999,
                    "min": 513.299128,
                    "p50": 642.348063,
                    "p95": 689.0975569999999,
                    "p99": 689.0975569999999,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 270.28256899999997,
                    "min": 201.69976499999999,
                    "p50": 222.38311099999999,
                    "p95": 270.28256899999997,
                    "p99": 270.28256899999997,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 751.0772519999999,
                    "min": 688.822856,
                    "p50": 746.864688,
                    "p95": 751.0772519999999,
                    "p99": 751.0772519999999,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 440.41221199999995,
                    "min": 359.056046,
                    "p50": 429.010659,
                    "p95": 440.41221199999995,
                    "p99": 440.41221199999995,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 582.146295,
                    "min": 457.08925899999997,
                    "p50": 529.4363079999999,
                    "p95": 582.146295,
                    "p99": 582.146295,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 636.277798,
                    "min": 553.313751,
                    "p50": 599.676838,
                    "p95": 636.277798,
                    "p99": 636.277798,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 408.13248799999997,
                    "min": 309.055057,
                    "p50": 383.914546,
                    "p95": 408.13248799999997,
                    "p99": 408.13248799999997,
                    "n": 4,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1621.622956,
                    "min": 1433.4948,
                    "p50": 1488.3985229999998,
                    "p95": 1621.622956,
                    "p99": 1621.622956,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.434141,
                    "min": 193.41790699999999,
                    "p50": 221.639196,
                    "p95": 267.434141,
                    "p99": 267.434141,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 471.223183,
                    "min": 412.401934,
                    "p50": 461.322612,
                    "p95": 471.223183,
                    "p99": 471.223183,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 709.804354,
                    "min": 638.609153,
                    "p50": 684.880602,
                    "p95": 709.804354,
                    "p99": 709.804354,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.745572,
                    "min": 237.862688,
                    "p50": 262.397089,
                    "p95": 273.745572,
                    "p99": 273.745572,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 863.715337,
                    "min": 733.461112,
                    "p50": 752.371537,
                    "p95": 863.715337,
                    "p99": 863.715337,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 505.10923199999996,
                    "min": 397.865976,
                    "p50": 495.626632,
                    "p95": 505.10923199999996,
                    "p99": 505.10923199999996,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 904.8689479999999,
                    "min": 812.182513,
                    "p50": 861.402068,
                    "p95": 904.8689479999999,
                    "p99": 904.8689479999999,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.92208,
                    "min": 288.158388,
                    "p50": 305.059433,
                    "p95": 318.92208,
                    "p99": 318.92208,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 516.806732,
                    "min": 487.510455,
                    "p50": 506.40921799999995,
                    "p95": 516.806732,
                    "p99": 516.806732,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2418.019653,
                    "min": 1844.1722009999999,
                    "p50": 1942.075848,
                    "p95": 2418.019653,
                    "p99": 2418.019653,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 631.537907,
                    "min": 556.283246,
                    "p50": 610.551108,
                    "p95": 631.537907,
                    "p99": 631.537907,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 445.873116,
                    "min": 342.39872199999996,
                    "p50": 363.729089,
                    "p95": 445.873116,
                    "p99": 445.873116,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 627.967664,
                    "min": 597.386859,
                    "p50": 626.480556,
                    "p95": 627.967664,
                    "p99": 627.967664,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 183.903628,
                    "min": 165.886776,
                    "p50": 179.38777199999998,
                    "p95": 183.903628,
                    "p99": 183.903628,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 691.983479,
                    "min": 623.4013,
                    "p50": 651.521039,
                    "p95": 691.983479,
                    "p99": 691.983479,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1033.9720539999998,
                    "min": 878.351762,
                    "p50": 976.862578,
                    "p95": 1033.9720539999998,
                    "p99": 1033.9720539999998,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2777.7258309999997,
                    "min": 2427.549459,
                    "p50": 2726.4531349999997,
                    "p95": 2777.7258309999997,
                    "p99": 2777.7258309999997,
                    "n": 4,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 425.293341,
                    "min": 406.429058,
                    "p50": 425.058931,
                    "p95": 425.293341,
                    "p99": 425.293341,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 937.8743129999999,
                    "min": 682.1244039999999,
                    "p50": 817.692137,
                    "p95": 937.8743129999999,
                    "p99": 937.8743129999999,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 721.883295,
                    "min": 544.161555,
                    "p50": 560.81513,
                    "p95": 721.883295,
                    "p99": 721.883295,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1073.514945,
                    "min": 1050.300476,
                    "p50": 1062.339996,
                    "p95": 1073.514945,
                    "p99": 1073.514945,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 987.514785,
                    "min": 936.771613,
                    "p50": 975.103382,
                    "p95": 987.514785,
                    "p99": 987.514785,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1290.4037409999999,
                    "min": 1264.733888,
                    "p50": 1289.085762,
                    "p95": 1290.4037409999999,
                    "p99": 1290.4037409999999,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1610.4198509999999,
                    "min": 1566.7946499999998,
                    "p50": 1595.930263,
                    "p95": 1610.4198509999999,
                    "p99": 1610.4198509999999,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1411.593637,
                    "min": 1369.0719179999999,
                    "p50": 1407.0917809999999,
                    "p95": 1411.593637,
                    "p99": 1411.593637,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1215.834838,
                    "min": 1145.251013,
                    "p50": 1187.2159609999999,
                    "p95": 1215.834838,
                    "p99": 1215.834838,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2152.6068379999997,
                    "min": 2096.428664,
                    "p50": 2151.9264789999997,
                    "p95": 2152.6068379999997,
                    "p99": 2152.6068379999997,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 778.2978539999999,
                    "min": 759.7851109999999,
                    "p50": 777.4431969999999,
                    "p95": 778.2978539999999,
                    "p99": 778.2978539999999,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 468.64755399999996,
                    "min": 443.208731,
                    "p50": 468.15448699999996,
                    "p95": 468.64755399999996,
                    "p99": 468.64755399999996,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1942.038128,
                    "min": 1881.6970219999998,
                    "p50": 1937.7501809999999,
                    "p95": 1942.038128,
                    "p99": 1942.038128,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 931.1246299999999,
                    "min": 866.9540059999999,
                    "p50": 931.064448,
                    "p95": 931.1246299999999,
                    "p99": 931.1246299999999,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1640.702206,
                    "min": 1519.732855,
                    "p50": 1600.06917,
                    "p95": 1640.702206,
                    "p99": 1640.702206,
                    "n": 4,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 915.646897,
                    "min": 887.4911989999999,
                    "p50": 900.6130919999999,
                    "p95": 915.646897,
                    "p99": 915.646897,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2044.3740209999999,
                    "min": 2016.1626749999998,
                    "p50": 2037.3563439999998,
                    "p95": 2044.3740209999999,
                    "p99": 2044.3740209999999,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2894.344356,
                    "min": 2880.5186799999997,
                    "p50": 2884.39747,
                    "p95": 2894.344356,
                    "p99": 2894.344356,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5741.216492,
                    "min": 5656.260934999999,
                    "p50": 5700.952727,
                    "p95": 5741.216492,
                    "p99": 5741.216492,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1626.086993,
                    "min": 1592.652234,
                    "p50": 1602.747641,
                    "p95": 1626.086993,
                    "p99": 1626.086993,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 750.25761,
                    "min": 713.095478,
                    "p50": 747.3933579999999,
                    "p95": 750.25761,
                    "p99": 750.25761,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 609.233515,
                    "min": 587.78373,
                    "p50": 605.503199,
                    "p95": 609.233515,
                    "p99": 609.233515,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1755.198915,
                    "min": 1704.3961709999999,
                    "p50": 1743.6157739999999,
                    "p95": 1755.198915,
                    "p99": 1755.198915,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4299.595262,
                    "min": 4244.053354,
                    "p50": 4293.948084,
                    "p95": 4299.595262,
                    "p99": 4299.595262,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2529.779407,
                    "min": 2466.121588,
                    "p50": 2517.306342,
                    "p95": 2529.779407,
                    "p99": 2529.779407,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2168.227865,
                    "min": 2125.295345,
                    "p50": 2163.254881,
                    "p95": 2168.227865,
                    "p99": 2168.227865,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1175.671688,
                    "min": 1132.041592,
                    "p50": 1174.948689,
                    "p95": 1175.671688,
                    "p99": 1175.671688,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1456.0303549999999,
                    "min": 1437.871206,
                    "p50": 1454.3796909999999,
                    "p95": 1456.0303549999999,
                    "p99": 1456.0303549999999,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1043.661589,
                    "min": 1020.845299,
                    "p50": 1031.608344,
                    "p95": 1043.661589,
                    "p99": 1043.661589,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 463.97941499999996,
                    "min": 428.21427,
                    "p50": 461.07280699999995,
                    "p95": 463.97941499999996,
                    "p99": 463.97941499999996,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1906.505829,
                    "min": 1859.3184219999998,
                    "p50": 1874.323582,
                    "p95": 1906.505829,
                    "p99": 1906.505829,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1328.601178,
                    "min": 1291.6047059999999,
                    "p50": 1306.2427109999999,
                    "p95": 1328.601178,
                    "p99": 1328.601178,
                    "n": 4,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 608.849395,
                    "min": 563.911714,
                    "p50": 607.764765,
                    "p95": 608.849395,
                    "p99": 608.849395,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1915.9804199999999,
                    "min": 1870.318045,
                    "p50": 1891.719036,
                    "p95": 1915.9804199999999,
                    "p99": 1915.9804199999999,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3797.842844,
                    "min": 3769.168165,
                    "p50": 3794.131474,
                    "p95": 3797.842844,
                    "p99": 3797.842844,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2150.908905,
                    "min": 2070.710115,
                    "p50": 2148.5140149999997,
                    "p95": 2150.908905,
                    "p99": 2150.908905,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5567.486696,
                    "min": 5531.926828,
                    "p50": 5560.814034999999,
                    "p95": 5567.486696,
                    "p99": 5567.486696,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1159.365583,
                    "min": 1146.239392,
                    "p50": 1159.061822,
                    "p95": 1159.365583,
                    "p99": 1159.365583,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1759.472059,
                    "min": 1698.580702,
                    "p50": 1728.4602659999998,
                    "p95": 1759.472059,
                    "p99": 1759.472059,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7459.451687,
                    "min": 7264.226277,
                    "p50": 7370.114092,
                    "p95": 7459.451687,
                    "p99": 7459.451687,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 995.403564,
                    "min": 974.528287,
                    "p50": 988.2103619999999,
                    "p95": 995.403564,
                    "p99": 995.403564,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2542.821069,
                    "min": 2497.315791,
                    "p50": 2523.04907,
                    "p95": 2542.821069,
                    "p99": 2542.821069,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1350.451198,
                    "min": 1326.0014099999999,
                    "p50": 1338.307035,
                    "p95": 1350.451198,
                    "p99": 1350.451198,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 792.89986,
                    "min": 759.745868,
                    "p50": 786.220375,
                    "p95": 792.89986,
                    "p99": 792.89986,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2875.410996,
                    "min": 2761.384295,
                    "p50": 2874.921642,
                    "p95": 2875.410996,
                    "p99": 2875.410996,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2748.4320869999997,
                    "min": 2625.075601,
                    "p50": 2723.06201,
                    "p95": 2748.4320869999997,
                    "p99": 2748.4320869999997,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3322.373385,
                    "min": 3262.1625219999996,
                    "p50": 3315.329737,
                    "p95": 3322.373385,
                    "p99": 3322.373385,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1530.011608,
                    "min": 1503.93145,
                    "p50": 1516.261088,
                    "p95": 1530.011608,
                    "p99": 1530.011608,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2292.4203829999997,
                    "min": 2258.392414,
                    "p50": 2289.613741,
                    "p95": 2292.4203829999997,
                    "p99": 2292.4203829999997,
                    "n": 4,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 202.681618,
                    "min": 162.04063399999998,
                    "p50": 175.51975199999998,
                    "p95": 202.681618,
                    "p99": 202.681618,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 188.3361,
                    "min": 132.36736,
                    "p50": 140.081592,
                    "p95": 188.3361,
                    "p99": 188.3361,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 237.730119,
                    "min": 209.84743,
                    "p50": 229.888364,
                    "p95": 237.730119,
                    "p99": 237.730119,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 374.76059499999997,
                    "min": 297.228248,
                    "p50": 334.984922,
                    "p95": 374.76059499999997,
                    "p99": 374.76059499999997,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1149.034073,
                    "min": 1113.83402,
                    "p50": 1134.683289,
                    "p95": 1149.034073,
                    "p99": 1149.034073,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 498.33070999999995,
                    "min": 399.25688299999996,
                    "p50": 459.681206,
                    "p95": 498.33070999999995,
                    "p99": 498.33070999999995,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 138.690845,
                    "min": 124.090498,
                    "p50": 136.52485,
                    "p95": 138.690845,
                    "p99": 138.690845,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.029216,
                    "min": 42.4112,
                    "p50": 62.623864,
                    "p95": 63.029216,
                    "p99": 63.029216,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 618.859737,
                    "min": 541.912523,
                    "p50": 595.671712,
                    "p95": 618.859737,
                    "p99": 618.859737,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 104.30850199999999,
                    "min": 96.25985299999999,
                    "p50": 101.706188,
                    "p95": 104.30850199999999,
                    "p99": 104.30850199999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 184.08739799999998,
                    "min": 106.521931,
                    "p50": 111.16825,
                    "p95": 184.08739799999998,
                    "p99": 184.08739799999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 113.96551799999999,
                    "min": 78.233739,
                    "p50": 99.570617,
                    "p95": 113.96551799999999,
                    "p99": 113.96551799999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 237.33586,
                    "min": 190.602072,
                    "p50": 220.325056,
                    "p95": 237.33586,
                    "p99": 237.33586,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 83.04853399999999,
                    "min": 64.375919,
                    "p50": 79.944733,
                    "p95": 83.04853399999999,
                    "p99": 83.04853399999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.264265,
                    "min": 88.32836499999999,
                    "p50": 91.57703099999999,
                    "p95": 124.264265,
                    "p99": 124.264265,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 172.041267,
                    "min": 154.21164199999998,
                    "p50": 170.945897,
                    "p95": 172.041267,
                    "p99": 172.041267,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 152.884572,
                    "min": 138.929562,
                    "p50": 146.968991,
                    "p95": 152.884572,
                    "p99": 152.884572,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 70.296148,
                    "min": 35.930943,
                    "p50": 70.216516,
                    "p95": 70.296148,
                    "p99": 70.296148,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 277.013442,
                    "min": 144.740072,
                    "p50": 211.69272099999998,
                    "p95": 277.013442,
                    "p99": 277.013442,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2741.387738,
                    "min": 2630.977524,
                    "p50": 2694.1469979999997,
                    "p95": 2741.387738,
                    "p99": 2741.387738,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1091.320422,
                    "min": 1078.615266,
                    "p50": 1089.996893,
                    "p95": 1091.320422,
                    "p99": 1091.320422,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 827.877317,
                    "min": 762.250921,
                    "p50": 788.651349,
                    "p95": 827.877317,
                    "p99": 827.877317,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1870.150661,
                    "min": 1839.1371829999998,
                    "p50": 1858.979012,
                    "p95": 1870.150661,
                    "p99": 1870.150661,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1279.4529029999999,
                    "min": 1236.128215,
                    "p50": 1254.654325,
                    "p95": 1279.4529029999999,
                    "p99": 1279.4529029999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6155.606412,
                    "min": 6034.355826,
                    "p50": 6083.257501,
                    "p95": 6155.606412,
                    "p99": 6155.606412,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1729.3082849999998,
                    "min": 1678.767736,
                    "p50": 1723.021485,
                    "p95": 1729.3082849999998,
                    "p99": 1729.3082849999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 972.606688,
                    "min": 937.339746,
                    "p50": 944.8498639999999,
                    "p95": 972.606688,
                    "p99": 972.606688,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2124.155653,
                    "min": 1984.1154339999998,
                    "p50": 2023.0776099999998,
                    "p95": 2124.155653,
                    "p99": 2124.155653,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4578.042175,
                    "min": 4513.707332,
                    "p50": 4553.197666,
                    "p95": 4578.042175,
                    "p99": 4578.042175,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2375.4509439999997,
                    "min": 2295.1903389999998,
                    "p50": 2352.604086,
                    "p95": 2375.4509439999997,
                    "p99": 2375.4509439999997,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3079.0035909999997,
                    "min": 3030.6358529999998,
                    "p50": 3047.161495,
                    "p95": 3079.0035909999997,
                    "p99": 3079.0035909999997,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 499.60106399999995,
                    "min": 484.509371,
                    "p50": 495.906861,
                    "p95": 499.60106399999995,
                    "p99": 499.60106399999995,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2197.885017,
                    "min": 2121.327359,
                    "p50": 2182.427727,
                    "p95": 2197.885017,
                    "p99": 2197.885017,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 677.913232,
                    "min": 640.172747,
                    "p50": 653.56225,
                    "p95": 677.913232,
                    "p99": 677.913232,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1557.260468,
                    "min": 1530.375845,
                    "p50": 1543.265698,
                    "p95": 1557.260468,
                    "p99": 1557.260468,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1409.773758,
                    "min": 1382.042278,
                    "p50": 1408.446668,
                    "p95": 1409.773758,
                    "p99": 1409.773758,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2312.6906679999997,
                    "min": 2259.505631,
                    "p50": 2312.0819739999997,
                    "p95": 2312.6906679999997,
                    "p99": 2312.6906679999997,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 639.299859,
                    "min": 606.523546,
                    "p50": 636.897969,
                    "p95": 639.299859,
                    "p99": 639.299859,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1430.924926,
                    "min": 1377.902496,
                    "p50": 1394.9511479999999,
                    "p95": 1430.924926,
                    "p99": 1430.924926,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2034.927739,
                    "min": 1983.3367429999998,
                    "p50": 2010.357122,
                    "p95": 2034.927739,
                    "p99": 2034.927739,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1575.807243,
                    "min": 1521.9882289999998,
                    "p50": 1552.4960409999999,
                    "p95": 1575.807243,
                    "p99": 1575.807243,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1740.8321449999999,
                    "min": 1691.760959,
                    "p50": 1731.4073159999998,
                    "p95": 1740.8321449999999,
                    "p99": 1740.8321449999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3110.0712599999997,
                    "min": 3023.214447,
                    "p50": 3073.240488,
                    "p95": 3110.0712599999997,
                    "p99": 3110.0712599999997,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4599.471457,
                    "min": 4522.45276,
                    "p50": 4586.968664999999,
                    "p95": 4599.471457,
                    "p99": 4599.471457,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1869.875987,
                    "min": 1829.558272,
                    "p50": 1844.4870139999998,
                    "p95": 1869.875987,
                    "p99": 1869.875987,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 797.1649319999999,
                    "min": 791.08048,
                    "p50": 795.688361,
                    "p95": 797.1649319999999,
                    "p99": 797.1649319999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 501.25283399999995,
                    "min": 477.61359,
                    "p50": 498.27426099999997,
                    "p95": 501.25283399999995,
                    "p99": 501.25283399999995,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 985.951594,
                    "min": 947.548734,
                    "p50": 956.832685,
                    "p95": 985.951594,
                    "p99": 985.951594,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2744.519238,
                    "min": 2638.316824,
                    "p50": 2709.2793859999997,
                    "p95": 2744.519238,
                    "p99": 2744.519238,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1111.011589,
                    "min": 1082.512847,
                    "p50": 1097.960257,
                    "p95": 1111.011589,
                    "p99": 1111.011589,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2189.191325,
                    "min": 2124.863154,
                    "p50": 2174.1315369999998,
                    "p95": 2189.191325,
                    "p99": 2189.191325,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1310.7408779999998,
                    "min": 1230.183977,
                    "p50": 1249.18552,
                    "p95": 1310.7408779999998,
                    "p99": 1310.7408779999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1368.330009,
                    "min": 1308.8741109999999,
                    "p50": 1328.2968529999998,
                    "p95": 1368.330009,
                    "p99": 1368.330009,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 257.7623,
                    "min": 162.70743099999999,
                    "p50": 197.13158299999998,
                    "p95": 257.7623,
                    "p99": 257.7623,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 727.645635,
                    "min": 681.4161849999999,
                    "p50": 704.990323,
                    "p95": 727.645635,
                    "p99": 727.645635,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.33467399999999,
                    "min": 115.908581,
                    "p50": 119.987433,
                    "p95": 120.33467399999999,
                    "p99": 120.33467399999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.84623599999999,
                    "min": 72.375941,
                    "p50": 83.270061,
                    "p95": 84.84623599999999,
                    "p99": 84.84623599999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 234.361732,
                    "min": 176.395591,
                    "p50": 179.077204,
                    "p95": 234.361732,
                    "p99": 234.361732,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 593.794938,
                    "min": 535.623308,
                    "p50": 570.951868,
                    "p95": 593.794938,
                    "p99": 593.794938,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.243396,
                    "min": 206.709543,
                    "p50": 242.90222699999998,
                    "p95": 246.243396,
                    "p99": 246.243396,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 242.898819,
                    "min": 185.828523,
                    "p50": 194.98980899999998,
                    "p95": 242.898819,
                    "p99": 242.898819,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 304.27115699999996,
                    "min": 239.260908,
                    "p50": 244.928192,
                    "p95": 304.27115699999996,
                    "p99": 304.27115699999996,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 93.676279,
                    "min": 84.900998,
                    "p50": 90.96150999999999,
                    "p95": 93.676279,
                    "p99": 93.676279,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 203.32645,
                    "min": 162.58449199999998,
                    "p50": 163.267189,
                    "p95": 203.32645,
                    "p99": 203.32645,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.17978699999999,
                    "min": 35.49436,
                    "p50": 64.794299,
                    "p95": 70.17978699999999,
                    "p99": 70.17978699999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.719581,
                    "min": 121.94882799999999,
                    "p50": 131.902687,
                    "p95": 143.719581,
                    "p99": 143.719581,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 111.41159499999999,
                    "min": 83.855676,
                    "p50": 106.532997,
                    "p95": 111.41159499999999,
                    "p99": 111.41159499999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 173.32992,
                    "min": 141.06346499999998,
                    "p50": 170.431892,
                    "p95": 173.32992,
                    "p99": 173.32992,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 209.07069299999998,
                    "min": 151.585824,
                    "p50": 164.371738,
                    "p95": 209.07069299999998,
                    "p99": 209.07069299999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 443.873513,
                    "min": 386.906201,
                    "p50": 390.18645999999995,
                    "p95": 443.873513,
                    "p99": 443.873513,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 321.899177,
                    "min": 239.16852999999998,
                    "p50": 273.653454,
                    "p95": 321.899177,
                    "p99": 321.899177,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 110.182431,
                    "min": 80.41024,
                    "p50": 96.064168,
                    "p95": 110.182431,
                    "p99": 110.182431,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 467.70536799999996,
                    "min": 370.087874,
                    "p50": 399.770019,
                    "p95": 467.70536799999996,
                    "p99": 467.70536799999996,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 346.57865899999996,
                    "min": 259.066717,
                    "p50": 306.21707699999996,
                    "p95": 346.57865899999996,
                    "p99": 346.57865899999996,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 276.04103699999996,
                    "min": 176.643124,
                    "p50": 240.162511,
                    "p95": 276.04103699999996,
                    "p99": 276.04103699999996,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 205.219689,
                    "min": 102.832343,
                    "p50": 111.91819799999999,
                    "p95": 205.219689,
                    "p99": 205.219689,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 988.535212,
                    "min": 928.179952,
                    "p50": 955.957819,
                    "p95": 988.535212,
                    "p99": 988.535212,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 529.212933,
                    "min": 443.513845,
                    "p50": 524.116779,
                    "p95": 529.212933,
                    "p99": 529.212933,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 196.13320299999998,
                    "min": 124.43647899999999,
                    "p50": 145.874351,
                    "p95": 196.13320299999998,
                    "p99": 196.13320299999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 183.875113,
                    "min": 146.81181899999999,
                    "p50": 183.68355699999998,
                    "p95": 183.875113,
                    "p99": 183.875113,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 127.952923,
                    "min": 67.075422,
                    "p50": 121.850218,
                    "p95": 127.952923,
                    "p99": 127.952923,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 153.309436,
                    "min": 105.76343999999999,
                    "p50": 128.98117299999998,
                    "p95": 153.309436,
                    "p99": 153.309436,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.616985,
                    "min": 51.588789,
                    "p50": 60.053796,
                    "p95": 85.616985,
                    "p99": 85.616985,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 251.34668299999998,
                    "min": 136.465721,
                    "p50": 210.01702699999998,
                    "p95": 251.34668299999998,
                    "p99": 251.34668299999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 170.40913999999998,
                    "min": 120.25223,
                    "p50": 137.184172,
                    "p95": 170.40913999999998,
                    "p99": 170.40913999999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 197.751172,
                    "min": 115.77013799999999,
                    "p50": 154.22437,
                    "p95": 197.751172,
                    "p99": 197.751172,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.542081,
                    "min": 52.703551,
                    "p50": 103.957512,
                    "p95": 134.542081,
                    "p99": 134.542081,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 140.791673,
                    "min": 130.910026,
                    "p50": 137.01171399999998,
                    "p95": 140.791673,
                    "p99": 140.791673,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.987115,
                    "min": 71.529845,
                    "p50": 77.841742,
                    "p95": 77.987115,
                    "p99": 77.987115,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.66899,
                    "min": 47.276405,
                    "p50": 47.998270999999995,
                    "p95": 51.66899,
                    "p99": 51.66899,
                    "n": 4,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 308.524169,
                    "min": 215.567996,
                    "p50": 286.462364,
                    "p95": 308.524169,
                    "p99": 308.524169,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 135.830839,
                    "min": 101.363109,
                    "p50": 125.340435,
                    "p95": 135.830839,
                    "p99": 135.830839,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 328.36762699999997,
                    "min": 245.916644,
                    "p50": 264.02872099999996,
                    "p95": 328.36762699999997,
                    "p99": 328.36762699999997,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 179.974529,
                    "min": 92.431889,
                    "p50": 119.975984,
                    "p95": 179.974529,
                    "p99": 179.974529,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 202.827257,
                    "min": 104.449308,
                    "p50": 115.224054,
                    "p95": 202.827257,
                    "p99": 202.827257,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.77764499999999,
                    "min": 75.28380299999999,
                    "p50": 83.66111,
                    "p95": 89.77764499999999,
                    "p99": 89.77764499999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 260.923343,
                    "min": 193.26922499999998,
                    "p50": 216.014961,
                    "p95": 260.923343,
                    "p99": 260.923343,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 226.639063,
                    "min": 122.988919,
                    "p50": 182.21797899999999,
                    "p95": 226.639063,
                    "p99": 226.639063,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 460.868724,
                    "min": 381.272476,
                    "p50": 431.84185099999996,
                    "p95": 460.868724,
                    "p99": 460.868724,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 174.12788999999998,
                    "min": 128.73317,
                    "p50": 140.915807,
                    "p95": 174.12788999999998,
                    "p99": 174.12788999999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1453.0644869999999,
                    "min": 1277.704775,
                    "p50": 1371.871371,
                    "p95": 1453.0644869999999,
                    "p99": 1453.0644869999999,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.500903,
                    "min": 84.42946099999999,
                    "p50": 93.72529399999999,
                    "p95": 94.500903,
                    "p99": 94.500903,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 193.431133,
                    "min": 175.280067,
                    "p50": 183.758986,
                    "p95": 193.431133,
                    "p99": 193.431133,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.31260899999998,
                    "min": 171.099141,
                    "p50": 192.643185,
                    "p95": 211.31260899999998,
                    "p99": 211.31260899999998,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 571.876925,
                    "min": 493.00812099999996,
                    "p50": 568.803366,
                    "p95": 571.876925,
                    "p99": 571.876925,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 68.122247,
                    "min": 50.274138,
                    "p50": 64.82156599999999,
                    "p95": 68.122247,
                    "p99": 68.122247,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 206.883752,
                    "min": 184.706737,
                    "p50": 205.932709,
                    "p95": 206.883752,
                    "p99": 206.883752,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 167.792452,
                    "min": 130.424266,
                    "p50": 161.217244,
                    "p95": 167.792452,
                    "p99": 167.792452,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 697.755266,
                    "min": 597.97606,
                    "p50": 669.797283,
                    "p95": 697.755266,
                    "p99": 697.755266,
                    "n": 4,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 954.495242,
                    "min": 937.905127,
                    "p50": 951.461867,
                    "p95": 954.495242,
                    "p99": 954.495242,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 811.582056,
                    "min": 789.891753,
                    "p50": 806.3657939999999,
                    "p95": 811.582056,
                    "p99": 811.582056,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1217.370772,
                    "min": 1180.428027,
                    "p50": 1203.630224,
                    "p95": 1217.370772,
                    "p99": 1217.370772,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 423.425595,
                    "min": 415.93963499999995,
                    "p50": 420.87347,
                    "p95": 423.425595,
                    "p99": 423.425595,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.93706,
                    "min": 515.41496,
                    "p50": 554.472807,
                    "p95": 555.93706,
                    "p99": 555.93706,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1081.523463,
                    "min": 1053.0584629999998,
                    "p50": 1078.541908,
                    "p95": 1081.523463,
                    "p99": 1081.523463,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 685.248069,
                    "min": 651.61275,
                    "p50": 677.854489,
                    "p95": 685.248069,
                    "p99": 685.248069,
                    "n": 4,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1579.747079,
                    "min": 1494.657941,
                    "p50": 1534.422819,
                    "p95": 1579.747079,
                    "p99": 1579.747079,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 484.246965,
                    "min": 461.956526,
                    "p50": 471.79913799999997,
                    "p95": 484.246965,
                    "p99": 484.246965,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1224.779119,
                    "min": 1159.0000559999999,
                    "p50": 1186.80702,
                    "p95": 1224.779119,
                    "p99": 1224.779119,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 910.994932,
                    "min": 883.319,
                    "p50": 906.0070609999999,
                    "p95": 910.994932,
                    "p99": 910.994932,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1083.9500759999999,
                    "min": 1030.474138,
                    "p50": 1066.6357289999999,
                    "p95": 1083.9500759999999,
                    "p99": 1083.9500759999999,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1355.0686389999998,
                    "min": 1309.565623,
                    "p50": 1342.74362,
                    "p95": 1355.0686389999998,
                    "p99": 1355.0686389999998,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 620.185161,
                    "min": 613.0875,
                    "p50": 618.065627,
                    "p95": 620.185161,
                    "p99": 620.185161,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 779.627262,
                    "min": 747.877804,
                    "p50": 765.0462779999999,
                    "p95": 779.627262,
                    "p99": 779.627262,
                    "n": 4,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1126.620478,
                    "min": 1015.882127,
                    "p50": 1107.425612,
                    "p95": 1126.620478,
                    "p99": 1126.620478,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1938.838878,
                    "min": 1735.524379,
                    "p50": 1822.5228299999999,
                    "p95": 1938.838878,
                    "p99": 1938.838878,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2453.236098,
                    "min": 2193.289245,
                    "p50": 2321.461956,
                    "p95": 2453.236098,
                    "p99": 2453.236098,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1678.076491,
                    "min": 1491.5946689999998,
                    "p50": 1559.9532,
                    "p95": 1678.076491,
                    "p99": 1678.076491,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3281.1007179999997,
                    "min": 2975.6255429999997,
                    "p50": 3143.208722,
                    "p95": 3281.1007179999997,
                    "p99": 3281.1007179999997,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 843.429595,
                    "min": 762.676121,
                    "p50": 805.349526,
                    "p95": 843.429595,
                    "p99": 843.429595,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2768.960737,
                    "min": 2441.626859,
                    "p50": 2639.945954,
                    "p95": 2768.960737,
                    "p99": 2768.960737,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2207.878347,
                    "min": 1964.3379639999998,
                    "p50": 2088.721188,
                    "p95": 2207.878347,
                    "p99": 2207.878347,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1407.302948,
                    "min": 1234.550503,
                    "p50": 1308.35185,
                    "p95": 1407.302948,
                    "p99": 1407.302948,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3064.543769,
                    "min": 2699.67722,
                    "p50": 2858.406239,
                    "p95": 3064.543769,
                    "p99": 3064.543769,
                    "n": 4,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 836.4438369999999,
                    "min": 796.027782,
                    "p50": 822.5041769999999,
                    "p95": 836.4438369999999,
                    "p99": 836.4438369999999,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1123.3770459999998,
                    "min": 1073.70803,
                    "p50": 1096.022814,
                    "p95": 1123.3770459999998,
                    "p99": 1123.3770459999998,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 309.228719,
                    "min": 300.493704,
                    "p50": 303.310885,
                    "p95": 309.228719,
                    "p99": 309.228719,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 570.627165,
                    "min": 527.294094,
                    "p50": 558.679577,
                    "p95": 570.627165,
                    "p99": 570.627165,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 967.608358,
                    "min": 948.7168959999999,
                    "p50": 956.4829269999999,
                    "p95": 967.608358,
                    "p99": 967.608358,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 435.57345799999996,
                    "min": 420.22272899999996,
                    "p50": 431.463986,
                    "p95": 435.57345799999996,
                    "p99": 435.57345799999996,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 699.8012719999999,
                    "min": 694.654058,
                    "p50": 699.210437,
                    "p95": 699.8012719999999,
                    "p99": 699.8012719999999,
                    "n": 4,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2341.412702,
                    "min": 2107.61201,
                    "p50": 2197.283618,
                    "p95": 2341.412702,
                    "p99": 2341.412702,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1196.555499,
                    "min": 1069.6647289999999,
                    "p50": 1099.9290489999998,
                    "p95": 1196.555499,
                    "p99": 1196.555499,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 682.301649,
                    "min": 590.092884,
                    "p50": 643.8979899999999,
                    "p95": 682.301649,
                    "p99": 682.301649,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2106.688924,
                    "min": 1922.154102,
                    "p50": 2011.466058,
                    "p95": 2106.688924,
                    "p99": 2106.688924,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1646.019901,
                    "min": 1489.770529,
                    "p50": 1535.281503,
                    "p95": 1646.019901,
                    "p99": 1646.019901,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1318.9523789999998,
                    "min": 1193.3736059999999,
                    "p50": 1246.413053,
                    "p95": 1318.9523789999998,
                    "p99": 1318.9523789999998,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1957.4408039999998,
                    "min": 1737.549405,
                    "p50": 1812.885779,
                    "p95": 1957.4408039999998,
                    "p99": 1957.4408039999998,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 828.048467,
                    "min": 766.413687,
                    "p50": 772.133194,
                    "p95": 828.048467,
                    "p99": 828.048467,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 509.14475,
                    "min": 479.18445599999995,
                    "p50": 481.66727699999996,
                    "p95": 509.14475,
                    "p99": 509.14475,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2792.471655,
                    "min": 2558.041508,
                    "p50": 2620.1716539999998,
                    "p95": 2792.471655,
                    "p99": 2792.471655,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2428.5335,
                    "min": 2225.037825,
                    "p50": 2241.388427,
                    "p95": 2428.5335,
                    "p99": 2428.5335,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3230.899707,
                    "min": 2944.741838,
                    "p50": 2976.808634,
                    "p95": 3230.899707,
                    "p99": 3230.899707,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1456.1603719999998,
                    "min": 1351.927853,
                    "p50": 1374.000757,
                    "p95": 1456.1603719999998,
                    "p99": 1456.1603719999998,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1789.492615,
                    "min": 1643.652893,
                    "p50": 1658.627376,
                    "p95": 1789.492615,
                    "p99": 1789.492615,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 994.436112,
                    "min": 907.7461959999999,
                    "p50": 915.7521479999999,
                    "p95": 994.436112,
                    "p99": 994.436112,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2248.8961879999997,
                    "min": 2037.740654,
                    "p50": 2094.238766,
                    "p95": 2248.8961879999997,
                    "p99": 2248.8961879999997,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 869.1061129999999,
                    "min": 815.6615549999999,
                    "p50": 829.463346,
                    "p95": 869.1061129999999,
                    "p99": 869.1061129999999,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2502.70448,
                    "min": 2333.305767,
                    "p50": 2408.91435,
                    "p95": 2502.70448,
                    "p99": 2502.70448,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1674.472305,
                    "min": 1561.867632,
                    "p50": 1577.580344,
                    "p95": 1674.472305,
                    "p99": 1674.472305,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 662.806742,
                    "min": 643.998296,
                    "p50": 661.330283,
                    "p95": 662.806742,
                    "p99": 662.806742,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1023.397653,
                    "min": 954.300338,
                    "p50": 967.422881,
                    "p95": 1023.397653,
                    "p99": 1023.397653,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2033.5478349999998,
                    "min": 1879.896405,
                    "p50": 1886.736635,
                    "p95": 2033.5478349999998,
                    "p99": 2033.5478349999998,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2342.866446,
                    "min": 2152.054288,
                    "p50": 2212.186107,
                    "p95": 2342.866446,
                    "p99": 2342.866446,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3319.592992,
                    "min": 3106.404912,
                    "p50": 3109.308759,
                    "p95": 3319.592992,
                    "p99": 3319.592992,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1201.472806,
                    "min": 1105.834034,
                    "p50": 1121.303404,
                    "p95": 1201.472806,
                    "p99": 1201.472806,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2908.302867,
                    "min": 2698.321926,
                    "p50": 2747.4362969999997,
                    "p95": 2908.302867,
                    "p99": 2908.302867,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1349.017915,
                    "min": 1261.131547,
                    "p50": 1274.692089,
                    "p95": 1349.017915,
                    "p99": 1349.017915,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1850.171335,
                    "min": 1720.049882,
                    "p50": 1735.20915,
                    "p95": 1850.171335,
                    "p99": 1850.171335,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1518.21815,
                    "min": 1413.44571,
                    "p50": 1433.632476,
                    "p95": 1518.21815,
                    "p99": 1518.21815,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 528.0504099999999,
                    "min": 464.473187,
                    "p50": 500.37220399999995,
                    "p95": 528.0504099999999,
                    "p99": 528.0504099999999,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 857.105521,
                    "min": 784.4210529999999,
                    "p50": 796.863347,
                    "p95": 857.105521,
                    "p99": 857.105521,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1302.6606379999998,
                    "min": 1189.369408,
                    "p50": 1235.723244,
                    "p95": 1302.6606379999998,
                    "p99": 1302.6606379999998,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1161.082643,
                    "min": 1073.133582,
                    "p50": 1077.6447309999999,
                    "p95": 1161.082643,
                    "p99": 1161.082643,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2851.6601109999997,
                    "min": 2614.6761269999997,
                    "p50": 2636.2366509999997,
                    "p95": 2851.6601109999997,
                    "p99": 2851.6601109999997,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2464.934827,
                    "min": 2220.693706,
                    "p50": 2256.652784,
                    "p95": 2464.934827,
                    "p99": 2464.934827,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 506.924171,
                    "min": 444.045455,
                    "p50": 483.660782,
                    "p95": 506.924171,
                    "p99": 506.924171,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1775.472205,
                    "min": 1642.7289509999998,
                    "p50": 1671.0806129999999,
                    "p95": 1775.472205,
                    "p99": 1775.472205,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1648.999277,
                    "min": 1510.192724,
                    "p50": 1541.399621,
                    "p95": 1648.999277,
                    "p99": 1648.999277,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 662.661826,
                    "min": 623.5849939999999,
                    "p50": 636.327935,
                    "p95": 662.661826,
                    "p99": 662.661826,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1950.820376,
                    "min": 1808.223284,
                    "p50": 1810.979102,
                    "p95": 1950.820376,
                    "p99": 1950.820376,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1489.761975,
                    "min": 1366.243473,
                    "p50": 1380.5606679999999,
                    "p95": 1489.761975,
                    "p99": 1489.761975,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3251.752391,
                    "min": 2968.688357,
                    "p50": 3017.505154,
                    "p95": 3251.752391,
                    "p99": 3251.752391,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2278.388329,
                    "min": 2087.642982,
                    "p50": 2142.84087,
                    "p95": 2278.388329,
                    "p99": 2278.388329,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1014.375086,
                    "min": 916.733266,
                    "p50": 935.9537899999999,
                    "p95": 1014.375086,
                    "p99": 1014.375086,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2111.7944319999997,
                    "min": 1941.7223749999998,
                    "p50": 1975.321954,
                    "p95": 2111.7944319999997,
                    "p99": 2111.7944319999997,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3298.088797,
                    "min": 2989.3430319999998,
                    "p50": 3108.0179909999997,
                    "p95": 3298.088797,
                    "p99": 3298.088797,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 690.4726089999999,
                    "min": 620.950063,
                    "p50": 648.791616,
                    "p95": 690.4726089999999,
                    "p99": 690.4726089999999,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1495.066986,
                    "min": 1356.029732,
                    "p50": 1409.146421,
                    "p95": 1495.066986,
                    "p99": 1495.066986,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1641.080099,
                    "min": 1501.547595,
                    "p50": 1580.897784,
                    "p95": 1641.080099,
                    "p99": 1641.080099,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1797.98921,
                    "min": 1634.5468529999998,
                    "p50": 1674.066727,
                    "p95": 1797.98921,
                    "p99": 1797.98921,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2825.571469,
                    "min": 2575.251058,
                    "p50": 2626.131157,
                    "p95": 2825.571469,
                    "p99": 2825.571469,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1958.0731819999999,
                    "min": 1777.260775,
                    "p50": 1805.7876119999999,
                    "p95": 1958.0731819999999,
                    "p99": 1958.0731819999999,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2095.584512,
                    "min": 1920.449207,
                    "p50": 1944.149095,
                    "p95": 2095.584512,
                    "p99": 2095.584512,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 528.821294,
                    "min": 462.009444,
                    "p50": 481.264463,
                    "p95": 528.821294,
                    "p99": 528.821294,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 998.5742769999999,
                    "min": 880.9470759999999,
                    "p50": 919.1766779999999,
                    "p95": 998.5742769999999,
                    "p99": 998.5742769999999,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 844.824812,
                    "min": 764.6632,
                    "p50": 773.915032,
                    "p95": 844.824812,
                    "p99": 844.824812,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2440.27167,
                    "min": 2216.9183909999997,
                    "p50": 2253.376879,
                    "p95": 2440.27167,
                    "p99": 2440.27167,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1319.882144,
                    "min": 1195.787433,
                    "p50": 1212.503551,
                    "p95": 1319.882144,
                    "p99": 1319.882144,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2282.336953,
                    "min": 2072.898859,
                    "p50": 2111.648327,
                    "p95": 2282.336953,
                    "p99": 2282.336953,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1157.961652,
                    "min": 1029.201969,
                    "p50": 1071.546002,
                    "p95": 1157.961652,
                    "p99": 1157.961652,
                    "n": 4,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 816.486591,
                    "min": 772.302905,
                    "p50": 781.799178,
                    "p95": 816.486591,
                    "p99": 816.486591,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 212.93101099999998,
                    "min": 197.13262899999998,
                    "p50": 205.543207,
                    "p95": 212.93101099999998,
                    "p99": 212.93101099999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4398.257798,
                    "min": 4030.924569,
                    "p50": 4076.259099,
                    "p95": 4398.257798,
                    "p99": 4398.257798,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 912.5465019999999,
                    "min": 814.126089,
                    "p50": 869.967445,
                    "p95": 912.5465019999999,
                    "p99": 912.5465019999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1345.7722179999998,
                    "min": 1212.4809619999999,
                    "p50": 1254.3242109999999,
                    "p95": 1345.7722179999998,
                    "p99": 1345.7722179999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.09502,
                    "min": 423.69665699999996,
                    "p50": 444.639868,
                    "p95": 478.09502,
                    "p99": 478.09502,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1768.2896919999998,
                    "min": 1619.1552179999999,
                    "p50": 1657.7243079999998,
                    "p95": 1768.2896919999998,
                    "p99": 1768.2896919999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.614721,
                    "min": 242.83453599999999,
                    "p50": 281.231719,
                    "p95": 298.614721,
                    "p99": 298.614721,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 383.95273199999997,
                    "min": 361.468971,
                    "p50": 366.31514,
                    "p95": 383.95273199999997,
                    "p99": 383.95273199999997,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.11490999999998,
                    "min": 157.86627099999998,
                    "p50": 159.18963499999998,
                    "p95": 170.11490999999998,
                    "p99": 170.11490999999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 431.69386499999996,
                    "min": 398.779342,
                    "p50": 403.504443,
                    "p95": 431.69386499999996,
                    "p99": 431.69386499999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 349.669922,
                    "min": 290.077986,
                    "p50": 325.98662099999996,
                    "p95": 349.669922,
                    "p99": 349.669922,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 519.231005,
                    "min": 480.34714199999996,
                    "p50": 488.99749599999996,
                    "p95": 519.231005,
                    "p99": 519.231005,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 597.1745569999999,
                    "min": 557.689675,
                    "p50": 564.002567,
                    "p95": 597.1745569999999,
                    "p99": 597.1745569999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 554.019099,
                    "min": 496.69517399999995,
                    "p50": 523.294234,
                    "p95": 554.019099,
                    "p99": 554.019099,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2201.231296,
                    "min": 2041.565764,
                    "p50": 2054.069365,
                    "p95": 2201.231296,
                    "p99": 2201.231296,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.061712,
                    "min": 238.32627699999998,
                    "p50": 241.780406,
                    "p95": 256.061712,
                    "p99": 256.061712,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 646.464402,
                    "min": 598.233378,
                    "p50": 605.6434939999999,
                    "p95": 646.464402,
                    "p99": 646.464402,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 655.5346159999999,
                    "min": 632.6986529999999,
                    "p50": 652.427165,
                    "p95": 655.5346159999999,
                    "p99": 655.5346159999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 592.0492919999999,
                    "min": 547.1653289999999,
                    "p50": 554.973271,
                    "p95": 592.0492919999999,
                    "p99": 592.0492919999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4334.896943,
                    "min": 4003.8966889999997,
                    "p50": 4034.747723,
                    "p95": 4334.896943,
                    "p99": 4334.896943,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 629.861531,
                    "min": 564.293267,
                    "p50": 595.1988249999999,
                    "p95": 629.861531,
                    "p99": 629.861531,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 420.549013,
                    "min": 387.64667599999996,
                    "p50": 399.61456899999996,
                    "p95": 420.549013,
                    "p99": 420.549013,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 793.077717,
                    "min": 732.788062,
                    "p50": 742.964198,
                    "p95": 793.077717,
                    "p99": 793.077717,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 905.28944,
                    "min": 831.990508,
                    "p50": 846.725792,
                    "p95": 905.28944,
                    "p99": 905.28944,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.808684,
                    "min": 210.63718899999998,
                    "p50": 241.772182,
                    "p95": 252.808684,
                    "p99": 252.808684,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 471.976863,
                    "min": 432.99967599999997,
                    "p50": 448.30744799999997,
                    "p95": 471.976863,
                    "p99": 471.976863,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 340.25457,
                    "min": 311.336095,
                    "p50": 318.163395,
                    "p95": 340.25457,
                    "p99": 340.25457,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 683.39688,
                    "min": 638.31355,
                    "p50": 640.772242,
                    "p95": 683.39688,
                    "p99": 683.39688,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 552.0389759999999,
                    "min": 509.151034,
                    "p50": 521.904282,
                    "p95": 552.0389759999999,
                    "p99": 552.0389759999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1738.4201289999999,
                    "min": 1624.81205,
                    "p50": 1657.501797,
                    "p95": 1738.4201289999999,
                    "p99": 1738.4201289999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1326.416788,
                    "min": 1242.125981,
                    "p50": 1253.689157,
                    "p95": 1326.416788,
                    "p99": 1326.416788,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 511.34074899999996,
                    "min": 476.32726299999996,
                    "p50": 479.246691,
                    "p95": 511.34074899999996,
                    "p99": 511.34074899999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 162.121414,
                    "min": 148.095595,
                    "p50": 158.091367,
                    "p95": 162.121414,
                    "p99": 162.121414,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 382.08025699999996,
                    "min": 355.30186699999996,
                    "p50": 363.051229,
                    "p95": 382.08025699999996,
                    "p99": 382.08025699999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.271478,
                    "min": 192.846239,
                    "p50": 198.82796199999999,
                    "p95": 202.271478,
                    "p99": 202.271478,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 286.790507,
                    "min": 276.06510199999997,
                    "p50": 280.703571,
                    "p95": 286.790507,
                    "p99": 286.790507,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2171.048952,
                    "min": 2032.83062,
                    "p50": 2041.494358,
                    "p95": 2171.048952,
                    "p99": 2171.048952,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.12323299999997,
                    "min": 322.452636,
                    "p50": 329.166729,
                    "p95": 345.12323299999997,
                    "p99": 345.12323299999997,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 587.105335,
                    "min": 541.251179,
                    "p50": 580.1196729999999,
                    "p95": 587.105335,
                    "p99": 587.105335,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.127948,
                    "min": 490.367488,
                    "p50": 495.542214,
                    "p95": 522.127948,
                    "p99": 522.127948,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 300.693588,
                    "min": 283.44381699999997,
                    "p50": 290.251265,
                    "p95": 300.693588,
                    "p99": 300.693588,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 896.2781309999999,
                    "min": 865.1206099999999,
                    "p50": 871.392885,
                    "p95": 896.2781309999999,
                    "p99": 896.2781309999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.92886199999998,
                    "min": 200.112506,
                    "p50": 208.689379,
                    "p95": 213.92886199999998,
                    "p99": 213.92886199999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.98972499999996,
                    "min": 369.12118899999996,
                    "p50": 384.973481,
                    "p95": 394.98972499999996,
                    "p99": 394.98972499999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 483.742443,
                    "min": 451.267401,
                    "p50": 454.260585,
                    "p95": 483.742443,
                    "p99": 483.742443,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 696.026019,
                    "min": 644.938979,
                    "p50": 668.897347,
                    "p95": 696.026019,
                    "p99": 696.026019,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1382.8605619999998,
                    "min": 1280.412047,
                    "p50": 1288.640158,
                    "p95": 1382.8605619999998,
                    "p99": 1382.8605619999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 566.985541,
                    "min": 534.7337739999999,
                    "p50": 538.577282,
                    "p95": 566.985541,
                    "p99": 566.985541,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.58635799999996,
                    "min": 402.96680799999996,
                    "p50": 411.23409799999996,
                    "p95": 435.58635799999996,
                    "p99": 435.58635799999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.724782,
                    "min": 242.13321299999998,
                    "p50": 248.43408499999998,
                    "p95": 258.724782,
                    "p99": 258.724782,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 662.640258,
                    "min": 618.92786,
                    "p50": 623.042777,
                    "p95": 662.640258,
                    "p99": 662.640258,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 800.1208029999999,
                    "min": 749.318123,
                    "p50": 766.650674,
                    "p95": 800.1208029999999,
                    "p99": 800.1208029999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1821.040941,
                    "min": 1685.466357,
                    "p50": 1705.824284,
                    "p95": 1821.040941,
                    "p99": 1821.040941,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2232.3365129999997,
                    "min": 2101.223163,
                    "p50": 2120.930556,
                    "p95": 2232.3365129999997,
                    "p99": 2232.3365129999997,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4430.120729,
                    "min": 4183.676987,
                    "p50": 4215.736022,
                    "p95": 4430.120729,
                    "p99": 4430.120729,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.14978299999999,
                    "min": 163.30853399999998,
                    "p50": 164.89368,
                    "p95": 169.14978299999999,
                    "p99": 169.14978299999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2167.8438309999997,
                    "min": 2010.316032,
                    "p50": 2020.315502,
                    "p95": 2167.8438309999997,
                    "p99": 2167.8438309999997,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 596.1253899999999,
                    "min": 549.552604,
                    "p50": 564.287885,
                    "p95": 596.1253899999999,
                    "p99": 596.1253899999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 461.773687,
                    "min": 434.97414699999996,
                    "p50": 440.84840199999996,
                    "p95": 461.773687,
                    "p99": 461.773687,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 679.1800939999999,
                    "min": 632.230007,
                    "p50": 636.98559,
                    "p95": 679.1800939999999,
                    "p99": 679.1800939999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 325.3105,
                    "min": 312.70214699999997,
                    "p50": 320.05299299999996,
                    "p95": 325.3105,
                    "p99": 325.3105,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.64939999999999,
                    "min": 218.652886,
                    "p50": 240.08259999999999,
                    "p95": 252.64939999999999,
                    "p99": 252.64939999999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.52289399999998,
                    "min": 158.28488,
                    "p50": 159.537537,
                    "p95": 168.52289399999998,
                    "p99": 168.52289399999998,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 511.35115399999995,
                    "min": 469.320703,
                    "p50": 476.766221,
                    "p95": 511.35115399999995,
                    "p99": 511.35115399999995,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 792.269094,
                    "min": 730.926204,
                    "p50": 738.425072,
                    "p95": 792.269094,
                    "p99": 792.269094,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 296.603164,
                    "min": 276.952046,
                    "p50": 279.00108,
                    "p95": 296.603164,
                    "p99": 296.603164,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 384.26010299999996,
                    "min": 354.471809,
                    "p50": 357.015805,
                    "p95": 384.26010299999996,
                    "p99": 384.26010299999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 639.817372,
                    "min": 589.655252,
                    "p50": 599.2143199999999,
                    "p95": 639.817372,
                    "p99": 639.817372,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1759.850956,
                    "min": 1600.091534,
                    "p50": 1642.7936519999998,
                    "p95": 1759.850956,
                    "p99": 1759.850956,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4351.690885999999,
                    "min": 3993.33033,
                    "p50": 4036.587761,
                    "p95": 4351.690885999999,
                    "p99": 4351.690885999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 415.60981699999996,
                    "min": 388.753716,
                    "p50": 402.468592,
                    "p95": 415.60981699999996,
                    "p99": 415.60981699999996,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 903.31426,
                    "min": 823.918635,
                    "p50": 839.825958,
                    "p95": 903.31426,
                    "p99": 903.31426,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 554.052252,
                    "min": 511.044991,
                    "p50": 520.426929,
                    "p95": 554.052252,
                    "p99": 554.052252,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 205.58370299999999,
                    "min": 188.490015,
                    "p50": 198.126462,
                    "p95": 205.58370299999999,
                    "p99": 205.58370299999999,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1288.261778,
                    "min": 1229.710949,
                    "p50": 1238.436954,
                    "p95": 1288.261778,
                    "p99": 1288.261778,
                    "n": 4,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 800.9796299999999,
                    "min": 728.891084,
                    "p50": 735.331686,
                    "p95": 800.9796299999999,
                    "p99": 800.9796299999999,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 608.925839,
                    "min": 553.890479,
                    "p50": 557.414001,
                    "p95": 608.925839,
                    "p99": 608.925839,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 971.8441909999999,
                    "min": 867.874009,
                    "p50": 914.240722,
                    "p95": 971.8441909999999,
                    "p99": 971.8441909999999,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3895.7661559999997,
                    "min": 3442.4620849999997,
                    "p50": 3512.176928,
                    "p95": 3895.7661559999997,
                    "p99": 3895.7661559999997,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2505.784583,
                    "min": 2269.0974029999998,
                    "p50": 2305.257121,
                    "p95": 2505.784583,
                    "p99": 2505.784583,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2897.6902029999997,
                    "min": 2584.944008,
                    "p50": 2662.29101,
                    "p95": 2897.6902029999997,
                    "p99": 2897.6902029999997,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3381.219012,
                    "min": 3016.337388,
                    "p50": 3098.240403,
                    "p95": 3381.219012,
                    "p99": 3381.219012,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1756.1577909999999,
                    "min": 1565.01049,
                    "p50": 1589.135928,
                    "p95": 1756.1577909999999,
                    "p99": 1756.1577909999999,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1173.4096749999999,
                    "min": 1062.5711099999999,
                    "p50": 1074.663392,
                    "p95": 1173.4096749999999,
                    "p99": 1173.4096749999999,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1555.352492,
                    "min": 1403.411206,
                    "p50": 1434.590582,
                    "p95": 1555.352492,
                    "p99": 1555.352492,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1359.28278,
                    "min": 1227.836406,
                    "p50": 1271.2766339999998,
                    "p95": 1359.28278,
                    "p99": 1359.28278,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1930.6216,
                    "min": 1735.472415,
                    "p50": 1781.3853789999998,
                    "p95": 1930.6216,
                    "p99": 1930.6216,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2148.465963,
                    "min": 1901.9277499999998,
                    "p50": 1945.934018,
                    "p95": 2148.465963,
                    "p99": 2148.465963,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2714.350618,
                    "min": 2427.517919,
                    "p50": 2472.201474,
                    "p95": 2714.350618,
                    "p99": 2714.350618,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2344.3949159999997,
                    "min": 2076.292176,
                    "p50": 2122.046069,
                    "p95": 2344.3949159999997,
                    "p99": 2344.3949159999997,
                    "n": 4,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2153.174085,
                    "min": 1939.3959849999999,
                    "p50": 1957.6189319999999,
                    "p95": 2153.174085,
                    "p99": 2153.174085,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2514.2531879999997,
                    "min": 2278.13591,
                    "p50": 2297.999056,
                    "p95": 2514.2531879999997,
                    "p99": 2514.2531879999997,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2669.21441,
                    "min": 2456.65344,
                    "p50": 2480.705283,
                    "p95": 2669.21441,
                    "p99": 2669.21441,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 808.416261,
                    "min": 719.2217499999999,
                    "p50": 729.701459,
                    "p95": 808.416261,
                    "p99": 808.416261,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 989.9488279999999,
                    "min": 890.2407569999999,
                    "p50": 929.119234,
                    "p95": 989.9488279999999,
                    "p99": 989.9488279999999,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1373.59378,
                    "min": 1223.2255579999999,
                    "p50": 1268.711695,
                    "p95": 1373.59378,
                    "p99": 1373.59378,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1192.2739179999999,
                    "min": 1063.0911939999999,
                    "p50": 1099.662463,
                    "p95": 1192.2739179999999,
                    "p99": 1192.2739179999999,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1942.267856,
                    "min": 1747.2343099999998,
                    "p50": 1789.389578,
                    "p95": 1942.267856,
                    "p99": 1942.267856,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 608.869433,
                    "min": 550.044305,
                    "p50": 571.945479,
                    "p95": 608.869433,
                    "p99": 608.869433,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1559.8491219999999,
                    "min": 1399.830346,
                    "p50": 1442.2014359999998,
                    "p95": 1559.8491219999999,
                    "p99": 1559.8491219999999,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3346.158856,
                    "min": 3004.9022099999997,
                    "p50": 3070.710999,
                    "p95": 3346.158856,
                    "p99": 3346.158856,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3858.92516,
                    "min": 3457.9948679999998,
                    "p50": 3507.313686,
                    "p95": 3858.92516,
                    "p99": 3858.92516,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2869.798735,
                    "min": 2553.294476,
                    "p50": 2627.725591,
                    "p95": 2869.798735,
                    "p99": 2869.798735,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1766.0260079999998,
                    "min": 1585.403386,
                    "p50": 1589.222806,
                    "p95": 1766.0260079999998,
                    "p99": 1766.0260079999998,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2354.7357819999997,
                    "min": 2088.870601,
                    "p50": 2129.348982,
                    "p95": 2354.7357819999997,
                    "p99": 2354.7357819999997,
                    "n": 4,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2554.442982,
                    "min": 2342.8311209999997,
                    "p50": 2375.959888,
                    "p95": 2554.442982,
                    "p99": 2554.442982,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2389.695932,
                    "min": 2153.9770599999997,
                    "p50": 2183.7042859999997,
                    "p95": 2389.695932,
                    "p99": 2389.695932,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2778.4809069999997,
                    "min": 2487.012881,
                    "p50": 2518.207196,
                    "p95": 2778.4809069999997,
                    "p99": 2778.4809069999997,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3207.4721649999997,
                    "min": 2871.261235,
                    "p50": 2944.954702,
                    "p95": 3207.4721649999997,
                    "p99": 3207.4721649999997,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2232.266017,
                    "min": 1979.289008,
                    "p50": 2034.74471,
                    "p95": 2232.266017,
                    "p99": 2232.266017,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2001.966737,
                    "min": 1815.924153,
                    "p50": 1873.8751599999998,
                    "p95": 2001.966737,
                    "p99": 2001.966737,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 559.601237,
                    "min": 527.475904,
                    "p50": 535.906361,
                    "p95": 559.601237,
                    "p99": 559.601237,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3649.844157,
                    "min": 3250.840275,
                    "p50": 3334.746538,
                    "p95": 3649.844157,
                    "p99": 3649.844157,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1839.3632129999999,
                    "min": 1655.1014499999999,
                    "p50": 1698.2551919999999,
                    "p95": 1839.3632129999999,
                    "p99": 1839.3632129999999,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1674.614002,
                    "min": 1501.5014039999999,
                    "p50": 1541.158346,
                    "p95": 1674.614002,
                    "p99": 1674.614002,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1112.939365,
                    "min": 1013.0063809999999,
                    "p50": 1031.5239179999999,
                    "p95": 1112.939365,
                    "p99": 1112.939365,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1473.9304319999999,
                    "min": 1335.433685,
                    "p50": 1359.9417799999999,
                    "p95": 1473.9304319999999,
                    "p99": 1473.9304319999999,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1307.630514,
                    "min": 1181.84662,
                    "p50": 1193.13507,
                    "p95": 1307.630514,
                    "p99": 1307.630514,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 767.549986,
                    "min": 684.407924,
                    "p50": 697.650895,
                    "p95": 767.549986,
                    "p99": 767.549986,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 951.010492,
                    "min": 826.300176,
                    "p50": 857.866322,
                    "p95": 951.010492,
                    "p99": 951.010492,
                    "n": 4,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2677.106131,
                    "min": 2411.959707,
                    "p50": 2476.9731159999997,
                    "p95": 2677.106131,
                    "p99": 2677.106131,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2875.583732,
                    "min": 2617.7081129999997,
                    "p50": 2667.995431,
                    "p95": 2875.583732,
                    "p99": 2875.583732,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2324.754294,
                    "min": 2086.8816699999998,
                    "p50": 2143.77195,
                    "p95": 2324.754294,
                    "p99": 2324.754294,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3398.934933,
                    "min": 3014.536452,
                    "p50": 3089.635695,
                    "p95": 3398.934933,
                    "p99": 3398.934933,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 801.310877,
                    "min": 708.026828,
                    "p50": 740.0791459999999,
                    "p95": 801.310877,
                    "p99": 801.310877,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2139.508152,
                    "min": 1905.328008,
                    "p50": 1953.292865,
                    "p95": 2139.508152,
                    "p99": 2139.508152,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3897.7932379999997,
                    "min": 3438.230049,
                    "p50": 3542.401143,
                    "p95": 3897.7932379999997,
                    "p99": 3897.7932379999997,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1195.3659129999999,
                    "min": 1060.7067399999999,
                    "p50": 1088.468995,
                    "p95": 1195.3659129999999,
                    "p99": 1195.3659129999999,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1559.7142299999998,
                    "min": 1402.665947,
                    "p50": 1438.794477,
                    "p95": 1559.7142299999998,
                    "p99": 1559.7142299999998,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1371.389974,
                    "min": 1229.293625,
                    "p50": 1245.163138,
                    "p95": 1371.389974,
                    "p99": 1371.389974,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 993.302061,
                    "min": 891.6341719999999,
                    "p50": 912.1803299999999,
                    "p95": 993.302061,
                    "p99": 993.302061,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1746.6639329999998,
                    "min": 1555.345099,
                    "p50": 1624.294099,
                    "p95": 1746.6639329999998,
                    "p99": 1746.6639329999998,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1948.4091119999998,
                    "min": 1701.589427,
                    "p50": 1773.157365,
                    "p95": 1948.4091119999998,
                    "p99": 1948.4091119999998,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 617.8869189999999,
                    "min": 541.8234289999999,
                    "p50": 569.264589,
                    "p95": 617.8869189999999,
                    "p99": 617.8869189999999,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2540.5247839999997,
                    "min": 2252.638228,
                    "p50": 2305.732625,
                    "p95": 2540.5247839999997,
                    "p99": 2540.5247839999997,
                    "n": 4,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1616.018842,
                    "min": 1531.75485,
                    "p50": 1601.472648,
                    "p95": 1616.018842,
                    "p99": 1616.018842,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 991.2920499999999,
                    "min": 918.399356,
                    "p50": 950.709403,
                    "p95": 991.2920499999999,
                    "p99": 991.2920499999999,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1212.434122,
                    "min": 1137.279804,
                    "p50": 1154.203804,
                    "p95": 1212.434122,
                    "p99": 1212.434122,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 750.162739,
                    "min": 724.65501,
                    "p50": 746.281203,
                    "p95": 750.162739,
                    "p99": 750.162739,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 657.398461,
                    "min": 636.485585,
                    "p50": 651.165426,
                    "p95": 657.398461,
                    "p99": 657.398461,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1068.485937,
                    "min": 1039.83778,
                    "p50": 1064.712914,
                    "p95": 1068.485937,
                    "p99": 1068.485937,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 345.183691,
                    "min": 328.350301,
                    "p50": 344.790797,
                    "p95": 345.183691,
                    "p99": 345.183691,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 455.775692,
                    "min": 435.88672599999995,
                    "p50": 445.82838999999996,
                    "p95": 455.775692,
                    "p99": 455.775692,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 857.2585379999999,
                    "min": 826.9998459999999,
                    "p50": 837.9594579999999,
                    "p95": 857.2585379999999,
                    "p99": 857.2585379999999,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 550.88028,
                    "min": 528.306274,
                    "p50": 546.990036,
                    "p95": 550.88028,
                    "p99": 550.88028,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2105.89448,
                    "min": 2024.2493789999999,
                    "p50": 2088.356036,
                    "p95": 2105.89448,
                    "p99": 2105.89448,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1273.654478,
                    "min": 1232.753964,
                    "p50": 1261.939277,
                    "p95": 1273.654478,
                    "p99": 1273.654478,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1831.80998,
                    "min": 1783.614063,
                    "p50": 1805.8070799999998,
                    "p95": 1831.80998,
                    "p99": 1831.80998,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1477.9078949999998,
                    "min": 1429.8636629999999,
                    "p50": 1458.1181319999998,
                    "p95": 1477.9078949999998,
                    "p99": 1477.9078949999998,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1376.6552709999999,
                    "min": 1335.408036,
                    "p50": 1359.734132,
                    "p95": 1376.6552709999999,
                    "p99": 1376.6552709999999,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3111.365941,
                    "min": 3029.11766,
                    "p50": 3051.9883689999997,
                    "p95": 3111.365941,
                    "p99": 3111.365941,
                    "n": 4,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2045.2831219999998,
                    "min": 1875.969682,
                    "p50": 1897.968455,
                    "p95": 2045.2831219999998,
                    "p99": 2045.2831219999998,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1429.195318,
                    "min": 1367.486615,
                    "p50": 1398.683797,
                    "p95": 1429.195318,
                    "p99": 1429.195318,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1703.137967,
                    "min": 1629.8072519999998,
                    "p50": 1686.927262,
                    "p95": 1703.137967,
                    "p99": 1703.137967,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2624.669027,
                    "min": 2486.536865,
                    "p50": 2572.1838239999997,
                    "p95": 2624.669027,
                    "p99": 2624.669027,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2297.7673769999997,
                    "min": 2178.0723709999997,
                    "p50": 2248.720273,
                    "p95": 2297.7673769999997,
                    "p99": 2297.7673769999997,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1582.1687259999999,
                    "min": 1504.826174,
                    "p50": 1576.19201,
                    "p95": 1582.1687259999999,
                    "p99": 1582.1687259999999,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 430.370727,
                    "min": 405.099647,
                    "p50": 427.366419,
                    "p95": 430.370727,
                    "p99": 430.370727,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.40894,
                    "min": 528.171417,
                    "p50": 542.292375,
                    "p95": 555.40894,
                    "p99": 555.40894,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1322.136424,
                    "min": 1257.890932,
                    "p50": 1306.706932,
                    "p95": 1322.136424,
                    "p99": 1322.136424,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 802.793738,
                    "min": 768.596814,
                    "p50": 778.263097,
                    "p95": 802.793738,
                    "p99": 802.793738,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1187.2916229999998,
                    "min": 1134.199061,
                    "p50": 1154.9339439999999,
                    "p95": 1187.2916229999998,
                    "p99": 1187.2916229999998,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 683.901856,
                    "min": 655.083393,
                    "p50": 672.637918,
                    "p95": 683.901856,
                    "p99": 683.901856,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1850.9610579999999,
                    "min": 1733.898681,
                    "p50": 1788.254909,
                    "p95": 1850.9610579999999,
                    "p99": 1850.9610579999999,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1052.553383,
                    "min": 1015.6333549999999,
                    "p50": 1021.826027,
                    "p95": 1052.553383,
                    "p99": 1052.553383,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 942.3757939999999,
                    "min": 890.962845,
                    "p50": 911.197322,
                    "p95": 942.3757939999999,
                    "p99": 942.3757939999999,
                    "n": 4,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1391.1920719999998,
                    "min": 1275.7373209999998,
                    "p50": 1364.999088,
                    "p95": 1391.1920719999998,
                    "p99": 1391.1920719999998,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 580.497183,
                    "min": 535.801122,
                    "p50": 565.888158,
                    "p95": 580.497183,
                    "p99": 580.497183,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1118.275014,
                    "min": 1027.065182,
                    "p50": 1106.612421,
                    "p95": 1118.275014,
                    "p99": 1118.275014,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 978.673632,
                    "min": 909.0700909999999,
                    "p50": 961.320745,
                    "p95": 978.673632,
                    "p99": 978.673632,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 846.0744149999999,
                    "min": 781.3201859999999,
                    "p50": 824.908778,
                    "p95": 846.0744149999999,
                    "p99": 846.0744149999999,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2055.457562,
                    "min": 1897.1213409999998,
                    "p50": 2009.657661,
                    "p95": 2055.457562,
                    "p99": 2055.457562,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1784.417031,
                    "min": 1641.964961,
                    "p50": 1748.878387,
                    "p95": 1784.417031,
                    "p99": 1784.417031,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2717.853123,
                    "min": 2528.974085,
                    "p50": 2680.695632,
                    "p95": 2717.853123,
                    "p99": 2717.853123,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4066.294699,
                    "min": 3754.643404,
                    "p50": 3984.578208,
                    "p95": 4066.294699,
                    "p99": 4066.294699,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1652.143742,
                    "min": 1493.4898719999999,
                    "p50": 1640.270826,
                    "p95": 1652.143742,
                    "p99": 1652.143742,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 709.0111049999999,
                    "min": 656.1767,
                    "p50": 695.24865,
                    "p95": 709.0111049999999,
                    "p99": 709.0111049999999,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1492.919717,
                    "min": 1393.4822379999998,
                    "p50": 1487.1203189999999,
                    "p95": 1492.919717,
                    "p99": 1492.919717,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 446.71101999999996,
                    "min": 397.325631,
                    "p50": 433.60403299999996,
                    "p95": 446.71101999999996,
                    "p99": 446.71101999999996,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1878.8600059999999,
                    "min": 1732.468895,
                    "p50": 1865.385632,
                    "p95": 1878.8600059999999,
                    "p99": 1878.8600059999999,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2385.535047,
                    "min": 2164.9994819999997,
                    "p50": 2335.3693829999997,
                    "p95": 2385.535047,
                    "p99": 2385.535047,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1244.405287,
                    "min": 1133.15565,
                    "p50": 1224.117918,
                    "p95": 1244.405287,
                    "p99": 1244.405287,
                    "n": 4,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2355.950366,
                    "min": 2322.787565,
                    "p50": 2330.232384,
                    "p95": 2355.950366,
                    "p99": 2355.950366,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 560.477214,
                    "min": 550.212707,
                    "p50": 557.037112,
                    "p95": 560.477214,
                    "p99": 560.477214,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 387.167011,
                    "min": 373.57394899999997,
                    "p50": 387.075647,
                    "p95": 387.167011,
                    "p99": 387.167011,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 919.500419,
                    "min": 729.8162249999999,
                    "p50": 741.6972119999999,
                    "p95": 919.500419,
                    "p99": 919.500419,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 273.903576,
                    "min": 258.567786,
                    "p50": 272.27460099999996,
                    "p95": 273.903576,
                    "p99": 273.903576,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1203.795974,
                    "min": 1180.134415,
                    "p50": 1198.811533,
                    "p95": 1203.795974,
                    "p99": 1203.795974,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1068.29573,
                    "min": 885.8905649999999,
                    "p50": 905.632975,
                    "p95": 1068.29573,
                    "p99": 1068.29573,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 861.077876,
                    "min": 818.588674,
                    "p50": 840.889056,
                    "p95": 861.077876,
                    "p99": 861.077876,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 219.96531099999999,
                    "min": 205.696427,
                    "p50": 215.095069,
                    "p95": 219.96531099999999,
                    "p99": 219.96531099999999,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 332.173208,
                    "min": 306.433794,
                    "p50": 327.81643099999997,
                    "p95": 332.173208,
                    "p99": 332.173208,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1060.938264,
                    "min": 1043.854904,
                    "p50": 1058.286862,
                    "p95": 1060.938264,
                    "p99": 1060.938264,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 526.499636,
                    "min": 491.808458,
                    "p50": 502.69159199999996,
                    "p95": 526.499636,
                    "p99": 526.499636,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 674.8431969999999,
                    "min": 667.246395,
                    "p50": 674.643865,
                    "p95": 674.8431969999999,
                    "p99": 674.8431969999999,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 448.007389,
                    "min": 436.786638,
                    "p50": 447.57809499999996,
                    "p95": 448.007389,
                    "p99": 448.007389,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 800.4495459999999,
                    "min": 778.9172609999999,
                    "p50": 793.7153559999999,
                    "p95": 800.4495459999999,
                    "p99": 800.4495459999999,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1800.534553,
                    "min": 1744.971174,
                    "p50": 1763.708146,
                    "p95": 1800.534553,
                    "p99": 1800.534553,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2933.334501,
                    "min": 2878.45516,
                    "p50": 2896.236216,
                    "p95": 2933.334501,
                    "p99": 2933.334501,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 621.106768,
                    "min": 599.119423,
                    "p50": 612.220026,
                    "p95": 621.106768,
                    "p99": 621.106768,
                    "n": 4,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 470.289024,
                    "min": 440.34314,
                    "p50": 463.74954299999996,
                    "p95": 470.289024,
                    "p99": 470.289024,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1260.8938249999999,
                    "min": 1222.478394,
                    "p50": 1249.4374,
                    "p95": 1260.8938249999999,
                    "p99": 1260.8938249999999,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1859.721847,
                    "min": 1818.384546,
                    "p50": 1857.27543,
                    "p95": 1859.721847,
                    "p99": 1859.721847,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3082.6817899999996,
                    "min": 3017.89325,
                    "p50": 3065.376347,
                    "p95": 3082.6817899999996,
                    "p99": 3082.6817899999996,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2482.7730079999997,
                    "min": 2420.935257,
                    "p50": 2455.916314,
                    "p95": 2482.7730079999997,
                    "p99": 2482.7730079999997,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 527.904918,
                    "min": 514.371012,
                    "p50": 526.982697,
                    "p95": 527.904918,
                    "p99": 527.904918,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1109.14158,
                    "min": 1090.28907,
                    "p50": 1108.143924,
                    "p95": 1109.14158,
                    "p99": 1109.14158,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 406.915672,
                    "min": 398.06883999999997,
                    "p50": 405.437069,
                    "p95": 406.915672,
                    "p99": 406.915672,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 906.5432119999999,
                    "min": 882.001591,
                    "p50": 891.6651449999999,
                    "p95": 906.5432119999999,
                    "p99": 906.5432119999999,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 955.333347,
                    "min": 947.3734619999999,
                    "p50": 953.497973,
                    "p95": 955.333347,
                    "p99": 955.333347,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 282.72027399999996,
                    "min": 246.716504,
                    "p50": 282.538691,
                    "p95": 282.72027399999996,
                    "p99": 282.72027399999996,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 716.3657019999999,
                    "min": 701.808591,
                    "p50": 711.21259,
                    "p95": 716.3657019999999,
                    "p99": 716.3657019999999,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 789.661967,
                    "min": 738.896436,
                    "p50": 773.9319939999999,
                    "p95": 789.661967,
                    "p99": 789.661967,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 348.79200299999997,
                    "min": 335.57627299999996,
                    "p50": 344.703755,
                    "p95": 348.79200299999997,
                    "p99": 348.79200299999997,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.714376,
                    "min": 219.38676999999998,
                    "p50": 221.90250699999999,
                    "p95": 222.714376,
                    "p99": 222.714376,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 837.028388,
                    "min": 807.322375,
                    "p50": 832.939252,
                    "p95": 837.028388,
                    "p99": 837.028388,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 714.830983,
                    "min": 638.0781579999999,
                    "p50": 651.762919,
                    "p95": 714.830983,
                    "p99": 714.830983,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 593.330189,
                    "min": 568.372537,
                    "p50": 586.56511,
                    "p95": 593.330189,
                    "p99": 593.330189,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 983.4939109999999,
                    "min": 940.137127,
                    "p50": 962.059536,
                    "p95": 983.4939109999999,
                    "p99": 983.4939109999999,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1524.8806989999998,
                    "min": 1457.652684,
                    "p50": 1489.8263789999999,
                    "p95": 1524.8806989999998,
                    "p99": 1524.8806989999998,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1289.86664,
                    "min": 1250.496729,
                    "p50": 1286.016912,
                    "p95": 1289.86664,
                    "p99": 1289.86664,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 354.226095,
                    "min": 320.385242,
                    "p50": 347.95121,
                    "p95": 354.226095,
                    "p99": 354.226095,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2152.850043,
                    "min": 2094.261606,
                    "p50": 2136.554479,
                    "p95": 2152.850043,
                    "p99": 2152.850043,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 882.9908879999999,
                    "min": 850.862477,
                    "p50": 882.386356,
                    "p95": 882.9908879999999,
                    "p99": 882.9908879999999,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 566.813299,
                    "min": 544.874784,
                    "p50": 563.822374,
                    "p95": 566.813299,
                    "p99": 566.813299,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1202.451415,
                    "min": 1151.434869,
                    "p50": 1197.160065,
                    "p95": 1202.451415,
                    "p99": 1202.451415,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 670.057299,
                    "min": 645.4691409999999,
                    "p50": 669.726903,
                    "p95": 670.057299,
                    "p99": 670.057299,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1893.019795,
                    "min": 1783.428395,
                    "p50": 1891.6227609999999,
                    "p95": 1893.019795,
                    "p99": 1893.019795,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 460.928185,
                    "min": 436.733663,
                    "p50": 447.140858,
                    "p95": 460.928185,
                    "p99": 460.928185,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1623.446183,
                    "min": 1558.51505,
                    "p50": 1619.334469,
                    "p95": 1623.446183,
                    "p99": 1623.446183,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 775.6724829999999,
                    "min": 733.701565,
                    "p50": 770.748917,
                    "p95": 775.6724829999999,
                    "p99": 775.6724829999999,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1414.638585,
                    "min": 1357.957013,
                    "p50": 1409.343369,
                    "p95": 1414.638585,
                    "p99": 1414.638585,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1096.0915579999998,
                    "min": 1051.457564,
                    "p50": 1091.912007,
                    "p95": 1096.0915579999998,
                    "p99": 1096.0915579999998,
                    "n": 4,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 694.918278,
                    "min": 606.607683,
                    "p50": 659.894768,
                    "p95": 694.918278,
                    "p99": 694.918278,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1950.656194,
                    "min": 1842.637157,
                    "p50": 1926.0415659999999,
                    "p95": 1950.656194,
                    "p99": 1950.656194,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1175.459466,
                    "min": 1106.944868,
                    "p50": 1169.099636,
                    "p95": 1175.459466,
                    "p99": 1175.459466,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1684.032005,
                    "min": 1592.498586,
                    "p50": 1679.7643349999998,
                    "p95": 1684.032005,
                    "p99": 1684.032005,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2572.557189,
                    "min": 2456.021578,
                    "p50": 2570.4791,
                    "p95": 2572.557189,
                    "p99": 2572.557189,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1432.327943,
                    "min": 1341.3787929999999,
                    "p50": 1429.523448,
                    "p95": 1432.327943,
                    "p99": 1432.327943,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1832.263872,
                    "min": 1725.3514089999999,
                    "p50": 1818.0574689999999,
                    "p95": 1832.263872,
                    "p99": 1832.263872,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3847.789413,
                    "min": 3659.7980119999997,
                    "p50": 3847.610506,
                    "p95": 3847.789413,
                    "p99": 3847.789413,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 945.386036,
                    "min": 872.069082,
                    "p50": 924.100592,
                    "p95": 945.386036,
                    "p99": 945.386036,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 414.90342899999996,
                    "min": 383.623907,
                    "p50": 397.070513,
                    "p95": 414.90342899999996,
                    "p99": 414.90342899999996,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1304.0513799999999,
                    "min": 1236.57063,
                    "p50": 1300.240957,
                    "p95": 1304.0513799999999,
                    "p99": 1304.0513799999999,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 801.201282,
                    "min": 754.453456,
                    "p50": 786.95146,
                    "p95": 801.201282,
                    "p99": 801.201282,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 548.586202,
                    "min": 517.094112,
                    "p50": 541.203404,
                    "p95": 548.586202,
                    "p99": 548.586202,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1049.850573,
                    "min": 989.707448,
                    "p50": 1046.113229,
                    "p95": 1049.850573,
                    "p99": 1049.850573,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2273.520927,
                    "min": 2146.0361319999997,
                    "p50": 2240.818254,
                    "p95": 2273.520927,
                    "p99": 2273.520927,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1544.7388369999999,
                    "min": 1465.80213,
                    "p50": 1532.97572,
                    "p95": 1544.7388369999999,
                    "p99": 1544.7388369999999,
                    "n": 4,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1447.640635,
                    "min": 1369.378459,
                    "p50": 1423.823706,
                    "p95": 1447.640635,
                    "p99": 1447.640635,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1647.186352,
                    "min": 1612.1752199999999,
                    "p50": 1641.0616559999999,
                    "p95": 1647.186352,
                    "p99": 1647.186352,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1771.1887709999999,
                    "min": 1695.4615749999998,
                    "p50": 1757.3307379999999,
                    "p95": 1771.1887709999999,
                    "p99": 1771.1887709999999,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1060.814372,
                    "min": 1040.140823,
                    "p50": 1057.024576,
                    "p95": 1060.814372,
                    "p99": 1060.814372,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 723.8182009999999,
                    "min": 686.838809,
                    "p50": 721.405032,
                    "p95": 723.8182009999999,
                    "p99": 723.8182009999999,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 956.4067359999999,
                    "min": 927.782607,
                    "p50": 947.707315,
                    "p95": 956.4067359999999,
                    "p99": 956.4067359999999,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 494.133971,
                    "min": 481.52944099999996,
                    "p50": 486.3605,
                    "p95": 494.133971,
                    "p99": 494.133971,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 610.577511,
                    "min": 596.851171,
                    "p50": 600.791615,
                    "p95": 610.577511,
                    "p99": 610.577511,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1190.080945,
                    "min": 1148.503888,
                    "p50": 1170.618951,
                    "p95": 1190.080945,
                    "p99": 1190.080945,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 847.323183,
                    "min": 819.133339,
                    "p50": 828.398868,
                    "p95": 847.323183,
                    "p99": 847.323183,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2334.8294149999997,
                    "min": 2236.476044,
                    "p50": 2295.7685389999997,
                    "p95": 2334.8294149999997,
                    "p99": 2334.8294149999997,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1300.3892859999999,
                    "min": 1260.302901,
                    "p50": 1288.632424,
                    "p95": 1300.3892859999999,
                    "p99": 1300.3892859999999,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2076.343814,
                    "min": 1976.8825729999999,
                    "p50": 2021.4746229999998,
                    "p95": 2076.343814,
                    "p99": 2076.343814,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 384.505343,
                    "min": 362.88316199999997,
                    "p50": 382.682504,
                    "p95": 384.505343,
                    "p99": 384.505343,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1525.733739,
                    "min": 1492.298965,
                    "p50": 1513.512043,
                    "p95": 1525.733739,
                    "p99": 1525.733739,
                    "n": 4,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1044.1362199999999,
                    "min": 970.7485939999999,
                    "p50": 1025.966089,
                    "p95": 1044.1362199999999,
                    "p99": 1044.1362199999999,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 530.8711989999999,
                    "min": 501.709234,
                    "p50": 517.688051,
                    "p95": 530.8711989999999,
                    "p99": 530.8711989999999,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.029298,
                    "min": 344.940093,
                    "p50": 359.347809,
                    "p95": 365.029298,
                    "p99": 365.029298,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.47322399999996,
                    "min": 261.54432399999996,
                    "p50": 270.703077,
                    "p95": 283.47322399999996,
                    "p99": 283.47322399999996,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1096.467686,
                    "min": 1035.478996,
                    "p50": 1095.947719,
                    "p95": 1096.467686,
                    "p99": 1096.467686,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1266.0075849999998,
                    "min": 1170.038091,
                    "p50": 1263.392382,
                    "p95": 1266.0075849999998,
                    "p99": 1266.0075849999998,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 771.325384,
                    "min": 701.155567,
                    "p50": 751.863523,
                    "p95": 771.325384,
                    "p99": 771.325384,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1654.660034,
                    "min": 1584.5244969999999,
                    "p50": 1627.104641,
                    "p95": 1654.660034,
                    "p99": 1654.660034,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 849.202548,
                    "min": 804.0873419999999,
                    "p50": 846.2990279999999,
                    "p95": 849.202548,
                    "p99": 849.202548,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 589.417333,
                    "min": 568.658146,
                    "p50": 578.916351,
                    "p95": 589.417333,
                    "p99": 589.417333,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1453.544394,
                    "min": 1380.842117,
                    "p50": 1446.226352,
                    "p95": 1453.544394,
                    "p99": 1453.544394,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1173.430295,
                    "min": 1110.911049,
                    "p50": 1169.354967,
                    "p95": 1173.430295,
                    "p99": 1173.430295,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 448.36569,
                    "min": 425.65102199999995,
                    "p50": 446.854603,
                    "p95": 448.36569,
                    "p99": 448.36569,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 689.713068,
                    "min": 656.9619789999999,
                    "p50": 678.9593179999999,
                    "p95": 689.713068,
                    "p99": 689.713068,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2486.1834559999998,
                    "min": 2339.856585,
                    "p50": 2455.17226,
                    "p95": 2486.1834559999998,
                    "p99": 2486.1834559999998,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 946.479013,
                    "min": 870.573844,
                    "p50": 920.167342,
                    "p95": 946.479013,
                    "p99": 946.479013,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3319.686358,
                    "min": 3119.3437679999997,
                    "p50": 3292.27522,
                    "p95": 3319.686358,
                    "p99": 3319.686358,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1090.557082,
                    "min": 1029.769072,
                    "p50": 1049.438676,
                    "p95": 1090.557082,
                    "p99": 1090.557082,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 557.324738,
                    "min": 535.003873,
                    "p50": 552.4725559999999,
                    "p95": 557.324738,
                    "p99": 557.324738,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2126.051607,
                    "min": 2050.0052579999997,
                    "p50": 2110.947047,
                    "p95": 2126.051607,
                    "p99": 2126.051607,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1495.66511,
                    "min": 1450.581139,
                    "p50": 1484.820655,
                    "p95": 1495.66511,
                    "p99": 1495.66511,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 659.719194,
                    "min": 607.831588,
                    "p50": 655.7696639999999,
                    "p95": 659.719194,
                    "p99": 659.719194,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1620.907103,
                    "min": 1548.808975,
                    "p50": 1600.415196,
                    "p95": 1620.907103,
                    "p99": 1620.907103,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 766.004964,
                    "min": 750.8580119999999,
                    "p50": 761.4191169999999,
                    "p95": 766.004964,
                    "p99": 766.004964,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1290.924524,
                    "min": 1244.798162,
                    "p50": 1267.677671,
                    "p95": 1290.924524,
                    "p99": 1290.924524,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 974.2885319999999,
                    "min": 940.4228929999999,
                    "p50": 959.479824,
                    "p95": 974.2885319999999,
                    "p99": 974.2885319999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1393.33217,
                    "min": 1350.770315,
                    "p50": 1363.290519,
                    "p95": 1393.33217,
                    "p99": 1393.33217,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1856.7565869999999,
                    "min": 1797.571679,
                    "p50": 1818.206491,
                    "p95": 1856.7565869999999,
                    "p99": 1856.7565869999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 852.9585509999999,
                    "min": 804.9712619999999,
                    "p50": 843.272352,
                    "p95": 852.9585509999999,
                    "p99": 852.9585509999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1169.7685569999999,
                    "min": 1142.3241759999999,
                    "p50": 1161.7466869999998,
                    "p95": 1169.7685569999999,
                    "p99": 1169.7685569999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 347.697754,
                    "min": 335.41546,
                    "p50": 337.54517899999996,
                    "p95": 347.697754,
                    "p99": 347.697754,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 444.317683,
                    "min": 439.136512,
                    "p50": 443.21999,
                    "p95": 444.317683,
                    "p99": 444.317683,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1388.2949139999998,
                    "min": 1339.402322,
                    "p50": 1373.6260149999998,
                    "p95": 1388.2949139999998,
                    "p99": 1388.2949139999998,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 587.717961,
                    "min": 560.05391,
                    "p50": 569.274174,
                    "p95": 587.717961,
                    "p99": 587.717961,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1661.768763,
                    "min": 1602.804572,
                    "p50": 1634.78307,
                    "p95": 1661.768763,
                    "p99": 1661.768763,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1935.957852,
                    "min": 1879.872246,
                    "p50": 1932.860287,
                    "p95": 1935.957852,
                    "p99": 1935.957852,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 715.9193879999999,
                    "min": 678.850931,
                    "p50": 706.0515839999999,
                    "p95": 715.9193879999999,
                    "p99": 715.9193879999999,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1250.356417,
                    "min": 1186.737686,
                    "p50": 1217.745662,
                    "p95": 1250.356417,
                    "p99": 1250.356417,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1166.543256,
                    "min": 1070.461616,
                    "p50": 1109.611607,
                    "p95": 1166.543256,
                    "p99": 1166.543256,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 847.4154599999999,
                    "min": 823.054676,
                    "p50": 843.817717,
                    "p95": 847.4154599999999,
                    "p99": 847.4154599999999,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 446.576776,
                    "min": 426.23143799999997,
                    "p50": 445.065233,
                    "p95": 446.576776,
                    "p99": 446.576776,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2431.9205779999998,
                    "min": 2336.342274,
                    "p50": 2408.5749729999998,
                    "p95": 2431.9205779999998,
                    "p99": 2431.9205779999998,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1529.5562069999999,
                    "min": 1482.726639,
                    "p50": 1523.887925,
                    "p95": 1529.5562069999999,
                    "p99": 1529.5562069999999,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1809.941756,
                    "min": 1741.581355,
                    "p50": 1790.4227859999999,
                    "p95": 1809.941756,
                    "p99": 1809.941756,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2782.895259,
                    "min": 2647.448673,
                    "p50": 2757.25279,
                    "p95": 2782.895259,
                    "p99": 2782.895259,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2090.681814,
                    "min": 2011.147017,
                    "p50": 2065.640179,
                    "p95": 2090.681814,
                    "p99": 2090.681814,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 996.554309,
                    "min": 950.3071239999999,
                    "p50": 981.3012369999999,
                    "p95": 996.554309,
                    "p99": 996.554309,
                    "n": 4,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1847.0738509999999,
                    "min": 1780.8256569999999,
                    "p50": 1821.25909,
                    "p95": 1847.0738509999999,
                    "p99": 1847.0738509999999,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1088.897518,
                    "min": 1053.4258869999999,
                    "p50": 1070.3366919999999,
                    "p95": 1088.897518,
                    "p99": 1088.897518,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1498.994718,
                    "min": 1427.25523,
                    "p50": 1467.5948099999998,
                    "p95": 1498.994718,
                    "p99": 1498.994718,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1597.572226,
                    "min": 1532.170204,
                    "p50": 1594.13943,
                    "p95": 1597.572226,
                    "p99": 1597.572226,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2120.78715,
                    "min": 2066.976757,
                    "p50": 2094.250805,
                    "p95": 2120.78715,
                    "p99": 2120.78715,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1170.6725649999998,
                    "min": 1126.264815,
                    "p50": 1164.056453,
                    "p95": 1170.6725649999998,
                    "p99": 1170.6725649999998,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 654.0372229999999,
                    "min": 629.2877139999999,
                    "p50": 652.338669,
                    "p95": 654.0372229999999,
                    "p99": 654.0372229999999,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 871.5012979999999,
                    "min": 845.66216,
                    "p50": 857.920481,
                    "p95": 871.5012979999999,
                    "p99": 871.5012979999999,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1390.457837,
                    "min": 1334.822099,
                    "p50": 1373.680095,
                    "p95": 1390.457837,
                    "p99": 1390.457837,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1292.996556,
                    "min": 1262.330869,
                    "p50": 1269.437715,
                    "p95": 1292.996556,
                    "p99": 1292.996556,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3153.066086,
                    "min": 3073.0310099999997,
                    "p50": 3137.0205859999996,
                    "p95": 3153.066086,
                    "p99": 3153.066086,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 766.257199,
                    "min": 717.460415,
                    "p50": 752.539152,
                    "p95": 766.257199,
                    "p99": 766.257199,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 351.964615,
                    "min": 312.100641,
                    "p50": 339.806379,
                    "p95": 351.964615,
                    "p99": 351.964615,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 558.192271,
                    "min": 522.978844,
                    "p50": 555.572269,
                    "p95": 558.192271,
                    "p99": 558.192271,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 968.3581029999999,
                    "min": 928.947949,
                    "p50": 961.640407,
                    "p95": 968.3581029999999,
                    "p99": 968.3581029999999,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 451.78963999999996,
                    "min": 433.37055699999996,
                    "p50": 449.53989099999995,
                    "p95": 451.78963999999996,
                    "p99": 451.78963999999996,
                    "n": 4,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1588.3502839999999,
                    "min": 1505.6162379999998,
                    "p50": 1573.4867669999999,
                    "p95": 1588.3502839999999,
                    "p99": 1588.3502839999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 763.269227,
                    "min": 713.2624149999999,
                    "p50": 754.293505,
                    "p95": 763.269227,
                    "p99": 763.269227,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 347.541789,
                    "min": 323.35306099999997,
                    "p50": 344.40847199999996,
                    "p95": 347.541789,
                    "p99": 347.541789,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 449.98004,
                    "min": 431.894845,
                    "p50": 446.820006,
                    "p95": 449.98004,
                    "p99": 449.98004,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1069.716064,
                    "min": 1040.71357,
                    "p50": 1066.569773,
                    "p95": 1069.716064,
                    "p99": 1069.716064,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 662.48926,
                    "min": 640.4833639999999,
                    "p50": 646.7536279999999,
                    "p95": 662.48926,
                    "p99": 662.48926,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2119.218433,
                    "min": 2056.857136,
                    "p50": 2102.732463,
                    "p95": 2119.218433,
                    "p99": 2119.218433,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 549.98501,
                    "min": 541.7855509999999,
                    "p50": 546.103746,
                    "p95": 549.98501,
                    "p99": 549.98501,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1177.328229,
                    "min": 1149.3944709999998,
                    "p50": 1150.0042429999999,
                    "p95": 1177.328229,
                    "p99": 1177.328229,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 869.609967,
                    "min": 835.433466,
                    "p50": 844.341245,
                    "p95": 869.609967,
                    "p99": 869.609967,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1286.686464,
                    "min": 1232.870269,
                    "p50": 1246.914696,
                    "p95": 1286.686464,
                    "p99": 1286.686464,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1387.881238,
                    "min": 1344.239167,
                    "p50": 1357.8790119999999,
                    "p95": 1387.881238,
                    "p99": 1387.881238,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1838.393895,
                    "min": 1806.959466,
                    "p50": 1828.164883,
                    "p95": 1838.393895,
                    "p99": 1838.393895,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1514.561634,
                    "min": 1441.0725639999998,
                    "p50": 1491.068869,
                    "p95": 1514.561634,
                    "p99": 1514.561634,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 981.334206,
                    "min": 918.981451,
                    "p50": 956.5851769999999,
                    "p95": 981.334206,
                    "p99": 981.334206,
                    "n": 4,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 538.6110199999999,
                    "min": 513.04211,
                    "p50": 530.9631889999999,
                    "p95": 538.6110199999999,
                    "p99": 538.6110199999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1932.123995,
                    "min": 1867.025064,
                    "p50": 1899.244935,
                    "p95": 1932.123995,
                    "p99": 1932.123995,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1417.88143,
                    "min": 1380.391275,
                    "p50": 1410.81641,
                    "p95": 1417.88143,
                    "p99": 1417.88143,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1171.7391989999999,
                    "min": 1137.958877,
                    "p50": 1148.783058,
                    "p95": 1171.7391989999999,
                    "p99": 1171.7391989999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 798.309481,
                    "min": 766.4785089999999,
                    "p50": 789.909007,
                    "p95": 798.309481,
                    "p99": 798.309481,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 416.56831,
                    "min": 400.779001,
                    "p50": 409.626347,
                    "p95": 416.56831,
                    "p99": 416.56831,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 670.653645,
                    "min": 638.7630839999999,
                    "p50": 659.974471,
                    "p95": 670.653645,
                    "p99": 670.653645,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1807.736978,
                    "min": 1746.5750489999998,
                    "p50": 1776.708136,
                    "p95": 1807.736978,
                    "p99": 1807.736978,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2230.096,
                    "min": 2169.636309,
                    "p50": 2219.432909,
                    "p95": 2230.096,
                    "p99": 2230.096,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 923.031035,
                    "min": 894.050156,
                    "p50": 911.867303,
                    "p95": 923.031035,
                    "p99": 923.031035,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1298.2246049999999,
                    "min": 1259.397236,
                    "p50": 1276.278337,
                    "p95": 1298.2246049999999,
                    "p99": 1298.2246049999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2545.726771,
                    "min": 2477.642955,
                    "p50": 2529.341877,
                    "p95": 2545.726771,
                    "p99": 2545.726771,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1546.4257289999998,
                    "min": 1500.24137,
                    "p50": 1530.9511659999998,
                    "p95": 1546.4257289999998,
                    "p99": 1546.4257289999998,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1049.95661,
                    "min": 1013.8358579999999,
                    "p50": 1020.280845,
                    "p95": 1049.95661,
                    "p99": 1049.95661,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1684.5403979999999,
                    "min": 1612.853891,
                    "p50": 1659.2408679999999,
                    "p95": 1684.5403979999999,
                    "p99": 1684.5403979999999,
                    "n": 4,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2552.9896409999997,
                    "min": 2508.39281,
                    "p50": 2533.9440099999997,
                    "p95": 2552.9896409999997,
                    "p99": 2552.9896409999997,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1354.593134,
                    "min": 1327.817662,
                    "p50": 1351.2930199999998,
                    "p95": 1354.593134,
                    "p99": 1354.593134,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1688.243371,
                    "min": 1666.0147439999998,
                    "p50": 1684.1813319999999,
                    "p95": 1688.243371,
                    "p99": 1688.243371,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1856.8746569999998,
                    "min": 1842.142876,
                    "p50": 1848.102171,
                    "p95": 1856.8746569999998,
                    "p99": 1856.8746569999998,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2350.2846449999997,
                    "min": 2325.6658429999998,
                    "p50": 2341.626397,
                    "p95": 2350.2846449999997,
                    "p99": 2350.2846449999997,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2191.03856,
                    "min": 2165.340903,
                    "p50": 2173.453559,
                    "p95": 2191.03856,
                    "p99": 2191.03856,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 703.694678,
                    "min": 694.6943,
                    "p50": 696.975869,
                    "p95": 703.694678,
                    "p99": 703.694678,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1568.391386,
                    "min": 1497.6965169999999,
                    "p50": 1519.3276019999998,
                    "p95": 1568.391386,
                    "p99": 1568.391386,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2027.1633089999998,
                    "min": 1991.3609569999999,
                    "p50": 2008.4344959999999,
                    "p95": 2027.1633089999998,
                    "p99": 2027.1633089999998,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2927.247202,
                    "min": 2897.700207,
                    "p50": 2918.1597189999998,
                    "p95": 2927.247202,
                    "p99": 2927.247202,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 868.3543589999999,
                    "min": 843.032082,
                    "p50": 850.024131,
                    "p95": 868.3543589999999,
                    "p99": 868.3543589999999,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1193.292449,
                    "min": 1166.89547,
                    "p50": 1186.6617569999999,
                    "p95": 1193.292449,
                    "p99": 1193.292449,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 537.343041,
                    "min": 530.7842959999999,
                    "p50": 533.540393,
                    "p95": 537.343041,
                    "p99": 537.343041,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1043.565384,
                    "min": 1016.377078,
                    "p50": 1029.703522,
                    "p95": 1043.565384,
                    "p99": 1043.565384,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3362.9190639999997,
                    "min": 3308.767417,
                    "p50": 3330.0601269999997,
                    "p95": 3362.9190639999997,
                    "p99": 3362.9190639999997,
                    "n": 4,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3393.5390429999998,
                    "min": 3356.354049,
                    "p50": 3374.3533079999997,
                    "p95": 3393.5390429999998,
                    "p99": 3393.5390429999998,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2392.5525589999997,
                    "min": 2324.088527,
                    "p50": 2371.699767,
                    "p95": 2392.5525589999997,
                    "p99": 2392.5525589999997,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2040.08405,
                    "min": 2000.887967,
                    "p50": 2038.8807809999998,
                    "p95": 2040.08405,
                    "p99": 2040.08405,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1536.4909149999999,
                    "min": 1516.542082,
                    "p50": 1532.775026,
                    "p95": 1536.4909149999999,
                    "p99": 1536.4909149999999,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1383.8211159999998,
                    "min": 1356.6340129999999,
                    "p50": 1368.1656389999998,
                    "p95": 1383.8211159999998,
                    "p99": 1383.8211159999998,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1052.853013,
                    "min": 1022.80314,
                    "p50": 1035.339098,
                    "p95": 1052.853013,
                    "p99": 1052.853013,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2197.137803,
                    "min": 2175.699498,
                    "p50": 2192.516904,
                    "p95": 2197.137803,
                    "p99": 2197.137803,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 703.0208709999999,
                    "min": 692.224976,
                    "p50": 700.794666,
                    "p95": 703.0208709999999,
                    "p99": 703.0208709999999,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1864.9512519999998,
                    "min": 1829.638362,
                    "p50": 1858.9569549999999,
                    "p95": 1864.9512519999998,
                    "p99": 1864.9512519999998,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 868.6953,
                    "min": 842.282081,
                    "p50": 863.9781479999999,
                    "p95": 868.6953,
                    "p99": 868.6953,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2950.515485,
                    "min": 2906.669378,
                    "p50": 2934.0314639999997,
                    "p95": 2950.515485,
                    "p99": 2950.515485,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 538.948132,
                    "min": 518.22019,
                    "p50": 535.510797,
                    "p95": 538.948132,
                    "p99": 538.948132,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1197.090041,
                    "min": 1185.355556,
                    "p50": 1195.242364,
                    "p95": 1197.090041,
                    "p99": 1197.090041,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2549.160497,
                    "min": 2512.429608,
                    "p50": 2517.113785,
                    "p95": 2549.160497,
                    "p99": 2549.160497,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1717.7609109999999,
                    "min": 1685.807157,
                    "p50": 1704.7383949999999,
                    "p95": 1717.7609109999999,
                    "p99": 1717.7609109999999,
                    "n": 4,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1899.5487449999998,
                    "min": 1869.603198,
                    "p50": 1897.379324,
                    "p95": 1899.5487449999998,
                    "p99": 1899.5487449999998,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1051.440987,
                    "min": 1030.065154,
                    "p50": 1046.487377,
                    "p95": 1051.440987,
                    "p99": 1051.440987,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 883.183309,
                    "min": 869.306242,
                    "p50": 878.9000589999999,
                    "p95": 883.183309,
                    "p99": 883.183309,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1752.7417779999998,
                    "min": 1691.210819,
                    "p50": 1713.744494,
                    "p95": 1752.7417779999998,
                    "p99": 1752.7417779999998,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3413.326392,
                    "min": 3361.2139789999997,
                    "p50": 3401.891593,
                    "p95": 3413.326392,
                    "p99": 3413.326392,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 705.906762,
                    "min": 698.416251,
                    "p50": 705.357905,
                    "p95": 705.906762,
                    "p99": 705.906762,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1223.0466669999998,
                    "min": 1183.204487,
                    "p50": 1204.9089689999998,
                    "p95": 1223.0466669999998,
                    "p99": 1223.0466669999998,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 546.588296,
                    "min": 534.912831,
                    "p50": 544.202087,
                    "p95": 546.588296,
                    "p99": 546.588296,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2559.972913,
                    "min": 2520.648154,
                    "p50": 2545.249175,
                    "p95": 2559.972913,
                    "p99": 2559.972913,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2415.646143,
                    "min": 2361.6870919999997,
                    "p50": 2383.956108,
                    "p95": 2415.646143,
                    "p99": 2415.646143,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2067.439571,
                    "min": 2028.1767439999999,
                    "p50": 2044.7319499999999,
                    "p95": 2067.439571,
                    "p99": 2067.439571,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2217.980186,
                    "min": 2202.418783,
                    "p50": 2212.544769,
                    "p95": 2217.980186,
                    "p99": 2217.980186,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1555.822166,
                    "min": 1483.4494849999999,
                    "p50": 1542.758196,
                    "p95": 1555.822166,
                    "p99": 1555.822166,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2977.660919,
                    "min": 2930.917482,
                    "p50": 2964.220559,
                    "p95": 2977.660919,
                    "p99": 2977.660919,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1379.005373,
                    "min": 1357.778458,
                    "p50": 1377.373613,
                    "p95": 1379.005373,
                    "p99": 1379.005373,
                    "n": 4,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 824.6022509999999,
                    "min": 807.186531,
                    "p50": 816.884071,
                    "p95": 824.6022509999999,
                    "p99": 824.6022509999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 457.72826999999995,
                    "min": 422.363348,
                    "p50": 456.910938,
                    "p95": 457.72826999999995,
                    "p99": 457.72826999999995,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 939.5972509999999,
                    "min": 919.131576,
                    "p50": 939.4432079999999,
                    "p95": 939.5972509999999,
                    "p99": 939.5972509999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1092.9859179999999,
                    "min": 1071.125069,
                    "p50": 1088.2531099999999,
                    "p95": 1092.9859179999999,
                    "p99": 1092.9859179999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.66488999999999,
                    "min": 204.464713,
                    "p50": 218.25125899999998,
                    "p95": 218.66488999999999,
                    "p99": 218.66488999999999,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 759.5209,
                    "min": 749.836004,
                    "p50": 756.507,
                    "p95": 759.5209,
                    "p99": 759.5209,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 401.448092,
                    "min": 375.08525299999997,
                    "p50": 399.211033,
                    "p95": 401.448092,
                    "p99": 401.448092,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.49550999999997,
                    "min": 275.29249799999997,
                    "p50": 279.385359,
                    "p95": 280.49550999999997,
                    "p99": 280.49550999999997,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1840.932975,
                    "min": 1823.391754,
                    "p50": 1833.266132,
                    "p95": 1840.932975,
                    "p99": 1840.932975,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 580.088947,
                    "min": 571.5533889999999,
                    "p50": 574.7308409999999,
                    "p95": 580.088947,
                    "p99": 580.088947,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 695.388879,
                    "min": 691.4690499999999,
                    "p50": 692.973409,
                    "p95": 695.388879,
                    "p99": 695.388879,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 878.468659,
                    "min": 842.008251,
                    "p50": 871.629375,
                    "p95": 878.468659,
                    "p99": 878.468659,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 342.375393,
                    "min": 324.722916,
                    "p50": 338.40432799999996,
                    "p95": 342.375393,
                    "p99": 342.375393,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3042.2776839999997,
                    "min": 2992.5319409999997,
                    "p50": 3041.325327,
                    "p95": 3042.2776839999997,
                    "p99": 3042.2776839999997,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1246.117697,
                    "min": 1217.564595,
                    "p50": 1218.5539569999999,
                    "p95": 1246.117697,
                    "p99": 1246.117697,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 660.965598,
                    "min": 597.494119,
                    "p50": 624.286149,
                    "p95": 660.965598,
                    "p99": 660.965598,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 520.559742,
                    "min": 493.42202299999997,
                    "p50": 519.201433,
                    "p95": 520.559742,
                    "p99": 520.559742,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2436.3216709999997,
                    "min": 2393.518191,
                    "p50": 2435.317103,
                    "p95": 2436.3216709999997,
                    "p99": 2436.3216709999997,
                    "n": 4,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2779.40992,
                    "min": 2644.55607,
                    "p50": 2776.544337,
                    "p95": 2779.40992,
                    "p99": 2779.40992,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 869.24326,
                    "min": 824.406265,
                    "p50": 834.6888309999999,
                    "p95": 869.24326,
                    "p99": 869.24326,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1831.739811,
                    "min": 1754.8697419999999,
                    "p50": 1792.314095,
                    "p95": 1831.739811,
                    "p99": 1831.739811,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1281.1656679999999,
                    "min": 1225.589239,
                    "p50": 1270.776555,
                    "p95": 1281.1656679999999,
                    "p99": 1281.1656679999999,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1426.1953469999999,
                    "min": 1355.355217,
                    "p50": 1404.641224,
                    "p95": 1426.1953469999999,
                    "p99": 1426.1953469999999,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 443.22614699999997,
                    "min": 419.659548,
                    "p50": 435.61562899999996,
                    "p95": 443.22614699999997,
                    "p99": 443.22614699999997,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1560.1421799999998,
                    "min": 1482.887193,
                    "p50": 1553.388213,
                    "p95": 1560.1421799999998,
                    "p99": 1560.1421799999998,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 728.720147,
                    "min": 684.3352659999999,
                    "p50": 727.518841,
                    "p95": 728.720147,
                    "p99": 728.720147,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1963.786944,
                    "min": 1885.335535,
                    "p50": 1962.7246129999999,
                    "p95": 1963.786944,
                    "p99": 1963.786944,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1140.436839,
                    "min": 1091.277265,
                    "p50": 1135.112347,
                    "p95": 1140.436839,
                    "p99": 1140.436839,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2444.22339,
                    "min": 2317.2418159999997,
                    "p50": 2437.481503,
                    "p95": 2444.22339,
                    "p99": 2444.22339,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1716.093345,
                    "min": 1619.1376799999998,
                    "p50": 1686.36647,
                    "p95": 1716.093345,
                    "p99": 1716.093345,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1001.6389869999999,
                    "min": 929.5273189999999,
                    "p50": 993.8029359999999,
                    "p95": 1001.6389869999999,
                    "p99": 1001.6389869999999,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 600.055181,
                    "min": 543.648302,
                    "p50": 590.3730019999999,
                    "p95": 600.055181,
                    "p99": 600.055181,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2124.170217,
                    "min": 2011.275631,
                    "p50": 2065.034945,
                    "p95": 2124.170217,
                    "p99": 2124.170217,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4167.842638,
                    "min": 4007.149708,
                    "p50": 4122.842353999999,
                    "p95": 4167.842638,
                    "p99": 4167.842638,
                    "n": 4,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 934.1880729999999,
                    "min": 892.350378,
                    "p50": 902.512974,
                    "p95": 934.1880729999999,
                    "p99": 934.1880729999999,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1033.755293,
                    "min": 981.980065,
                    "p50": 995.897249,
                    "p95": 1033.755293,
                    "p99": 1033.755293,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 538.242068,
                    "min": 493.14171899999997,
                    "p50": 514.339254,
                    "p95": 538.242068,
                    "p99": 538.242068,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 832.042373,
                    "min": 801.769269,
                    "p50": 814.999655,
                    "p95": 832.042373,
                    "p99": 832.042373,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1428.976637,
                    "min": 1375.6215459999999,
                    "p50": 1401.153892,
                    "p95": 1428.976637,
                    "p99": 1428.976637,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 329.26726099999996,
                    "min": 322.767984,
                    "p50": 328.932432,
                    "p95": 329.26726099999996,
                    "p99": 329.26726099999996,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2974.703004,
                    "min": 2954.2240779999997,
                    "p50": 2969.421167,
                    "p95": 2974.703004,
                    "p99": 2974.703004,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1109.507693,
                    "min": 1100.032239,
                    "p50": 1105.6584209999999,
                    "p95": 1109.507693,
                    "p99": 1109.507693,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1308.985745,
                    "min": 1287.890789,
                    "p50": 1305.978366,
                    "p95": 1308.985745,
                    "p99": 1308.985745,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 631.648376,
                    "min": 613.155996,
                    "p50": 628.599874,
                    "p95": 631.648376,
                    "p99": 631.648376,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1776.9489999999998,
                    "min": 1716.783444,
                    "p50": 1750.2530809999998,
                    "p95": 1776.9489999999998,
                    "p99": 1776.9489999999998,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1223.530548,
                    "min": 1191.926949,
                    "p50": 1204.5268999999998,
                    "p95": 1223.530548,
                    "p99": 1223.530548,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 731.5557319999999,
                    "min": 701.929586,
                    "p50": 729.3728659999999,
                    "p95": 731.5557319999999,
                    "p99": 731.5557319999999,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4011.5430969999998,
                    "min": 3886.9805309999997,
                    "p50": 3930.1458909999997,
                    "p95": 4011.5430969999998,
                    "p99": 4011.5430969999998,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 432.75244899999996,
                    "min": 392.871025,
                    "p50": 428.18609,
                    "p95": 432.75244899999996,
                    "p99": 432.75244899999996,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1518.5798069999998,
                    "min": 1468.823705,
                    "p50": 1501.094261,
                    "p95": 1518.5798069999998,
                    "p99": 1518.5798069999998,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2012.6579499999998,
                    "min": 1990.316623,
                    "p50": 2011.5662089999998,
                    "p95": 2012.6579499999998,
                    "p99": 2012.6579499999998,
                    "n": 4,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom8Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}