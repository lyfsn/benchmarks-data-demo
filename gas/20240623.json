{
    "nethermind": [
        {
            "title": "GasLimit",
            "max": "332.37",
            "p50": "300.93",
            "p95": "165.13",
            "p99": "207.68",
            "min": "127.96",
            "n": "60",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "806.82",
            "p50": "656.10",
            "p95": "484.92",
            "p99": "539.78",
            "min": "395.99",
            "n": "64",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "454.75",
            "p50": "395.80",
            "p95": "307.79",
            "p99": "339.81",
            "min": "277.92",
            "n": "64",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "283.81",
            "p50": "256.35",
            "p95": "221.87",
            "p99": "238.21",
            "min": "209.06",
            "n": "60",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "7976.86",
            "p50": "4656.46",
            "p95": "1376.37",
            "p99": "2679.33",
            "min": "1096.95",
            "n": "76",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1154.27",
            "p50": "839.23",
            "p95": "557.09",
            "p99": "562.99",
            "min": "386.38",
            "n": "76",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13481.84",
            "p50": "4550.27",
            "p95": "1113.09",
            "p99": "3946.63",
            "min": "1098.45",
            "n": "76",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "37018.73",
            "p50": "4630.98",
            "p95": "1121.01",
            "p99": "9348.77",
            "min": "1083.71",
            "n": "76",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1297.82",
            "p50": "935.05",
            "p95": "624.79",
            "p99": "749.54",
            "min": "585.76",
            "n": "76",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "457.33",
            "p50": "386.11",
            "p95": "289.45",
            "p99": "317.31",
            "min": "265.52",
            "n": "72",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "239.99",
            "p50": "225.87",
            "p95": "181.68",
            "p99": "202.44",
            "min": "178.42",
            "n": "60",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "70.81",
            "p50": "69.75",
            "p95": "66.25",
            "p99": "65.68",
            "min": "63.37",
            "n": "68",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "79.92",
            "p50": "76.37",
            "p95": "71.74",
            "p99": "73.89",
            "min": "71.18",
            "n": "68",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2180.66",
            "p50": "1522.54",
            "p95": "1022.15",
            "p99": "1141.45",
            "min": "831.04",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.19",
            "p50": "68.66",
            "p95": "64.30",
            "p99": "65.13",
            "min": "62.85",
            "n": "68",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "70.35",
            "p50": "68.38",
            "p95": "63.97",
            "p99": "65.55",
            "min": "62.96",
            "n": "64",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1406.82",
            "p50": "1067.07",
            "p95": "680.35",
            "p99": "819.37",
            "min": "643.90",
            "n": "76",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3333.14",
            "p50": "2059.54",
            "p95": "1319.24",
            "p99": "1631.13",
            "min": "1122.73",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1412.96",
            "p50": "1055.47",
            "p95": "665.01",
            "p99": "811.85",
            "min": "632.30",
            "n": "76",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "134.94",
            "p50": "128.22",
            "p95": "121.70",
            "p99": "131.07",
            "min": "121.59",
            "n": "28",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "136.91",
            "p50": "128.90",
            "p95": "120.72",
            "p99": "131.32",
            "min": "119.96",
            "n": "32",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "166.22",
            "p50": "155.07",
            "p95": "141.18",
            "p99": "153.90",
            "min": "136.17",
            "n": "40",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "195.52",
            "p50": "150.13",
            "p95": "141.29",
            "p99": "179.68",
            "min": "140.90",
            "n": "28",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "129.97",
            "p50": "122.36",
            "p95": "113.47",
            "p99": "118.01",
            "min": "110.36",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "151.02",
            "p50": "141.18",
            "p95": "129.16",
            "p99": "134.40",
            "min": "123.78",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "129.78",
            "p50": "123.27",
            "p95": "111.85",
            "p99": "115.06",
            "min": "105.66",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "129.11",
            "p50": "122.73",
            "p95": "113.42",
            "p99": "119.24",
            "min": "112.93",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "750.39",
            "p50": "617.63",
            "p95": "438.79",
            "p99": "442.00",
            "min": "349.88",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "771.42",
            "p50": "644.58",
            "p95": "465.02",
            "p99": "458.05",
            "min": "364.44",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "682.60",
            "p50": "614.46",
            "p95": "411.88",
            "p99": "420.38",
            "min": "342.06",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "768.27",
            "p50": "625.61",
            "p95": "440.43",
            "p99": "480.78",
            "min": "374.46",
            "n": "72",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "229.71",
            "p50": "208.32",
            "p95": "174.36",
            "p99": "190.44",
            "min": "165.33",
            "n": "60",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "221.97",
            "p50": "205.72",
            "p95": "164.77",
            "p99": "134.70",
            "min": "78.90",
            "n": "60",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "237.31",
            "p50": "212.16",
            "p95": "178.36",
            "p99": "195.53",
            "min": "168.82",
            "n": "60",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "229.85",
            "p50": "206.67",
            "p95": "167.53",
            "p99": "125.99",
            "min": "59.58",
            "n": "60",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "237.10",
            "p50": "220.88",
            "p95": "179.94",
            "p99": "122.11",
            "min": "60.19",
            "n": "64",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "301.48",
            "p50": "265.91",
            "p95": "218.72",
            "p99": "237.44",
            "min": "196.49",
            "n": "60",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "322.36",
            "p50": "290.16",
            "p95": "226.41",
            "p99": "247.74",
            "min": "207.56",
            "n": "64",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "406.25",
            "p50": "368.43",
            "p95": "286.30",
            "p99": "299.48",
            "min": "259.99",
            "n": "72",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "639.09",
            "p50": "576.55",
            "p95": "367.37",
            "p99": "418.09",
            "min": "336.35",
            "n": "72",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "293.64",
            "p50": "271.43",
            "p95": "227.17",
            "p99": "233.48",
            "min": "195.01",
            "n": "60",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "256.06",
            "p50": "239.44",
            "p95": "199.26",
            "p99": "207.66",
            "min": "181.60",
            "n": "64",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "268.67",
            "p50": "247.50",
            "p95": "219.23",
            "p99": "223.26",
            "min": "194.22",
            "n": "60",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "390.14",
            "p50": "358.51",
            "p95": "268.30",
            "p99": "272.12",
            "min": "219.10",
            "n": "68",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "237.49",
            "p50": "223.37",
            "p95": "186.60",
            "p99": "198.04",
            "min": "172.82",
            "n": "60",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "290.81",
            "p50": "270.80",
            "p95": "232.37",
            "p99": "239.36",
            "min": "206.47",
            "n": "60",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "273.42",
            "p50": "258.20",
            "p95": "211.95",
            "p99": "224.98",
            "min": "198.90",
            "n": "64",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "229.04",
            "p50": "211.70",
            "p95": "185.72",
            "p99": "201.77",
            "min": "184.34",
            "n": "60",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "288.41",
            "p50": "265.95",
            "p95": "220.47",
            "p99": "236.31",
            "min": "203.00",
            "n": "60",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "130.18",
            "p50": "123.68",
            "p95": "112.43",
            "p99": "117.68",
            "min": "109.68",
            "n": "60",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "129.90",
            "p50": "123.69",
            "p95": "110.73",
            "p99": "114.86",
            "min": "105.25",
            "n": "60",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "130.57",
            "p50": "124.35",
            "p95": "110.93",
            "p99": "116.17",
            "min": "106.97",
            "n": "60",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "384.00",
            "p50": "352.17",
            "p95": "266.49",
            "p99": "282.21",
            "min": "244.57",
            "n": "72",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "267.73",
            "p50": "248.32",
            "p95": "202.54",
            "p99": "217.89",
            "min": "191.05",
            "n": "64",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "421.13",
            "p50": "380.50",
            "p95": "294.26",
            "p99": "313.13",
            "min": "264.61",
            "n": "68",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "geth": [
        {
            "title": "GasLimit",
            "max": "188.90",
            "p50": "173.34",
            "p95": "149.00",
            "p99": "149.15",
            "min": "123.74",
            "n": "60",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "866.50",
            "p50": "630.13",
            "p95": "449.84",
            "p99": "567.41",
            "min": "406.36",
            "n": "64",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "246.82",
            "p50": "225.21",
            "p95": "157.65",
            "p99": "170.26",
            "min": "129.03",
            "n": "64",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "159.84",
            "p50": "149.05",
            "p95": "132.20",
            "p99": "137.17",
            "min": "122.68",
            "n": "60",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2677.25",
            "p50": "1591.89",
            "p95": "1094.60",
            "p99": "1234.47",
            "min": "803.51",
            "n": "76",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "339.84",
            "p50": "296.14",
            "p95": "216.37",
            "p99": "219.03",
            "min": "182.95",
            "n": "76",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4279.44",
            "p50": "2566.69",
            "p95": "1150.01",
            "p99": "1823.38",
            "min": "1089.75",
            "n": "76",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "9590.03",
            "p50": "4386.15",
            "p95": "1139.82",
            "p99": "3065.01",
            "min": "1115.98",
            "n": "76",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "335.37",
            "p50": "285.39",
            "p95": "212.13",
            "p99": "233.78",
            "min": "203.44",
            "n": "76",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "181.59",
            "p50": "160.07",
            "p95": "134.40",
            "p99": "137.20",
            "min": "120.78",
            "n": "72",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "138.83",
            "p50": "132.25",
            "p95": "112.39",
            "p99": "118.95",
            "min": "106.25",
            "n": "60",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "238.66",
            "p50": "217.11",
            "p95": "170.18",
            "p99": "173.15",
            "min": "143.72",
            "n": "68",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "50.88",
            "p50": "48.55",
            "p95": "45.32",
            "p99": "46.38",
            "min": "44.36",
            "n": "68",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "209.93",
            "p50": "191.75",
            "p95": "157.39",
            "p99": "167.45",
            "min": "154.77",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "87.35",
            "p50": "82.73",
            "p95": "76.16",
            "p99": "74.81",
            "min": "69.18",
            "n": "68",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.80",
            "p50": "82.87",
            "p95": "75.00",
            "p99": "73.86",
            "min": "66.89",
            "n": "64",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.29",
            "p50": "88.95",
            "p95": "79.25",
            "p99": "78.20",
            "min": "73.70",
            "n": "76",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "212.71",
            "p50": "195.62",
            "p95": "163.53",
            "p99": "160.53",
            "min": "144.95",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.87",
            "p50": "89.69",
            "p95": "81.51",
            "p99": "80.86",
            "min": "76.97",
            "n": "76",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "110.93",
            "p50": "102.64",
            "p95": "95.49",
            "p99": "106.32",
            "min": "95.03",
            "n": "28",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "113.03",
            "p50": "107.17",
            "p95": "94.58",
            "p99": "106.87",
            "min": "94.34",
            "n": "32",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "264.39",
            "p50": "229.70",
            "p95": "182.32",
            "p99": "218.46",
            "min": "152.37",
            "n": "40",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "130.30",
            "p50": "118.80",
            "p95": "98.68",
            "p99": "120.90",
            "min": "97.90",
            "n": "28",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "495.62",
            "p50": "375.81",
            "p95": "296.47",
            "p99": "339.79",
            "min": "240.16",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "475.58",
            "p50": "394.83",
            "p95": "265.42",
            "p99": "329.91",
            "min": "236.77",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "467.14",
            "p50": "378.33",
            "p95": "260.12",
            "p99": "325.94",
            "min": "235.66",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "439.55",
            "p50": "380.60",
            "p95": "281.34",
            "p99": "304.97",
            "min": "218.92",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1034.33",
            "p50": "728.21",
            "p95": "511.77",
            "p99": "597.63",
            "min": "467.19",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "987.27",
            "p50": "715.43",
            "p95": "489.87",
            "p99": "586.74",
            "min": "467.10",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "845.72",
            "p50": "627.14",
            "p95": "431.24",
            "p99": "482.62",
            "min": "374.15",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "919.96",
            "p50": "674.76",
            "p95": "482.59",
            "p99": "589.75",
            "min": "467.62",
            "n": "72",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "442.51",
            "p50": "338.64",
            "p95": "256.32",
            "p99": "320.55",
            "min": "242.57",
            "n": "60",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "425.35",
            "p50": "329.39",
            "p95": "256.55",
            "p99": "303.40",
            "min": "225.42",
            "n": "60",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "409.32",
            "p50": "334.46",
            "p95": "227.14",
            "p99": "287.86",
            "min": "210.20",
            "n": "60",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "409.67",
            "p50": "348.47",
            "p95": "263.59",
            "p99": "317.88",
            "min": "259.20",
            "n": "60",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "82.47",
            "p50": "79.18",
            "p95": "70.66",
            "p99": "72.14",
            "min": "66.57",
            "n": "64",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "158.19",
            "p50": "149.99",
            "p95": "124.45",
            "p99": "130.34",
            "min": "112.54",
            "n": "60",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "155.03",
            "p50": "142.06",
            "p95": "123.00",
            "p99": "130.54",
            "min": "117.35",
            "n": "64",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "173.35",
            "p50": "158.42",
            "p95": "133.05",
            "p99": "137.61",
            "min": "124.38",
            "n": "72",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "233.29",
            "p50": "213.85",
            "p95": "169.72",
            "p99": "185.35",
            "min": "167.62",
            "n": "72",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "145.30",
            "p50": "134.80",
            "p95": "117.27",
            "p99": "126.55",
            "min": "114.56",
            "n": "60",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "203.69",
            "p50": "184.99",
            "p95": "153.43",
            "p99": "169.30",
            "min": "150.79",
            "n": "64",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "158.29",
            "p50": "149.66",
            "p95": "128.59",
            "p99": "125.58",
            "min": "104.68",
            "n": "60",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "230.28",
            "p50": "206.13",
            "p95": "170.02",
            "p99": "186.92",
            "min": "167.44",
            "n": "68",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "107.28",
            "p50": "100.26",
            "p95": "90.39",
            "p99": "96.39",
            "min": "89.43",
            "n": "60",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "191.47",
            "p50": "180.07",
            "p95": "151.01",
            "p99": "163.34",
            "min": "145.35",
            "n": "60",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "161.45",
            "p50": "150.65",
            "p95": "128.93",
            "p99": "138.67",
            "min": "126.40",
            "n": "64",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "138.91",
            "p50": "132.01",
            "p95": "115.81",
            "p99": "124.15",
            "min": "114.71",
            "n": "60",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "192.52",
            "p50": "177.89",
            "p95": "145.69",
            "p99": "157.14",
            "min": "134.51",
            "n": "60",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "70.12",
            "p50": "67.95",
            "p95": "62.43",
            "p99": "63.90",
            "min": "59.93",
            "n": "60",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "71.18",
            "p50": "68.78",
            "p95": "64.13",
            "p99": "64.76",
            "min": "60.65",
            "n": "60",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "75.97",
            "p50": "73.09",
            "p95": "67.28",
            "p99": "70.15",
            "min": "66.42",
            "n": "60",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "171.38",
            "p50": "156.40",
            "p95": "120.61",
            "p99": "128.80",
            "min": "113.05",
            "n": "72",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "195.24",
            "p50": "179.39",
            "p95": "149.40",
            "p99": "164.91",
            "min": "148.58",
            "n": "64",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "200.05",
            "p50": "183.83",
            "p95": "152.29",
            "p99": "157.08",
            "min": "137.77",
            "n": "68",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "reth": [
        {
            "title": "GasLimit",
            "max": "340.23",
            "p50": "299.82",
            "p95": "239.38",
            "p99": "267.64",
            "min": "221.24",
            "n": "60",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "1666.26",
            "p50": "1104.94",
            "p95": "948.68",
            "p99": "1174.32",
            "min": "909.43",
            "n": "64",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "432.58",
            "p50": "351.00",
            "p95": "263.47",
            "p99": "318.67",
            "min": "257.34",
            "n": "64",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "341.30",
            "p50": "298.92",
            "p95": "235.78",
            "p99": "273.92",
            "min": "230.84",
            "n": "60",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8033.75",
            "p50": "4922.43",
            "p95": "1118.17",
            "p99": "2637.20",
            "min": "1025.24",
            "n": "76",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "845.64",
            "p50": "674.75",
            "p95": "429.25",
            "p99": "503.66",
            "min": "401.51",
            "n": "76",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "16182.92",
            "p50": "4993.05",
            "p95": "1232.10",
            "p99": "4639.43",
            "min": "1191.37",
            "n": "76",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22063.87",
            "p50": "4928.09",
            "p95": "1294.51",
            "p99": "6000.66",
            "min": "1202.55",
            "n": "76",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "857.15",
            "p50": "685.47",
            "p95": "439.07",
            "p99": "513.30",
            "min": "410.59",
            "n": "76",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "429.41",
            "p50": "369.23",
            "p95": "295.10",
            "p99": "309.93",
            "min": "265.73",
            "n": "72",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "168.99",
            "p50": "162.30",
            "p95": "142.91",
            "p99": "149.42",
            "min": "136.92",
            "n": "60",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "71.03",
            "p50": "69.13",
            "p95": "63.88",
            "p99": "65.91",
            "min": "63.60",
            "n": "68",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "80.63",
            "p50": "76.55",
            "p95": "71.58",
            "p99": "73.45",
            "min": "70.22",
            "n": "68",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "164.52",
            "p50": "155.92",
            "p95": "137.44",
            "p99": "141.44",
            "min": "134.55",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.84",
            "p50": "51.71",
            "p95": "49.38",
            "p99": "50.20",
            "min": "49.02",
            "n": "68",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.90",
            "p50": "51.68",
            "p95": "49.38",
            "p99": "50.13",
            "min": "48.63",
            "n": "64",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1142.79",
            "p50": "869.81",
            "p95": "567.57",
            "p99": "691.28",
            "min": "556.41",
            "n": "76",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "4520.86",
            "p50": "2314.14",
            "p95": "1245.27",
            "p99": "1972.54",
            "min": "1211.35",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1005.04",
            "p50": "763.88",
            "p95": "495.99",
            "p99": "612.21",
            "min": "494.87",
            "n": "76",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "64.72",
            "p50": "61.76",
            "p95": "59.57",
            "p99": "63.17",
            "min": "59.38",
            "n": "28",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "68.01",
            "p50": "65.41",
            "p95": "61.99",
            "p99": "65.75",
            "min": "61.16",
            "n": "32",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "179.71",
            "p50": "153.58",
            "p95": "132.37",
            "p99": "159.98",
            "min": "131.58",
            "n": "40",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "84.81",
            "p50": "73.28",
            "p95": "69.31",
            "p99": "80.29",
            "min": "69.22",
            "n": "28",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "262.81",
            "p50": "232.16",
            "p95": "199.87",
            "p99": "217.79",
            "min": "189.00",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "293.48",
            "p50": "260.27",
            "p95": "217.63",
            "p99": "239.14",
            "min": "204.41",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "271.84",
            "p50": "238.59",
            "p95": "211.91",
            "p99": "228.45",
            "min": "200.71",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "257.12",
            "p50": "237.75",
            "p95": "200.32",
            "p99": "219.58",
            "min": "195.58",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "988.57",
            "p50": "758.01",
            "p95": "487.13",
            "p99": "560.09",
            "min": "432.10",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "987.23",
            "p50": "744.20",
            "p95": "503.57",
            "p99": "602.45",
            "min": "487.51",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1014.80",
            "p50": "766.46",
            "p95": "505.68",
            "p99": "599.65",
            "min": "475.65",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "949.75",
            "p50": "732.91",
            "p95": "496.67",
            "p99": "618.15",
            "min": "495.50",
            "n": "72",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "218.31",
            "p50": "197.26",
            "p95": "163.08",
            "p99": "182.75",
            "min": "160.01",
            "n": "60",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "217.89",
            "p50": "196.49",
            "p95": "173.00",
            "p99": "187.94",
            "min": "168.80",
            "n": "60",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "233.73",
            "p50": "208.20",
            "p95": "181.72",
            "p99": "200.40",
            "min": "179.08",
            "n": "60",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "218.93",
            "p50": "196.64",
            "p95": "171.63",
            "p99": "184.97",
            "min": "163.26",
            "n": "60",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "190.65",
            "p50": "178.30",
            "p95": "153.77",
            "p99": "164.43",
            "min": "150.32",
            "n": "64",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "379.53",
            "p50": "311.96",
            "p95": "251.49",
            "p99": "285.54",
            "min": "225.45",
            "n": "60",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "430.39",
            "p50": "360.39",
            "p95": "272.94",
            "p99": "306.95",
            "min": "240.47",
            "n": "64",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "188.32",
            "p50": "177.38",
            "p95": "152.88",
            "p99": "157.27",
            "min": "145.78",
            "n": "72",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "366.16",
            "p50": "322.29",
            "p95": "256.60",
            "p99": "273.70",
            "min": "239.50",
            "n": "72",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "293.42",
            "p50": "267.18",
            "p95": "222.72",
            "p99": "242.81",
            "min": "210.46",
            "n": "60",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "504.70",
            "p50": "411.03",
            "p95": "305.68",
            "p99": "353.05",
            "min": "271.39",
            "n": "64",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "333.72",
            "p50": "292.03",
            "p95": "236.36",
            "p99": "268.12",
            "min": "226.18",
            "n": "60",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "374.65",
            "p50": "326.51",
            "p95": "253.88",
            "p99": "276.92",
            "min": "233.02",
            "n": "68",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "191.99",
            "p50": "178.78",
            "p95": "153.26",
            "p99": "165.07",
            "min": "147.86",
            "n": "60",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "320.47",
            "p50": "301.06",
            "p95": "236.14",
            "p99": "268.69",
            "min": "235.59",
            "n": "60",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "334.74",
            "p50": "295.95",
            "p95": "238.50",
            "p99": "269.24",
            "min": "233.97",
            "n": "64",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "177.39",
            "p50": "165.77",
            "p95": "143.20",
            "p99": "153.86",
            "min": "138.81",
            "n": "60",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "339.81",
            "p50": "301.45",
            "p95": "238.53",
            "p99": "260.28",
            "min": "209.44",
            "n": "60",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "139.18",
            "p50": "133.94",
            "p95": "119.45",
            "p99": "126.29",
            "min": "118.05",
            "n": "60",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "141.68",
            "p50": "134.89",
            "p95": "119.71",
            "p99": "127.56",
            "min": "118.53",
            "n": "60",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "142.70",
            "p50": "134.06",
            "p95": "119.97",
            "p99": "128.66",
            "min": "119.68",
            "n": "60",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "267.90",
            "p50": "246.89",
            "p95": "198.88",
            "p99": "214.45",
            "min": "194.68",
            "n": "72",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "339.20",
            "p50": "302.52",
            "p95": "220.18",
            "p99": "255.48",
            "min": "210.40",
            "n": "64",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "336.70",
            "p50": "293.86",
            "p95": "226.21",
            "p99": "254.19",
            "min": "217.12",
            "n": "68",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "besu": [
        {
            "title": "GasLimit",
            "max": "82.97",
            "p50": "81.10",
            "p95": "61.37",
            "p99": "65.31",
            "min": "54.01",
            "n": "60",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "562.41",
            "p50": "404.67",
            "p95": "204.33",
            "p99": "316.30",
            "min": "183.77",
            "n": "64",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "138.88",
            "p50": "129.15",
            "p95": "116.60",
            "p99": "121.19",
            "min": "111.67",
            "n": "64",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "87.60",
            "p50": "69.51",
            "p95": "65.37",
            "p99": "71.89",
            "min": "61.84",
            "n": "60",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3172.15",
            "p50": "2085.01",
            "p95": "997.32",
            "p99": "1439.23",
            "min": "921.61",
            "n": "76",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "301.00",
            "p50": "241.38",
            "p95": "186.85",
            "p99": "204.52",
            "min": "175.70",
            "n": "76",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4135.85",
            "p50": "1404.40",
            "p95": "634.99",
            "p99": "1363.20",
            "min": "535.01",
            "n": "76",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11674.12",
            "p50": "4683.38",
            "p95": "1420.58",
            "p99": "3540.89",
            "min": "1111.48",
            "n": "76",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "285.54",
            "p50": "234.95",
            "p95": "198.83",
            "p99": "208.12",
            "min": "184.99",
            "n": "76",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "227.70",
            "p50": "198.07",
            "p95": "160.35",
            "p99": "170.66",
            "min": "149.57",
            "n": "72",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "96.07",
            "p50": "92.10",
            "p95": "70.54",
            "p99": "76.49",
            "min": "63.97",
            "n": "60",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "70.96",
            "p50": "69.06",
            "p95": "65.35",
            "p99": "66.61",
            "min": "64.66",
            "n": "68",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "55.06",
            "p50": "52.45",
            "p95": "49.77",
            "p99": "51.07",
            "min": "49.27",
            "n": "68",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1150.40",
            "p50": "804.20",
            "p95": "478.59",
            "p99": "599.22",
            "min": "434.58",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "66.52",
            "p50": "64.58",
            "p95": "60.44",
            "p99": "61.33",
            "min": "59.00",
            "n": "68",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.39",
            "p50": "64.56",
            "p95": "60.90",
            "p99": "62.14",
            "min": "59.85",
            "n": "64",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "860.44",
            "p50": "663.20",
            "p95": "470.32",
            "p99": "527.06",
            "min": "427.47",
            "n": "76",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1328.18",
            "p50": "853.10",
            "p95": "540.91",
            "p99": "665.22",
            "min": "467.20",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "894.39",
            "p50": "676.98",
            "p95": "444.77",
            "p99": "433.49",
            "min": "295.82",
            "n": "76",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "77.61",
            "p50": "73.95",
            "p95": "71.04",
            "p99": "75.65",
            "min": "70.85",
            "n": "28",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "69.03",
            "p50": "65.95",
            "p95": "62.83",
            "p99": "66.69",
            "min": "61.95",
            "n": "32",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "41.03",
            "p50": "38.63",
            "p95": "35.53",
            "p99": "38.77",
            "min": "35.50",
            "n": "40",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "99.84",
            "p50": "86.47",
            "p95": "81.02",
            "p99": "94.12",
            "min": "80.12",
            "n": "28",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "69.06",
            "p50": "65.34",
            "p95": "58.97",
            "p99": "62.62",
            "min": "58.50",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "65.05",
            "p50": "62.83",
            "p95": "57.83",
            "p99": "60.03",
            "min": "56.81",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "67.56",
            "p50": "65.20",
            "p95": "59.24",
            "p99": "61.93",
            "min": "58.34",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "68.11",
            "p50": "65.46",
            "p95": "59.23",
            "p99": "61.17",
            "min": "56.73",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "248.08",
            "p50": "226.12",
            "p95": "189.57",
            "p99": "192.85",
            "min": "176.35",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "249.76",
            "p50": "229.73",
            "p95": "196.63",
            "p99": "199.93",
            "min": "185.05",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "240.18",
            "p50": "221.51",
            "p95": "183.68",
            "p99": "191.81",
            "min": "177.36",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "249.99",
            "p50": "227.98",
            "p95": "189.33",
            "p99": "197.45",
            "min": "178.02",
            "n": "72",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "58.10",
            "p50": "56.36",
            "p95": "51.14",
            "p99": "52.71",
            "min": "49.27",
            "n": "60",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "58.75",
            "p50": "56.02",
            "p95": "50.33",
            "p99": "52.97",
            "min": "49.27",
            "n": "60",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "61.52",
            "p50": "58.90",
            "p95": "53.54",
            "p99": "55.78",
            "min": "52.11",
            "n": "60",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "58.77",
            "p50": "56.27",
            "p95": "50.20",
            "p99": "52.54",
            "min": "48.55",
            "n": "60",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "99.04",
            "p50": "95.17",
            "p95": "88.01",
            "p99": "91.16",
            "min": "86.91",
            "n": "64",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "80.74",
            "p50": "77.61",
            "p95": "71.75",
            "p99": "74.01",
            "min": "69.71",
            "n": "60",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "80.83",
            "p50": "74.34",
            "p95": "69.23",
            "p99": "71.94",
            "min": "67.16",
            "n": "64",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "173.70",
            "p50": "163.29",
            "p95": "139.61",
            "p99": "142.17",
            "min": "130.51",
            "n": "72",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "165.68",
            "p50": "156.40",
            "p95": "136.40",
            "p99": "143.07",
            "min": "134.70",
            "n": "72",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "98.13",
            "p50": "92.60",
            "p95": "86.85",
            "p99": "89.93",
            "min": "84.69",
            "n": "60",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "82.43",
            "p50": "77.92",
            "p95": "73.16",
            "p99": "75.62",
            "min": "71.95",
            "n": "64",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "89.43",
            "p50": "85.30",
            "p95": "80.60",
            "p99": "82.47",
            "min": "78.02",
            "n": "60",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "128.36",
            "p50": "120.44",
            "p95": "111.04",
            "p99": "112.81",
            "min": "105.83",
            "n": "68",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "99.38",
            "p50": "94.16",
            "p95": "89.23",
            "p99": "91.39",
            "min": "86.28",
            "n": "60",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "75.84",
            "p50": "72.56",
            "p95": "68.08",
            "p99": "70.56",
            "min": "67.18",
            "n": "60",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "98.27",
            "p50": "94.40",
            "p95": "88.65",
            "p99": "89.80",
            "min": "85.24",
            "n": "64",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "99.63",
            "p50": "94.34",
            "p95": "88.92",
            "p99": "91.51",
            "min": "86.32",
            "n": "60",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "80.72",
            "p50": "78.35",
            "p95": "74.08",
            "p99": "75.41",
            "min": "72.02",
            "n": "60",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "60.45",
            "p50": "59.32",
            "p95": "56.50",
            "p99": "57.63",
            "min": "55.83",
            "n": "60",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "60.24",
            "p50": "58.95",
            "p95": "56.39",
            "p99": "57.45",
            "min": "55.66",
            "n": "60",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "60.67",
            "p50": "58.59",
            "p95": "55.59",
            "p99": "57.14",
            "min": "54.89",
            "n": "60",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "167.37",
            "p50": "159.66",
            "p95": "142.97",
            "p99": "145.34",
            "min": "137.20",
            "n": "72",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "75.63",
            "p50": "72.16",
            "p95": "67.97",
            "p99": "69.80",
            "min": "66.66",
            "n": "64",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "102.91",
            "p50": "99.72",
            "p95": "92.00",
            "p99": "94.77",
            "min": "91.11",
            "n": "68",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "erigon": [
        {
            "title": "GasLimit",
            "max": "157.50",
            "p50": "152.85",
            "p95": "139.48",
            "p99": "143.04",
            "min": "132.14",
            "n": "56",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "219.12",
            "p50": "177.62",
            "p95": "145.58",
            "p99": "191.52",
            "min": "144.53",
            "n": "36",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "203.17",
            "p50": "191.73",
            "p95": "167.71",
            "p99": "177.59",
            "min": "154.90",
            "n": "52",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "157.29",
            "p50": "151.77",
            "p95": "138.75",
            "p99": "144.19",
            "min": "135.82",
            "n": "60",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2255.77",
            "p50": "1384.41",
            "p95": "764.32",
            "p99": "1078.81",
            "min": "727.25",
            "n": "76",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "316.81",
            "p50": "298.77",
            "p95": "239.65",
            "p99": "217.62",
            "min": "187.99",
            "n": "76",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3829.23",
            "p50": "2112.26",
            "p95": "832.48",
            "p99": "1507.30",
            "min": "813.74",
            "n": "76",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10997.63",
            "p50": "3806.76",
            "p95": "1123.04",
            "p99": "3309.81",
            "min": "1013.45",
            "n": "76",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "309.36",
            "p50": "285.56",
            "p95": "235.51",
            "p99": "228.29",
            "min": "204.08",
            "n": "76",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "154.67",
            "p50": "148.02",
            "p95": "134.37",
            "p99": "131.17",
            "min": "122.48",
            "n": "72",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "120.42",
            "p50": "117.15",
            "p95": "109.85",
            "p99": "113.14",
            "min": "108.49",
            "n": "60",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "236.18",
            "p50": "225.06",
            "p95": "188.63",
            "p99": "195.22",
            "min": "176.82",
            "n": "68",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "51.47",
            "p50": "49.64",
            "p95": "47.75",
            "p99": "48.47",
            "min": "47.13",
            "n": "68",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "205.97",
            "p50": "196.79",
            "p95": "177.02",
            "p99": "181.53",
            "min": "174.22",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.22",
            "p50": "84.07",
            "p95": "78.17",
            "p99": "79.26",
            "min": "76.13",
            "n": "68",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.21",
            "p50": "83.98",
            "p95": "79.59",
            "p99": "76.78",
            "min": "71.70",
            "n": "64",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.91",
            "p50": "90.12",
            "p95": "85.26",
            "p99": "83.09",
            "min": "80.16",
            "n": "76",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "210.85",
            "p50": "202.27",
            "p95": "180.18",
            "p99": "181.25",
            "min": "172.41",
            "n": "76",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.76",
            "p50": "90.37",
            "p95": "86.45",
            "p99": "85.72",
            "min": "83.61",
            "n": "76",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "108.32",
            "p50": "105.84",
            "p95": "92.50",
            "p99": "102.24",
            "min": "87.36",
            "n": "28",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "111.36",
            "p50": "108.40",
            "p95": "100.78",
            "p99": "106.49",
            "min": "96.61",
            "n": "32",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "158.69",
            "p50": "150.75",
            "p95": "135.78",
            "p99": "147.55",
            "min": "131.51",
            "n": "40",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "151.25",
            "p50": "124.45",
            "p95": "119.65",
            "p99": "142.06",
            "min": "119.53",
            "n": "28",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "245.16",
            "p50": "224.95",
            "p95": "177.67",
            "p99": "186.64",
            "min": "149.22",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "267.41",
            "p50": "248.96",
            "p95": "210.53",
            "p99": "211.81",
            "min": "176.25",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "248.54",
            "p50": "229.82",
            "p95": "196.43",
            "p99": "204.46",
            "min": "176.28",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "256.20",
            "p50": "226.49",
            "p95": "185.00",
            "p99": "201.23",
            "min": "166.08",
            "n": "60",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "872.52",
            "p50": "737.90",
            "p95": "431.16",
            "p99": "464.91",
            "min": "343.16",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "830.12",
            "p50": "714.80",
            "p95": "522.11",
            "p99": "551.43",
            "min": "468.19",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "783.86",
            "p50": "672.60",
            "p95": "516.28",
            "p99": "548.71",
            "min": "478.47",
            "n": "76",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "802.10",
            "p50": "684.11",
            "p95": "522.29",
            "p99": "526.00",
            "min": "423.89",
            "n": "72",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "213.18",
            "p50": "200.94",
            "p95": "184.05",
            "p99": "180.92",
            "min": "160.30",
            "n": "60",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "209.43",
            "p50": "201.33",
            "p95": "173.93",
            "p99": "176.16",
            "min": "154.88",
            "n": "60",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "217.48",
            "p50": "204.12",
            "p95": "179.54",
            "p99": "176.15",
            "min": "149.72",
            "n": "60",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "217.77",
            "p50": "203.94",
            "p95": "185.10",
            "p99": "177.85",
            "min": "152.32",
            "n": "60",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "91.59",
            "p50": "89.01",
            "p95": "83.83",
            "p99": "84.17",
            "min": "80.18",
            "n": "64",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "83.01",
            "p50": "81.39",
            "p95": "77.32",
            "p99": "75.05",
            "min": "69.96",
            "n": "60",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "76.51",
            "p50": "74.42",
            "p95": "69.32",
            "p99": "70.14",
            "min": "66.72",
            "n": "64",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "120.09",
            "p50": "116.22",
            "p95": "104.21",
            "p99": "87.29",
            "min": "75.16",
            "n": "72",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "178.88",
            "p50": "171.71",
            "p95": "151.42",
            "p99": "155.88",
            "min": "147.37",
            "n": "72",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "121.14",
            "p50": "117.89",
            "p95": "110.20",
            "p99": "107.51",
            "min": "98.80",
            "n": "60",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "177.42",
            "p50": "170.32",
            "p95": "154.23",
            "p99": "156.53",
            "min": "145.28",
            "n": "64",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "159.01",
            "p50": "153.30",
            "p95": "139.48",
            "p99": "136.93",
            "min": "122.81",
            "n": "60",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "177.59",
            "p50": "170.24",
            "p95": "150.72",
            "p99": "137.95",
            "min": "120.14",
            "n": "68",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "91.23",
            "p50": "89.25",
            "p95": "84.15",
            "p99": "83.18",
            "min": "78.03",
            "n": "60",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "156.18",
            "p50": "151.98",
            "p95": "135.00",
            "p99": "134.86",
            "min": "121.23",
            "n": "60",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "132.05",
            "p50": "127.37",
            "p95": "117.01",
            "p99": "121.80",
            "min": "116.29",
            "n": "64",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "121.17",
            "p50": "116.97",
            "p95": "108.87",
            "p99": "110.93",
            "min": "104.39",
            "n": "60",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "157.41",
            "p50": "150.94",
            "p95": "138.05",
            "p99": "139.57",
            "min": "128.16",
            "n": "60",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "64.86",
            "p50": "63.78",
            "p95": "61.34",
            "p99": "60.23",
            "min": "57.27",
            "n": "60",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "66.65",
            "p50": "65.07",
            "p95": "62.45",
            "p99": "63.74",
            "min": "61.88",
            "n": "60",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "69.93",
            "p50": "68.36",
            "p95": "64.27",
            "p99": "64.65",
            "min": "61.27",
            "n": "60",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "141.10",
            "p50": "136.51",
            "p95": "123.75",
            "p99": "124.49",
            "min": "118.35",
            "n": "72",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "158.61",
            "p50": "152.35",
            "p95": "138.21",
            "p99": "141.02",
            "min": "131.55",
            "n": "64",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "161.62",
            "p50": "155.75",
            "p95": "141.75",
            "p99": "139.53",
            "min": "129.61",
            "n": "68",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ]
}