{
    "nethermind": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "345.10",
            "p50": "300.26",
            "p95": "157.29",
            "p99": "116.88",
            "min": "116.77",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "935.58",
            "p50": "740.65",
            "p95": "565.05",
            "p99": "549.51",
            "min": "549.51",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "450.02",
            "p50": "394.33",
            "p95": "291.92",
            "p99": "276.03",
            "min": "274.91",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.70",
            "p50": "239.65",
            "p95": "200.42",
            "p99": "189.74",
            "min": "189.53",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11329.96",
            "p50": "4413.15",
            "p95": "1116.27",
            "p99": "1080.50",
            "min": "1064.90",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "934.25",
            "p50": "715.96",
            "p95": "474.30",
            "p99": "451.06",
            "min": "447.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14490.73",
            "p50": "4571.97",
            "p95": "1324.48",
            "p99": "1103.26",
            "min": "1098.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "39639.39",
            "p50": "4476.89",
            "p95": "1116.76",
            "p99": "740.94",
            "min": "721.20",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1056.66",
            "p50": "777.50",
            "p95": "518.02",
            "p99": "492.45",
            "min": "490.99",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "425.84",
            "p50": "360.19",
            "p95": "274.32",
            "p99": "190.10",
            "min": "144.92",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "237.75",
            "p50": "222.10",
            "p95": "195.01",
            "p99": "176.02",
            "min": "175.67",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.32",
            "p50": "69.47",
            "p95": "66.15",
            "p99": "64.28",
            "min": "64.27",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.25",
            "p50": "76.50",
            "p95": "72.53",
            "p99": "70.54",
            "min": "69.93",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2311.79",
            "p50": "1505.36",
            "p95": "1052.20",
            "p99": "973.37",
            "min": "962.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.04",
            "p50": "68.49",
            "p95": "63.39",
            "p99": "62.26",
            "min": "62.01",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "69.97",
            "p50": "68.23",
            "p95": "65.51",
            "p99": "62.61",
            "min": "62.51",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1448.06",
            "p50": "1170.26",
            "p95": "664.47",
            "p99": "636.38",
            "min": "635.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3562.51",
            "p50": "2150.08",
            "p95": "1281.46",
            "p99": "1036.61",
            "min": "964.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1474.94",
            "p50": "1126.87",
            "p95": "688.03",
            "p99": "621.24",
            "min": "588.00",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.18",
            "p50": "126.58",
            "p95": "117.65",
            "p99": "123.97",
            "min": "115.50",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.22",
            "p50": "130.60",
            "p95": "117.48",
            "p99": "123.02",
            "min": "115.37",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "191.68",
            "p50": "171.38",
            "p95": "152.69",
            "p99": "156.09",
            "min": "147.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.26",
            "p50": "151.75",
            "p95": "141.10",
            "p99": "163.83",
            "min": "140.13",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "133.11",
            "p50": "124.75",
            "p95": "114.63",
            "p99": "107.93",
            "min": "107.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "154.05",
            "p50": "143.15",
            "p95": "127.27",
            "p99": "122.33",
            "min": "122.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "133.87",
            "p50": "124.72",
            "p95": "116.30",
            "p99": "108.64",
            "min": "108.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "132.95",
            "p50": "125.50",
            "p95": "114.75",
            "p99": "112.89",
            "min": "112.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "825.49",
            "p50": "672.19",
            "p95": "455.92",
            "p99": "378.58",
            "min": "375.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "789.57",
            "p50": "703.77",
            "p95": "459.84",
            "p99": "379.59",
            "min": "376.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "845.69",
            "p50": "743.51",
            "p95": "435.41",
            "p99": "396.25",
            "min": "388.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "768.41",
            "p50": "670.87",
            "p95": "441.99",
            "p99": "177.49",
            "min": "172.70",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "757.97",
            "p50": "632.04",
            "p95": "425.92",
            "p99": "354.61",
            "min": "354.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "851.55",
            "p50": "719.35",
            "p95": "470.69",
            "p99": "400.95",
            "min": "390.31",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "240.04",
            "p50": "214.27",
            "p95": "167.49",
            "p99": "162.76",
            "min": "162.20",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "239.02",
            "p50": "213.64",
            "p95": "189.17",
            "p99": "142.00",
            "min": "141.43",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "247.52",
            "p50": "218.82",
            "p95": "184.40",
            "p99": "69.45",
            "min": "42.25",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "238.31",
            "p50": "214.42",
            "p95": "180.20",
            "p99": "115.86",
            "min": "102.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "236.29",
            "p50": "223.30",
            "p95": "188.78",
            "p99": "176.06",
            "min": "175.43",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "296.13",
            "p50": "265.01",
            "p95": "214.15",
            "p99": "186.60",
            "min": "183.47",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "319.97",
            "p50": "291.15",
            "p95": "251.34",
            "p99": "215.82",
            "min": "215.10",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "456.70",
            "p50": "395.05",
            "p95": "309.86",
            "p99": "261.42",
            "min": "260.33",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "630.26",
            "p50": "549.70",
            "p95": "383.43",
            "p99": "297.51",
            "min": "265.44",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "282.02",
            "p50": "255.01",
            "p95": "208.88",
            "p99": "198.00",
            "min": "197.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "252.15",
            "p50": "230.60",
            "p95": "201.27",
            "p99": "180.09",
            "min": "177.92",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "271.14",
            "p50": "253.42",
            "p95": "219.46",
            "p99": "183.16",
            "min": "179.84",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "379.15",
            "p50": "349.02",
            "p95": "278.65",
            "p99": "217.70",
            "min": "204.01",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "237.69",
            "p50": "223.45",
            "p95": "189.64",
            "p99": "173.35",
            "min": "172.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "282.48",
            "p50": "265.45",
            "p95": "224.81",
            "p99": "201.14",
            "min": "200.63",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "277.89",
            "p50": "260.49",
            "p95": "213.77",
            "p99": "196.05",
            "min": "195.27",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "226.83",
            "p50": "209.36",
            "p95": "180.29",
            "p99": "122.13",
            "min": "110.72",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "282.76",
            "p50": "260.75",
            "p95": "210.88",
            "p99": "199.37",
            "min": "198.95",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "125.85",
            "p50": "119.87",
            "p95": "108.21",
            "p99": "104.65",
            "min": "104.31",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "126.79",
            "p50": "120.53",
            "p95": "110.95",
            "p99": "105.55",
            "min": "105.29",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "127.34",
            "p50": "120.50",
            "p95": "110.80",
            "p99": "104.67",
            "min": "104.21",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "380.01",
            "p50": "357.91",
            "p95": "270.20",
            "p99": "247.37",
            "min": "247.32",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "262.42",
            "p50": "247.50",
            "p95": "206.29",
            "p99": "187.48",
            "min": "187.01",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "423.26",
            "p50": "390.57",
            "p95": "306.11",
            "p99": "268.58",
            "min": "267.86",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "188.67",
            "p50": "171.44",
            "p95": "145.78",
            "p99": "109.21",
            "min": "102.92",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "825.83",
            "p50": "595.56",
            "p95": "435.93",
            "p99": "417.92",
            "min": "414.91",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "248.02",
            "p50": "219.47",
            "p95": "173.92",
            "p99": "162.95",
            "min": "162.31",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "157.98",
            "p50": "147.64",
            "p95": "126.80",
            "p99": "116.61",
            "min": "116.06",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2866.90",
            "p50": "1519.11",
            "p95": "1127.33",
            "p99": "952.23",
            "min": "854.22",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "333.44",
            "p50": "291.53",
            "p95": "211.23",
            "p99": "203.93",
            "min": "202.01",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3939.56",
            "p50": "2475.87",
            "p95": "1154.59",
            "p99": "1099.26",
            "min": "1094.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "9691.72",
            "p50": "4525.10",
            "p95": "1132.21",
            "p99": "1102.16",
            "min": "1096.42",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "360.89",
            "p50": "314.22",
            "p95": "222.47",
            "p99": "204.46",
            "min": "202.77",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "166.29",
            "p50": "149.66",
            "p95": "125.01",
            "p99": "110.86",
            "min": "110.47",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "146.73",
            "p50": "137.82",
            "p95": "118.13",
            "p99": "102.42",
            "min": "99.97",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "238.00",
            "p50": "215.74",
            "p95": "170.52",
            "p99": "154.90",
            "min": "149.65",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.26",
            "p50": "48.78",
            "p95": "46.14",
            "p99": "43.35",
            "min": "42.97",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "209.21",
            "p50": "191.00",
            "p95": "155.77",
            "p99": "144.81",
            "min": "140.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.93",
            "p50": "83.20",
            "p95": "75.88",
            "p99": "70.64",
            "min": "69.89",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.68",
            "p50": "82.72",
            "p95": "76.49",
            "p99": "71.15",
            "min": "70.49",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.79",
            "p50": "89.49",
            "p95": "80.95",
            "p99": "78.38",
            "min": "77.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "213.97",
            "p50": "195.50",
            "p95": "158.77",
            "p99": "153.17",
            "min": "151.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.95",
            "p50": "89.47",
            "p95": "81.51",
            "p99": "74.64",
            "min": "71.21",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "111.02",
            "p50": "103.20",
            "p95": "93.96",
            "p99": "100.58",
            "min": "92.70",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "113.94",
            "p50": "108.51",
            "p95": "94.09",
            "p99": "94.29",
            "min": "83.71",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "262.44",
            "p50": "229.84",
            "p95": "179.56",
            "p99": "175.59",
            "min": "155.22",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.81",
            "p50": "118.90",
            "p95": "108.56",
            "p99": "111.63",
            "min": "97.16",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "473.62",
            "p50": "366.90",
            "p95": "267.32",
            "p99": "226.07",
            "min": "219.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "475.49",
            "p50": "391.81",
            "p95": "263.49",
            "p99": "224.74",
            "min": "223.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "469.36",
            "p50": "382.32",
            "p95": "260.48",
            "p99": "222.63",
            "min": "221.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "442.51",
            "p50": "369.00",
            "p95": "237.89",
            "p99": "201.41",
            "min": "198.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "992.36",
            "p50": "704.70",
            "p95": "510.89",
            "p99": "442.01",
            "min": "438.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "805.81",
            "p50": "611.19",
            "p95": "401.46",
            "p99": "377.27",
            "min": "363.01",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "946.88",
            "p50": "704.75",
            "p95": "491.30",
            "p99": "460.55",
            "min": "452.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "826.78",
            "p50": "605.83",
            "p95": "409.61",
            "p99": "401.04",
            "min": "400.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "874.67",
            "p50": "640.24",
            "p95": "432.55",
            "p99": "409.49",
            "min": "406.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "941.60",
            "p50": "674.97",
            "p95": "485.87",
            "p99": "430.66",
            "min": "427.46",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "402.82",
            "p50": "340.81",
            "p95": "235.19",
            "p99": "210.15",
            "min": "206.28",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "415.02",
            "p50": "337.64",
            "p95": "246.59",
            "p99": "197.56",
            "min": "193.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "417.26",
            "p50": "328.05",
            "p95": "245.06",
            "p99": "205.62",
            "min": "205.51",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "438.59",
            "p50": "346.16",
            "p95": "255.75",
            "p99": "228.27",
            "min": "222.87",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "68.65",
            "p50": "66.04",
            "p95": "60.81",
            "p99": "59.65",
            "min": "59.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "156.95",
            "p50": "146.35",
            "p95": "124.27",
            "p99": "114.25",
            "min": "113.98",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "152.06",
            "p50": "142.27",
            "p95": "122.40",
            "p99": "104.21",
            "min": "100.75",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "165.02",
            "p50": "153.92",
            "p95": "128.71",
            "p99": "116.50",
            "min": "112.13",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "228.56",
            "p50": "207.62",
            "p95": "166.75",
            "p99": "139.48",
            "min": "138.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "144.01",
            "p50": "135.01",
            "p95": "116.69",
            "p99": "114.01",
            "min": "113.93",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "198.99",
            "p50": "183.38",
            "p95": "146.62",
            "p99": "122.63",
            "min": "119.62",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "158.56",
            "p50": "147.86",
            "p95": "127.38",
            "p99": "102.13",
            "min": "99.21",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.93",
            "p50": "204.28",
            "p95": "167.74",
            "p99": "160.78",
            "min": "159.62",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "108.94",
            "p50": "102.86",
            "p95": "91.07",
            "p99": "89.67",
            "min": "89.66",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "189.84",
            "p50": "176.71",
            "p95": "145.92",
            "p99": "137.78",
            "min": "137.74",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "160.28",
            "p50": "149.44",
            "p95": "127.10",
            "p99": "121.94",
            "min": "121.44",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "145.41",
            "p50": "136.95",
            "p95": "118.94",
            "p99": "108.39",
            "min": "107.55",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "191.17",
            "p50": "176.63",
            "p95": "145.29",
            "p99": "129.16",
            "min": "127.78",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "70.63",
            "p50": "67.95",
            "p95": "63.48",
            "p99": "58.76",
            "min": "57.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "72.11",
            "p50": "69.31",
            "p95": "64.17",
            "p99": "61.68",
            "min": "61.62",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "75.98",
            "p50": "73.50",
            "p95": "66.94",
            "p99": "62.49",
            "min": "61.55",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "170.37",
            "p50": "157.37",
            "p95": "131.09",
            "p99": "114.60",
            "min": "113.38",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "192.47",
            "p50": "176.72",
            "p95": "150.49",
            "p99": "118.90",
            "min": "110.28",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "198.36",
            "p50": "183.15",
            "p95": "150.66",
            "p99": "143.68",
            "min": "143.33",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "721.70",
            "p50": "583.96",
            "p95": "370.64",
            "p99": "359.91",
            "min": "357.74",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1604.49",
            "p50": "1025.46",
            "p95": "958.60",
            "p99": "935.88",
            "min": "932.22",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "858.46",
            "p50": "678.20",
            "p95": "450.00",
            "p99": "433.38",
            "min": "431.99",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "706.85",
            "p50": "564.26",
            "p95": "372.80",
            "p99": "364.56",
            "min": "363.27",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "10459.47",
            "p50": "4911.68",
            "p95": "1181.91",
            "p99": "1110.13",
            "min": "1085.92",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "819.95",
            "p50": "652.08",
            "p95": "437.57",
            "p99": "395.70",
            "min": "383.85",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17833.70",
            "p50": "4954.35",
            "p95": "1241.82",
            "p99": "1168.91",
            "min": "1128.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22173.12",
            "p50": "4913.53",
            "p95": "1253.08",
            "p99": "1214.70",
            "min": "1209.30",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "820.42",
            "p50": "653.82",
            "p95": "459.59",
            "p99": "378.63",
            "min": "371.56",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "433.39",
            "p50": "372.65",
            "p95": "278.96",
            "p99": "266.84",
            "min": "265.93",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "241.87",
            "p50": "218.19",
            "p95": "191.22",
            "p99": "175.74",
            "min": "174.79",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "72.07",
            "p50": "70.18",
            "p95": "64.91",
            "p99": "64.40",
            "min": "64.34",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.81",
            "p50": "76.44",
            "p95": "71.45",
            "p99": "70.14",
            "min": "70.10",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "168.15",
            "p50": "160.06",
            "p95": "141.09",
            "p99": "134.51",
            "min": "132.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.57",
            "p50": "51.30",
            "p95": "49.08",
            "p99": "48.15",
            "min": "48.11",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.44",
            "p50": "51.29",
            "p95": "49.14",
            "p99": "48.00",
            "min": "47.96",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1192.39",
            "p50": "888.30",
            "p95": "586.77",
            "p99": "555.08",
            "min": "555.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5878.46",
            "p50": "2888.45",
            "p95": "1232.37",
            "p99": "1174.47",
            "min": "1124.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1039.53",
            "p50": "787.32",
            "p95": "520.06",
            "p99": "480.08",
            "min": "462.63",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "64.50",
            "p50": "62.16",
            "p95": "60.32",
            "p99": "61.93",
            "min": "60.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "69.94",
            "p50": "66.74",
            "p95": "63.73",
            "p99": "65.28",
            "min": "62.77",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "311.20",
            "p50": "269.96",
            "p95": "222.98",
            "p99": "235.46",
            "min": "217.69",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "93.91",
            "p50": "72.34",
            "p95": "69.17",
            "p99": "79.46",
            "min": "68.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "466.83",
            "p50": "399.92",
            "p95": "293.55",
            "p99": "287.17",
            "min": "287.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "485.77",
            "p50": "415.52",
            "p95": "322.80",
            "p99": "279.57",
            "min": "277.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "467.05",
            "p50": "400.76",
            "p95": "291.76",
            "p99": "280.17",
            "min": "280.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "465.91",
            "p50": "399.16",
            "p95": "312.12",
            "p99": "282.25",
            "min": "281.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1526.57",
            "p50": "1060.95",
            "p95": "748.99",
            "p99": "689.80",
            "min": "670.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1336.93",
            "p50": "945.14",
            "p95": "640.12",
            "p99": "594.44",
            "min": "562.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1520.16",
            "p50": "1056.09",
            "p95": "740.46",
            "p99": "671.76",
            "min": "639.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1346.86",
            "p50": "967.45",
            "p95": "645.70",
            "p99": "620.05",
            "min": "619.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1320.00",
            "p50": "955.52",
            "p95": "641.53",
            "p99": "610.05",
            "min": "598.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1516.65",
            "p50": "1025.53",
            "p95": "731.00",
            "p99": "646.81",
            "min": "643.17",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "397.32",
            "p50": "348.14",
            "p95": "264.29",
            "p99": "258.20",
            "min": "257.24",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "400.18",
            "p50": "347.57",
            "p95": "276.01",
            "p99": "254.72",
            "min": "253.05",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "424.80",
            "p50": "370.36",
            "p95": "277.27",
            "p99": "271.66",
            "min": "271.61",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "397.37",
            "p50": "348.42",
            "p95": "268.15",
            "p99": "251.92",
            "min": "250.31",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "273.47",
            "p50": "247.87",
            "p95": "208.00",
            "p99": "198.24",
            "min": "198.20",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "739.19",
            "p50": "583.28",
            "p95": "370.94",
            "p99": "348.70",
            "min": "347.82",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "785.99",
            "p50": "621.85",
            "p95": "417.94",
            "p99": "365.77",
            "min": "364.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.82",
            "p50": "449.01",
            "p95": "320.06",
            "p99": "300.66",
            "min": "299.12",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "912.48",
            "p50": "708.68",
            "p95": "469.72",
            "p99": "426.46",
            "min": "419.31",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "504.15",
            "p50": "427.21",
            "p95": "309.41",
            "p99": "295.98",
            "min": "295.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "578.64",
            "p50": "475.29",
            "p95": "332.11",
            "p99": "323.78",
            "min": "321.30",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "722.14",
            "p50": "566.85",
            "p95": "411.40",
            "p99": "365.80",
            "min": "364.47",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "925.51",
            "p50": "707.50",
            "p95": "482.53",
            "p99": "377.22",
            "min": "338.76",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "272.04",
            "p50": "246.40",
            "p95": "207.68",
            "p99": "199.36",
            "min": "199.36",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "679.06",
            "p50": "547.44",
            "p95": "397.21",
            "p99": "357.97",
            "min": "357.95",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "712.71",
            "p50": "587.19",
            "p95": "403.19",
            "p99": "368.23",
            "min": "366.39",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "240.20",
            "p50": "219.89",
            "p95": "191.16",
            "p99": "177.39",
            "min": "177.05",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "719.17",
            "p50": "578.49",
            "p95": "417.02",
            "p99": "371.75",
            "min": "371.35",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "149.55",
            "p50": "139.54",
            "p95": "125.98",
            "p99": "121.17",
            "min": "120.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "151.72",
            "p50": "143.38",
            "p95": "128.06",
            "p99": "122.37",
            "min": "122.22",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "151.71",
            "p50": "143.21",
            "p95": "126.83",
            "p99": "123.09",
            "min": "122.99",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "455.76",
            "p50": "397.55",
            "p95": "311.32",
            "p99": "280.45",
            "min": "280.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "709.39",
            "p50": "577.28",
            "p95": "372.78",
            "p99": "366.92",
            "min": "366.08",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "709.58",
            "p50": "586.02",
            "p95": "408.27",
            "p99": "365.18",
            "min": "364.13",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "157.54",
            "p50": "152.20",
            "p95": "143.51",
            "p99": "121.98",
            "min": "119.65",
            "n": "112",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "210.11",
            "p50": "176.59",
            "p95": "148.21",
            "p99": "159.57",
            "min": "140.88",
            "n": "72",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "201.46",
            "p50": "193.53",
            "p95": "170.45",
            "p99": "143.15",
            "min": "142.66",
            "n": "102",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "158.29",
            "p50": "152.63",
            "p95": "140.44",
            "p99": "123.83",
            "min": "122.34",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2305.53",
            "p50": "1460.25",
            "p95": "744.95",
            "p99": "573.70",
            "min": "558.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "340.00",
            "p50": "315.88",
            "p95": "269.38",
            "p99": "214.71",
            "min": "210.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4366.61",
            "p50": "2176.32",
            "p95": "818.41",
            "p99": "652.36",
            "min": "649.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11512.36",
            "p50": "3959.77",
            "p95": "1137.84",
            "p99": "980.42",
            "min": "848.84",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "336.00",
            "p50": "311.63",
            "p95": "255.36",
            "p99": "210.83",
            "min": "208.34",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "163.07",
            "p50": "155.25",
            "p95": "141.14",
            "p99": "132.18",
            "min": "130.20",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "118.83",
            "p50": "115.09",
            "p95": "107.75",
            "p99": "103.79",
            "min": "103.32",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "235.99",
            "p50": "225.20",
            "p95": "197.02",
            "p99": "186.26",
            "min": "185.90",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.39",
            "p50": "49.53",
            "p95": "47.76",
            "p99": "47.21",
            "min": "47.05",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "205.63",
            "p50": "194.88",
            "p95": "177.52",
            "p99": "164.83",
            "min": "164.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.30",
            "p50": "83.83",
            "p95": "80.04",
            "p99": "76.04",
            "min": "74.83",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "85.64",
            "p50": "83.94",
            "p95": "78.70",
            "p99": "72.61",
            "min": "72.00",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.85",
            "p50": "90.15",
            "p95": "85.50",
            "p99": "83.40",
            "min": "82.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "210.79",
            "p50": "200.03",
            "p95": "179.87",
            "p99": "167.42",
            "min": "164.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.58",
            "p50": "90.07",
            "p95": "85.55",
            "p99": "84.49",
            "min": "84.33",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.05",
            "p50": "105.08",
            "p95": "98.78",
            "p99": "100.83",
            "min": "95.39",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "111.20",
            "p50": "108.05",
            "p95": "98.78",
            "p99": "101.80",
            "min": "96.74",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "158.60",
            "p50": "149.84",
            "p95": "135.44",
            "p99": "135.96",
            "min": "130.65",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.91",
            "p50": "124.77",
            "p95": "118.25",
            "p99": "130.66",
            "min": "116.15",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "243.10",
            "p50": "221.88",
            "p95": "190.34",
            "p99": "144.20",
            "min": "137.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "266.67",
            "p50": "242.54",
            "p95": "204.15",
            "p99": "180.53",
            "min": "178.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "247.22",
            "p50": "221.26",
            "p95": "190.92",
            "p99": "175.73",
            "min": "175.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "250.49",
            "p50": "221.93",
            "p95": "188.83",
            "p99": "172.88",
            "min": "172.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "859.76",
            "p50": "715.01",
            "p95": "514.74",
            "p99": "443.82",
            "min": "439.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "809.94",
            "p50": "688.17",
            "p95": "531.57",
            "p99": "473.29",
            "min": "448.33",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "815.28",
            "p50": "692.94",
            "p95": "506.00",
            "p99": "402.04",
            "min": "381.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "803.91",
            "p50": "679.81",
            "p95": "501.61",
            "p99": "391.92",
            "min": "365.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "773.23",
            "p50": "659.79",
            "p95": "507.58",
            "p99": "428.93",
            "min": "407.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "796.24",
            "p50": "687.27",
            "p95": "534.68",
            "p99": "480.75",
            "min": "472.77",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "214.55",
            "p50": "200.66",
            "p95": "181.03",
            "p99": "155.30",
            "min": "154.35",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "212.31",
            "p50": "200.26",
            "p95": "184.80",
            "p99": "176.29",
            "min": "175.87",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "218.67",
            "p50": "205.47",
            "p95": "179.27",
            "p99": "152.48",
            "min": "148.99",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "220.15",
            "p50": "205.07",
            "p95": "177.36",
            "p99": "158.24",
            "min": "154.32",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "89.61",
            "p50": "86.49",
            "p95": "80.13",
            "p99": "75.28",
            "min": "74.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "82.52",
            "p50": "80.48",
            "p95": "76.71",
            "p99": "73.22",
            "min": "72.83",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "76.86",
            "p50": "74.69",
            "p95": "70.38",
            "p99": "68.09",
            "min": "67.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "120.04",
            "p50": "115.72",
            "p95": "107.50",
            "p99": "100.05",
            "min": "96.93",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "177.96",
            "p50": "170.13",
            "p95": "148.58",
            "p99": "135.00",
            "min": "134.77",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "120.26",
            "p50": "116.70",
            "p95": "108.01",
            "p99": "98.84",
            "min": "98.73",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "176.01",
            "p50": "166.77",
            "p95": "147.63",
            "p99": "133.36",
            "min": "132.01",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "157.55",
            "p50": "152.74",
            "p95": "138.31",
            "p99": "131.18",
            "min": "130.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "177.30",
            "p50": "169.75",
            "p95": "151.08",
            "p99": "139.84",
            "min": "139.76",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "89.44",
            "p50": "86.37",
            "p95": "80.98",
            "p99": "74.28",
            "min": "73.88",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "157.12",
            "p50": "151.43",
            "p95": "137.64",
            "p99": "128.61",
            "min": "128.60",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "134.48",
            "p50": "129.00",
            "p95": "119.92",
            "p99": "109.79",
            "min": "107.70",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "118.40",
            "p50": "114.70",
            "p95": "105.34",
            "p99": "97.02",
            "min": "96.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "156.58",
            "p50": "150.84",
            "p95": "136.30",
            "p99": "130.29",
            "min": "129.56",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "64.23",
            "p50": "62.52",
            "p95": "60.19",
            "p99": "58.53",
            "min": "58.41",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "65.67",
            "p50": "63.51",
            "p95": "60.93",
            "p99": "58.98",
            "min": "58.91",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "68.81",
            "p50": "66.94",
            "p95": "63.74",
            "p99": "61.76",
            "min": "61.65",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "145.12",
            "p50": "138.41",
            "p95": "126.58",
            "p99": "102.36",
            "min": "91.90",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "158.36",
            "p50": "151.48",
            "p95": "136.78",
            "p99": "128.41",
            "min": "126.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "161.63",
            "p50": "154.47",
            "p95": "139.61",
            "p99": "134.37",
            "min": "133.48",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "83.56",
            "p50": "80.13",
            "p95": "62.87",
            "p99": "61.03",
            "min": "61.00",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "621.41",
            "p50": "425.16",
            "p95": "207.66",
            "p99": "162.22",
            "min": "152.13",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "137.76",
            "p50": "129.59",
            "p95": "116.20",
            "p99": "111.49",
            "min": "111.04",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "87.12",
            "p50": "69.61",
            "p95": "66.34",
            "p99": "64.50",
            "min": "64.29",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3085.02",
            "p50": "2039.75",
            "p95": "1052.02",
            "p99": "830.39",
            "min": "677.07",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "288.96",
            "p50": "243.26",
            "p95": "180.26",
            "p99": "162.89",
            "min": "162.73",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5801.29",
            "p50": "1371.11",
            "p95": "680.21",
            "p99": "587.94",
            "min": "545.79",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14937.49",
            "p50": "4483.92",
            "p95": "1144.81",
            "p99": "1069.18",
            "min": "1068.34",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "293.40",
            "p50": "240.27",
            "p95": "201.10",
            "p99": "188.41",
            "min": "186.88",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "241.00",
            "p50": "199.84",
            "p95": "160.57",
            "p99": "123.90",
            "min": "113.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "97.33",
            "p50": "91.60",
            "p95": "70.60",
            "p99": "58.80",
            "min": "57.95",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "70.74",
            "p50": "68.90",
            "p95": "65.22",
            "p99": "63.86",
            "min": "63.69",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "54.55",
            "p50": "52.22",
            "p95": "49.72",
            "p99": "48.45",
            "min": "47.92",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1113.13",
            "p50": "795.18",
            "p95": "517.79",
            "p99": "313.92",
            "min": "307.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "67.08",
            "p50": "64.61",
            "p95": "61.26",
            "p99": "55.85",
            "min": "54.11",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "67.38",
            "p50": "64.47",
            "p95": "60.64",
            "p99": "59.55",
            "min": "59.35",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "856.51",
            "p50": "654.99",
            "p95": "413.66",
            "p99": "321.76",
            "min": "318.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1372.46",
            "p50": "884.07",
            "p95": "525.43",
            "p99": "260.94",
            "min": "250.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "898.04",
            "p50": "658.31",
            "p95": "424.16",
            "p99": "306.78",
            "min": "302.53",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "75.51",
            "p50": "73.54",
            "p95": "71.19",
            "p99": "72.84",
            "min": "70.83",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "69.05",
            "p50": "66.19",
            "p95": "63.38",
            "p99": "64.61",
            "min": "62.22",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "41.18",
            "p50": "38.08",
            "p95": "34.99",
            "p99": "35.55",
            "min": "34.23",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "100.95",
            "p50": "86.67",
            "p95": "82.00",
            "p99": "89.82",
            "min": "81.43",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "67.98",
            "p50": "64.43",
            "p95": "58.37",
            "p99": "56.81",
            "min": "56.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "64.56",
            "p50": "61.72",
            "p95": "57.36",
            "p99": "55.05",
            "min": "54.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "67.19",
            "p50": "64.25",
            "p95": "57.94",
            "p99": "56.38",
            "min": "56.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "67.70",
            "p50": "64.29",
            "p95": "59.18",
            "p99": "58.05",
            "min": "57.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "248.06",
            "p50": "223.81",
            "p95": "192.46",
            "p99": "171.25",
            "min": "168.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "300.34",
            "p50": "270.95",
            "p95": "222.12",
            "p99": "213.81",
            "min": "213.59",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "251.56",
            "p50": "224.83",
            "p95": "189.20",
            "p99": "178.63",
            "min": "175.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "280.79",
            "p50": "253.92",
            "p95": "215.37",
            "p99": "201.74",
            "min": "201.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "240.04",
            "p50": "218.26",
            "p95": "184.57",
            "p99": "176.74",
            "min": "175.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "250.03",
            "p50": "225.45",
            "p95": "191.04",
            "p99": "177.83",
            "min": "176.90",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "57.46",
            "p50": "55.14",
            "p95": "49.24",
            "p99": "47.57",
            "min": "47.42",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "57.74",
            "p50": "55.10",
            "p95": "49.68",
            "p99": "46.76",
            "min": "46.41",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "60.66",
            "p50": "57.89",
            "p95": "51.67",
            "p99": "50.09",
            "min": "50.00",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "57.49",
            "p50": "55.24",
            "p95": "49.43",
            "p99": "47.54",
            "min": "47.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "99.68",
            "p50": "95.04",
            "p95": "89.76",
            "p99": "87.61",
            "min": "87.55",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "76.93",
            "p50": "69.68",
            "p95": "64.60",
            "p99": "62.47",
            "min": "62.10",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "85.41",
            "p50": "79.26",
            "p95": "70.44",
            "p99": "66.97",
            "min": "66.89",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "175.35",
            "p50": "163.70",
            "p95": "144.46",
            "p99": "139.04",
            "min": "138.28",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "169.30",
            "p50": "158.04",
            "p95": "142.04",
            "p99": "134.69",
            "min": "132.96",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "97.96",
            "p50": "93.56",
            "p95": "86.80",
            "p99": "85.29",
            "min": "85.24",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "94.53",
            "p50": "81.62",
            "p95": "74.47",
            "p99": "71.23",
            "min": "70.09",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "88.68",
            "p50": "85.18",
            "p95": "79.79",
            "p99": "77.25",
            "min": "77.25",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.90",
            "p50": "121.05",
            "p95": "110.84",
            "p99": "105.94",
            "min": "104.89",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "99.21",
            "p50": "94.86",
            "p95": "89.23",
            "p99": "86.11",
            "min": "86.09",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "74.72",
            "p50": "72.17",
            "p95": "69.01",
            "p99": "67.70",
            "min": "67.62",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "97.70",
            "p50": "94.36",
            "p95": "89.29",
            "p99": "85.78",
            "min": "85.72",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "99.25",
            "p50": "94.40",
            "p95": "87.71",
            "p99": "84.04",
            "min": "83.73",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "81.51",
            "p50": "78.20",
            "p95": "73.90",
            "p99": "72.44",
            "min": "72.22",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "62.14",
            "p50": "59.51",
            "p95": "56.27",
            "p99": "54.28",
            "min": "54.23",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "61.94",
            "p50": "59.25",
            "p95": "56.28",
            "p99": "54.00",
            "min": "53.86",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "60.58",
            "p50": "58.64",
            "p95": "55.53",
            "p99": "53.82",
            "min": "53.72",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "168.03",
            "p50": "159.26",
            "p95": "141.84",
            "p99": "136.25",
            "min": "136.07",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "75.63",
            "p50": "72.52",
            "p95": "68.61",
            "p99": "67.36",
            "min": "67.32",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "104.19",
            "p50": "99.10",
            "p95": "91.22",
            "p99": "89.59",
            "min": "89.18",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    }
}