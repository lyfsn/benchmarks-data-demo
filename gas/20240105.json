{
    "clients": {
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 356.11920299999997,
                    "min": 356.11920299999997,
                    "p50": 356.11920299999997,
                    "p95": 356.11920299999997,
                    "p99": 356.11920299999997,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 303.90570299999996,
                    "min": 303.90570299999996,
                    "p50": 303.90570299999996,
                    "p95": 303.90570299999996,
                    "p99": 303.90570299999996,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 478.821616,
                    "min": 478.821616,
                    "p50": 478.821616,
                    "p95": 478.821616,
                    "p99": 478.821616,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 421.913543,
                    "min": 421.913543,
                    "p50": 421.913543,
                    "p95": 421.913543,
                    "p99": 421.913543,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 364.926471,
                    "min": 364.926471,
                    "p50": 364.926471,
                    "p95": 364.926471,
                    "p99": 364.926471,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 393.14015,
                    "min": 393.14015,
                    "p50": 393.14015,
                    "p95": 393.14015,
                    "p99": 393.14015,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 451.701897,
                    "min": 451.701897,
                    "p50": 451.701897,
                    "p95": 451.701897,
                    "p99": 451.701897,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 126.73363699999999,
                    "min": 126.73363699999999,
                    "p50": 126.73363699999999,
                    "p95": 126.73363699999999,
                    "p99": 126.73363699999999,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 155.283467,
                    "min": 155.283467,
                    "p50": 155.283467,
                    "p95": 155.283467,
                    "p99": 155.283467,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 184.912547,
                    "min": 184.912547,
                    "p50": 184.912547,
                    "p95": 184.912547,
                    "p99": 184.912547,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 631.332199,
                    "min": 631.332199,
                    "p50": 631.332199,
                    "p95": 631.332199,
                    "p99": 631.332199,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 246.525907,
                    "min": 246.525907,
                    "p50": 246.525907,
                    "p95": 246.525907,
                    "p99": 246.525907,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 549.246029,
                    "min": 549.246029,
                    "p50": 549.246029,
                    "p95": 549.246029,
                    "p99": 549.246029,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 316.15691699999996,
                    "min": 316.15691699999996,
                    "p50": 316.15691699999996,
                    "p95": 316.15691699999996,
                    "p99": 316.15691699999996,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 245.32812199999998,
                    "min": 245.32812199999998,
                    "p50": 245.32812199999998,
                    "p95": 245.32812199999998,
                    "p99": 245.32812199999998,
                    "n": 1,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 81.014983,
                    "min": 81.014983,
                    "p50": 81.014983,
                    "p95": 81.014983,
                    "p99": 81.014983,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 145.76690299999999,
                    "min": 145.76690299999999,
                    "p50": 145.76690299999999,
                    "p95": 145.76690299999999,
                    "p99": 145.76690299999999,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 159.366251,
                    "min": 159.366251,
                    "p50": 159.366251,
                    "p95": 159.366251,
                    "p99": 159.366251,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 31.946263,
                    "min": 31.946263,
                    "p50": 31.946263,
                    "p95": 31.946263,
                    "p99": 31.946263,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 100.157612,
                    "min": 100.157612,
                    "p50": 100.157612,
                    "p95": 100.157612,
                    "p99": 100.157612,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 166.305642,
                    "min": 166.305642,
                    "p50": 166.305642,
                    "p95": 166.305642,
                    "p99": 166.305642,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 38.604061,
                    "min": 38.604061,
                    "p50": 38.604061,
                    "p95": 38.604061,
                    "p99": 38.604061,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 70.742448,
                    "min": 70.742448,
                    "p50": 70.742448,
                    "p95": 70.742448,
                    "p99": 70.742448,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 75.047094,
                    "min": 75.047094,
                    "p50": 75.047094,
                    "p95": 75.047094,
                    "p99": 75.047094,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 224.19077199999998,
                    "min": 224.19077199999998,
                    "p50": 224.19077199999998,
                    "p95": 224.19077199999998,
                    "p99": 224.19077199999998,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 243.77892899999998,
                    "min": 243.77892899999998,
                    "p50": 243.77892899999998,
                    "p95": 243.77892899999998,
                    "p99": 243.77892899999998,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 86.34151,
                    "min": 86.34151,
                    "p50": 86.34151,
                    "p95": 86.34151,
                    "p99": 86.34151,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 643.244767,
                    "min": 643.244767,
                    "p50": 643.244767,
                    "p95": 643.244767,
                    "p99": 643.244767,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.104260999999997,
                    "min": 26.104260999999997,
                    "p50": 26.104260999999997,
                    "p95": 26.104260999999997,
                    "p99": 26.104260999999997,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 58.395303,
                    "min": 58.395303,
                    "p50": 58.395303,
                    "p95": 58.395303,
                    "p99": 58.395303,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 346.811241,
                    "min": 346.811241,
                    "p50": 346.811241,
                    "p95": 346.811241,
                    "p99": 346.811241,
                    "n": 1,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 263.128686,
                    "min": 263.128686,
                    "p50": 263.128686,
                    "p95": 263.128686,
                    "p99": 263.128686,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 244.28534599999998,
                    "min": 244.28534599999998,
                    "p50": 244.28534599999998,
                    "p95": 244.28534599999998,
                    "p99": 244.28534599999998,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 267.382883,
                    "min": 267.382883,
                    "p50": 267.382883,
                    "p95": 267.382883,
                    "p99": 267.382883,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 154.44940499999998,
                    "min": 154.44940499999998,
                    "p50": 154.44940499999998,
                    "p95": 154.44940499999998,
                    "p99": 154.44940499999998,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 863.805981,
                    "min": 863.805981,
                    "p50": 863.805981,
                    "p95": 863.805981,
                    "p99": 863.805981,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 442.11017899999996,
                    "min": 442.11017899999996,
                    "p50": 442.11017899999996,
                    "p95": 442.11017899999996,
                    "p99": 442.11017899999996,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 367.145962,
                    "min": 367.145962,
                    "p50": 367.145962,
                    "p95": 367.145962,
                    "p99": 367.145962,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 368.91394099999997,
                    "min": 368.91394099999997,
                    "p50": 368.91394099999997,
                    "p95": 368.91394099999997,
                    "p99": 368.91394099999997,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 216.24584299999998,
                    "min": 216.24584299999998,
                    "p50": 216.24584299999998,
                    "p95": 216.24584299999998,
                    "p99": 216.24584299999998,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 507.671839,
                    "min": 507.671839,
                    "p50": 507.671839,
                    "p95": 507.671839,
                    "p99": 507.671839,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 123.07274799999999,
                    "min": 123.07274799999999,
                    "p50": 123.07274799999999,
                    "p95": 123.07274799999999,
                    "p99": 123.07274799999999,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 411.79279199999996,
                    "min": 411.79279199999996,
                    "p50": 411.79279199999996,
                    "p95": 411.79279199999996,
                    "p99": 411.79279199999996,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 227.82087199999998,
                    "min": 227.82087199999998,
                    "p50": 227.82087199999998,
                    "p95": 227.82087199999998,
                    "p99": 227.82087199999998,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 197.432144,
                    "min": 197.432144,
                    "p50": 197.432144,
                    "p95": 197.432144,
                    "p99": 197.432144,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.17401699999999,
                    "min": 94.17401699999999,
                    "p50": 94.17401699999999,
                    "p95": 94.17401699999999,
                    "p99": 94.17401699999999,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 350.028095,
                    "min": 350.028095,
                    "p50": 350.028095,
                    "p95": 350.028095,
                    "p99": 350.028095,
                    "n": 1,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 559.5105149999999,
                    "min": 559.5105149999999,
                    "p50": 559.5105149999999,
                    "p95": 559.5105149999999,
                    "p99": 559.5105149999999,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.005768,
                    "min": 129.005768,
                    "p50": 129.005768,
                    "p95": 129.005768,
                    "p99": 129.005768,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 395.84457299999997,
                    "min": 395.84457299999997,
                    "p50": 395.84457299999997,
                    "p95": 395.84457299999997,
                    "p99": 395.84457299999997,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 420.068218,
                    "min": 420.068218,
                    "p50": 420.068218,
                    "p95": 420.068218,
                    "p99": 420.068218,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 119.53723099999999,
                    "min": 119.53723099999999,
                    "p50": 119.53723099999999,
                    "p95": 119.53723099999999,
                    "p99": 119.53723099999999,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 325.23476999999997,
                    "min": 325.23476999999997,
                    "p50": 325.23476999999997,
                    "p95": 325.23476999999997,
                    "p99": 325.23476999999997,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 482.769031,
                    "min": 482.769031,
                    "p50": 482.769031,
                    "p95": 482.769031,
                    "p99": 482.769031,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 214.94463399999998,
                    "min": 214.94463399999998,
                    "p50": 214.94463399999998,
                    "p95": 214.94463399999998,
                    "p99": 214.94463399999998,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 304.205904,
                    "min": 304.205904,
                    "p50": 304.205904,
                    "p95": 304.205904,
                    "p99": 304.205904,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 274.062229,
                    "min": 274.062229,
                    "p50": 274.062229,
                    "p95": 274.062229,
                    "p99": 274.062229,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 629.754207,
                    "min": 629.754207,
                    "p50": 629.754207,
                    "p95": 629.754207,
                    "p99": 629.754207,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 334.938073,
                    "min": 334.938073,
                    "p50": 334.938073,
                    "p95": 334.938073,
                    "p99": 334.938073,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 245.185237,
                    "min": 245.185237,
                    "p50": 245.185237,
                    "p95": 245.185237,
                    "p99": 245.185237,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.061164,
                    "min": 186.061164,
                    "p50": 186.061164,
                    "p95": 186.061164,
                    "p99": 186.061164,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 452.725577,
                    "min": 452.725577,
                    "p50": 452.725577,
                    "p95": 452.725577,
                    "p99": 452.725577,
                    "n": 1,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 28.332147,
                    "min": 28.332147,
                    "p50": 28.332147,
                    "p95": 28.332147,
                    "p99": 28.332147,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 23.35595,
                    "min": 23.35595,
                    "p50": 23.35595,
                    "p95": 23.35595,
                    "p99": 23.35595,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 68.528215,
                    "min": 68.528215,
                    "p50": 68.528215,
                    "p95": 68.528215,
                    "p99": 68.528215,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 139.087603,
                    "min": 139.087603,
                    "p50": 139.087603,
                    "p95": 139.087603,
                    "p99": 139.087603,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.537716999999997,
                    "min": 24.537716999999997,
                    "p50": 24.537716999999997,
                    "p95": 24.537716999999997,
                    "p99": 24.537716999999997,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.024295,
                    "min": 27.024295,
                    "p50": 27.024295,
                    "p95": 27.024295,
                    "p99": 27.024295,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 59.064026999999996,
                    "min": 59.064026999999996,
                    "p50": 59.064026999999996,
                    "p95": 59.064026999999996,
                    "p99": 59.064026999999996,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.101668999999998,
                    "min": 24.101668999999998,
                    "p50": 24.101668999999998,
                    "p95": 24.101668999999998,
                    "p99": 24.101668999999998,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 56.789362,
                    "min": 56.789362,
                    "p50": 56.789362,
                    "p95": 56.789362,
                    "p99": 56.789362,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 24.917257,
                    "min": 24.917257,
                    "p50": 24.917257,
                    "p95": 24.917257,
                    "p99": 24.917257,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 43.399767,
                    "min": 43.399767,
                    "p50": 43.399767,
                    "p95": 43.399767,
                    "p99": 43.399767,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.744650999999998,
                    "min": 24.744650999999998,
                    "p50": 24.744650999999998,
                    "p95": 24.744650999999998,
                    "p99": 24.744650999999998,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.7994,
                    "min": 24.7994,
                    "p50": 24.7994,
                    "p95": 24.7994,
                    "p99": 24.7994,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.319295,
                    "min": 24.319295,
                    "p50": 24.319295,
                    "p95": 24.319295,
                    "p99": 24.319295,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.275364999999997,
                    "min": 24.275364999999997,
                    "p50": 24.275364999999997,
                    "p95": 24.275364999999997,
                    "p99": 24.275364999999997,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.243986,
                    "min": 24.243986,
                    "p50": 24.243986,
                    "p95": 24.243986,
                    "p99": 24.243986,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.436391,
                    "min": 24.436391,
                    "p50": 24.436391,
                    "p95": 24.436391,
                    "p99": 24.436391,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.598806,
                    "min": 24.598806,
                    "p50": 24.598806,
                    "p95": 24.598806,
                    "p99": 24.598806,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 25.18983,
                    "min": 25.18983,
                    "p50": 25.18983,
                    "p95": 25.18983,
                    "p99": 25.18983,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 141.677007,
                    "min": 141.677007,
                    "p50": 141.677007,
                    "p95": 141.677007,
                    "p99": 141.677007,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.152406,
                    "min": 98.152406,
                    "p50": 98.152406,
                    "p95": 98.152406,
                    "p99": 98.152406,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 203.746341,
                    "min": 203.746341,
                    "p50": 203.746341,
                    "p95": 203.746341,
                    "p99": 203.746341,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.204201,
                    "min": 109.204201,
                    "p50": 109.204201,
                    "p95": 109.204201,
                    "p99": 109.204201,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 169.144713,
                    "min": 169.144713,
                    "p50": 169.144713,
                    "p95": 169.144713,
                    "p99": 169.144713,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 622.911922,
                    "min": 622.911922,
                    "p50": 622.911922,
                    "p95": 622.911922,
                    "p99": 622.911922,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 157.208189,
                    "min": 157.208189,
                    "p50": 157.208189,
                    "p95": 157.208189,
                    "p99": 157.208189,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 190.478589,
                    "min": 190.478589,
                    "p50": 190.478589,
                    "p95": 190.478589,
                    "p99": 190.478589,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 244.785506,
                    "min": 244.785506,
                    "p50": 244.785506,
                    "p95": 244.785506,
                    "p99": 244.785506,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 131.611234,
                    "min": 131.611234,
                    "p50": 131.611234,
                    "p95": 131.611234,
                    "p99": 131.611234,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 506.30560399999996,
                    "min": 506.30560399999996,
                    "p50": 506.30560399999996,
                    "p95": 506.30560399999996,
                    "p99": 506.30560399999996,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 119.529601,
                    "min": 119.529601,
                    "p50": 119.529601,
                    "p95": 119.529601,
                    "p99": 119.529601,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 176.783083,
                    "min": 176.783083,
                    "p50": 176.783083,
                    "p95": 176.783083,
                    "p99": 176.783083,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 387.172165,
                    "min": 387.172165,
                    "p50": 387.172165,
                    "p95": 387.172165,
                    "p99": 387.172165,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.52939599999999,
                    "min": 87.52939599999999,
                    "p50": 87.52939599999999,
                    "p95": 87.52939599999999,
                    "p99": 87.52939599999999,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1188.751612,
                    "min": 1188.751612,
                    "p50": 1188.751612,
                    "p95": 1188.751612,
                    "p99": 1188.751612,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.058477,
                    "min": 70.058477,
                    "p50": 70.058477,
                    "p95": 70.058477,
                    "p99": 70.058477,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 217.37014399999998,
                    "min": 217.37014399999998,
                    "p50": 217.37014399999998,
                    "p95": 217.37014399999998,
                    "p99": 217.37014399999998,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 273.407965,
                    "min": 273.407965,
                    "p50": 273.407965,
                    "p95": 273.407965,
                    "p99": 273.407965,
                    "n": 1,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 26.646036,
                    "min": 26.646036,
                    "p50": 26.646036,
                    "p95": 26.646036,
                    "p99": 26.646036,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.633153,
                    "min": 24.633153,
                    "p50": 24.633153,
                    "p95": 24.633153,
                    "p99": 24.633153,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.77101,
                    "min": 24.77101,
                    "p50": 24.77101,
                    "p95": 24.77101,
                    "p99": 24.77101,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.679662999999998,
                    "min": 24.679662999999998,
                    "p50": 24.679662999999998,
                    "p95": 24.679662999999998,
                    "p99": 24.679662999999998,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 23.222203999999998,
                    "min": 23.222203999999998,
                    "p50": 23.222203999999998,
                    "p95": 23.222203999999998,
                    "p99": 23.222203999999998,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 26.236048,
                    "min": 26.236048,
                    "p50": 26.236048,
                    "p95": 26.236048,
                    "p99": 26.236048,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.562435999999998,
                    "min": 24.562435999999998,
                    "p50": 24.562435999999998,
                    "p95": 24.562435999999998,
                    "p99": 24.562435999999998,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.344293,
                    "min": 24.344293,
                    "p50": 24.344293,
                    "p95": 24.344293,
                    "p99": 24.344293,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 44.124556999999996,
                    "min": 44.124556999999996,
                    "p50": 44.124556999999996,
                    "p95": 44.124556999999996,
                    "p99": 44.124556999999996,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.871257999999997,
                    "min": 24.871257999999997,
                    "p50": 24.871257999999997,
                    "p95": 24.871257999999997,
                    "p99": 24.871257999999997,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.620025,
                    "min": 24.620025,
                    "p50": 24.620025,
                    "p95": 24.620025,
                    "p99": 24.620025,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 25.313525,
                    "min": 25.313525,
                    "p50": 25.313525,
                    "p95": 25.313525,
                    "p99": 25.313525,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.885517,
                    "min": 24.885517,
                    "p50": 24.885517,
                    "p95": 24.885517,
                    "p99": 24.885517,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.715574999999998,
                    "min": 26.715574999999998,
                    "p50": 26.715574999999998,
                    "p95": 26.715574999999998,
                    "p99": 26.715574999999998,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 87.80931799999999,
                    "min": 87.80931799999999,
                    "p50": 87.80931799999999,
                    "p95": 87.80931799999999,
                    "p99": 87.80931799999999,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.946447,
                    "min": 24.946447,
                    "p50": 24.946447,
                    "p95": 24.946447,
                    "p99": 24.946447,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 35.828375,
                    "min": 35.828375,
                    "p50": 35.828375,
                    "p95": 35.828375,
                    "p99": 35.828375,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.718864,
                    "min": 24.718864,
                    "p50": 24.718864,
                    "p95": 24.718864,
                    "p99": 24.718864,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.698245,
                    "min": 24.698245,
                    "p50": 24.698245,
                    "p95": 24.698245,
                    "p99": 24.698245,
                    "n": 1,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 24.447468999999998,
                    "min": 24.447468999999998,
                    "p50": 24.447468999999998,
                    "p95": 24.447468999999998,
                    "p99": 24.447468999999998,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.597997,
                    "min": 26.597997,
                    "p50": 26.597997,
                    "p95": 26.597997,
                    "p99": 26.597997,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 22.252722,
                    "min": 22.252722,
                    "p50": 22.252722,
                    "p95": 22.252722,
                    "p99": 22.252722,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.515508,
                    "min": 24.515508,
                    "p50": 24.515508,
                    "p95": 24.515508,
                    "p99": 24.515508,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.747701,
                    "min": 24.747701,
                    "p50": 24.747701,
                    "p95": 24.747701,
                    "p99": 24.747701,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.499968,
                    "min": 24.499968,
                    "p50": 24.499968,
                    "p95": 24.499968,
                    "p99": 24.499968,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.578046,
                    "min": 24.578046,
                    "p50": 24.578046,
                    "p95": 24.578046,
                    "p99": 24.578046,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.005053,
                    "min": 24.005053,
                    "p50": 24.005053,
                    "p95": 24.005053,
                    "p99": 24.005053,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 23.334062,
                    "min": 23.334062,
                    "p50": 23.334062,
                    "p95": 23.334062,
                    "p99": 23.334062,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 25.084842,
                    "min": 25.084842,
                    "p50": 25.084842,
                    "p95": 25.084842,
                    "p99": 25.084842,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.771831,
                    "min": 24.771831,
                    "p50": 24.771831,
                    "p95": 24.771831,
                    "p99": 24.771831,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 24.921227,
                    "min": 24.921227,
                    "p50": 24.921227,
                    "p95": 24.921227,
                    "p99": 24.921227,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.785570999999997,
                    "min": 24.785570999999997,
                    "p50": 24.785570999999997,
                    "p95": 24.785570999999997,
                    "p99": 24.785570999999997,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.718725,
                    "min": 26.718725,
                    "p50": 26.718725,
                    "p95": 26.718725,
                    "p99": 26.718725,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.684784,
                    "min": 24.684784,
                    "p50": 24.684784,
                    "p95": 24.684784,
                    "p99": 24.684784,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 45.441300999999996,
                    "min": 45.441300999999996,
                    "p50": 45.441300999999996,
                    "p95": 45.441300999999996,
                    "p99": 45.441300999999996,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.335203999999997,
                    "min": 24.335203999999997,
                    "p50": 24.335203999999997,
                    "p95": 24.335203999999997,
                    "p99": 24.335203999999997,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.81262,
                    "min": 24.81262,
                    "p50": 24.81262,
                    "p95": 24.81262,
                    "p99": 24.81262,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 25.031554999999997,
                    "min": 25.031554999999997,
                    "p50": 25.031554999999997,
                    "p95": 25.031554999999997,
                    "p99": 25.031554999999997,
                    "n": 1,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 146.946027,
                    "min": 146.946027,
                    "p50": 146.946027,
                    "p95": 146.946027,
                    "p99": 146.946027,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.07954099999999,
                    "min": 70.07954099999999,
                    "p50": 70.07954099999999,
                    "p95": 70.07954099999999,
                    "p99": 70.07954099999999,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1206.9228289999999,
                    "min": 1206.9228289999999,
                    "p50": 1206.9228289999999,
                    "p95": 1206.9228289999999,
                    "p99": 1206.9228289999999,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 274.632279,
                    "min": 274.632279,
                    "p50": 274.632279,
                    "p95": 274.632279,
                    "p99": 274.632279,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 122.80670099999999,
                    "min": 122.80670099999999,
                    "p50": 122.80670099999999,
                    "p95": 122.80670099999999,
                    "p99": 122.80670099999999,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 83.270715,
                    "min": 83.270715,
                    "p50": 83.270715,
                    "p95": 83.270715,
                    "p99": 83.270715,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 112.219555,
                    "min": 112.219555,
                    "p50": 112.219555,
                    "p95": 112.219555,
                    "p99": 112.219555,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 391.160007,
                    "min": 391.160007,
                    "p50": 391.160007,
                    "p95": 391.160007,
                    "p99": 391.160007,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.192039,
                    "min": 194.192039,
                    "p50": 194.192039,
                    "p95": 194.192039,
                    "p99": 194.192039,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 173.833203,
                    "min": 173.833203,
                    "p50": 173.833203,
                    "p95": 173.833203,
                    "p99": 173.833203,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 507.33852399999995,
                    "min": 507.33852399999995,
                    "p50": 507.33852399999995,
                    "p95": 507.33852399999995,
                    "p99": 507.33852399999995,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 626.098074,
                    "min": 626.098074,
                    "p50": 626.098074,
                    "p95": 626.098074,
                    "p99": 626.098074,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 206.874787,
                    "min": 206.874787,
                    "p50": 206.874787,
                    "p95": 206.874787,
                    "p99": 206.874787,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.903689,
                    "min": 98.903689,
                    "p50": 98.903689,
                    "p95": 98.903689,
                    "p99": 98.903689,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 246.530073,
                    "min": 246.530073,
                    "p50": 246.530073,
                    "p95": 246.530073,
                    "p99": 246.530073,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 147.222755,
                    "min": 147.222755,
                    "p50": 147.222755,
                    "p95": 147.222755,
                    "p99": 147.222755,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 178.508525,
                    "min": 178.508525,
                    "p50": 178.508525,
                    "p95": 178.508525,
                    "p99": 178.508525,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 214.68657199999998,
                    "min": 214.68657199999998,
                    "p50": 214.68657199999998,
                    "p95": 214.68657199999998,
                    "p99": 214.68657199999998,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 130.51480899999999,
                    "min": 130.51480899999999,
                    "p50": 130.51480899999999,
                    "p95": 130.51480899999999,
                    "p99": 130.51480899999999,
                    "n": 1,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 756.3625999999999,
                    "min": 756.3625999999999,
                    "p50": 756.3625999999999,
                    "p95": 756.3625999999999,
                    "p99": 756.3625999999999,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 129.38553199999998,
                    "min": 129.38553199999998,
                    "p50": 129.38553199999998,
                    "p95": 129.38553199999998,
                    "p99": 129.38553199999998,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 247.21740699999998,
                    "min": 247.21740699999998,
                    "p50": 247.21740699999998,
                    "p95": 247.21740699999998,
                    "p99": 247.21740699999998,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 376.328179,
                    "min": 376.328179,
                    "p50": 376.328179,
                    "p95": 376.328179,
                    "p99": 376.328179,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.052422,
                    "min": 150.052422,
                    "p50": 150.052422,
                    "p95": 150.052422,
                    "p99": 150.052422,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 394.669036,
                    "min": 394.669036,
                    "p50": 394.669036,
                    "p95": 394.669036,
                    "p99": 394.669036,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 226.329959,
                    "min": 226.329959,
                    "p50": 226.329959,
                    "p95": 226.329959,
                    "p99": 226.329959,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 441.96065999999996,
                    "min": 441.96065999999996,
                    "p50": 441.96065999999996,
                    "p95": 441.96065999999996,
                    "p99": 441.96065999999996,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.847861,
                    "min": 185.847861,
                    "p50": 185.847861,
                    "p95": 185.847861,
                    "p99": 185.847861,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 269.401069,
                    "min": 269.401069,
                    "p50": 269.401069,
                    "p95": 269.401069,
                    "p99": 269.401069,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 941.5660359999999,
                    "min": 941.5660359999999,
                    "p50": 941.5660359999999,
                    "p95": 941.5660359999999,
                    "p99": 941.5660359999999,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.916744,
                    "min": 282.916744,
                    "p50": 282.916744,
                    "p95": 282.916744,
                    "p99": 282.916744,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 204.743284,
                    "min": 204.743284,
                    "p50": 204.743284,
                    "p95": 204.743284,
                    "p99": 204.743284,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 332.723983,
                    "min": 332.723983,
                    "p50": 332.723983,
                    "p95": 332.723983,
                    "p99": 332.723983,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 96.643917,
                    "min": 96.643917,
                    "p50": 96.643917,
                    "p95": 96.643917,
                    "p99": 96.643917,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 351.125413,
                    "min": 351.125413,
                    "p50": 351.125413,
                    "p95": 351.125413,
                    "p99": 351.125413,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 454.207636,
                    "min": 454.207636,
                    "p50": 454.207636,
                    "p95": 454.207636,
                    "p99": 454.207636,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1257.969801,
                    "min": 1257.969801,
                    "p50": 1257.969801,
                    "p95": 1257.969801,
                    "p99": 1257.969801,
                    "n": 1,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.635615,
                    "min": 214.635615,
                    "p50": 214.635615,
                    "p95": 214.635615,
                    "p99": 214.635615,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 384.428212,
                    "min": 384.428212,
                    "p50": 384.428212,
                    "p95": 384.428212,
                    "p99": 384.428212,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 330.22367199999997,
                    "min": 330.22367199999997,
                    "p50": 330.22367199999997,
                    "p95": 330.22367199999997,
                    "p99": 330.22367199999997,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 613.813238,
                    "min": 613.813238,
                    "p50": 613.813238,
                    "p95": 613.813238,
                    "p99": 613.813238,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 555.869765,
                    "min": 555.869765,
                    "p50": 555.869765,
                    "p95": 555.869765,
                    "p99": 555.869765,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 728.135762,
                    "min": 728.135762,
                    "p50": 728.135762,
                    "p95": 728.135762,
                    "p99": 728.135762,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 904.7910059999999,
                    "min": 904.7910059999999,
                    "p50": 904.7910059999999,
                    "p95": 904.7910059999999,
                    "p99": 904.7910059999999,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 791.1958129999999,
                    "min": 791.1958129999999,
                    "p50": 791.1958129999999,
                    "p95": 791.1958129999999,
                    "p99": 791.1958129999999,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 671.201743,
                    "min": 671.201743,
                    "p50": 671.201743,
                    "p95": 671.201743,
                    "p99": 671.201743,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1193.1310409999999,
                    "min": 1193.1310409999999,
                    "p50": 1193.1310409999999,
                    "p95": 1193.1310409999999,
                    "p99": 1193.1310409999999,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 438.768685,
                    "min": 438.768685,
                    "p50": 438.768685,
                    "p95": 438.768685,
                    "p99": 438.768685,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 263.362186,
                    "min": 263.362186,
                    "p50": 263.362186,
                    "p95": 263.362186,
                    "p99": 263.362186,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1037.401805,
                    "min": 1037.401805,
                    "p50": 1037.401805,
                    "p95": 1037.401805,
                    "p99": 1037.401805,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 498.88221999999996,
                    "min": 498.88221999999996,
                    "p50": 498.88221999999996,
                    "p95": 498.88221999999996,
                    "p99": 498.88221999999996,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 833.0926039999999,
                    "min": 833.0926039999999,
                    "p50": 833.0926039999999,
                    "p95": 833.0926039999999,
                    "p99": 833.0926039999999,
                    "n": 1,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 921.010534,
                    "min": 921.010534,
                    "p50": 921.010534,
                    "p95": 921.010534,
                    "p99": 921.010534,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1971.745007,
                    "min": 1971.745007,
                    "p50": 1971.745007,
                    "p95": 1971.745007,
                    "p99": 1971.745007,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2879.535902,
                    "min": 2879.535902,
                    "p50": 2879.535902,
                    "p95": 2879.535902,
                    "p99": 2879.535902,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5599.151,
                    "min": 5599.151,
                    "p50": 5599.151,
                    "p95": 5599.151,
                    "p99": 5599.151,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1539.4077949999999,
                    "min": 1539.4077949999999,
                    "p50": 1539.4077949999999,
                    "p95": 1539.4077949999999,
                    "p99": 1539.4077949999999,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 723.816139,
                    "min": 723.816139,
                    "p50": 723.816139,
                    "p95": 723.816139,
                    "p99": 723.816139,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 596.3076,
                    "min": 596.3076,
                    "p50": 596.3076,
                    "p95": 596.3076,
                    "p99": 596.3076,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1727.384848,
                    "min": 1727.384848,
                    "p50": 1727.384848,
                    "p95": 1727.384848,
                    "p99": 1727.384848,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4269.17898,
                    "min": 4269.17898,
                    "p50": 4269.17898,
                    "p95": 4269.17898,
                    "p99": 4269.17898,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2508.6922,
                    "min": 2508.6922,
                    "p50": 2508.6922,
                    "p95": 2508.6922,
                    "p99": 2508.6922,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2153.3411069999997,
                    "min": 2153.3411069999997,
                    "p50": 2153.3411069999997,
                    "p95": 2153.3411069999997,
                    "p99": 2153.3411069999997,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1168.464097,
                    "min": 1168.464097,
                    "p50": 1168.464097,
                    "p95": 1168.464097,
                    "p99": 1168.464097,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1455.638507,
                    "min": 1455.638507,
                    "p50": 1455.638507,
                    "p95": 1455.638507,
                    "p99": 1455.638507,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1027.392855,
                    "min": 1027.392855,
                    "p50": 1027.392855,
                    "p95": 1027.392855,
                    "p99": 1027.392855,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 463.248497,
                    "min": 463.248497,
                    "p50": 463.248497,
                    "p95": 463.248497,
                    "p99": 463.248497,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1873.6886419999998,
                    "min": 1873.6886419999998,
                    "p50": 1873.6886419999998,
                    "p95": 1873.6886419999998,
                    "p99": 1873.6886419999998,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1303.288173,
                    "min": 1303.288173,
                    "p50": 1303.288173,
                    "p95": 1303.288173,
                    "p99": 1303.288173,
                    "n": 1,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 426.76312099999996,
                    "min": 426.76312099999996,
                    "p50": 426.76312099999996,
                    "p95": 426.76312099999996,
                    "p99": 426.76312099999996,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1296.1015519999999,
                    "min": 1296.1015519999999,
                    "p50": 1296.1015519999999,
                    "p95": 1296.1015519999999,
                    "p99": 1296.1015519999999,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2602.812588,
                    "min": 2602.812588,
                    "p50": 2602.812588,
                    "p95": 2602.812588,
                    "p99": 2602.812588,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1438.9959939999999,
                    "min": 1438.9959939999999,
                    "p50": 1438.9959939999999,
                    "p95": 1438.9959939999999,
                    "p99": 1438.9959939999999,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3781.116264,
                    "min": 3781.116264,
                    "p50": 3781.116264,
                    "p95": 3781.116264,
                    "p99": 3781.116264,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 805.2470979999999,
                    "min": 805.2470979999999,
                    "p50": 805.2470979999999,
                    "p95": 805.2470979999999,
                    "p99": 805.2470979999999,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1198.0065849999999,
                    "min": 1198.0065849999999,
                    "p50": 1198.0065849999999,
                    "p95": 1198.0065849999999,
                    "p99": 1198.0065849999999,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5012.699189,
                    "min": 5012.699189,
                    "p50": 5012.699189,
                    "p95": 5012.699189,
                    "p99": 5012.699189,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 692.524677,
                    "min": 692.524677,
                    "p50": 692.524677,
                    "p95": 692.524677,
                    "p99": 692.524677,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1724.7686469999999,
                    "min": 1724.7686469999999,
                    "p50": 1724.7686469999999,
                    "p95": 1724.7686469999999,
                    "p99": 1724.7686469999999,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 922.139017,
                    "min": 922.139017,
                    "p50": 922.139017,
                    "p95": 922.139017,
                    "p99": 922.139017,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 510.70486,
                    "min": 510.70486,
                    "p50": 510.70486,
                    "p95": 510.70486,
                    "p99": 510.70486,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1931.02001,
                    "min": 1931.02001,
                    "p50": 1931.02001,
                    "p95": 1931.02001,
                    "p99": 1931.02001,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1851.6367169999999,
                    "min": 1851.6367169999999,
                    "p50": 1851.6367169999999,
                    "p95": 1851.6367169999999,
                    "p99": 1851.6367169999999,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2248.841267,
                    "min": 2248.841267,
                    "p50": 2248.841267,
                    "p95": 2248.841267,
                    "p99": 2248.841267,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1051.97946,
                    "min": 1051.97946,
                    "p50": 1051.97946,
                    "p95": 1051.97946,
                    "p99": 1051.97946,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1568.6786559999998,
                    "min": 1568.6786559999998,
                    "p50": 1568.6786559999998,
                    "p95": 1568.6786559999998,
                    "p99": 1568.6786559999998,
                    "n": 1,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 895.6448049999999,
                    "min": 895.6448049999999,
                    "p50": 895.6448049999999,
                    "p95": 895.6448049999999,
                    "p99": 895.6448049999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 657.515624,
                    "min": 657.515624,
                    "p50": 657.515624,
                    "p95": 657.515624,
                    "p99": 657.515624,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1273.074377,
                    "min": 1273.074377,
                    "p50": 1273.074377,
                    "p95": 1273.074377,
                    "p99": 1273.074377,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1859.391668,
                    "min": 1859.391668,
                    "p50": 1859.391668,
                    "p95": 1859.391668,
                    "p99": 1859.391668,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 6222.4734069999995,
                    "min": 6222.4734069999995,
                    "p50": 6222.4734069999995,
                    "p95": 6222.4734069999995,
                    "p99": 6222.4734069999995,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2461.198261,
                    "min": 2461.198261,
                    "p50": 2461.198261,
                    "p95": 2461.198261,
                    "p99": 2461.198261,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 718.613159,
                    "min": 718.613159,
                    "p50": 718.613159,
                    "p95": 718.613159,
                    "p99": 718.613159,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.12294899999998,
                    "min": 224.12294899999998,
                    "p50": 224.12294899999998,
                    "p95": 224.12294899999998,
                    "p99": 224.12294899999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3082.901328,
                    "min": 3082.901328,
                    "p50": 3082.901328,
                    "p95": 3082.901328,
                    "p99": 3082.901328,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 470.42767299999997,
                    "min": 470.42767299999997,
                    "p50": 470.42767299999997,
                    "p95": 470.42767299999997,
                    "p99": 470.42767299999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 527.406605,
                    "min": 527.406605,
                    "p50": 527.406605,
                    "p95": 527.406605,
                    "p99": 527.406605,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 579.282475,
                    "min": 579.282475,
                    "p50": 579.282475,
                    "p95": 579.282475,
                    "p99": 579.282475,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1086.143088,
                    "min": 1086.143088,
                    "p50": 1086.143088,
                    "p95": 1086.143088,
                    "p99": 1086.143088,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.733596,
                    "min": 346.733596,
                    "p50": 346.733596,
                    "p95": 346.733596,
                    "p99": 346.733596,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 407.92180199999996,
                    "min": 407.92180199999996,
                    "p50": 407.92180199999996,
                    "p95": 407.92180199999996,
                    "p99": 407.92180199999996,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 964.420003,
                    "min": 964.420003,
                    "p50": 964.420003,
                    "p95": 964.420003,
                    "p99": 964.420003,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 783.819449,
                    "min": 783.819449,
                    "p50": 783.819449,
                    "p95": 783.819449,
                    "p99": 783.819449,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.539656,
                    "min": 291.539656,
                    "p50": 291.539656,
                    "p95": 291.539656,
                    "p99": 291.539656,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 844.982407,
                    "min": 844.982407,
                    "p50": 844.982407,
                    "p95": 844.982407,
                    "p99": 844.982407,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3352.694195,
                    "min": 3352.694195,
                    "p50": 3352.694195,
                    "p95": 3352.694195,
                    "p99": 3352.694195,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1393.134442,
                    "min": 1393.134442,
                    "p50": 1393.134442,
                    "p95": 1393.134442,
                    "p99": 1393.134442,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 998.480601,
                    "min": 998.480601,
                    "p50": 998.480601,
                    "p95": 998.480601,
                    "p99": 998.480601,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2297.3514459999997,
                    "min": 2297.3514459999997,
                    "p50": 2297.3514459999997,
                    "p95": 2297.3514459999997,
                    "p99": 2297.3514459999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1577.4441669999999,
                    "min": 1577.4441669999999,
                    "p50": 1577.4441669999999,
                    "p95": 1577.4441669999999,
                    "p99": 1577.4441669999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7646.943287,
                    "min": 7646.943287,
                    "p50": 7646.943287,
                    "p95": 7646.943287,
                    "p99": 7646.943287,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2119.809546,
                    "min": 2119.809546,
                    "p50": 2119.809546,
                    "p95": 2119.809546,
                    "p99": 2119.809546,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1167.438339,
                    "min": 1167.438339,
                    "p50": 1167.438339,
                    "p95": 1167.438339,
                    "p99": 1167.438339,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2474.910513,
                    "min": 2474.910513,
                    "p50": 2474.910513,
                    "p95": 2474.910513,
                    "p99": 2474.910513,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5698.403949,
                    "min": 5698.403949,
                    "p50": 5698.403949,
                    "p95": 5698.403949,
                    "p99": 5698.403949,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2875.5580139999997,
                    "min": 2875.5580139999997,
                    "p50": 2875.5580139999997,
                    "p95": 2875.5580139999997,
                    "p99": 2875.5580139999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3841.7239959999997,
                    "min": 3841.7239959999997,
                    "p50": 3841.7239959999997,
                    "p95": 3841.7239959999997,
                    "p99": 3841.7239959999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 610.9226709999999,
                    "min": 610.9226709999999,
                    "p50": 610.9226709999999,
                    "p95": 610.9226709999999,
                    "p99": 610.9226709999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2695.503459,
                    "min": 2695.503459,
                    "p50": 2695.503459,
                    "p95": 2695.503459,
                    "p99": 2695.503459,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 809.3566059999999,
                    "min": 809.3566059999999,
                    "p50": 809.3566059999999,
                    "p95": 809.3566059999999,
                    "p99": 809.3566059999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1948.4284599999999,
                    "min": 1948.4284599999999,
                    "p50": 1948.4284599999999,
                    "p95": 1948.4284599999999,
                    "p99": 1948.4284599999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1758.879279,
                    "min": 1758.879279,
                    "p50": 1758.879279,
                    "p95": 1758.879279,
                    "p99": 1758.879279,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2855.397646,
                    "min": 2855.397646,
                    "p50": 2855.397646,
                    "p95": 2855.397646,
                    "p99": 2855.397646,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 808.360005,
                    "min": 808.360005,
                    "p50": 808.360005,
                    "p95": 808.360005,
                    "p99": 808.360005,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1738.1768009999998,
                    "min": 1738.1768009999998,
                    "p50": 1738.1768009999998,
                    "p95": 1738.1768009999998,
                    "p99": 1738.1768009999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2499.338696,
                    "min": 2499.338696,
                    "p50": 2499.338696,
                    "p95": 2499.338696,
                    "p99": 2499.338696,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1938.236207,
                    "min": 1938.236207,
                    "p50": 1938.236207,
                    "p95": 1938.236207,
                    "p99": 1938.236207,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2110.807905,
                    "min": 2110.807905,
                    "p50": 2110.807905,
                    "p95": 2110.807905,
                    "p99": 2110.807905,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3811.377024,
                    "min": 3811.377024,
                    "p50": 3811.377024,
                    "p95": 3811.377024,
                    "p99": 3811.377024,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5675.710844,
                    "min": 5675.710844,
                    "p50": 5675.710844,
                    "p95": 5675.710844,
                    "p99": 5675.710844,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2316.837794,
                    "min": 2316.837794,
                    "p50": 2316.837794,
                    "p95": 2316.837794,
                    "p99": 2316.837794,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 985.0800979999999,
                    "min": 985.0800979999999,
                    "p50": 985.0800979999999,
                    "p95": 985.0800979999999,
                    "p99": 985.0800979999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 611.572442,
                    "min": 611.572442,
                    "p50": 611.572442,
                    "p95": 611.572442,
                    "p99": 611.572442,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1182.1234419999998,
                    "min": 1182.1234419999998,
                    "p50": 1182.1234419999998,
                    "p95": 1182.1234419999998,
                    "p99": 1182.1234419999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3372.9218379999998,
                    "min": 3372.9218379999998,
                    "p50": 3372.9218379999998,
                    "p95": 3372.9218379999998,
                    "p99": 3372.9218379999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1379.6150209999998,
                    "min": 1379.6150209999998,
                    "p50": 1379.6150209999998,
                    "p95": 1379.6150209999998,
                    "p99": 1379.6150209999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2696.2481279999997,
                    "min": 2696.2481279999997,
                    "p50": 2696.2481279999997,
                    "p95": 2696.2481279999997,
                    "p99": 2696.2481279999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1570.055194,
                    "min": 1570.055194,
                    "p50": 1570.055194,
                    "p95": 1570.055194,
                    "p99": 1570.055194,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 929.46952,
                    "min": 929.46952,
                    "p50": 929.46952,
                    "p95": 929.46952,
                    "p99": 929.46952,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 164.545467,
                    "min": 164.545467,
                    "p50": 164.545467,
                    "p95": 164.545467,
                    "p99": 164.545467,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 481.180002,
                    "min": 481.180002,
                    "p50": 481.180002,
                    "p95": 481.180002,
                    "p99": 481.180002,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 100.63609799999999,
                    "min": 100.63609799999999,
                    "p50": 100.63609799999999,
                    "p95": 100.63609799999999,
                    "p99": 100.63609799999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.938901,
                    "min": 69.938901,
                    "p50": 69.938901,
                    "p95": 69.938901,
                    "p99": 69.938901,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 143.867072,
                    "min": 143.867072,
                    "p50": 143.867072,
                    "p95": 143.867072,
                    "p99": 143.867072,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 368.380459,
                    "min": 368.380459,
                    "p50": 368.380459,
                    "p95": 368.380459,
                    "p99": 368.380459,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 168.165855,
                    "min": 168.165855,
                    "p50": 168.165855,
                    "p95": 168.165855,
                    "p99": 168.165855,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 151.83923,
                    "min": 151.83923,
                    "p50": 151.83923,
                    "p95": 151.83923,
                    "p99": 151.83923,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 192.661293,
                    "min": 192.661293,
                    "p50": 192.661293,
                    "p95": 192.661293,
                    "p99": 192.661293,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 82.98807599999999,
                    "min": 82.98807599999999,
                    "p50": 82.98807599999999,
                    "p95": 82.98807599999999,
                    "p99": 82.98807599999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 136.636953,
                    "min": 136.636953,
                    "p50": 136.636953,
                    "p95": 136.636953,
                    "p99": 136.636953,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 54.061926,
                    "min": 54.061926,
                    "p50": 54.061926,
                    "p95": 54.061926,
                    "p99": 54.061926,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 110.239274,
                    "min": 110.239274,
                    "p50": 110.239274,
                    "p95": 110.239274,
                    "p99": 110.239274,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 92.353842,
                    "min": 92.353842,
                    "p50": 92.353842,
                    "p95": 92.353842,
                    "p99": 92.353842,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 120.42328699999999,
                    "min": 120.42328699999999,
                    "p50": 120.42328699999999,
                    "p95": 120.42328699999999,
                    "p99": 120.42328699999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 126.87097399999999,
                    "min": 126.87097399999999,
                    "p50": 126.87097399999999,
                    "p95": 126.87097399999999,
                    "p99": 126.87097399999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 311.038135,
                    "min": 311.038135,
                    "p50": 311.038135,
                    "p95": 311.038135,
                    "p99": 311.038135,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 215.974159,
                    "min": 215.974159,
                    "p50": 215.974159,
                    "p95": 215.974159,
                    "p99": 215.974159,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 26.452887,
                    "min": 26.452887,
                    "p50": 26.452887,
                    "p95": 26.452887,
                    "p99": 26.452887,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 127.18472899999999,
                    "min": 127.18472899999999,
                    "p50": 127.18472899999999,
                    "p95": 127.18472899999999,
                    "p99": 127.18472899999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 104.121676,
                    "min": 104.121676,
                    "p50": 104.121676,
                    "p95": 104.121676,
                    "p99": 104.121676,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 83.05743799999999,
                    "min": 83.05743799999999,
                    "p50": 83.05743799999999,
                    "p95": 83.05743799999999,
                    "p99": 83.05743799999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 43.202791,
                    "min": 43.202791,
                    "p50": 43.202791,
                    "p95": 43.202791,
                    "p99": 43.202791,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 261.967062,
                    "min": 261.967062,
                    "p50": 261.967062,
                    "p95": 261.967062,
                    "p99": 261.967062,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 151.577331,
                    "min": 151.577331,
                    "p50": 151.577331,
                    "p95": 151.577331,
                    "p99": 151.577331,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 52.183035999999994,
                    "min": 52.183035999999994,
                    "p50": 52.183035999999994,
                    "p95": 52.183035999999994,
                    "p99": 52.183035999999994,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 59.659513999999994,
                    "min": 59.659513999999994,
                    "p50": 59.659513999999994,
                    "p95": 59.659513999999994,
                    "p99": 59.659513999999994,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 36.778175999999995,
                    "min": 36.778175999999995,
                    "p50": 36.778175999999995,
                    "p95": 36.778175999999995,
                    "p99": 36.778175999999995,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 40.424383,
                    "min": 40.424383,
                    "p50": 40.424383,
                    "p95": 40.424383,
                    "p99": 40.424383,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.0645,
                    "min": 26.0645,
                    "p50": 26.0645,
                    "p95": 26.0645,
                    "p99": 26.0645,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 75.714232,
                    "min": 75.714232,
                    "p50": 75.714232,
                    "p95": 75.714232,
                    "p99": 75.714232,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 48.644971,
                    "min": 48.644971,
                    "p50": 48.644971,
                    "p95": 48.644971,
                    "p99": 48.644971,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 65.114403,
                    "min": 65.114403,
                    "p50": 65.114403,
                    "p95": 65.114403,
                    "p99": 65.114403,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.439328999999997,
                    "min": 31.439328999999997,
                    "p50": 31.439328999999997,
                    "p95": 31.439328999999997,
                    "p99": 31.439328999999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 55.707460999999995,
                    "min": 55.707460999999995,
                    "p50": 55.707460999999995,
                    "p95": 55.707460999999995,
                    "p99": 55.707460999999995,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.771677999999998,
                    "min": 24.771677999999998,
                    "p50": 24.771677999999998,
                    "p95": 24.771677999999998,
                    "p99": 24.771677999999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.419241,
                    "min": 26.419241,
                    "p50": 26.419241,
                    "p95": 26.419241,
                    "p99": 26.419241,
                    "n": 1,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 216.47523999999999,
                    "min": 216.47523999999999,
                    "p50": 216.47523999999999,
                    "p95": 216.47523999999999,
                    "p99": 216.47523999999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 119.45549199999999,
                    "min": 119.45549199999999,
                    "p50": 119.45549199999999,
                    "p95": 119.45549199999999,
                    "p99": 119.45549199999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 241.33783699999998,
                    "min": 241.33783699999998,
                    "p50": 241.33783699999998,
                    "p95": 241.33783699999998,
                    "p99": 241.33783699999998,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 110.48696799999999,
                    "min": 110.48696799999999,
                    "p50": 110.48696799999999,
                    "p95": 110.48696799999999,
                    "p99": 110.48696799999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 99.00731499999999,
                    "min": 99.00731499999999,
                    "p50": 99.00731499999999,
                    "p95": 99.00731499999999,
                    "p99": 99.00731499999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 79.086722,
                    "min": 79.086722,
                    "p50": 79.086722,
                    "p95": 79.086722,
                    "p99": 79.086722,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 179.596545,
                    "min": 179.596545,
                    "p50": 179.596545,
                    "p95": 179.596545,
                    "p99": 179.596545,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 146.206538,
                    "min": 146.206538,
                    "p50": 146.206538,
                    "p95": 146.206538,
                    "p99": 146.206538,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 333.27624099999997,
                    "min": 333.27624099999997,
                    "p50": 333.27624099999997,
                    "p95": 333.27624099999997,
                    "p99": 333.27624099999997,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 130.954833,
                    "min": 130.954833,
                    "p50": 130.954833,
                    "p95": 130.954833,
                    "p99": 130.954833,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1032.506504,
                    "min": 1032.506504,
                    "p50": 1032.506504,
                    "p95": 1032.506504,
                    "p99": 1032.506504,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 89.70247499999999,
                    "min": 89.70247499999999,
                    "p50": 89.70247499999999,
                    "p95": 89.70247499999999,
                    "p99": 89.70247499999999,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 171.557143,
                    "min": 171.557143,
                    "p50": 171.557143,
                    "p95": 171.557143,
                    "p99": 171.557143,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 161.585087,
                    "min": 161.585087,
                    "p50": 161.585087,
                    "p95": 161.585087,
                    "p99": 161.585087,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 445.747881,
                    "min": 445.747881,
                    "p50": 445.747881,
                    "p95": 445.747881,
                    "p99": 445.747881,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 65.25747,
                    "min": 65.25747,
                    "p50": 65.25747,
                    "p95": 65.25747,
                    "p99": 65.25747,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 190.414234,
                    "min": 190.414234,
                    "p50": 190.414234,
                    "p95": 190.414234,
                    "p99": 190.414234,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 140.157398,
                    "min": 140.157398,
                    "p50": 140.157398,
                    "p95": 140.157398,
                    "p99": 140.157398,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 545.649829,
                    "min": 545.649829,
                    "p50": 545.649829,
                    "p95": 545.649829,
                    "p99": 545.649829,
                    "n": 1,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1128.949142,
                    "min": 1128.949142,
                    "p50": 1128.949142,
                    "p95": 1128.949142,
                    "p99": 1128.949142,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 982.7503989999999,
                    "min": 982.7503989999999,
                    "p50": 982.7503989999999,
                    "p95": 982.7503989999999,
                    "p99": 982.7503989999999,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1456.186203,
                    "min": 1456.186203,
                    "p50": 1456.186203,
                    "p95": 1456.186203,
                    "p99": 1456.186203,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 502.990165,
                    "min": 502.990165,
                    "p50": 502.990165,
                    "p95": 502.990165,
                    "p99": 502.990165,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 653.9105129999999,
                    "min": 653.9105129999999,
                    "p50": 653.9105129999999,
                    "p95": 653.9105129999999,
                    "p99": 653.9105129999999,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1286.906641,
                    "min": 1286.906641,
                    "p50": 1286.906641,
                    "p95": 1286.906641,
                    "p99": 1286.906641,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 785.799097,
                    "min": 785.799097,
                    "p50": 785.799097,
                    "p95": 785.799097,
                    "p99": 785.799097,
                    "n": 1,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1524.881257,
                    "min": 1524.881257,
                    "p50": 1524.881257,
                    "p95": 1524.881257,
                    "p99": 1524.881257,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 487.79200199999997,
                    "min": 487.79200199999997,
                    "p50": 487.79200199999997,
                    "p95": 487.79200199999997,
                    "p99": 487.79200199999997,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1219.5209969999999,
                    "min": 1219.5209969999999,
                    "p50": 1219.5209969999999,
                    "p95": 1219.5209969999999,
                    "p99": 1219.5209969999999,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 922.032565,
                    "min": 922.032565,
                    "p50": 922.032565,
                    "p95": 922.032565,
                    "p99": 922.032565,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1072.842727,
                    "min": 1072.842727,
                    "p50": 1072.842727,
                    "p95": 1072.842727,
                    "p99": 1072.842727,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1381.3247589999999,
                    "min": 1381.3247589999999,
                    "p50": 1381.3247589999999,
                    "p95": 1381.3247589999999,
                    "p99": 1381.3247589999999,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 608.270569,
                    "min": 608.270569,
                    "p50": 608.270569,
                    "p95": 608.270569,
                    "p99": 608.270569,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 742.178059,
                    "min": 742.178059,
                    "p50": 742.178059,
                    "p95": 742.178059,
                    "p99": 742.178059,
                    "n": 1,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.509323,
                    "min": 286.509323,
                    "p50": 286.509323,
                    "p95": 286.509323,
                    "p99": 286.509323,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 480.831938,
                    "min": 480.831938,
                    "p50": 480.831938,
                    "p95": 480.831938,
                    "p99": 480.831938,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 603.9721,
                    "min": 603.9721,
                    "p50": 603.9721,
                    "p95": 603.9721,
                    "p99": 603.9721,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 413.326613,
                    "min": 413.326613,
                    "p50": 413.326613,
                    "p95": 413.326613,
                    "p99": 413.326613,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 746.1816779999999,
                    "min": 746.1816779999999,
                    "p50": 746.1816779999999,
                    "p95": 746.1816779999999,
                    "p99": 746.1816779999999,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.623102,
                    "min": 226.623102,
                    "p50": 226.623102,
                    "p95": 226.623102,
                    "p99": 226.623102,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 640.949175,
                    "min": 640.949175,
                    "p50": 640.949175,
                    "p95": 640.949175,
                    "p99": 640.949175,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 509.50667599999997,
                    "min": 509.50667599999997,
                    "p50": 509.50667599999997,
                    "p95": 509.50667599999997,
                    "p99": 509.50667599999997,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.92749,
                    "min": 346.92749,
                    "p50": 346.92749,
                    "p95": 346.92749,
                    "p99": 346.92749,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 675.3220239999999,
                    "min": 675.3220239999999,
                    "p50": 675.3220239999999,
                    "p95": 675.3220239999999,
                    "p99": 675.3220239999999,
                    "n": 1,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 993.594965,
                    "min": 993.594965,
                    "p50": 993.594965,
                    "p95": 993.594965,
                    "p99": 993.594965,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1281.6811109999999,
                    "min": 1281.6811109999999,
                    "p50": 1281.6811109999999,
                    "p95": 1281.6811109999999,
                    "p99": 1281.6811109999999,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 356.67172999999997,
                    "min": 356.67172999999997,
                    "p50": 356.67172999999997,
                    "p95": 356.67172999999997,
                    "p99": 356.67172999999997,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 676.588503,
                    "min": 676.588503,
                    "p50": 676.588503,
                    "p95": 676.588503,
                    "p99": 676.588503,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1170.4802499999998,
                    "min": 1170.4802499999998,
                    "p50": 1170.4802499999998,
                    "p95": 1170.4802499999998,
                    "p99": 1170.4802499999998,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 513.459256,
                    "min": 513.459256,
                    "p50": 513.459256,
                    "p95": 513.459256,
                    "p99": 513.459256,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 832.4550469999999,
                    "min": 832.4550469999999,
                    "p50": 832.4550469999999,
                    "p95": 832.4550469999999,
                    "p99": 832.4550469999999,
                    "n": 1,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 619.179745,
                    "min": 619.179745,
                    "p50": 619.179745,
                    "p95": 619.179745,
                    "p99": 619.179745,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 325.419529,
                    "min": 325.419529,
                    "p50": 325.419529,
                    "p95": 325.419529,
                    "p99": 325.419529,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 187.759977,
                    "min": 187.759977,
                    "p50": 187.759977,
                    "p95": 187.759977,
                    "p99": 187.759977,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 535.629673,
                    "min": 535.629673,
                    "p50": 535.629673,
                    "p95": 535.629673,
                    "p99": 535.629673,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 448.65590499999996,
                    "min": 448.65590499999996,
                    "p50": 448.65590499999996,
                    "p95": 448.65590499999996,
                    "p99": 448.65590499999996,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 344.478033,
                    "min": 344.478033,
                    "p50": 344.478033,
                    "p95": 344.478033,
                    "p99": 344.478033,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 533.69231,
                    "min": 533.69231,
                    "p50": 533.69231,
                    "p95": 533.69231,
                    "p99": 533.69231,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 221.24690999999999,
                    "min": 221.24690999999999,
                    "p50": 221.24690999999999,
                    "p95": 221.24690999999999,
                    "p99": 221.24690999999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.55160999999998,
                    "min": 149.55160999999998,
                    "p50": 149.55160999999998,
                    "p95": 149.55160999999998,
                    "p99": 149.55160999999998,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 720.1316089999999,
                    "min": 720.1316089999999,
                    "p50": 720.1316089999999,
                    "p95": 720.1316089999999,
                    "p99": 720.1316089999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 623.625692,
                    "min": 623.625692,
                    "p50": 623.625692,
                    "p95": 623.625692,
                    "p99": 623.625692,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 787.7429649999999,
                    "min": 787.7429649999999,
                    "p50": 787.7429649999999,
                    "p95": 787.7429649999999,
                    "p99": 787.7429649999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 385.138721,
                    "min": 385.138721,
                    "p50": 385.138721,
                    "p95": 385.138721,
                    "p99": 385.138721,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 456.68215799999996,
                    "min": 456.68215799999996,
                    "p50": 456.68215799999996,
                    "p95": 456.68215799999996,
                    "p99": 456.68215799999996,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 276.165794,
                    "min": 276.165794,
                    "p50": 276.165794,
                    "p95": 276.165794,
                    "p99": 276.165794,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 459.74069699999995,
                    "min": 459.74069699999995,
                    "p50": 459.74069699999995,
                    "p95": 459.74069699999995,
                    "p99": 459.74069699999995,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 207.836998,
                    "min": 207.836998,
                    "p50": 207.836998,
                    "p95": 207.836998,
                    "p99": 207.836998,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 552.550432,
                    "min": 552.550432,
                    "p50": 552.550432,
                    "p95": 552.550432,
                    "p99": 552.550432,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 372.986717,
                    "min": 372.986717,
                    "p50": 372.986717,
                    "p95": 372.986717,
                    "p99": 372.986717,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 180.26793999999998,
                    "min": 180.26793999999998,
                    "p50": 180.26793999999998,
                    "p95": 180.26793999999998,
                    "p99": 180.26793999999998,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 240.162677,
                    "min": 240.162677,
                    "p50": 240.162677,
                    "p95": 240.162677,
                    "p99": 240.162677,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 462.29119399999996,
                    "min": 462.29119399999996,
                    "p50": 462.29119399999996,
                    "p95": 462.29119399999996,
                    "p99": 462.29119399999996,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 564.866623,
                    "min": 564.866623,
                    "p50": 564.866623,
                    "p95": 564.866623,
                    "p99": 564.866623,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 784.2390399999999,
                    "min": 784.2390399999999,
                    "p50": 784.2390399999999,
                    "p95": 784.2390399999999,
                    "p99": 784.2390399999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 274.203486,
                    "min": 274.203486,
                    "p50": 274.203486,
                    "p95": 274.203486,
                    "p99": 274.203486,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 626.136566,
                    "min": 626.136566,
                    "p50": 626.136566,
                    "p95": 626.136566,
                    "p99": 626.136566,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 328.664087,
                    "min": 328.664087,
                    "p50": 328.664087,
                    "p95": 328.664087,
                    "p99": 328.664087,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 416.803885,
                    "min": 416.803885,
                    "p50": 416.803885,
                    "p95": 416.803885,
                    "p99": 416.803885,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 341.23817199999996,
                    "min": 341.23817199999996,
                    "p50": 341.23817199999996,
                    "p95": 341.23817199999996,
                    "p99": 341.23817199999996,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.318769,
                    "min": 143.318769,
                    "p50": 143.318769,
                    "p95": 143.318769,
                    "p99": 143.318769,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 218.833646,
                    "min": 218.833646,
                    "p50": 218.833646,
                    "p95": 218.833646,
                    "p99": 218.833646,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 296.804711,
                    "min": 296.804711,
                    "p50": 296.804711,
                    "p95": 296.804711,
                    "p99": 296.804711,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 292.613101,
                    "min": 292.613101,
                    "p50": 292.613101,
                    "p95": 292.613101,
                    "p99": 292.613101,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 696.8264459999999,
                    "min": 696.8264459999999,
                    "p50": 696.8264459999999,
                    "p95": 696.8264459999999,
                    "p99": 696.8264459999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 661.740509,
                    "min": 661.740509,
                    "p50": 661.740509,
                    "p95": 661.740509,
                    "p99": 661.740509,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.884529,
                    "min": 131.884529,
                    "p50": 131.884529,
                    "p95": 131.884529,
                    "p99": 131.884529,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 444.033838,
                    "min": 444.033838,
                    "p50": 444.033838,
                    "p95": 444.033838,
                    "p99": 444.033838,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 429.52148,
                    "min": 429.52148,
                    "p50": 429.52148,
                    "p95": 429.52148,
                    "p99": 429.52148,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 183.24175699999998,
                    "min": 183.24175699999998,
                    "p50": 183.24175699999998,
                    "p95": 183.24175699999998,
                    "p99": 183.24175699999998,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 483.68217,
                    "min": 483.68217,
                    "p50": 483.68217,
                    "p95": 483.68217,
                    "p99": 483.68217,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 396.252055,
                    "min": 396.252055,
                    "p50": 396.252055,
                    "p95": 396.252055,
                    "p99": 396.252055,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 807.908603,
                    "min": 807.908603,
                    "p50": 807.908603,
                    "p95": 807.908603,
                    "p99": 807.908603,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 514.547659,
                    "min": 514.547659,
                    "p50": 514.547659,
                    "p95": 514.547659,
                    "p99": 514.547659,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 263.730924,
                    "min": 263.730924,
                    "p50": 263.730924,
                    "p95": 263.730924,
                    "p99": 263.730924,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 533.034841,
                    "min": 533.034841,
                    "p50": 533.034841,
                    "p95": 533.034841,
                    "p99": 533.034841,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 816.389474,
                    "min": 816.389474,
                    "p50": 816.389474,
                    "p95": 816.389474,
                    "p99": 816.389474,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.76383099999998,
                    "min": 202.76383099999998,
                    "p50": 202.76383099999998,
                    "p95": 202.76383099999998,
                    "p99": 202.76383099999998,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 395.38570999999996,
                    "min": 395.38570999999996,
                    "p50": 395.38570999999996,
                    "p95": 395.38570999999996,
                    "p99": 395.38570999999996,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 420.192548,
                    "min": 420.192548,
                    "p50": 420.192548,
                    "p95": 420.192548,
                    "p99": 420.192548,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 463.32856,
                    "min": 463.32856,
                    "p50": 463.32856,
                    "p95": 463.32856,
                    "p99": 463.32856,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 719.8785419999999,
                    "min": 719.8785419999999,
                    "p50": 719.8785419999999,
                    "p95": 719.8785419999999,
                    "p99": 719.8785419999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 482.79872,
                    "min": 482.79872,
                    "p50": 482.79872,
                    "p95": 482.79872,
                    "p99": 482.79872,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 583.1289439999999,
                    "min": 583.1289439999999,
                    "p50": 583.1289439999999,
                    "p95": 583.1289439999999,
                    "p99": 583.1289439999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.47651199999999,
                    "min": 149.47651199999999,
                    "p50": 149.47651199999999,
                    "p95": 149.47651199999999,
                    "p99": 149.47651199999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 262.812697,
                    "min": 262.812697,
                    "p50": 262.812697,
                    "p95": 262.812697,
                    "p99": 262.812697,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.812421,
                    "min": 223.812421,
                    "p50": 223.812421,
                    "p95": 223.812421,
                    "p99": 223.812421,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 596.88447,
                    "min": 596.88447,
                    "p50": 596.88447,
                    "p95": 596.88447,
                    "p99": 596.88447,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 331.97482199999996,
                    "min": 331.97482199999996,
                    "p50": 331.97482199999996,
                    "p95": 331.97482199999996,
                    "p99": 331.97482199999996,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 611.8910579999999,
                    "min": 611.8910579999999,
                    "p50": 611.8910579999999,
                    "p95": 611.8910579999999,
                    "p99": 611.8910579999999,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 318.373468,
                    "min": 318.373468,
                    "p50": 318.373468,
                    "p95": 318.373468,
                    "p99": 318.373468,
                    "n": 1,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 213.86690399999998,
                    "min": 213.86690399999998,
                    "p50": 213.86690399999998,
                    "p95": 213.86690399999998,
                    "p99": 213.86690399999998,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.77655299999999,
                    "min": 78.77655299999999,
                    "p50": 78.77655299999999,
                    "p95": 78.77655299999999,
                    "p99": 78.77655299999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1131.335057,
                    "min": 1131.335057,
                    "p50": 1131.335057,
                    "p95": 1131.335057,
                    "p99": 1131.335057,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 239.324097,
                    "min": 239.324097,
                    "p50": 239.324097,
                    "p95": 239.324097,
                    "p99": 239.324097,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 364.876778,
                    "min": 364.876778,
                    "p50": 364.876778,
                    "p95": 364.876778,
                    "p99": 364.876778,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 137.934032,
                    "min": 137.934032,
                    "p50": 137.934032,
                    "p95": 137.934032,
                    "p99": 137.934032,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 455.140759,
                    "min": 455.140759,
                    "p50": 455.140759,
                    "p95": 455.140759,
                    "p99": 455.140759,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 98.37554,
                    "min": 98.37554,
                    "p50": 98.37554,
                    "p95": 98.37554,
                    "p99": 98.37554,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 121.40029,
                    "min": 121.40029,
                    "p50": 121.40029,
                    "p95": 121.40029,
                    "p99": 121.40029,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 59.79232,
                    "min": 59.79232,
                    "p50": 59.79232,
                    "p95": 59.79232,
                    "p99": 59.79232,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 132.524236,
                    "min": 132.524236,
                    "p50": 132.524236,
                    "p95": 132.524236,
                    "p99": 132.524236,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 111.641337,
                    "min": 111.641337,
                    "p50": 111.641337,
                    "p95": 111.641337,
                    "p99": 111.641337,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 151.112362,
                    "min": 151.112362,
                    "p50": 151.112362,
                    "p95": 151.112362,
                    "p99": 151.112362,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 170.136754,
                    "min": 170.136754,
                    "p50": 170.136754,
                    "p95": 170.136754,
                    "p99": 170.136754,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 160.498347,
                    "min": 160.498347,
                    "p50": 160.498347,
                    "p95": 160.498347,
                    "p99": 160.498347,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 580.95827,
                    "min": 580.95827,
                    "p50": 580.95827,
                    "p95": 580.95827,
                    "p99": 580.95827,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 78.34929699999999,
                    "min": 78.34929699999999,
                    "p50": 78.34929699999999,
                    "p95": 78.34929699999999,
                    "p99": 78.34929699999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 187.771287,
                    "min": 187.771287,
                    "p50": 187.771287,
                    "p95": 187.771287,
                    "p99": 187.771287,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 192.384107,
                    "min": 192.384107,
                    "p50": 192.384107,
                    "p95": 192.384107,
                    "p99": 192.384107,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 174.786419,
                    "min": 174.786419,
                    "p50": 174.786419,
                    "p95": 174.786419,
                    "p99": 174.786419,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1149.639187,
                    "min": 1149.639187,
                    "p50": 1149.639187,
                    "p95": 1149.639187,
                    "p99": 1149.639187,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 174.205717,
                    "min": 174.205717,
                    "p50": 174.205717,
                    "p95": 174.205717,
                    "p99": 174.205717,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 90.82856199999999,
                    "min": 90.82856199999999,
                    "p50": 90.82856199999999,
                    "p95": 90.82856199999999,
                    "p99": 90.82856199999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 214.92889599999998,
                    "min": 214.92889599999998,
                    "p50": 214.92889599999998,
                    "p95": 214.92889599999998,
                    "p99": 214.92889599999998,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 238.934148,
                    "min": 238.934148,
                    "p50": 238.934148,
                    "p95": 238.934148,
                    "p99": 238.934148,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 86.579234,
                    "min": 86.579234,
                    "p50": 86.579234,
                    "p95": 86.579234,
                    "p99": 86.579234,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.356172,
                    "min": 139.356172,
                    "p50": 139.356172,
                    "p95": 139.356172,
                    "p99": 139.356172,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 108.595441,
                    "min": 108.595441,
                    "p50": 108.595441,
                    "p95": 108.595441,
                    "p99": 108.595441,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 195.683682,
                    "min": 195.683682,
                    "p50": 195.683682,
                    "p95": 195.683682,
                    "p99": 195.683682,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 158.790213,
                    "min": 158.790213,
                    "p50": 158.790213,
                    "p95": 158.790213,
                    "p99": 158.790213,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 479.452145,
                    "min": 479.452145,
                    "p50": 479.452145,
                    "p95": 479.452145,
                    "p99": 479.452145,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 370.196212,
                    "min": 370.196212,
                    "p50": 370.196212,
                    "p95": 370.196212,
                    "p99": 370.196212,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 150.53698699999998,
                    "min": 150.53698699999998,
                    "p50": 150.53698699999998,
                    "p95": 150.53698699999998,
                    "p99": 150.53698699999998,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.1482,
                    "min": 31.1482,
                    "p50": 31.1482,
                    "p95": 31.1482,
                    "p99": 31.1482,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 121.51409799999999,
                    "min": 121.51409799999999,
                    "p50": 121.51409799999999,
                    "p95": 121.51409799999999,
                    "p99": 121.51409799999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.29289299999999,
                    "min": 69.29289299999999,
                    "p50": 69.29289299999999,
                    "p95": 69.29289299999999,
                    "p99": 69.29289299999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.90731199999999,
                    "min": 101.90731199999999,
                    "p50": 101.90731199999999,
                    "p95": 101.90731199999999,
                    "p99": 101.90731199999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 560.8764219999999,
                    "min": 560.8764219999999,
                    "p50": 560.8764219999999,
                    "p95": 560.8764219999999,
                    "p99": 560.8764219999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 111.251525,
                    "min": 111.251525,
                    "p50": 111.251525,
                    "p95": 111.251525,
                    "p99": 111.251525,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 171.167861,
                    "min": 171.167861,
                    "p50": 171.167861,
                    "p95": 171.167861,
                    "p99": 171.167861,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 144.454717,
                    "min": 144.454717,
                    "p50": 144.454717,
                    "p95": 144.454717,
                    "p99": 144.454717,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 97.050286,
                    "min": 97.050286,
                    "p50": 97.050286,
                    "p95": 97.050286,
                    "p99": 97.050286,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 243.04375,
                    "min": 243.04375,
                    "p50": 243.04375,
                    "p95": 243.04375,
                    "p99": 243.04375,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.303417,
                    "min": 78.303417,
                    "p50": 78.303417,
                    "p95": 78.303417,
                    "p99": 78.303417,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 121.14539699999999,
                    "min": 121.14539699999999,
                    "p50": 121.14539699999999,
                    "p95": 121.14539699999999,
                    "p99": 121.14539699999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 138.466637,
                    "min": 138.466637,
                    "p50": 138.466637,
                    "p95": 138.466637,
                    "p99": 138.466637,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 189.127916,
                    "min": 189.127916,
                    "p50": 189.127916,
                    "p95": 189.127916,
                    "p99": 189.127916,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 350.197055,
                    "min": 350.197055,
                    "p50": 350.197055,
                    "p95": 350.197055,
                    "p99": 350.197055,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 157.791832,
                    "min": 157.791832,
                    "p50": 157.791832,
                    "p95": 157.791832,
                    "p99": 157.791832,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 128.381443,
                    "min": 128.381443,
                    "p50": 128.381443,
                    "p95": 128.381443,
                    "p99": 128.381443,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 80.74668899999999,
                    "min": 80.74668899999999,
                    "p50": 80.74668899999999,
                    "p95": 80.74668899999999,
                    "p99": 80.74668899999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 179.361124,
                    "min": 179.361124,
                    "p50": 179.361124,
                    "p95": 179.361124,
                    "p99": 179.361124,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 201.44387,
                    "min": 201.44387,
                    "p50": 201.44387,
                    "p95": 201.44387,
                    "p99": 201.44387,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 443.210202,
                    "min": 443.210202,
                    "p50": 443.210202,
                    "p95": 443.210202,
                    "p99": 443.210202,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 535.983932,
                    "min": 535.983932,
                    "p50": 535.983932,
                    "p95": 535.983932,
                    "p99": 535.983932,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1020.514227,
                    "min": 1020.514227,
                    "p50": 1020.514227,
                    "p95": 1020.514227,
                    "p99": 1020.514227,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 55.006966,
                    "min": 55.006966,
                    "p50": 55.006966,
                    "p95": 55.006966,
                    "p99": 55.006966,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 598.878441,
                    "min": 598.878441,
                    "p50": 598.878441,
                    "p95": 598.878441,
                    "p99": 598.878441,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 170.23729799999998,
                    "min": 170.23729799999998,
                    "p50": 170.23729799999998,
                    "p95": 170.23729799999998,
                    "p99": 170.23729799999998,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 144.425638,
                    "min": 144.425638,
                    "p50": 144.425638,
                    "p95": 144.425638,
                    "p99": 144.425638,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 199.212709,
                    "min": 199.212709,
                    "p50": 199.212709,
                    "p95": 199.212709,
                    "p99": 199.212709,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 112.39559299999999,
                    "min": 112.39559299999999,
                    "p50": 112.39559299999999,
                    "p95": 112.39559299999999,
                    "p99": 112.39559299999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 51.328429,
                    "min": 51.328429,
                    "p50": 51.328429,
                    "p95": 51.328429,
                    "p99": 51.328429,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.089363,
                    "min": 61.089363,
                    "p50": 61.089363,
                    "p95": 61.089363,
                    "p99": 61.089363,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.64752399999999,
                    "min": 122.64752399999999,
                    "p50": 122.64752399999999,
                    "p95": 122.64752399999999,
                    "p99": 122.64752399999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 222.347277,
                    "min": 222.347277,
                    "p50": 222.347277,
                    "p95": 222.347277,
                    "p99": 222.347277,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.471317,
                    "min": 103.471317,
                    "p50": 103.471317,
                    "p95": 103.471317,
                    "p99": 103.471317,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 119.49561299999999,
                    "min": 119.49561299999999,
                    "p50": 119.49561299999999,
                    "p95": 119.49561299999999,
                    "p99": 119.49561299999999,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 186.37363499999998,
                    "min": 186.37363499999998,
                    "p50": 186.37363499999998,
                    "p95": 186.37363499999998,
                    "p99": 186.37363499999998,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 443.251988,
                    "min": 443.251988,
                    "p50": 443.251988,
                    "p95": 443.251988,
                    "p99": 443.251988,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1107.756361,
                    "min": 1107.756361,
                    "p50": 1107.756361,
                    "p95": 1107.756361,
                    "p99": 1107.756361,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 130.405967,
                    "min": 130.405967,
                    "p50": 130.405967,
                    "p95": 130.405967,
                    "p99": 130.405967,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 244.455186,
                    "min": 244.455186,
                    "p50": 244.455186,
                    "p95": 244.455186,
                    "p99": 244.455186,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 161.557178,
                    "min": 161.557178,
                    "p50": 161.557178,
                    "p95": 161.557178,
                    "p99": 161.557178,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 57.417839,
                    "min": 57.417839,
                    "p50": 57.417839,
                    "p95": 57.417839,
                    "p99": 57.417839,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 332.698385,
                    "min": 332.698385,
                    "p50": 332.698385,
                    "p95": 332.698385,
                    "p99": 332.698385,
                    "n": 1,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 238.35043,
                    "min": 238.35043,
                    "p50": 238.35043,
                    "p95": 238.35043,
                    "p99": 238.35043,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.112536,
                    "min": 175.112536,
                    "p50": 175.112536,
                    "p95": 175.112536,
                    "p99": 175.112536,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.99334899999997,
                    "min": 259.99334899999997,
                    "p50": 259.99334899999997,
                    "p95": 259.99334899999997,
                    "p99": 259.99334899999997,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1016.4149249999999,
                    "min": 1016.4149249999999,
                    "p50": 1016.4149249999999,
                    "p95": 1016.4149249999999,
                    "p99": 1016.4149249999999,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 632.6051729999999,
                    "min": 632.6051729999999,
                    "p50": 632.6051729999999,
                    "p95": 632.6051729999999,
                    "p99": 632.6051729999999,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 818.313985,
                    "min": 818.313985,
                    "p50": 818.313985,
                    "p95": 818.313985,
                    "p99": 818.313985,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 844.159917,
                    "min": 844.159917,
                    "p50": 844.159917,
                    "p95": 844.159917,
                    "p99": 844.159917,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 445.35387199999997,
                    "min": 445.35387199999997,
                    "p50": 445.35387199999997,
                    "p95": 445.35387199999997,
                    "p99": 445.35387199999997,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 336.239761,
                    "min": 336.239761,
                    "p50": 336.239761,
                    "p95": 336.239761,
                    "p99": 336.239761,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 410.210034,
                    "min": 410.210034,
                    "p50": 410.210034,
                    "p95": 410.210034,
                    "p99": 410.210034,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 357.202931,
                    "min": 357.202931,
                    "p50": 357.202931,
                    "p95": 357.202931,
                    "p99": 357.202931,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 510.43109899999996,
                    "min": 510.43109899999996,
                    "p50": 510.43109899999996,
                    "p95": 510.43109899999996,
                    "p99": 510.43109899999996,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 534.844011,
                    "min": 534.844011,
                    "p50": 534.844011,
                    "p95": 534.844011,
                    "p99": 534.844011,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 752.509592,
                    "min": 752.509592,
                    "p50": 752.509592,
                    "p95": 752.509592,
                    "p99": 752.509592,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 587.0527109999999,
                    "min": 587.0527109999999,
                    "p50": 587.0527109999999,
                    "p95": 587.0527109999999,
                    "p99": 587.0527109999999,
                    "n": 1,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 582.806783,
                    "min": 582.806783,
                    "p50": 582.806783,
                    "p95": 582.806783,
                    "p99": 582.806783,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 636.292072,
                    "min": 636.292072,
                    "p50": 636.292072,
                    "p95": 636.292072,
                    "p99": 636.292072,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 736.64274,
                    "min": 736.64274,
                    "p50": 736.64274,
                    "p95": 736.64274,
                    "p99": 736.64274,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.02821899999998,
                    "min": 215.02821899999998,
                    "p50": 215.02821899999998,
                    "p95": 215.02821899999998,
                    "p99": 215.02821899999998,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 249.65772199999998,
                    "min": 249.65772199999998,
                    "p50": 249.65772199999998,
                    "p95": 249.65772199999998,
                    "p99": 249.65772199999998,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 355.142606,
                    "min": 355.142606,
                    "p50": 355.142606,
                    "p95": 355.142606,
                    "p99": 355.142606,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 301.408323,
                    "min": 301.408323,
                    "p50": 301.408323,
                    "p95": 301.408323,
                    "p99": 301.408323,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 527.516834,
                    "min": 527.516834,
                    "p50": 527.516834,
                    "p95": 527.516834,
                    "p99": 527.516834,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.65766299999999,
                    "min": 170.65766299999999,
                    "p50": 170.65766299999999,
                    "p95": 170.65766299999999,
                    "p99": 170.65766299999999,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 425.226731,
                    "min": 425.226731,
                    "p50": 425.226731,
                    "p95": 425.226731,
                    "p99": 425.226731,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 891.590874,
                    "min": 891.590874,
                    "p50": 891.590874,
                    "p95": 891.590874,
                    "p99": 891.590874,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1023.524693,
                    "min": 1023.524693,
                    "p50": 1023.524693,
                    "p95": 1023.524693,
                    "p99": 1023.524693,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 735.368103,
                    "min": 735.368103,
                    "p50": 735.368103,
                    "p95": 735.368103,
                    "p99": 735.368103,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 512.89598,
                    "min": 512.89598,
                    "p50": 512.89598,
                    "p95": 512.89598,
                    "p99": 512.89598,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 613.8439539999999,
                    "min": 613.8439539999999,
                    "p50": 613.8439539999999,
                    "p95": 613.8439539999999,
                    "p99": 613.8439539999999,
                    "n": 1,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 648.234197,
                    "min": 648.234197,
                    "p50": 648.234197,
                    "p95": 648.234197,
                    "p99": 648.234197,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 606.06507,
                    "min": 606.06507,
                    "p50": 606.06507,
                    "p95": 606.06507,
                    "p99": 606.06507,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 763.468026,
                    "min": 763.468026,
                    "p50": 763.468026,
                    "p95": 763.468026,
                    "p99": 763.468026,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 774.487436,
                    "min": 774.487436,
                    "p50": 774.487436,
                    "p95": 774.487436,
                    "p99": 774.487436,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 562.24202,
                    "min": 562.24202,
                    "p50": 562.24202,
                    "p95": 562.24202,
                    "p99": 562.24202,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 505.971798,
                    "min": 505.971798,
                    "p50": 505.971798,
                    "p95": 505.971798,
                    "p99": 505.971798,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 164.046549,
                    "min": 164.046549,
                    "p50": 164.046549,
                    "p95": 164.046549,
                    "p99": 164.046549,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 928.3684489999999,
                    "min": 928.3684489999999,
                    "p50": 928.3684489999999,
                    "p95": 928.3684489999999,
                    "p99": 928.3684489999999,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 460.197523,
                    "min": 460.197523,
                    "p50": 460.197523,
                    "p95": 460.197523,
                    "p99": 460.197523,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 426.249083,
                    "min": 426.249083,
                    "p50": 426.249083,
                    "p95": 426.249083,
                    "p99": 426.249083,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 286.924464,
                    "min": 286.924464,
                    "p50": 286.924464,
                    "p95": 286.924464,
                    "p99": 286.924464,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 389.2333,
                    "min": 389.2333,
                    "p50": 389.2333,
                    "p95": 389.2333,
                    "p99": 389.2333,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.398819,
                    "min": 341.398819,
                    "p50": 341.398819,
                    "p95": 341.398819,
                    "p99": 341.398819,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.44902199999999,
                    "min": 209.44902199999999,
                    "p50": 209.44902199999999,
                    "p95": 209.44902199999999,
                    "p99": 209.44902199999999,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 255.44071399999999,
                    "min": 255.44071399999999,
                    "p50": 255.44071399999999,
                    "p95": 255.44071399999999,
                    "p99": 255.44071399999999,
                    "n": 1,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 674.70834,
                    "min": 674.70834,
                    "p50": 674.70834,
                    "p95": 674.70834,
                    "p99": 674.70834,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 731.807469,
                    "min": 731.807469,
                    "p50": 731.807469,
                    "p95": 731.807469,
                    "p99": 731.807469,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 624.171797,
                    "min": 624.171797,
                    "p50": 624.171797,
                    "p95": 624.171797,
                    "p99": 624.171797,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 868.689128,
                    "min": 868.689128,
                    "p50": 868.689128,
                    "p95": 868.689128,
                    "p99": 868.689128,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 234.53311,
                    "min": 234.53311,
                    "p50": 234.53311,
                    "p95": 234.53311,
                    "p99": 234.53311,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 584.457732,
                    "min": 584.457732,
                    "p50": 584.457732,
                    "p95": 584.457732,
                    "p99": 584.457732,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1070.318111,
                    "min": 1070.318111,
                    "p50": 1070.318111,
                    "p95": 1070.318111,
                    "p99": 1070.318111,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 311.07452,
                    "min": 311.07452,
                    "p50": 311.07452,
                    "p95": 311.07452,
                    "p99": 311.07452,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 451.86798899999997,
                    "min": 451.86798899999997,
                    "p50": 451.86798899999997,
                    "p95": 451.86798899999997,
                    "p99": 451.86798899999997,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 353.151104,
                    "min": 353.151104,
                    "p50": 353.151104,
                    "p95": 353.151104,
                    "p99": 353.151104,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 286.07230799999996,
                    "min": 286.07230799999996,
                    "p50": 286.07230799999996,
                    "p95": 286.07230799999996,
                    "p99": 286.07230799999996,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 453.92556299999995,
                    "min": 453.92556299999995,
                    "p50": 453.92556299999995,
                    "p95": 453.92556299999995,
                    "p99": 453.92556299999995,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 553.499834,
                    "min": 553.499834,
                    "p50": 553.499834,
                    "p95": 553.499834,
                    "p99": 553.499834,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 174.196476,
                    "min": 174.196476,
                    "p50": 174.196476,
                    "p95": 174.196476,
                    "p99": 174.196476,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 637.37928,
                    "min": 637.37928,
                    "p50": 637.37928,
                    "p95": 637.37928,
                    "p99": 637.37928,
                    "n": 1,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 823.861871,
                    "min": 823.861871,
                    "p50": 823.861871,
                    "p95": 823.861871,
                    "p99": 823.861871,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 509.277106,
                    "min": 509.277106,
                    "p50": 509.277106,
                    "p95": 509.277106,
                    "p99": 509.277106,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 592.3011339999999,
                    "min": 592.3011339999999,
                    "p50": 592.3011339999999,
                    "p95": 592.3011339999999,
                    "p99": 592.3011339999999,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 403.698803,
                    "min": 403.698803,
                    "p50": 403.698803,
                    "p95": 403.698803,
                    "p99": 403.698803,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 353.613607,
                    "min": 353.613607,
                    "p50": 353.613607,
                    "p95": 353.613607,
                    "p99": 353.613607,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 532.874951,
                    "min": 532.874951,
                    "p50": 532.874951,
                    "p95": 532.874951,
                    "p99": 532.874951,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 199.108135,
                    "min": 199.108135,
                    "p50": 199.108135,
                    "p95": 199.108135,
                    "p99": 199.108135,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 253.20522899999997,
                    "min": 253.20522899999997,
                    "p50": 253.20522899999997,
                    "p95": 253.20522899999997,
                    "p99": 253.20522899999997,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 467.752118,
                    "min": 467.752118,
                    "p50": 467.752118,
                    "p95": 467.752118,
                    "p99": 467.752118,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 308.373272,
                    "min": 308.373272,
                    "p50": 308.373272,
                    "p95": 308.373272,
                    "p99": 308.373272,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1105.1653509999999,
                    "min": 1105.1653509999999,
                    "p50": 1105.1653509999999,
                    "p95": 1105.1653509999999,
                    "p99": 1105.1653509999999,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 661.936193,
                    "min": 661.936193,
                    "p50": 661.936193,
                    "p95": 661.936193,
                    "p99": 661.936193,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 968.183446,
                    "min": 968.183446,
                    "p50": 968.183446,
                    "p95": 968.183446,
                    "p99": 968.183446,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 776.590549,
                    "min": 776.590549,
                    "p50": 776.590549,
                    "p95": 776.590549,
                    "p99": 776.590549,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 735.502439,
                    "min": 735.502439,
                    "p50": 735.502439,
                    "p95": 735.502439,
                    "p99": 735.502439,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1629.4655109999999,
                    "min": 1629.4655109999999,
                    "p50": 1629.4655109999999,
                    "p95": 1629.4655109999999,
                    "p99": 1629.4655109999999,
                    "n": 1,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 497.95295899999996,
                    "min": 497.95295899999996,
                    "p50": 497.95295899999996,
                    "p95": 497.95295899999996,
                    "p99": 497.95295899999996,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 345.969674,
                    "min": 345.969674,
                    "p50": 345.969674,
                    "p95": 345.969674,
                    "p99": 345.969674,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 386.600059,
                    "min": 386.600059,
                    "p50": 386.600059,
                    "p95": 386.600059,
                    "p99": 386.600059,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 546.443312,
                    "min": 546.443312,
                    "p50": 546.443312,
                    "p95": 546.443312,
                    "p99": 546.443312,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 470.034317,
                    "min": 470.034317,
                    "p50": 470.034317,
                    "p95": 470.034317,
                    "p99": 470.034317,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 330.81753299999997,
                    "min": 330.81753299999997,
                    "p50": 330.81753299999997,
                    "p95": 330.81753299999997,
                    "p99": 330.81753299999997,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 108.12713099999999,
                    "min": 108.12713099999999,
                    "p50": 108.12713099999999,
                    "p95": 108.12713099999999,
                    "p99": 108.12713099999999,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 139.05472,
                    "min": 139.05472,
                    "p50": 139.05472,
                    "p95": 139.05472,
                    "p99": 139.05472,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 302.363985,
                    "min": 302.363985,
                    "p50": 302.363985,
                    "p95": 302.363985,
                    "p99": 302.363985,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 190.772461,
                    "min": 190.772461,
                    "p50": 190.772461,
                    "p95": 190.772461,
                    "p99": 190.772461,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 287.910555,
                    "min": 287.910555,
                    "p50": 287.910555,
                    "p95": 287.910555,
                    "p99": 287.910555,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 167.48586799999998,
                    "min": 167.48586799999998,
                    "p50": 167.48586799999998,
                    "p95": 167.48586799999998,
                    "p99": 167.48586799999998,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 407.996709,
                    "min": 407.996709,
                    "p50": 407.996709,
                    "p95": 407.996709,
                    "p99": 407.996709,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 248.86968499999998,
                    "min": 248.86968499999998,
                    "p50": 248.86968499999998,
                    "p95": 248.86968499999998,
                    "p99": 248.86968499999998,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 215.103757,
                    "min": 215.103757,
                    "p50": 215.103757,
                    "p95": 215.103757,
                    "p99": 215.103757,
                    "n": 1,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 264.21058,
                    "min": 264.21058,
                    "p50": 264.21058,
                    "p95": 264.21058,
                    "p99": 264.21058,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 123.96581499999999,
                    "min": 123.96581499999999,
                    "p50": 123.96581499999999,
                    "p95": 123.96581499999999,
                    "p99": 123.96581499999999,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 187.80978399999998,
                    "min": 187.80978399999998,
                    "p50": 187.80978399999998,
                    "p95": 187.80978399999998,
                    "p99": 187.80978399999998,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 175.64525799999998,
                    "min": 175.64525799999998,
                    "p50": 175.64525799999998,
                    "p95": 175.64525799999998,
                    "p99": 175.64525799999998,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 145.163447,
                    "min": 145.163447,
                    "p50": 145.163447,
                    "p95": 145.163447,
                    "p99": 145.163447,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 364.352487,
                    "min": 364.352487,
                    "p50": 364.352487,
                    "p95": 364.352487,
                    "p99": 364.352487,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 340.69478499999997,
                    "min": 340.69478499999997,
                    "p50": 340.69478499999997,
                    "p95": 340.69478499999997,
                    "p99": 340.69478499999997,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 510.61328399999996,
                    "min": 510.61328399999996,
                    "p50": 510.61328399999996,
                    "p95": 510.61328399999996,
                    "p99": 510.61328399999996,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 755.6078769999999,
                    "min": 755.6078769999999,
                    "p50": 755.6078769999999,
                    "p95": 755.6078769999999,
                    "p99": 755.6078769999999,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 320.38813799999997,
                    "min": 320.38813799999997,
                    "p50": 320.38813799999997,
                    "p95": 320.38813799999997,
                    "p99": 320.38813799999997,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 154.556993,
                    "min": 154.556993,
                    "p50": 154.556993,
                    "p95": 154.556993,
                    "p99": 154.556993,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 295.878919,
                    "min": 295.878919,
                    "p50": 295.878919,
                    "p95": 295.878919,
                    "p99": 295.878919,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 113.750063,
                    "min": 113.750063,
                    "p50": 113.750063,
                    "p95": 113.750063,
                    "p99": 113.750063,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 377.83164999999997,
                    "min": 377.83164999999997,
                    "p50": 377.83164999999997,
                    "p95": 377.83164999999997,
                    "p99": 377.83164999999997,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 551.4407249999999,
                    "min": 551.4407249999999,
                    "p50": 551.4407249999999,
                    "p95": 551.4407249999999,
                    "p99": 551.4407249999999,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 238.27289299999998,
                    "min": 238.27289299999998,
                    "p50": 238.27289299999998,
                    "p95": 238.27289299999998,
                    "p99": 238.27289299999998,
                    "n": 1,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2172.202902,
                    "min": 2172.202902,
                    "p50": 2172.202902,
                    "p95": 2172.202902,
                    "p99": 2172.202902,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 523.621722,
                    "min": 523.621722,
                    "p50": 523.621722,
                    "p95": 523.621722,
                    "p99": 523.621722,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 355.800262,
                    "min": 355.800262,
                    "p50": 355.800262,
                    "p95": 355.800262,
                    "p99": 355.800262,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 674.779222,
                    "min": 674.779222,
                    "p50": 674.779222,
                    "p95": 674.779222,
                    "p99": 674.779222,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.90566299999998,
                    "min": 247.90566299999998,
                    "p50": 247.90566299999998,
                    "p95": 247.90566299999998,
                    "p99": 247.90566299999998,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1068.7238989999998,
                    "min": 1068.7238989999998,
                    "p50": 1068.7238989999998,
                    "p95": 1068.7238989999998,
                    "p99": 1068.7238989999998,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 822.018373,
                    "min": 822.018373,
                    "p50": 822.018373,
                    "p95": 822.018373,
                    "p99": 822.018373,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 788.815068,
                    "min": 788.815068,
                    "p50": 788.815068,
                    "p95": 788.815068,
                    "p99": 788.815068,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 189.28427499999998,
                    "min": 189.28427499999998,
                    "p50": 189.28427499999998,
                    "p95": 189.28427499999998,
                    "p99": 189.28427499999998,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 309.523627,
                    "min": 309.523627,
                    "p50": 309.523627,
                    "p95": 309.523627,
                    "p99": 309.523627,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 970.312375,
                    "min": 970.312375,
                    "p50": 970.312375,
                    "p95": 970.312375,
                    "p99": 970.312375,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 459.98481699999996,
                    "min": 459.98481699999996,
                    "p50": 459.98481699999996,
                    "p95": 459.98481699999996,
                    "p99": 459.98481699999996,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 618.135241,
                    "min": 618.135241,
                    "p50": 618.135241,
                    "p95": 618.135241,
                    "p99": 618.135241,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 408.34946299999996,
                    "min": 408.34946299999996,
                    "p50": 408.34946299999996,
                    "p95": 408.34946299999996,
                    "p99": 408.34946299999996,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 727.617097,
                    "min": 727.617097,
                    "p50": 727.617097,
                    "p95": 727.617097,
                    "p99": 727.617097,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1635.499294,
                    "min": 1635.499294,
                    "p50": 1635.499294,
                    "p95": 1635.499294,
                    "p99": 1635.499294,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2682.6042899999998,
                    "min": 2682.6042899999998,
                    "p50": 2682.6042899999998,
                    "p95": 2682.6042899999998,
                    "p99": 2682.6042899999998,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 572.7524119999999,
                    "min": 572.7524119999999,
                    "p50": 572.7524119999999,
                    "p95": 572.7524119999999,
                    "p99": 572.7524119999999,
                    "n": 1,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 227.251208,
                    "min": 227.251208,
                    "p50": 227.251208,
                    "p95": 227.251208,
                    "p99": 227.251208,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 587.3729099999999,
                    "min": 587.3729099999999,
                    "p50": 587.3729099999999,
                    "p95": 587.3729099999999,
                    "p99": 587.3729099999999,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 959.184945,
                    "min": 959.184945,
                    "p50": 959.184945,
                    "p95": 959.184945,
                    "p99": 959.184945,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1464.980765,
                    "min": 1464.980765,
                    "p50": 1464.980765,
                    "p95": 1464.980765,
                    "p99": 1464.980765,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1242.746097,
                    "min": 1242.746097,
                    "p50": 1242.746097,
                    "p95": 1242.746097,
                    "p99": 1242.746097,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 247.81968799999999,
                    "min": 247.81968799999999,
                    "p50": 247.81968799999999,
                    "p95": 247.81968799999999,
                    "p99": 247.81968799999999,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 503.46201499999995,
                    "min": 503.46201499999995,
                    "p50": 503.46201499999995,
                    "p95": 503.46201499999995,
                    "p99": 503.46201499999995,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.28412,
                    "min": 185.28412,
                    "p50": 185.28412,
                    "p95": 185.28412,
                    "p99": 185.28412,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 418.237448,
                    "min": 418.237448,
                    "p50": 418.237448,
                    "p95": 418.237448,
                    "p99": 418.237448,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 428.78125,
                    "min": 428.78125,
                    "p50": 428.78125,
                    "p95": 428.78125,
                    "p99": 428.78125,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.051919,
                    "min": 159.051919,
                    "p50": 159.051919,
                    "p95": 159.051919,
                    "p99": 159.051919,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 349.219162,
                    "min": 349.219162,
                    "p50": 349.219162,
                    "p95": 349.219162,
                    "p99": 349.219162,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 386.060324,
                    "min": 386.060324,
                    "p50": 386.060324,
                    "p95": 386.060324,
                    "p99": 386.060324,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 177.12827,
                    "min": 177.12827,
                    "p50": 177.12827,
                    "p95": 177.12827,
                    "p99": 177.12827,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.170164,
                    "min": 120.170164,
                    "p50": 120.170164,
                    "p95": 120.170164,
                    "p99": 120.170164,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 390.212177,
                    "min": 390.212177,
                    "p50": 390.212177,
                    "p95": 390.212177,
                    "p99": 390.212177,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 308.55920699999996,
                    "min": 308.55920699999996,
                    "p50": 308.55920699999996,
                    "p95": 308.55920699999996,
                    "p99": 308.55920699999996,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 282.81656399999997,
                    "min": 282.81656399999997,
                    "p50": 282.81656399999997,
                    "p95": 282.81656399999997,
                    "p99": 282.81656399999997,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 346.299195,
                    "min": 346.299195,
                    "p50": 346.299195,
                    "p95": 346.299195,
                    "p99": 346.299195,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 524.8279259999999,
                    "min": 524.8279259999999,
                    "p50": 524.8279259999999,
                    "p95": 524.8279259999999,
                    "p99": 524.8279259999999,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 448.00204099999996,
                    "min": 448.00204099999996,
                    "p50": 448.00204099999996,
                    "p95": 448.00204099999996,
                    "p99": 448.00204099999996,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 135.35826699999998,
                    "min": 135.35826699999998,
                    "p50": 135.35826699999998,
                    "p95": 135.35826699999998,
                    "p99": 135.35826699999998,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 718.0338849999999,
                    "min": 718.0338849999999,
                    "p50": 718.0338849999999,
                    "p95": 718.0338849999999,
                    "p99": 718.0338849999999,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 312.731391,
                    "min": 312.731391,
                    "p50": 312.731391,
                    "p95": 312.731391,
                    "p99": 312.731391,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 210.515671,
                    "min": 210.515671,
                    "p50": 210.515671,
                    "p95": 210.515671,
                    "p99": 210.515671,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 410.098149,
                    "min": 410.098149,
                    "p50": 410.098149,
                    "p95": 410.098149,
                    "p99": 410.098149,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 244.06320599999998,
                    "min": 244.06320599999998,
                    "p50": 244.06320599999998,
                    "p95": 244.06320599999998,
                    "p99": 244.06320599999998,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 660.6413729999999,
                    "min": 660.6413729999999,
                    "p50": 660.6413729999999,
                    "p95": 660.6413729999999,
                    "p99": 660.6413729999999,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 169.50491599999998,
                    "min": 169.50491599999998,
                    "p50": 169.50491599999998,
                    "p95": 169.50491599999998,
                    "p99": 169.50491599999998,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 571.040137,
                    "min": 571.040137,
                    "p50": 571.040137,
                    "p95": 571.040137,
                    "p99": 571.040137,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 270.470083,
                    "min": 270.470083,
                    "p50": 270.470083,
                    "p95": 270.470083,
                    "p99": 270.470083,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 485.54265499999997,
                    "min": 485.54265499999997,
                    "p50": 485.54265499999997,
                    "p95": 485.54265499999997,
                    "p99": 485.54265499999997,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 376.02898,
                    "min": 376.02898,
                    "p50": 376.02898,
                    "p95": 376.02898,
                    "p99": 376.02898,
                    "n": 1,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 128.434272,
                    "min": 128.434272,
                    "p50": 128.434272,
                    "p95": 128.434272,
                    "p99": 128.434272,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 330.080184,
                    "min": 330.080184,
                    "p50": 330.080184,
                    "p95": 330.080184,
                    "p99": 330.080184,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 220.947788,
                    "min": 220.947788,
                    "p50": 220.947788,
                    "p95": 220.947788,
                    "p99": 220.947788,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 257.874707,
                    "min": 257.874707,
                    "p50": 257.874707,
                    "p95": 257.874707,
                    "p99": 257.874707,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 506.477307,
                    "min": 506.477307,
                    "p50": 506.477307,
                    "p95": 506.477307,
                    "p99": 506.477307,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 260.389336,
                    "min": 260.389336,
                    "p50": 260.389336,
                    "p95": 260.389336,
                    "p99": 260.389336,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 319.627959,
                    "min": 319.627959,
                    "p50": 319.627959,
                    "p95": 319.627959,
                    "p99": 319.627959,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 772.8844349999999,
                    "min": 772.8844349999999,
                    "p50": 772.8844349999999,
                    "p95": 772.8844349999999,
                    "p99": 772.8844349999999,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 209.812402,
                    "min": 209.812402,
                    "p50": 209.812402,
                    "p95": 209.812402,
                    "p99": 209.812402,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 97.593682,
                    "min": 97.593682,
                    "p50": 97.593682,
                    "p95": 97.593682,
                    "p99": 97.593682,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 241.320504,
                    "min": 241.320504,
                    "p50": 241.320504,
                    "p95": 241.320504,
                    "p99": 241.320504,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 159.653944,
                    "min": 159.653944,
                    "p50": 159.653944,
                    "p95": 159.653944,
                    "p99": 159.653944,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 121.165458,
                    "min": 121.165458,
                    "p50": 121.165458,
                    "p95": 121.165458,
                    "p99": 121.165458,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 234.318942,
                    "min": 234.318942,
                    "p50": 234.318942,
                    "p95": 234.318942,
                    "p99": 234.318942,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 384.51188199999996,
                    "min": 384.51188199999996,
                    "p50": 384.51188199999996,
                    "p95": 384.51188199999996,
                    "p99": 384.51188199999996,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 278.610664,
                    "min": 278.610664,
                    "p50": 278.610664,
                    "p95": 278.610664,
                    "p99": 278.610664,
                    "n": 1,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 461.117686,
                    "min": 461.117686,
                    "p50": 461.117686,
                    "p95": 461.117686,
                    "p99": 461.117686,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 451.85637599999995,
                    "min": 451.85637599999995,
                    "p50": 451.85637599999995,
                    "p95": 451.85637599999995,
                    "p99": 451.85637599999995,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 480.636286,
                    "min": 480.636286,
                    "p50": 480.636286,
                    "p95": 480.636286,
                    "p99": 480.636286,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 307.905761,
                    "min": 307.905761,
                    "p50": 307.905761,
                    "p95": 307.905761,
                    "p99": 307.905761,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.482317,
                    "min": 217.482317,
                    "p50": 217.482317,
                    "p95": 217.482317,
                    "p99": 217.482317,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 274.89712,
                    "min": 274.89712,
                    "p50": 274.89712,
                    "p95": 274.89712,
                    "p99": 274.89712,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 155.008025,
                    "min": 155.008025,
                    "p50": 155.008025,
                    "p95": 155.008025,
                    "p99": 155.008025,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 191.108889,
                    "min": 191.108889,
                    "p50": 191.108889,
                    "p95": 191.108889,
                    "p99": 191.108889,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 332.339592,
                    "min": 332.339592,
                    "p50": 332.339592,
                    "p95": 332.339592,
                    "p99": 332.339592,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 248.305679,
                    "min": 248.305679,
                    "p50": 248.305679,
                    "p95": 248.305679,
                    "p99": 248.305679,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 737.32278,
                    "min": 737.32278,
                    "p50": 737.32278,
                    "p95": 737.32278,
                    "p99": 737.32278,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 367.35076799999996,
                    "min": 367.35076799999996,
                    "p50": 367.35076799999996,
                    "p95": 367.35076799999996,
                    "p99": 367.35076799999996,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 554.876118,
                    "min": 554.876118,
                    "p50": 554.876118,
                    "p95": 554.876118,
                    "p99": 554.876118,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 126.952086,
                    "min": 126.952086,
                    "p50": 126.952086,
                    "p95": 126.952086,
                    "p99": 126.952086,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 506.13764999999995,
                    "min": 506.13764999999995,
                    "p50": 506.13764999999995,
                    "p95": 506.13764999999995,
                    "p99": 506.13764999999995,
                    "n": 1,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 357.883634,
                    "min": 357.883634,
                    "p50": 357.883634,
                    "p95": 357.883634,
                    "p99": 357.883634,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 201.50214699999998,
                    "min": 201.50214699999998,
                    "p50": 201.50214699999998,
                    "p95": 201.50214699999998,
                    "p99": 201.50214699999998,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 139.002257,
                    "min": 139.002257,
                    "p50": 139.002257,
                    "p95": 139.002257,
                    "p99": 139.002257,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 133.49092199999998,
                    "min": 133.49092199999998,
                    "p50": 133.49092199999998,
                    "p95": 133.49092199999998,
                    "p99": 133.49092199999998,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 440.89113699999996,
                    "min": 440.89113699999996,
                    "p50": 440.89113699999996,
                    "p95": 440.89113699999996,
                    "p99": 440.89113699999996,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 502.387096,
                    "min": 502.387096,
                    "p50": 502.387096,
                    "p95": 502.387096,
                    "p99": 502.387096,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 282.41443,
                    "min": 282.41443,
                    "p50": 282.41443,
                    "p95": 282.41443,
                    "p99": 282.41443,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 581.095451,
                    "min": 581.095451,
                    "p50": 581.095451,
                    "p95": 581.095451,
                    "p99": 581.095451,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 310.897548,
                    "min": 310.897548,
                    "p50": 310.897548,
                    "p95": 310.897548,
                    "p99": 310.897548,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 253.73783699999998,
                    "min": 253.73783699999998,
                    "p50": 253.73783699999998,
                    "p95": 253.73783699999998,
                    "p99": 253.73783699999998,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 510.78426099999996,
                    "min": 510.78426099999996,
                    "p50": 510.78426099999996,
                    "p95": 510.78426099999996,
                    "p99": 510.78426099999996,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 418.09772,
                    "min": 418.09772,
                    "p50": 418.09772,
                    "p95": 418.09772,
                    "p99": 418.09772,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 174.806419,
                    "min": 174.806419,
                    "p50": 174.806419,
                    "p95": 174.806419,
                    "p99": 174.806419,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 257.302197,
                    "min": 257.302197,
                    "p50": 257.302197,
                    "p95": 257.302197,
                    "p99": 257.302197,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 844.958524,
                    "min": 844.958524,
                    "p50": 844.958524,
                    "p95": 844.958524,
                    "p99": 844.958524,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 336.325243,
                    "min": 336.325243,
                    "p50": 336.325243,
                    "p95": 336.325243,
                    "p99": 336.325243,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1109.9635859999999,
                    "min": 1109.9635859999999,
                    "p50": 1109.9635859999999,
                    "p95": 1109.9635859999999,
                    "p99": 1109.9635859999999,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 545.014548,
                    "min": 545.014548,
                    "p50": 545.014548,
                    "p95": 545.014548,
                    "p99": 545.014548,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 284.88767,
                    "min": 284.88767,
                    "p50": 284.88767,
                    "p95": 284.88767,
                    "p99": 284.88767,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1063.850405,
                    "min": 1063.850405,
                    "p50": 1063.850405,
                    "p95": 1063.850405,
                    "p99": 1063.850405,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 780.290617,
                    "min": 780.290617,
                    "p50": 780.290617,
                    "p95": 780.290617,
                    "p99": 780.290617,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 353.372364,
                    "min": 353.372364,
                    "p50": 353.372364,
                    "p95": 353.372364,
                    "p99": 353.372364,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 835.28512,
                    "min": 835.28512,
                    "p50": 835.28512,
                    "p95": 835.28512,
                    "p99": 835.28512,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 396.15871899999996,
                    "min": 396.15871899999996,
                    "p50": 396.15871899999996,
                    "p95": 396.15871899999996,
                    "p99": 396.15871899999996,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 629.268029,
                    "min": 629.268029,
                    "p50": 629.268029,
                    "p95": 629.268029,
                    "p99": 629.268029,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 510.757255,
                    "min": 510.757255,
                    "p50": 510.757255,
                    "p95": 510.757255,
                    "p99": 510.757255,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 716.5999909999999,
                    "min": 716.5999909999999,
                    "p50": 716.5999909999999,
                    "p95": 716.5999909999999,
                    "p99": 716.5999909999999,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 951.761404,
                    "min": 951.761404,
                    "p50": 951.761404,
                    "p95": 951.761404,
                    "p99": 951.761404,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 464.27768399999997,
                    "min": 464.27768399999997,
                    "p50": 464.27768399999997,
                    "p95": 464.27768399999997,
                    "p99": 464.27768399999997,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 612.21024,
                    "min": 612.21024,
                    "p50": 612.21024,
                    "p95": 612.21024,
                    "p99": 612.21024,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 196.115251,
                    "min": 196.115251,
                    "p50": 196.115251,
                    "p95": 196.115251,
                    "p99": 196.115251,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 224.271118,
                    "min": 224.271118,
                    "p50": 224.271118,
                    "p95": 224.271118,
                    "p99": 224.271118,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 334.33928099999997,
                    "min": 334.33928099999997,
                    "p50": 334.33928099999997,
                    "p95": 334.33928099999997,
                    "p99": 334.33928099999997,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 155.569152,
                    "min": 155.569152,
                    "p50": 155.569152,
                    "p95": 155.569152,
                    "p99": 155.569152,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 395.301996,
                    "min": 395.301996,
                    "p50": 395.301996,
                    "p95": 395.301996,
                    "p99": 395.301996,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 529.5356479999999,
                    "min": 529.5356479999999,
                    "p50": 529.5356479999999,
                    "p95": 529.5356479999999,
                    "p99": 529.5356479999999,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.02192499999998,
                    "min": 186.02192499999998,
                    "p50": 186.02192499999998,
                    "p95": 186.02192499999998,
                    "p99": 186.02192499999998,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 303.328054,
                    "min": 303.328054,
                    "p50": 303.328054,
                    "p95": 303.328054,
                    "p99": 303.328054,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 318.39312,
                    "min": 318.39312,
                    "p50": 318.39312,
                    "p95": 318.39312,
                    "p99": 318.39312,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 216.569336,
                    "min": 216.569336,
                    "p50": 216.569336,
                    "p95": 216.569336,
                    "p99": 216.569336,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.495502,
                    "min": 89.495502,
                    "p50": 89.495502,
                    "p95": 89.495502,
                    "p99": 89.495502,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 561.461461,
                    "min": 561.461461,
                    "p50": 561.461461,
                    "p95": 561.461461,
                    "p99": 561.461461,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 363.888151,
                    "min": 363.888151,
                    "p50": 363.888151,
                    "p95": 363.888151,
                    "p99": 363.888151,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 421.950207,
                    "min": 421.950207,
                    "p50": 421.950207,
                    "p95": 421.950207,
                    "p99": 421.950207,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 632.4562129999999,
                    "min": 632.4562129999999,
                    "p50": 632.4562129999999,
                    "p95": 632.4562129999999,
                    "p99": 632.4562129999999,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 480.63985499999995,
                    "min": 480.63985499999995,
                    "p50": 480.63985499999995,
                    "p95": 480.63985499999995,
                    "p99": 480.63985499999995,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 245.19503999999998,
                    "min": 245.19503999999998,
                    "p50": 245.19503999999998,
                    "p95": 245.19503999999998,
                    "p99": 245.19503999999998,
                    "n": 1,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 658.386655,
                    "min": 658.386655,
                    "p50": 658.386655,
                    "p95": 658.386655,
                    "p99": 658.386655,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 336.10565199999996,
                    "min": 336.10565199999996,
                    "p50": 336.10565199999996,
                    "p95": 336.10565199999996,
                    "p99": 336.10565199999996,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 453.63001699999995,
                    "min": 453.63001699999995,
                    "p50": 453.63001699999995,
                    "p95": 453.63001699999995,
                    "p99": 453.63001699999995,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 482.36873799999995,
                    "min": 482.36873799999995,
                    "p50": 482.36873799999995,
                    "p95": 482.36873799999995,
                    "p99": 482.36873799999995,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 644.656562,
                    "min": 644.656562,
                    "p50": 644.656562,
                    "p95": 644.656562,
                    "p99": 644.656562,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 327.98117199999996,
                    "min": 327.98117199999996,
                    "p50": 327.98117199999996,
                    "p95": 327.98117199999996,
                    "p99": 327.98117199999996,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.88969,
                    "min": 217.88969,
                    "p50": 217.88969,
                    "p95": 217.88969,
                    "p99": 217.88969,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.227809,
                    "min": 276.227809,
                    "p50": 276.227809,
                    "p95": 276.227809,
                    "p99": 276.227809,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 417.57413199999996,
                    "min": 417.57413199999996,
                    "p50": 417.57413199999996,
                    "p95": 417.57413199999996,
                    "p99": 417.57413199999996,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 392.65633199999996,
                    "min": 392.65633199999996,
                    "p50": 392.65633199999996,
                    "p95": 392.65633199999996,
                    "p99": 392.65633199999996,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 934.420301,
                    "min": 934.420301,
                    "p50": 934.420301,
                    "p95": 934.420301,
                    "p99": 934.420301,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 209.35195,
                    "min": 209.35195,
                    "p50": 209.35195,
                    "p95": 209.35195,
                    "p99": 209.35195,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 130.1,
                    "min": 130.1,
                    "p50": 130.1,
                    "p95": 130.1,
                    "p99": 130.1,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 188.244004,
                    "min": 188.244004,
                    "p50": 188.244004,
                    "p95": 188.244004,
                    "p99": 188.244004,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 267.25296099999997,
                    "min": 267.25296099999997,
                    "p50": 267.25296099999997,
                    "p95": 267.25296099999997,
                    "p99": 267.25296099999997,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 152.729433,
                    "min": 152.729433,
                    "p50": 152.729433,
                    "p95": 152.729433,
                    "p99": 152.729433,
                    "n": 1,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 890.516387,
                    "min": 890.516387,
                    "p50": 890.516387,
                    "p95": 890.516387,
                    "p99": 890.516387,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 435.08644999999996,
                    "min": 435.08644999999996,
                    "p50": 435.08644999999996,
                    "p95": 435.08644999999996,
                    "p99": 435.08644999999996,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 208.910833,
                    "min": 208.910833,
                    "p50": 208.910833,
                    "p95": 208.910833,
                    "p99": 208.910833,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 265.248337,
                    "min": 265.248337,
                    "p50": 265.248337,
                    "p95": 265.248337,
                    "p99": 265.248337,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 597.379334,
                    "min": 597.379334,
                    "p50": 597.379334,
                    "p95": 597.379334,
                    "p99": 597.379334,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 379.714768,
                    "min": 379.714768,
                    "p50": 379.714768,
                    "p95": 379.714768,
                    "p99": 379.714768,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1178.9008469999999,
                    "min": 1178.9008469999999,
                    "p50": 1178.9008469999999,
                    "p95": 1178.9008469999999,
                    "p99": 1178.9008469999999,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 324.504931,
                    "min": 324.504931,
                    "p50": 324.504931,
                    "p95": 324.504931,
                    "p99": 324.504931,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 662.6743789999999,
                    "min": 662.6743789999999,
                    "p50": 662.6743789999999,
                    "p95": 662.6743789999999,
                    "p99": 662.6743789999999,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 491.808436,
                    "min": 491.808436,
                    "p50": 491.808436,
                    "p95": 491.808436,
                    "p99": 491.808436,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 721.2384529999999,
                    "min": 721.2384529999999,
                    "p50": 721.2384529999999,
                    "p95": 721.2384529999999,
                    "p99": 721.2384529999999,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 777.417282,
                    "min": 777.417282,
                    "p50": 777.417282,
                    "p95": 777.417282,
                    "p99": 777.417282,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1029.737195,
                    "min": 1029.737195,
                    "p50": 1029.737195,
                    "p95": 1029.737195,
                    "p99": 1029.737195,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 830.080111,
                    "min": 830.080111,
                    "p50": 830.080111,
                    "p95": 830.080111,
                    "p99": 830.080111,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 547.048053,
                    "min": 547.048053,
                    "p50": 547.048053,
                    "p95": 547.048053,
                    "p99": 547.048053,
                    "n": 1,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 156.136689,
                    "min": 156.136689,
                    "p50": 156.136689,
                    "p95": 156.136689,
                    "p99": 156.136689,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 481.945344,
                    "min": 481.945344,
                    "p50": 481.945344,
                    "p95": 481.945344,
                    "p99": 481.945344,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 424.696505,
                    "min": 424.696505,
                    "p50": 424.696505,
                    "p95": 424.696505,
                    "p99": 424.696505,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 297.358446,
                    "min": 297.358446,
                    "p50": 297.358446,
                    "p95": 297.358446,
                    "p99": 297.358446,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 212.101845,
                    "min": 212.101845,
                    "p50": 212.101845,
                    "p95": 212.101845,
                    "p99": 212.101845,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 141.589588,
                    "min": 141.589588,
                    "p50": 141.589588,
                    "p95": 141.589588,
                    "p99": 141.589588,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 182.716261,
                    "min": 182.716261,
                    "p50": 182.716261,
                    "p95": 182.716261,
                    "p99": 182.716261,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 531.582009,
                    "min": 531.582009,
                    "p50": 531.582009,
                    "p95": 531.582009,
                    "p99": 531.582009,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 557.86043,
                    "min": 557.86043,
                    "p50": 557.86043,
                    "p95": 557.86043,
                    "p99": 557.86043,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 283.463988,
                    "min": 283.463988,
                    "p50": 283.463988,
                    "p95": 283.463988,
                    "p99": 283.463988,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 337.004572,
                    "min": 337.004572,
                    "p50": 337.004572,
                    "p95": 337.004572,
                    "p99": 337.004572,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 734.319848,
                    "min": 734.319848,
                    "p50": 734.319848,
                    "p95": 734.319848,
                    "p99": 734.319848,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 388.536043,
                    "min": 388.536043,
                    "p50": 388.536043,
                    "p95": 388.536043,
                    "p99": 388.536043,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 315.72162,
                    "min": 315.72162,
                    "p50": 315.72162,
                    "p95": 315.72162,
                    "p99": 315.72162,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 419.272629,
                    "min": 419.272629,
                    "p50": 419.272629,
                    "p95": 419.272629,
                    "p99": 419.272629,
                    "n": 1,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1119.684211,
                    "min": 1119.684211,
                    "p50": 1119.684211,
                    "p95": 1119.684211,
                    "p99": 1119.684211,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 611.528723,
                    "min": 611.528723,
                    "p50": 611.528723,
                    "p95": 611.528723,
                    "p99": 611.528723,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 734.611904,
                    "min": 734.611904,
                    "p50": 734.611904,
                    "p95": 734.611904,
                    "p99": 734.611904,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 816.853402,
                    "min": 816.853402,
                    "p50": 816.853402,
                    "p95": 816.853402,
                    "p99": 816.853402,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 985.9835459999999,
                    "min": 985.9835459999999,
                    "p50": 985.9835459999999,
                    "p95": 985.9835459999999,
                    "p99": 985.9835459999999,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 995.078032,
                    "min": 995.078032,
                    "p50": 995.078032,
                    "p95": 995.078032,
                    "p99": 995.078032,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 325.119149,
                    "min": 325.119149,
                    "p50": 325.119149,
                    "p95": 325.119149,
                    "p99": 325.119149,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 640.828125,
                    "min": 640.828125,
                    "p50": 640.828125,
                    "p95": 640.828125,
                    "p99": 640.828125,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 888.477414,
                    "min": 888.477414,
                    "p50": 888.477414,
                    "p95": 888.477414,
                    "p99": 888.477414,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1259.7615759999999,
                    "min": 1259.7615759999999,
                    "p50": 1259.7615759999999,
                    "p95": 1259.7615759999999,
                    "p99": 1259.7615759999999,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 382.532397,
                    "min": 382.532397,
                    "p50": 382.532397,
                    "p95": 382.532397,
                    "p99": 382.532397,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 531.064182,
                    "min": 531.064182,
                    "p50": 531.064182,
                    "p95": 531.064182,
                    "p99": 531.064182,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 253.262181,
                    "min": 253.262181,
                    "p50": 253.262181,
                    "p95": 253.262181,
                    "p99": 253.262181,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 436.88145099999997,
                    "min": 436.88145099999997,
                    "p50": 436.88145099999997,
                    "p95": 436.88145099999997,
                    "p99": 436.88145099999997,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1442.491567,
                    "min": 1442.491567,
                    "p50": 1442.491567,
                    "p95": 1442.491567,
                    "p99": 1442.491567,
                    "n": 1,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1443.755798,
                    "min": 1443.755798,
                    "p50": 1443.755798,
                    "p95": 1443.755798,
                    "p99": 1443.755798,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1011.481176,
                    "min": 1011.481176,
                    "p50": 1011.481176,
                    "p95": 1011.481176,
                    "p99": 1011.481176,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 877.9475309999999,
                    "min": 877.9475309999999,
                    "p50": 877.9475309999999,
                    "p95": 877.9475309999999,
                    "p99": 877.9475309999999,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 661.010643,
                    "min": 661.010643,
                    "p50": 661.010643,
                    "p95": 661.010643,
                    "p99": 661.010643,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 592.601136,
                    "min": 592.601136,
                    "p50": 592.601136,
                    "p95": 592.601136,
                    "p99": 592.601136,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 464.720934,
                    "min": 464.720934,
                    "p50": 464.720934,
                    "p95": 464.720934,
                    "p99": 464.720934,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 984.13257,
                    "min": 984.13257,
                    "p50": 984.13257,
                    "p95": 984.13257,
                    "p99": 984.13257,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 320.281925,
                    "min": 320.281925,
                    "p50": 320.281925,
                    "p95": 320.281925,
                    "p99": 320.281925,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 826.458145,
                    "min": 826.458145,
                    "p50": 826.458145,
                    "p95": 826.458145,
                    "p99": 826.458145,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 390.798493,
                    "min": 390.798493,
                    "p50": 390.798493,
                    "p95": 390.798493,
                    "p99": 390.798493,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1276.781679,
                    "min": 1276.781679,
                    "p50": 1276.781679,
                    "p95": 1276.781679,
                    "p99": 1276.781679,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 254.087789,
                    "min": 254.087789,
                    "p50": 254.087789,
                    "p95": 254.087789,
                    "p99": 254.087789,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 543.212711,
                    "min": 543.212711,
                    "p50": 543.212711,
                    "p95": 543.212711,
                    "p99": 543.212711,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1048.366965,
                    "min": 1048.366965,
                    "p50": 1048.366965,
                    "p95": 1048.366965,
                    "p99": 1048.366965,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 735.2800149999999,
                    "min": 735.2800149999999,
                    "p50": 735.2800149999999,
                    "p95": 735.2800149999999,
                    "p99": 735.2800149999999,
                    "n": 1,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 786.878112,
                    "min": 786.878112,
                    "p50": 786.878112,
                    "p95": 786.878112,
                    "p99": 786.878112,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 456.20404099999996,
                    "min": 456.20404099999996,
                    "p50": 456.20404099999996,
                    "p95": 456.20404099999996,
                    "p99": 456.20404099999996,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 372.256603,
                    "min": 372.256603,
                    "p50": 372.256603,
                    "p95": 372.256603,
                    "p99": 372.256603,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 733.784808,
                    "min": 733.784808,
                    "p50": 733.784808,
                    "p95": 733.784808,
                    "p99": 733.784808,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1412.025159,
                    "min": 1412.025159,
                    "p50": 1412.025159,
                    "p95": 1412.025159,
                    "p99": 1412.025159,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 315.49773999999996,
                    "min": 315.49773999999996,
                    "p50": 315.49773999999996,
                    "p95": 315.49773999999996,
                    "p99": 315.49773999999996,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 531.433919,
                    "min": 531.433919,
                    "p50": 531.433919,
                    "p95": 531.433919,
                    "p99": 531.433919,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 242.066184,
                    "min": 242.066184,
                    "p50": 242.066184,
                    "p95": 242.066184,
                    "p99": 242.066184,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1097.4752059999998,
                    "min": 1097.4752059999998,
                    "p50": 1097.4752059999998,
                    "p95": 1097.4752059999998,
                    "p99": 1097.4752059999998,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1028.2962909999999,
                    "min": 1028.2962909999999,
                    "p50": 1028.2962909999999,
                    "p95": 1028.2962909999999,
                    "p99": 1028.2962909999999,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 850.51163,
                    "min": 850.51163,
                    "p50": 850.51163,
                    "p95": 850.51163,
                    "p99": 850.51163,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 953.8461179999999,
                    "min": 953.8461179999999,
                    "p50": 953.8461179999999,
                    "p95": 953.8461179999999,
                    "p99": 953.8461179999999,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 675.5261419999999,
                    "min": 675.5261419999999,
                    "p50": 675.5261419999999,
                    "p95": 675.5261419999999,
                    "p99": 675.5261419999999,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1292.230388,
                    "min": 1292.230388,
                    "p50": 1292.230388,
                    "p95": 1292.230388,
                    "p99": 1292.230388,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 562.030523,
                    "min": 562.030523,
                    "p50": 562.030523,
                    "p95": 562.030523,
                    "p99": 562.030523,
                    "n": 1,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 524.780901,
                    "min": 524.780901,
                    "p50": 524.780901,
                    "p95": 524.780901,
                    "p99": 524.780901,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 301.462537,
                    "min": 301.462537,
                    "p50": 301.462537,
                    "p95": 301.462537,
                    "p99": 301.462537,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 597.478118,
                    "min": 597.478118,
                    "p50": 597.478118,
                    "p95": 597.478118,
                    "p99": 597.478118,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 665.952723,
                    "min": 665.952723,
                    "p50": 665.952723,
                    "p95": 665.952723,
                    "p99": 665.952723,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.329312,
                    "min": 149.329312,
                    "p50": 149.329312,
                    "p95": 149.329312,
                    "p99": 149.329312,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 480.842896,
                    "min": 480.842896,
                    "p50": 480.842896,
                    "p95": 480.842896,
                    "p99": 480.842896,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 264.137107,
                    "min": 264.137107,
                    "p50": 264.137107,
                    "p95": 264.137107,
                    "p99": 264.137107,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 150.48115099999998,
                    "min": 150.48115099999998,
                    "p50": 150.48115099999998,
                    "p95": 150.48115099999998,
                    "p99": 150.48115099999998,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1150.862418,
                    "min": 1150.862418,
                    "p50": 1150.862418,
                    "p95": 1150.862418,
                    "p99": 1150.862418,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 337.3166,
                    "min": 337.3166,
                    "p50": 337.3166,
                    "p95": 337.3166,
                    "p99": 337.3166,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 422.485217,
                    "min": 422.485217,
                    "p50": 422.485217,
                    "p95": 422.485217,
                    "p99": 422.485217,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 551.767934,
                    "min": 551.767934,
                    "p50": 551.767934,
                    "p95": 551.767934,
                    "p99": 551.767934,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.94767399999998,
                    "min": 227.94767399999998,
                    "p50": 227.94767399999998,
                    "p95": 227.94767399999998,
                    "p99": 227.94767399999998,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1907.6595009999999,
                    "min": 1907.6595009999999,
                    "p50": 1907.6595009999999,
                    "p95": 1907.6595009999999,
                    "p99": 1907.6595009999999,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 781.938646,
                    "min": 781.938646,
                    "p50": 781.938646,
                    "p95": 781.938646,
                    "p99": 781.938646,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 402.640566,
                    "min": 402.640566,
                    "p50": 402.640566,
                    "p95": 402.640566,
                    "p99": 402.640566,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 338.92247599999996,
                    "min": 338.92247599999996,
                    "p50": 338.92247599999996,
                    "p95": 338.92247599999996,
                    "p99": 338.92247599999996,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1518.49623,
                    "min": 1518.49623,
                    "p50": 1518.49623,
                    "p95": 1518.49623,
                    "p99": 1518.49623,
                    "n": 1,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 742.191055,
                    "min": 742.191055,
                    "p50": 742.191055,
                    "p95": 742.191055,
                    "p99": 742.191055,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.15552699999998,
                    "min": 217.15552699999998,
                    "p50": 217.15552699999998,
                    "p95": 217.15552699999998,
                    "p99": 217.15552699999998,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 426.22272399999997,
                    "min": 426.22272399999997,
                    "p50": 426.22272399999997,
                    "p95": 426.22272399999997,
                    "p99": 426.22272399999997,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 354.178467,
                    "min": 354.178467,
                    "p50": 354.178467,
                    "p95": 354.178467,
                    "p99": 354.178467,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 332.351721,
                    "min": 332.351721,
                    "p50": 332.351721,
                    "p95": 332.351721,
                    "p99": 332.351721,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 128.648665,
                    "min": 128.648665,
                    "p50": 128.648665,
                    "p95": 128.648665,
                    "p99": 128.648665,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 365.593927,
                    "min": 365.593927,
                    "p50": 365.593927,
                    "p95": 365.593927,
                    "p99": 365.593927,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 185.547307,
                    "min": 185.547307,
                    "p50": 185.547307,
                    "p95": 185.547307,
                    "p99": 185.547307,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 451.500635,
                    "min": 451.500635,
                    "p50": 451.500635,
                    "p95": 451.500635,
                    "p99": 451.500635,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 274.40693,
                    "min": 274.40693,
                    "p50": 274.40693,
                    "p95": 274.40693,
                    "p99": 274.40693,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 558.04356,
                    "min": 558.04356,
                    "p50": 558.04356,
                    "p95": 558.04356,
                    "p99": 558.04356,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 399.089817,
                    "min": 399.089817,
                    "p50": 399.089817,
                    "p95": 399.089817,
                    "p99": 399.089817,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 245.635258,
                    "min": 245.635258,
                    "p50": 245.635258,
                    "p95": 245.635258,
                    "p99": 245.635258,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 157.07136599999998,
                    "min": 157.07136599999998,
                    "p50": 157.07136599999998,
                    "p95": 157.07136599999998,
                    "p99": 157.07136599999998,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 484.95061499999997,
                    "min": 484.95061499999997,
                    "p50": 484.95061499999997,
                    "p95": 484.95061499999997,
                    "p99": 484.95061499999997,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 937.0850909999999,
                    "min": 937.0850909999999,
                    "p50": 937.0850909999999,
                    "p95": 937.0850909999999,
                    "p99": 937.0850909999999,
                    "n": 1,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 302.377365,
                    "min": 302.377365,
                    "p50": 302.377365,
                    "p95": 302.377365,
                    "p99": 302.377365,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 336.91716399999996,
                    "min": 336.91716399999996,
                    "p50": 336.91716399999996,
                    "p95": 336.91716399999996,
                    "p99": 336.91716399999996,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 184.531005,
                    "min": 184.531005,
                    "p50": 184.531005,
                    "p95": 184.531005,
                    "p99": 184.531005,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.635807,
                    "min": 276.635807,
                    "p50": 276.635807,
                    "p95": 276.635807,
                    "p99": 276.635807,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 456.71988799999997,
                    "min": 456.71988799999997,
                    "p50": 456.71988799999997,
                    "p95": 456.71988799999997,
                    "p99": 456.71988799999997,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 128.31069499999998,
                    "min": 128.31069499999998,
                    "p50": 128.31069499999998,
                    "p95": 128.31069499999998,
                    "p99": 128.31069499999998,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 932.90846,
                    "min": 932.90846,
                    "p50": 932.90846,
                    "p95": 932.90846,
                    "p99": 932.90846,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 366.20854199999997,
                    "min": 366.20854199999997,
                    "p50": 366.20854199999997,
                    "p95": 366.20854199999997,
                    "p99": 366.20854199999997,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 430.309821,
                    "min": 430.309821,
                    "p50": 430.309821,
                    "p95": 430.309821,
                    "p99": 430.309821,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 181.244069,
                    "min": 181.244069,
                    "p50": 181.244069,
                    "p95": 181.244069,
                    "p99": 181.244069,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 564.448442,
                    "min": 564.448442,
                    "p50": 564.448442,
                    "p95": 564.448442,
                    "p99": 564.448442,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 395.65860499999997,
                    "min": 395.65860499999997,
                    "p50": 395.65860499999997,
                    "p95": 395.65860499999997,
                    "p99": 395.65860499999997,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 278.805808,
                    "min": 278.805808,
                    "p50": 278.805808,
                    "p95": 278.805808,
                    "p99": 278.805808,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1251.2894979999999,
                    "min": 1251.2894979999999,
                    "p50": 1251.2894979999999,
                    "p95": 1251.2894979999999,
                    "p99": 1251.2894979999999,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 157.76657899999998,
                    "min": 157.76657899999998,
                    "p50": 157.76657899999998,
                    "p95": 157.76657899999998,
                    "p99": 157.76657899999998,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 472.290772,
                    "min": 472.290772,
                    "p50": 472.290772,
                    "p95": 472.290772,
                    "p99": 472.290772,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 606.20094,
                    "min": 606.20094,
                    "p50": 606.20094,
                    "p95": 606.20094,
                    "p99": 606.20094,
                    "n": 1,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom8Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}