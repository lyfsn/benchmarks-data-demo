{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 909.8488669999999,
                    "min": 639.411528,
                    "p50": 672.146931,
                    "p95": 909.8488669999999,
                    "p99": 909.8488669999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 303.61220199999997,
                    "min": 274.323257,
                    "p50": 301.64871999999997,
                    "p95": 303.61220199999997,
                    "p99": 303.61220199999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 486.33068499999996,
                    "min": 440.911072,
                    "p50": 466.71113699999995,
                    "p95": 486.33068499999996,
                    "p99": 486.33068499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 421.791252,
                    "min": 379.493086,
                    "p50": 406.622841,
                    "p95": 421.791252,
                    "p99": 421.791252,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 336.096943,
                    "min": 295.907692,
                    "p50": 327.694239,
                    "p95": 336.096943,
                    "p99": 336.096943,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 391.183784,
                    "min": 366.612666,
                    "p50": 388.695948,
                    "p95": 391.183784,
                    "p99": 391.183784,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 449.754468,
                    "min": 432.31216,
                    "p50": 444.470399,
                    "p95": 449.754468,
                    "p99": 449.754468,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 128.936362,
                    "min": 88.065389,
                    "p50": 127.356234,
                    "p95": 128.936362,
                    "p99": 128.936362,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 157.934778,
                    "min": 135.93214899999998,
                    "p50": 145.916406,
                    "p95": 157.934778,
                    "p99": 157.934778,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.890535,
                    "min": 146.419682,
                    "p50": 183.77505,
                    "p95": 186.890535,
                    "p99": 186.890535,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 633.862842,
                    "min": 603.406482,
                    "p50": 619.7853299999999,
                    "p95": 633.862842,
                    "p99": 633.862842,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 218.97346,
                    "min": 200.547319,
                    "p50": 204.65474,
                    "p95": 218.97346,
                    "p99": 218.97346,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 561.309392,
                    "min": 511.664206,
                    "p50": 545.792381,
                    "p95": 561.309392,
                    "p99": 561.309392,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 275.50546399999996,
                    "min": 236.022214,
                    "p50": 263.066602,
                    "p95": 275.50546399999996,
                    "p99": 275.50546399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 250.942064,
                    "min": 217.408481,
                    "p50": 239.55917599999998,
                    "p95": 250.942064,
                    "p99": 250.942064,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 145.55509999999998,
                    "min": 116.835698,
                    "p50": 123.67872999999999,
                    "p95": 145.55509999999998,
                    "p99": 145.55509999999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 233.086989,
                    "min": 193.943545,
                    "p50": 201.02950299999998,
                    "p95": 233.086989,
                    "p99": 233.086989,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 296.76227,
                    "min": 240.53719199999998,
                    "p50": 259.28991099999996,
                    "p95": 296.76227,
                    "p99": 296.76227,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.059007,
                    "min": 66.05611,
                    "p50": 82.83319499999999,
                    "p95": 84.059007,
                    "p99": 84.059007,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 169.941654,
                    "min": 122.869917,
                    "p50": 150.83454,
                    "p95": 169.941654,
                    "p99": 169.941654,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 269.258482,
                    "min": 209.234492,
                    "p50": 230.855361,
                    "p95": 269.258482,
                    "p99": 269.258482,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.620239,
                    "min": 54.242768,
                    "p50": 65.728394,
                    "p95": 69.620239,
                    "p99": 69.620239,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 119.92207499999999,
                    "min": 110.86557599999999,
                    "p50": 114.591517,
                    "p95": 119.92207499999999,
                    "p99": 119.92207499999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 140.44856,
                    "min": 104.909684,
                    "p50": 132.62049199999998,
                    "p95": 140.44856,
                    "p99": 140.44856,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 405.982984,
                    "min": 349.36332699999997,
                    "p50": 376.953287,
                    "p95": 405.982984,
                    "p99": 405.982984,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 521.66183,
                    "min": 433.03463999999997,
                    "p50": 495.84176299999996,
                    "p95": 521.66183,
                    "p99": 521.66183,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 174.78655,
                    "min": 125.945146,
                    "p50": 137.554373,
                    "p95": 174.78655,
                    "p99": 174.78655,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1171.338554,
                    "min": 1095.852695,
                    "p50": 1144.979738,
                    "p95": 1171.338554,
                    "p99": 1171.338554,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.057829999999996,
                    "min": 39.057536,
                    "p50": 49.588724,
                    "p95": 51.057829999999996,
                    "p99": 51.057829999999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.746786,
                    "min": 90.93732399999999,
                    "p50": 99.496021,
                    "p95": 104.746786,
                    "p99": 104.746786,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 638.785849,
                    "min": 532.279801,
                    "p50": 565.851993,
                    "p95": 638.785849,
                    "p99": 638.785849,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 290.236176,
                    "min": 244.83592099999998,
                    "p50": 280.320905,
                    "p95": 290.236176,
                    "p99": 290.236176,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 244.11004899999998,
                    "min": 201.13097199999999,
                    "p50": 240.044234,
                    "p95": 244.11004899999998,
                    "p99": 244.11004899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 264.103775,
                    "min": 222.266709,
                    "p50": 259.609257,
                    "p95": 264.103775,
                    "p99": 264.103775,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 152.655663,
                    "min": 130.41863,
                    "p50": 150.944484,
                    "p95": 152.655663,
                    "p99": 152.655663,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 718.874796,
                    "min": 681.0809409999999,
                    "p50": 701.488927,
                    "p95": 718.874796,
                    "p99": 718.874796,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 436.141883,
                    "min": 412.523482,
                    "p50": 427.65691799999996,
                    "p95": 436.141883,
                    "p99": 436.141883,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 350.79106099999996,
                    "min": 316.03731899999997,
                    "p50": 326.750299,
                    "p95": 350.79106099999996,
                    "p99": 350.79106099999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 310.980296,
                    "min": 293.51021399999996,
                    "p50": 306.04499599999997,
                    "p95": 310.980296,
                    "p99": 310.980296,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 194.13012899999998,
                    "min": 161.078938,
                    "p50": 183.429927,
                    "p95": 194.13012899999998,
                    "p99": 194.13012899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 490.087288,
                    "min": 440.20941799999997,
                    "p50": 484.35544799999997,
                    "p95": 490.087288,
                    "p99": 490.087288,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 108.583962,
                    "min": 105.924657,
                    "p50": 106.89788999999999,
                    "p95": 108.583962,
                    "p99": 108.583962,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 377.223503,
                    "min": 352.361645,
                    "p50": 367.61271899999997,
                    "p95": 377.223503,
                    "p99": 377.223503,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 226.546405,
                    "min": 199.268161,
                    "p50": 217.02295999999998,
                    "p95": 226.546405,
                    "p99": 226.546405,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 178.36181399999998,
                    "min": 158.59957699999998,
                    "p50": 168.01084799999998,
                    "p95": 178.36181399999998,
                    "p99": 178.36181399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 130.26568699999999,
                    "min": 88.960585,
                    "p50": 123.59876,
                    "p95": 130.26568699999999,
                    "p99": 130.26568699999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 362.518337,
                    "min": 313.046296,
                    "p50": 347.759703,
                    "p95": 362.518337,
                    "p99": 362.518337,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 724.747256,
                    "min": 669.044463,
                    "p50": 698.7376919999999,
                    "p95": 724.747256,
                    "p99": 724.747256,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.078383,
                    "min": 115.01358599999999,
                    "p50": 143.661172,
                    "p95": 153.078383,
                    "p99": 153.078383,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 504.154751,
                    "min": 464.42504399999996,
                    "p50": 491.82707,
                    "p95": 504.154751,
                    "p99": 504.154751,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 542.947106,
                    "min": 513.563183,
                    "p50": 540.097315,
                    "p95": 542.947106,
                    "p99": 542.947106,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.086973,
                    "min": 154.945198,
                    "p50": 191.261994,
                    "p95": 202.086973,
                    "p99": 202.086973,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 474.709743,
                    "min": 429.45271099999997,
                    "p50": 455.483134,
                    "p95": 474.709743,
                    "p99": 474.709743,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 635.450625,
                    "min": 597.575968,
                    "p50": 614.81056,
                    "p95": 635.450625,
                    "p99": 635.450625,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 271.252833,
                    "min": 257.580733,
                    "p50": 263.946108,
                    "p95": 271.252833,
                    "p99": 271.252833,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 394.327675,
                    "min": 374.89505099999997,
                    "p50": 384.24595999999997,
                    "p95": 394.327675,
                    "p99": 394.327675,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 357.30902299999997,
                    "min": 331.432592,
                    "p50": 344.48855399999997,
                    "p95": 357.30902299999997,
                    "p99": 357.30902299999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 822.117792,
                    "min": 768.2734869999999,
                    "p50": 806.4325719999999,
                    "p95": 822.117792,
                    "p99": 822.117792,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 436.120775,
                    "min": 400.822405,
                    "p50": 420.165242,
                    "p95": 436.120775,
                    "p99": 436.120775,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 311.15421499999997,
                    "min": 288.963192,
                    "p50": 303.05441099999996,
                    "p95": 311.15421499999997,
                    "p99": 311.15421499999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 241.30162299999998,
                    "min": 209.560428,
                    "p50": 230.249257,
                    "p95": 241.30162299999998,
                    "p99": 241.30162299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 584.073667,
                    "min": 550.967054,
                    "p50": 571.797333,
                    "p95": 584.073667,
                    "p99": 584.073667,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 64.43984999999999,
                    "min": 29.637203999999997,
                    "p50": 56.367532,
                    "p95": 64.43984999999999,
                    "p99": 64.43984999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.554001999999997,
                    "min": 25.666451,
                    "p50": 27.074337999999997,
                    "p95": 27.554001999999997,
                    "p99": 27.554001999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 75.172541,
                    "min": 59.511554999999994,
                    "p50": 64.00047099999999,
                    "p95": 75.172541,
                    "p99": 75.172541,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 136.534272,
                    "min": 106.886967,
                    "p50": 117.36812499999999,
                    "p95": 136.534272,
                    "p99": 136.534272,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.617649999999998,
                    "min": 25.009149999999998,
                    "p50": 27.270630999999998,
                    "p95": 27.617649999999998,
                    "p99": 27.617649999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.542925999999998,
                    "min": 24.170468,
                    "p50": 26.950712,
                    "p95": 27.542925999999998,
                    "p99": 27.542925999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 58.556968999999995,
                    "min": 36.025086,
                    "p50": 54.345757,
                    "p95": 58.556968999999995,
                    "p99": 58.556968999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.369173999999997,
                    "min": 24.731144999999998,
                    "p50": 27.322119999999998,
                    "p95": 27.369173999999997,
                    "p99": 27.369173999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.61752,
                    "min": 25.059365,
                    "p50": 27.385256,
                    "p95": 27.61752,
                    "p99": 27.61752,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.549661999999998,
                    "min": 26.434237,
                    "p50": 27.006489,
                    "p95": 27.549661999999998,
                    "p99": 27.549661999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 37.42442,
                    "min": 27.710461,
                    "p50": 36.608146999999995,
                    "p95": 37.42442,
                    "p99": 37.42442,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.77702,
                    "min": 25.224386,
                    "p50": 26.997419999999998,
                    "p95": 27.77702,
                    "p99": 27.77702,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.82676,
                    "min": 25.055225999999998,
                    "p50": 27.367503,
                    "p95": 27.82676,
                    "p99": 27.82676,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 28.078584,
                    "min": 21.973174999999998,
                    "p50": 27.02151,
                    "p95": 28.078584,
                    "p99": 28.078584,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.320411999999997,
                    "min": 25.287475999999998,
                    "p50": 26.564156999999998,
                    "p95": 27.320411999999997,
                    "p99": 27.320411999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 28.551979,
                    "min": 26.033959,
                    "p50": 27.364258999999997,
                    "p95": 28.551979,
                    "p99": 28.551979,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.739614999999997,
                    "min": 26.132088,
                    "p50": 27.199292999999997,
                    "p95": 27.739614999999997,
                    "p99": 27.739614999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.455339,
                    "min": 26.3132,
                    "p50": 26.726967,
                    "p95": 27.455339,
                    "p99": 27.455339,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.151234,
                    "min": 25.434345,
                    "p50": 27.393532999999998,
                    "p95": 28.151234,
                    "p99": 28.151234,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 193.730321,
                    "min": 175.545031,
                    "p50": 186.849414,
                    "p95": 193.730321,
                    "p99": 193.730321,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.51195399999999,
                    "min": 70.40848,
                    "p50": 94.173293,
                    "p95": 96.51195399999999,
                    "p99": 96.51195399999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 193.711459,
                    "min": 145.257603,
                    "p50": 177.67003,
                    "p95": 193.711459,
                    "p99": 193.711459,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 105.939341,
                    "min": 88.95951699999999,
                    "p50": 98.589497,
                    "p95": 105.939341,
                    "p99": 105.939341,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 167.803957,
                    "min": 144.53331599999999,
                    "p50": 154.55011,
                    "p95": 167.803957,
                    "p99": 167.803957,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 603.612717,
                    "min": 546.6878449999999,
                    "p50": 571.9423029999999,
                    "p95": 603.612717,
                    "p99": 603.612717,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 157.152246,
                    "min": 136.727271,
                    "p50": 148.560516,
                    "p95": 157.152246,
                    "p99": 157.152246,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 189.466209,
                    "min": 149.626081,
                    "p50": 184.16178299999999,
                    "p95": 189.466209,
                    "p99": 189.466209,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 236.693233,
                    "min": 180.829914,
                    "p50": 220.353523,
                    "p95": 236.693233,
                    "p99": 236.693233,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.370656,
                    "min": 112.24644599999999,
                    "p50": 125.65103699999999,
                    "p95": 132.370656,
                    "p99": 132.370656,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 473.063583,
                    "min": 427.25417899999997,
                    "p50": 461.023616,
                    "p95": 473.063583,
                    "p99": 473.063583,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 118.27755599999999,
                    "min": 78.582455,
                    "p50": 114.13398699999999,
                    "p95": 118.27755599999999,
                    "p99": 118.27755599999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 171.652534,
                    "min": 121.36320599999999,
                    "p50": 167.934933,
                    "p95": 171.652534,
                    "p99": 171.652534,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 375.108821,
                    "min": 319.641077,
                    "p50": 352.062935,
                    "p95": 375.108821,
                    "p99": 375.108821,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.65043,
                    "min": 41.348358,
                    "p50": 73.164007,
                    "p95": 85.65043,
                    "p99": 85.65043,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1132.6336589999999,
                    "min": 1037.843799,
                    "p50": 1091.339395,
                    "p95": 1132.6336589999999,
                    "p99": 1132.6336589999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 68.54168299999999,
                    "min": 60.122837,
                    "p50": 66.282277,
                    "p95": 68.54168299999999,
                    "p99": 68.54168299999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 204.460689,
                    "min": 179.472871,
                    "p50": 195.879807,
                    "p95": 204.460689,
                    "p99": 204.460689,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 256.452164,
                    "min": 210.792926,
                    "p50": 227.271379,
                    "p95": 256.452164,
                    "p99": 256.452164,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.013562,
                    "min": 25.348986,
                    "p50": 27.234053,
                    "p95": 28.013562,
                    "p99": 28.013562,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 31.780427999999997,
                    "min": 26.521051,
                    "p50": 27.444259,
                    "p95": 31.780427999999997,
                    "p99": 31.780427999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.608010999999998,
                    "min": 26.941502999999997,
                    "p50": 27.268085,
                    "p95": 27.608010999999998,
                    "p99": 27.608010999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.319238,
                    "min": 26.432782999999997,
                    "p50": 27.097663999999998,
                    "p95": 27.319238,
                    "p99": 27.319238,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.544577999999998,
                    "min": 21.428485,
                    "p50": 26.983466999999997,
                    "p95": 27.544577999999998,
                    "p99": 27.544577999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.094507,
                    "min": 26.010963999999998,
                    "p50": 26.786496999999997,
                    "p95": 27.094507,
                    "p99": 27.094507,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 28.130148,
                    "min": 26.671113,
                    "p50": 26.997977,
                    "p95": 28.130148,
                    "p99": 28.130148,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.158611999999998,
                    "min": 25.034504,
                    "p50": 26.815421999999998,
                    "p95": 27.158611999999998,
                    "p99": 27.158611999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 70.133224,
                    "min": 60.708191,
                    "p50": 63.290734,
                    "p95": 70.133224,
                    "p99": 70.133224,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 33.085754,
                    "min": 22.788003,
                    "p50": 26.978949999999998,
                    "p95": 33.085754,
                    "p99": 33.085754,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.54666,
                    "min": 26.231330999999997,
                    "p50": 27.231603999999997,
                    "p95": 28.54666,
                    "p99": 28.54666,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.869567999999997,
                    "min": 22.09891,
                    "p50": 26.741214,
                    "p95": 27.869567999999997,
                    "p99": 27.869567999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.440437,
                    "min": 25.530506,
                    "p50": 26.950311,
                    "p95": 27.440437,
                    "p99": 27.440437,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 199.692778,
                    "min": 26.704704,
                    "p50": 27.366819,
                    "p95": 199.692778,
                    "p99": 199.692778,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 102.09665299999999,
                    "min": 76.301558,
                    "p50": 81.44009799999999,
                    "p95": 102.09665299999999,
                    "p99": 102.09665299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.383335,
                    "min": 26.673379999999998,
                    "p50": 27.091683,
                    "p95": 27.383335,
                    "p99": 27.383335,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 57.086436,
                    "min": 31.173310999999998,
                    "p50": 55.659966,
                    "p95": 57.086436,
                    "p99": 57.086436,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.336271,
                    "min": 24.34019,
                    "p50": 27.056275,
                    "p95": 27.336271,
                    "p99": 27.336271,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.657159999999998,
                    "min": 26.00755,
                    "p50": 26.842070999999997,
                    "p95": 27.657159999999998,
                    "p99": 27.657159999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 30.660007999999998,
                    "min": 26.614718,
                    "p50": 27.476176,
                    "p95": 30.660007999999998,
                    "p99": 30.660007999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.553352999999998,
                    "min": 22.443113,
                    "p50": 27.276932,
                    "p95": 27.553352999999998,
                    "p99": 27.553352999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 28.492385,
                    "min": 26.777438999999998,
                    "p50": 27.207846,
                    "p95": 28.492385,
                    "p99": 28.492385,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.210572,
                    "min": 24.412352,
                    "p50": 26.748258,
                    "p95": 27.210572,
                    "p99": 27.210572,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.606689,
                    "min": 25.466604,
                    "p50": 26.975827,
                    "p95": 27.606689,
                    "p99": 27.606689,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.289897999999997,
                    "min": 26.352211,
                    "p50": 27.006947,
                    "p95": 27.289897999999997,
                    "p99": 27.289897999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.968317,
                    "min": 22.763182999999998,
                    "p50": 26.353583,
                    "p95": 27.968317,
                    "p99": 27.968317,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.003252,
                    "min": 24.90619,
                    "p50": 26.746973,
                    "p95": 28.003252,
                    "p99": 28.003252,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.391538999999998,
                    "min": 24.323833999999998,
                    "p50": 27.029239,
                    "p95": 27.391538999999998,
                    "p99": 27.391538999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 27.670693,
                    "min": 25.688471,
                    "p50": 26.825830999999997,
                    "p95": 27.670693,
                    "p99": 27.670693,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.235025,
                    "min": 26.700733999999997,
                    "p50": 27.04385,
                    "p95": 27.235025,
                    "p99": 27.235025,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 31.170181999999997,
                    "min": 23.411513,
                    "p50": 26.918381999999998,
                    "p95": 31.170181999999997,
                    "p99": 31.170181999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.660943999999997,
                    "min": 25.340629,
                    "p50": 26.689667999999998,
                    "p95": 27.660943999999997,
                    "p99": 27.660943999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 31.528792,
                    "min": 26.494578999999998,
                    "p50": 26.799248,
                    "p95": 31.528792,
                    "p99": 31.528792,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.583945,
                    "min": 22.795476,
                    "p50": 26.967022,
                    "p95": 27.583945,
                    "p99": 27.583945,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 59.161623,
                    "min": 48.274073,
                    "p50": 51.46189,
                    "p95": 59.161623,
                    "p99": 59.161623,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.453951999999997,
                    "min": 21.172247,
                    "p50": 26.818319,
                    "p95": 27.453951999999997,
                    "p99": 27.453951999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 31.678676999999997,
                    "min": 21.880969,
                    "p50": 26.696043,
                    "p95": 31.678676999999997,
                    "p99": 31.678676999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 192.883758,
                    "min": 24.98426,
                    "p50": 27.129700999999997,
                    "p95": 192.883758,
                    "p99": 192.883758,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.312334,
                    "min": 130.937617,
                    "p50": 138.375207,
                    "p95": 139.312334,
                    "p99": 139.312334,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 67.133915,
                    "min": 55.574324999999995,
                    "p50": 58.225922,
                    "p95": 67.133915,
                    "p99": 67.133915,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1020.741412,
                    "min": 955.542834,
                    "p50": 999.23856,
                    "p95": 1020.741412,
                    "p99": 1020.741412,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 237.24034999999998,
                    "min": 194.571225,
                    "p50": 222.03066199999998,
                    "p95": 237.24034999999998,
                    "p99": 237.24034999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 107.146924,
                    "min": 87.054656,
                    "p50": 101.680881,
                    "p95": 107.146924,
                    "p99": 107.146924,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.433356,
                    "min": 56.708411999999996,
                    "p50": 76.962389,
                    "p95": 80.433356,
                    "p99": 80.433356,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 100.560232,
                    "min": 58.449754999999996,
                    "p50": 98.25610999999999,
                    "p95": 100.560232,
                    "p99": 100.560232,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 336.17877699999997,
                    "min": 288.261162,
                    "p50": 329.990394,
                    "p95": 336.17877699999997,
                    "p99": 336.17877699999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 160.985119,
                    "min": 125.612411,
                    "p50": 154.796382,
                    "p95": 160.985119,
                    "p99": 160.985119,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 149.66468,
                    "min": 108.86312199999999,
                    "p50": 145.75352999999998,
                    "p95": 149.66468,
                    "p99": 149.66468,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 430.46581699999996,
                    "min": 404.65128999999996,
                    "p50": 422.996915,
                    "p95": 430.46581699999996,
                    "p99": 430.46581699999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 530.563862,
                    "min": 492.260655,
                    "p50": 523.557113,
                    "p95": 530.563862,
                    "p99": 530.563862,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 179.418919,
                    "min": 134.86413299999998,
                    "p50": 168.365644,
                    "p95": 179.418919,
                    "p99": 179.418919,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 90.84622999999999,
                    "min": 48.649902999999995,
                    "p50": 77.260165,
                    "p95": 90.84622999999999,
                    "p99": 90.84622999999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 212.49393999999998,
                    "min": 189.643711,
                    "p50": 208.611224,
                    "p95": 212.49393999999998,
                    "p99": 212.49393999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 131.27751,
                    "min": 111.686657,
                    "p50": 122.670875,
                    "p95": 131.27751,
                    "p99": 131.27751,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 162.142663,
                    "min": 116.03693299999999,
                    "p50": 157.39429099999998,
                    "p95": 162.142663,
                    "p99": 162.142663,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 191.406567,
                    "min": 165.94485,
                    "p50": 185.380001,
                    "p95": 191.406567,
                    "p99": 191.406567,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 119.186087,
                    "min": 109.2819,
                    "p50": 118.44171999999999,
                    "p95": 119.186087,
                    "p99": 119.186087,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 792.880013,
                    "min": 758.572134,
                    "p50": 784.368025,
                    "p95": 792.880013,
                    "p99": 792.880013,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 139.983737,
                    "min": 135.90663,
                    "p50": 138.334996,
                    "p95": 139.983737,
                    "p99": 139.983737,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 263.529697,
                    "min": 232.238754,
                    "p50": 247.065876,
                    "p95": 263.529697,
                    "p99": 263.529697,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 386.209473,
                    "min": 359.673034,
                    "p50": 375.173772,
                    "p95": 386.209473,
                    "p99": 386.209473,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 158.23584499999998,
                    "min": 122.179119,
                    "p50": 152.103433,
                    "p95": 158.23584499999998,
                    "p99": 158.23584499999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 409.377323,
                    "min": 391.654604,
                    "p50": 398.69886399999996,
                    "p95": 409.377323,
                    "p99": 409.377323,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 235.034368,
                    "min": 194.696575,
                    "p50": 230.11260399999998,
                    "p95": 235.034368,
                    "p99": 235.034368,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 496.891822,
                    "min": 439.603794,
                    "p50": 469.252122,
                    "p95": 496.891822,
                    "p99": 496.891822,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.040953,
                    "min": 144.479524,
                    "p50": 175.858039,
                    "p95": 193.040953,
                    "p99": 193.040953,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 296.015271,
                    "min": 243.08172499999998,
                    "p50": 278.440881,
                    "p95": 296.015271,
                    "p99": 296.015271,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1032.906481,
                    "min": 978.40116,
                    "p50": 1003.26851,
                    "p95": 1032.906481,
                    "p99": 1032.906481,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 318.544869,
                    "min": 261.791785,
                    "p50": 294.479934,
                    "p95": 318.544869,
                    "p99": 318.544869,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 224.489768,
                    "min": 203.983442,
                    "p50": 211.129752,
                    "p95": 224.489768,
                    "p99": 224.489768,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 351.843281,
                    "min": 288.26563699999997,
                    "p50": 335.334771,
                    "p95": 351.843281,
                    "p99": 351.843281,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 121.609805,
                    "min": 96.74494,
                    "p50": 113.12274599999999,
                    "p95": 121.609805,
                    "p99": 121.609805,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 393.25758099999996,
                    "min": 350.213915,
                    "p50": 375.47451,
                    "p95": 393.25758099999996,
                    "p99": 393.25758099999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 580.1852289999999,
                    "min": 527.1909009999999,
                    "p50": 554.705833,
                    "p95": 580.1852289999999,
                    "p99": 580.1852289999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1555.936446,
                    "min": 1418.8062169999998,
                    "p50": 1509.735944,
                    "p95": 1555.936446,
                    "p99": 1555.936446,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.77168999999998,
                    "min": 127.34991699999999,
                    "p50": 156.88284199999998,
                    "p95": 169.77168999999998,
                    "p99": 169.77168999999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.99125799999996,
                    "min": 255.193831,
                    "p50": 280.680439,
                    "p95": 298.99125799999996,
                    "p99": 298.99125799999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.95527699999997,
                    "min": 214.876656,
                    "p50": 241.467561,
                    "p95": 256.95527699999997,
                    "p99": 256.95527699999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 465.55238399999996,
                    "min": 421.124331,
                    "p50": 428.47265899999996,
                    "p95": 465.55238399999996,
                    "p99": 465.55238399999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 427.881225,
                    "min": 371.04578499999997,
                    "p50": 401.185405,
                    "p95": 427.881225,
                    "p99": 427.881225,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 554.294857,
                    "min": 495.53885299999996,
                    "p50": 527.103106,
                    "p95": 554.294857,
                    "p99": 554.294857,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 678.791111,
                    "min": 624.5466829999999,
                    "p50": 659.4211859999999,
                    "p95": 678.791111,
                    "p99": 678.791111,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 598.8940699999999,
                    "min": 531.8847,
                    "p50": 577.156373,
                    "p95": 598.8940699999999,
                    "p99": 598.8940699999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 515.80074,
                    "min": 465.605108,
                    "p50": 493.77333799999997,
                    "p95": 515.80074,
                    "p99": 515.80074,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 900.354218,
                    "min": 819.5973369999999,
                    "p50": 877.6486699999999,
                    "p95": 900.354218,
                    "p99": 900.354218,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.843194,
                    "min": 291.851435,
                    "p50": 320.170774,
                    "p95": 345.843194,
                    "p99": 345.843194,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.33744199999998,
                    "min": 166.843101,
                    "p50": 209.13244,
                    "p95": 214.33744199999998,
                    "p99": 214.33744199999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 801.36119,
                    "min": 739.8206279999999,
                    "p50": 757.303947,
                    "p95": 801.36119,
                    "p99": 801.36119,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 388.40797,
                    "min": 328.898381,
                    "p50": 340.73526999999996,
                    "p95": 388.40797,
                    "p99": 388.40797,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 640.2842079999999,
                    "min": 581.250729,
                    "p50": 610.5097549999999,
                    "p95": 640.2842079999999,
                    "p99": 640.2842079999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 900.352913,
                    "min": 840.633014,
                    "p50": 882.3966919999999,
                    "p95": 900.352913,
                    "p99": 900.352913,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2039.979267,
                    "min": 1958.3371359999999,
                    "p50": 2014.203975,
                    "p95": 2039.979267,
                    "p99": 2039.979267,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2868.211913,
                    "min": 2831.922585,
                    "p50": 2846.481817,
                    "p95": 2868.211913,
                    "p99": 2868.211913,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5723.148901,
                    "min": 5631.118826999999,
                    "p50": 5711.776487,
                    "p95": 5723.148901,
                    "p99": 5723.148901,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1609.291906,
                    "min": 1556.0990359999998,
                    "p50": 1575.139221,
                    "p95": 1609.291906,
                    "p99": 1609.291906,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 755.8808369999999,
                    "min": 711.6528089999999,
                    "p50": 730.248603,
                    "p95": 755.8808369999999,
                    "p99": 755.8808369999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 614.3515689999999,
                    "min": 574.331407,
                    "p50": 603.5648739999999,
                    "p95": 614.3515689999999,
                    "p99": 614.3515689999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1752.6312819999998,
                    "min": 1698.7254659999999,
                    "p50": 1738.689074,
                    "p95": 1752.6312819999998,
                    "p99": 1752.6312819999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4321.090504,
                    "min": 4264.784771,
                    "p50": 4288.098709,
                    "p95": 4321.090504,
                    "p99": 4321.090504,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2551.40508,
                    "min": 2473.998826,
                    "p50": 2516.357529,
                    "p95": 2551.40508,
                    "p99": 2551.40508,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2185.225404,
                    "min": 2128.159687,
                    "p50": 2159.931868,
                    "p95": 2185.225404,
                    "p99": 2185.225404,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1185.691587,
                    "min": 1136.742073,
                    "p50": 1170.0650799999999,
                    "p95": 1185.691587,
                    "p99": 1185.691587,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1484.909019,
                    "min": 1427.104251,
                    "p50": 1459.865622,
                    "p95": 1484.909019,
                    "p99": 1484.909019,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1047.815124,
                    "min": 993.5617189999999,
                    "p50": 1026.201183,
                    "p95": 1047.815124,
                    "p99": 1047.815124,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 471.28371,
                    "min": 432.11467999999996,
                    "p50": 461.938717,
                    "p95": 471.28371,
                    "p99": 471.28371,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1901.3896809999999,
                    "min": 1844.498079,
                    "p50": 1892.2544329999998,
                    "p95": 1901.3896809999999,
                    "p99": 1901.3896809999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1330.77738,
                    "min": 1271.768952,
                    "p50": 1310.330434,
                    "p95": 1330.77738,
                    "p99": 1330.77738,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 434.471075,
                    "min": 392.503149,
                    "p50": 427.904116,
                    "p95": 434.471075,
                    "p99": 434.471075,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1309.19527,
                    "min": 1258.6283919999998,
                    "p50": 1284.7056089999999,
                    "p95": 1309.19527,
                    "p99": 1309.19527,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2640.0414339999998,
                    "min": 2588.30705,
                    "p50": 2599.970367,
                    "p95": 2640.0414339999998,
                    "p99": 2640.0414339999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1459.2881069999999,
                    "min": 1419.640001,
                    "p50": 1448.95093,
                    "p95": 1459.2881069999999,
                    "p99": 1459.2881069999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3841.5401509999997,
                    "min": 3769.341042,
                    "p50": 3791.539164,
                    "p95": 3841.5401509999997,
                    "p99": 3841.5401509999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 827.44434,
                    "min": 771.23861,
                    "p50": 805.987431,
                    "p95": 827.44434,
                    "p99": 827.44434,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1207.979692,
                    "min": 1163.997165,
                    "p50": 1176.3158369999999,
                    "p95": 1207.979692,
                    "p99": 1207.979692,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5052.048889,
                    "min": 4985.083232999999,
                    "p50": 5027.84342,
                    "p95": 5052.048889,
                    "p99": 5052.048889,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 689.450197,
                    "min": 655.1462349999999,
                    "p50": 672.5230799999999,
                    "p95": 689.450197,
                    "p99": 689.450197,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1744.7904649999998,
                    "min": 1680.1392879999999,
                    "p50": 1709.105963,
                    "p95": 1744.7904649999998,
                    "p99": 1744.7904649999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 908.145666,
                    "min": 877.616824,
                    "p50": 891.635289,
                    "p95": 908.145666,
                    "p99": 908.145666,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.403899,
                    "min": 515.938346,
                    "p50": 537.255289,
                    "p95": 555.403899,
                    "p99": 555.403899,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1995.9105169999998,
                    "min": 1946.418381,
                    "p50": 1959.0319109999998,
                    "p95": 1995.9105169999998,
                    "p99": 1995.9105169999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1864.302256,
                    "min": 1812.514532,
                    "p50": 1846.57335,
                    "p95": 1864.302256,
                    "p99": 1864.302256,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2272.917262,
                    "min": 2225.756581,
                    "p50": 2237.396263,
                    "p95": 2272.917262,
                    "p99": 2272.917262,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1064.010386,
                    "min": 1005.4817009999999,
                    "p50": 1043.0055009999999,
                    "p95": 1064.010386,
                    "p99": 1064.010386,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1587.0405529999998,
                    "min": 1535.120393,
                    "p50": 1571.32038,
                    "p95": 1587.0405529999998,
                    "p99": 1587.0405529999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 110.80047499999999,
                    "min": 67.457769,
                    "p50": 93.172997,
                    "p95": 110.80047499999999,
                    "p99": 110.80047499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 89.716912,
                    "min": 62.261396999999995,
                    "p50": 85.86922299999999,
                    "p95": 89.716912,
                    "p99": 89.716912,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 128.172133,
                    "min": 90.72331799999999,
                    "p50": 115.642518,
                    "p95": 128.172133,
                    "p99": 128.172133,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 160.848142,
                    "min": 131.44492,
                    "p50": 135.078079,
                    "p95": 160.848142,
                    "p99": 160.848142,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 474.193194,
                    "min": 431.861474,
                    "p50": 468.689558,
                    "p95": 474.193194,
                    "p99": 474.193194,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 222.61271499999998,
                    "min": 206.394705,
                    "p50": 211.397931,
                    "p95": 222.61271499999998,
                    "p99": 222.61271499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 90.80899099999999,
                    "min": 51.285942999999996,
                    "p50": 77.004787,
                    "p95": 90.80899099999999,
                    "p99": 90.80899099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 30.360035999999997,
                    "min": 22.947566,
                    "p50": 26.923451999999997,
                    "p95": 30.360035999999997,
                    "p99": 30.360035999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 255.50915999999998,
                    "min": 217.68031499999998,
                    "p50": 220.031097,
                    "p95": 255.50915999999998,
                    "p99": 255.50915999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 67.893059,
                    "min": 34.093219999999995,
                    "p50": 35.663027,
                    "p95": 67.893059,
                    "p99": 67.893059,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 76.429712,
                    "min": 38.999984,
                    "p50": 69.33591799999999,
                    "p95": 76.429712,
                    "p99": 76.429712,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 79.790015,
                    "min": 42.537319,
                    "p50": 43.959224999999996,
                    "p95": 79.790015,
                    "p99": 79.790015,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 112.680877,
                    "min": 79.112617,
                    "p50": 106.463898,
                    "p95": 112.680877,
                    "p99": 112.680877,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 52.59876,
                    "min": 46.769579,
                    "p50": 48.312903,
                    "p95": 52.59876,
                    "p99": 52.59876,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 57.310688999999996,
                    "min": 29.845689999999998,
                    "p50": 45.433125,
                    "p95": 57.310688999999996,
                    "p99": 57.310688999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 108.758781,
                    "min": 91.301344,
                    "p50": 106.45380999999999,
                    "p95": 108.758781,
                    "p99": 108.758781,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 93.631435,
                    "min": 56.375665,
                    "p50": 82.056994,
                    "p95": 93.631435,
                    "p99": 93.631435,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 46.484004999999996,
                    "min": 26.659945,
                    "p50": 39.933422,
                    "p95": 46.484004999999996,
                    "p99": 46.484004999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 99.829594,
                    "min": 59.974337999999996,
                    "p50": 61.969924,
                    "p95": 99.829594,
                    "p99": 99.829594,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2545.112523,
                    "min": 2499.965385,
                    "p50": 2535.3584109999997,
                    "p95": 2545.112523,
                    "p99": 2545.112523,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1064.155742,
                    "min": 1003.698095,
                    "p50": 1034.4601499999999,
                    "p95": 1064.155742,
                    "p99": 1064.155742,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 762.5868409999999,
                    "min": 722.2700269999999,
                    "p50": 747.785436,
                    "p95": 762.5868409999999,
                    "p99": 762.5868409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1772.145521,
                    "min": 1708.003679,
                    "p50": 1729.105971,
                    "p95": 1772.145521,
                    "p99": 1772.145521,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1191.863375,
                    "min": 1144.129385,
                    "p50": 1181.051233,
                    "p95": 1191.863375,
                    "p99": 1191.863375,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5771.178679,
                    "min": 5679.554443999999,
                    "p50": 5744.28968,
                    "p95": 5771.178679,
                    "p99": 5771.178679,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1633.794111,
                    "min": 1574.244229,
                    "p50": 1597.8151169999999,
                    "p95": 1633.794111,
                    "p99": 1633.794111,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 915.1455159999999,
                    "min": 866.743427,
                    "p50": 898.4193349999999,
                    "p95": 915.1455159999999,
                    "p99": 915.1455159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1919.3581769999998,
                    "min": 1862.7224569999998,
                    "p50": 1897.435107,
                    "p95": 1919.3581769999998,
                    "p99": 1919.3581769999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4339.614404999999,
                    "min": 4270.251671999999,
                    "p50": 4317.282913999999,
                    "p95": 4339.614404999999,
                    "p99": 4339.614404999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2200.193031,
                    "min": 2149.219765,
                    "p50": 2177.186343,
                    "p95": 2200.193031,
                    "p99": 2200.193031,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2908.4678679999997,
                    "min": 2852.6086259999997,
                    "p50": 2881.8961759999997,
                    "p95": 2908.4678679999997,
                    "p99": 2908.4678679999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 485.98371499999996,
                    "min": 457.612491,
                    "p50": 478.049939,
                    "p95": 485.98371499999996,
                    "p99": 485.98371499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2052.807383,
                    "min": 2023.391334,
                    "p50": 2043.6895949999998,
                    "p95": 2052.807383,
                    "p99": 2052.807383,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 621.67191,
                    "min": 579.597215,
                    "p50": 614.997161,
                    "p95": 621.67191,
                    "p99": 621.67191,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1484.339671,
                    "min": 1420.204234,
                    "p50": 1468.418479,
                    "p95": 1484.339671,
                    "p99": 1484.339671,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1349.3962259999998,
                    "min": 1284.5749409999999,
                    "p50": 1316.252115,
                    "p95": 1349.3962259999998,
                    "p99": 1349.3962259999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2199.5022839999997,
                    "min": 2128.024366,
                    "p50": 2162.31063,
                    "p95": 2199.5022839999997,
                    "p99": 2199.5022839999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 620.306065,
                    "min": 577.682175,
                    "p50": 617.371252,
                    "p95": 620.306065,
                    "p99": 620.306065,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1340.264123,
                    "min": 1289.154366,
                    "p50": 1326.343981,
                    "p95": 1340.264123,
                    "p99": 1340.264123,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1926.3746259999998,
                    "min": 1880.074326,
                    "p50": 1909.900447,
                    "p95": 1926.3746259999998,
                    "p99": 1926.3746259999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1491.36936,
                    "min": 1459.370225,
                    "p50": 1472.785488,
                    "p95": 1491.36936,
                    "p99": 1491.36936,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1633.687578,
                    "min": 1587.814461,
                    "p50": 1613.2556299999999,
                    "p95": 1633.687578,
                    "p99": 1633.687578,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2915.0391649999997,
                    "min": 2845.244433,
                    "p50": 2884.326227,
                    "p95": 2915.0391649999997,
                    "p99": 2915.0391649999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4334.214073,
                    "min": 4243.513296,
                    "p50": 4309.660202,
                    "p95": 4334.214073,
                    "p99": 4334.214073,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1777.439383,
                    "min": 1744.500085,
                    "p50": 1760.615814,
                    "p95": 1777.439383,
                    "p99": 1777.439383,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 766.805109,
                    "min": 723.268921,
                    "p50": 760.249524,
                    "p95": 766.805109,
                    "p99": 766.805109,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 471.69571099999996,
                    "min": 435.845897,
                    "p50": 459.121287,
                    "p95": 471.69571099999996,
                    "p99": 471.69571099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 909.8818329999999,
                    "min": 865.648912,
                    "p50": 903.4010649999999,
                    "p95": 909.8818329999999,
                    "p99": 909.8818329999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2576.475176,
                    "min": 2517.418243,
                    "p50": 2548.447142,
                    "p95": 2576.475176,
                    "p99": 2576.475176,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1047.3212939999999,
                    "min": 1009.330656,
                    "p50": 1038.3527609999999,
                    "p95": 1047.3212939999999,
                    "p99": 1047.3212939999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2051.061347,
                    "min": 1986.629815,
                    "p50": 2033.8693999999998,
                    "p95": 2051.061347,
                    "p99": 2051.061347,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1186.902776,
                    "min": 1152.1029099999998,
                    "p50": 1173.603647,
                    "p95": 1186.902776,
                    "p99": 1186.902776,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 738.1876629999999,
                    "min": 697.2692119999999,
                    "p50": 714.342369,
                    "p95": 738.1876629999999,
                    "p99": 738.1876629999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 144.849455,
                    "min": 99.92909499999999,
                    "p50": 103.281584,
                    "p95": 144.849455,
                    "p99": 144.849455,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 397.488337,
                    "min": 347.009701,
                    "p50": 382.98852899999997,
                    "p95": 397.488337,
                    "p99": 397.488337,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 90.054682,
                    "min": 52.744682999999995,
                    "p50": 85.67565599999999,
                    "p95": 90.054682,
                    "p99": 90.054682,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 62.663056,
                    "min": 31.855711999999997,
                    "p50": 58.846467,
                    "p95": 62.663056,
                    "p99": 62.663056,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 130.25399299999998,
                    "min": 86.869804,
                    "p50": 123.78967499999999,
                    "p95": 130.25399299999998,
                    "p99": 130.25399299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 318.202697,
                    "min": 275.822388,
                    "p50": 309.939836,
                    "p95": 318.202697,
                    "p99": 318.202697,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 139.65893599999998,
                    "min": 106.43324299999999,
                    "p50": 129.310938,
                    "p95": 139.65893599999998,
                    "p99": 139.65893599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 132.410887,
                    "min": 93.166508,
                    "p50": 112.451313,
                    "p95": 132.410887,
                    "p99": 132.410887,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 157.928462,
                    "min": 123.99310399999999,
                    "p50": 138.228751,
                    "p95": 157.928462,
                    "p99": 157.928462,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.204388,
                    "min": 38.607963999999996,
                    "p50": 68.375789,
                    "p95": 72.204388,
                    "p99": 72.204388,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 118.616194,
                    "min": 106.437162,
                    "p50": 112.26177899999999,
                    "p95": 118.616194,
                    "p99": 118.616194,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 46.115033,
                    "min": 27.23276,
                    "p50": 37.327469,
                    "p95": 46.115033,
                    "p99": 46.115033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 100.038848,
                    "min": 60.2277,
                    "p50": 87.707852,
                    "p95": 100.038848,
                    "p99": 100.038848,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.83943599999999,
                    "min": 46.611311,
                    "p50": 83.81722599999999,
                    "p95": 85.83943599999999,
                    "p99": 85.83943599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 105.68281999999999,
                    "min": 96.21304699999999,
                    "p50": 104.68632699999999,
                    "p95": 105.68281999999999,
                    "p99": 105.68281999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 118.51519599999999,
                    "min": 72.715425,
                    "p50": 98.328761,
                    "p95": 118.51519599999999,
                    "p99": 118.51519599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 252.833192,
                    "min": 215.628349,
                    "p50": 247.750241,
                    "p95": 252.833192,
                    "p99": 252.833192,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 182.19070399999998,
                    "min": 163.18374,
                    "p50": 171.663162,
                    "p95": 182.19070399999998,
                    "p99": 182.19070399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 40.870335,
                    "min": 26.378432,
                    "p50": 39.290365,
                    "p95": 40.870335,
                    "p99": 40.870335,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 154.01321299999998,
                    "min": 113.66444999999999,
                    "p50": 139.20146599999998,
                    "p95": 154.01321299999998,
                    "p99": 154.01321299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 124.448127,
                    "min": 86.035675,
                    "p50": 118.54604099999999,
                    "p95": 124.448127,
                    "p99": 124.448127,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 96.562027,
                    "min": 58.509152,
                    "p50": 91.50251899999999,
                    "p95": 96.562027,
                    "p99": 96.562027,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 58.643097,
                    "min": 31.835863999999997,
                    "p50": 58.115365999999995,
                    "p95": 58.643097,
                    "p99": 58.643097,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 316.245169,
                    "min": 275.487386,
                    "p50": 283.364056,
                    "p95": 316.245169,
                    "p99": 316.245169,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 184.94644399999999,
                    "min": 151.587468,
                    "p50": 176.97239199999999,
                    "p95": 184.94644399999999,
                    "p99": 184.94644399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 73.07791499999999,
                    "min": 36.958726999999996,
                    "p50": 46.228894,
                    "p95": 73.07791499999999,
                    "p99": 73.07791499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 80.44094799999999,
                    "min": 42.725671,
                    "p50": 59.370611,
                    "p95": 80.44094799999999,
                    "p99": 80.44094799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 50.699842999999994,
                    "min": 26.984018,
                    "p50": 47.646634999999996,
                    "p95": 50.699842999999994,
                    "p99": 50.699842999999994,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 53.062652,
                    "min": 29.195278,
                    "p50": 43.189316,
                    "p95": 53.062652,
                    "p99": 53.062652,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.702192999999998,
                    "min": 23.777445999999998,
                    "p50": 26.787730999999997,
                    "p95": 27.702192999999998,
                    "p99": 27.702192999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 93.124325,
                    "min": 51.887207,
                    "p50": 77.80652099999999,
                    "p95": 93.124325,
                    "p99": 93.124325,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 69.42714099999999,
                    "min": 34.762910999999995,
                    "p50": 63.330259999999996,
                    "p95": 69.42714099999999,
                    "p99": 69.42714099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 83.69592999999999,
                    "min": 45.537282,
                    "p50": 68.65172199999999,
                    "p95": 83.69592999999999,
                    "p99": 83.69592999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 46.005010999999996,
                    "min": 26.622691999999997,
                    "p50": 34.305519,
                    "p95": 46.005010999999996,
                    "p99": 46.005010999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 77.872311,
                    "min": 39.625112,
                    "p50": 69.093514,
                    "p95": 77.872311,
                    "p99": 77.872311,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 39.556258,
                    "min": 33.466466,
                    "p50": 34.355436999999995,
                    "p95": 39.556258,
                    "p99": 39.556258,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.230784,
                    "min": 25.717335,
                    "p50": 26.728517999999998,
                    "p95": 27.230784,
                    "p99": 27.230784,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 160.911061,
                    "min": 121.16319499999999,
                    "p50": 151.32894,
                    "p95": 160.911061,
                    "p99": 160.911061,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 103.443546,
                    "min": 57.385684,
                    "p50": 95.477301,
                    "p95": 103.443546,
                    "p99": 103.443546,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 189.946832,
                    "min": 137.984552,
                    "p50": 180.002929,
                    "p95": 189.946832,
                    "p99": 189.946832,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 90.241873,
                    "min": 51.212938,
                    "p50": 88.870209,
                    "p95": 90.241873,
                    "p99": 90.241873,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 84.303466,
                    "min": 44.513991999999995,
                    "p50": 66.792238,
                    "p95": 84.303466,
                    "p99": 84.303466,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 60.974681999999994,
                    "min": 31.253539999999997,
                    "p50": 57.645191,
                    "p95": 60.974681999999994,
                    "p99": 60.974681999999994,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 136.932685,
                    "min": 97.980233,
                    "p50": 134.99375799999999,
                    "p95": 136.932685,
                    "p99": 136.932685,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 114.79381699999999,
                    "min": 78.353931,
                    "p50": 103.20617399999999,
                    "p95": 114.79381699999999,
                    "p99": 114.79381699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 240.682808,
                    "min": 205.572375,
                    "p50": 229.054969,
                    "p95": 240.682808,
                    "p99": 240.682808,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.624017,
                    "min": 64.764443,
                    "p50": 97.22514699999999,
                    "p95": 102.624017,
                    "p99": 102.624017,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 718.231324,
                    "min": 670.242445,
                    "p50": 706.0118289999999,
                    "p95": 718.231324,
                    "p99": 718.231324,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.47094799999999,
                    "min": 37.720464,
                    "p50": 70.613612,
                    "p95": 72.47094799999999,
                    "p99": 72.47094799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 133.65851899999998,
                    "min": 120.272071,
                    "p50": 129.166052,
                    "p95": 133.65851899999998,
                    "p99": 133.65851899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 130.49983699999999,
                    "min": 86.861404,
                    "p50": 122.910316,
                    "p95": 130.49983699999999,
                    "p99": 130.49983699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 314.82981,
                    "min": 276.957127,
                    "p50": 307.57743899999997,
                    "p95": 314.82981,
                    "p99": 314.82981,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.871494,
                    "min": 26.179102999999998,
                    "p50": 36.377193,
                    "p95": 45.871494,
                    "p99": 45.871494,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 145.126275,
                    "min": 107.069718,
                    "p50": 138.701631,
                    "p95": 145.126275,
                    "p99": 145.126275,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 111.367527,
                    "min": 71.47694899999999,
                    "p50": 98.32645099999999,
                    "p95": 111.367527,
                    "p99": 111.367527,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 386.90513899999996,
                    "min": 346.717667,
                    "p50": 384.24308299999996,
                    "p95": 386.90513899999996,
                    "p99": 386.90513899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 566.275573,
                    "min": 552.094302,
                    "p50": 563.80121,
                    "p95": 566.275573,
                    "p99": 566.275573,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 487.320721,
                    "min": 445.456162,
                    "p50": 484.37237899999997,
                    "p95": 487.320721,
                    "p99": 487.320721,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 714.790398,
                    "min": 663.671551,
                    "p50": 697.783343,
                    "p95": 714.790398,
                    "p99": 714.790398,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.84572099999997,
                    "min": 221.141527,
                    "p50": 249.817793,
                    "p95": 260.84572099999997,
                    "p99": 260.84572099999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 334.308896,
                    "min": 295.76036999999997,
                    "p50": 305.243163,
                    "p95": 334.308896,
                    "p99": 334.308896,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 635.9063189999999,
                    "min": 597.929635,
                    "p50": 630.5867119999999,
                    "p95": 635.9063189999999,
                    "p99": 635.9063189999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.563096,
                    "min": 367.58118099999996,
                    "p50": 399.950353,
                    "p95": 413.563096,
                    "p99": 413.563096,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 765.436818,
                    "min": 730.261068,
                    "p50": 738.61505,
                    "p95": 765.436818,
                    "p99": 765.436818,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 263.307283,
                    "min": 222.58906,
                    "p50": 260.405877,
                    "p95": 263.307283,
                    "p99": 263.307283,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 629.5832389999999,
                    "min": 589.6306539999999,
                    "p50": 620.9218119999999,
                    "p95": 629.5832389999999,
                    "p99": 629.5832389999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 475.611378,
                    "min": 441.656664,
                    "p50": 456.074142,
                    "p95": 475.611378,
                    "p99": 475.611378,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 553.7649329999999,
                    "min": 515.01753,
                    "p50": 549.453723,
                    "p95": 553.7649329999999,
                    "p99": 553.7649329999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 706.266322,
                    "min": 671.667007,
                    "p50": 698.540403,
                    "p95": 706.266322,
                    "p99": 706.266322,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 338.229034,
                    "min": 298.01433499999996,
                    "p50": 329.077209,
                    "p95": 338.229034,
                    "p99": 338.229034,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 411.11783399999996,
                    "min": 371.987649,
                    "p50": 400.36402599999997,
                    "p95": 411.11783399999996,
                    "p99": 411.11783399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 265.118532,
                    "min": 223.432399,
                    "p50": 250.685083,
                    "p95": 265.118532,
                    "p99": 265.118532,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 444.254886,
                    "min": 359.874443,
                    "p50": 414.988406,
                    "p95": 444.254886,
                    "p99": 444.254886,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 539.542687,
                    "min": 480.855077,
                    "p50": 513.7241339999999,
                    "p95": 539.542687,
                    "p99": 539.542687,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 397.36426,
                    "min": 314.02504899999997,
                    "p50": 374.23326199999997,
                    "p95": 397.36426,
                    "p99": 397.36426,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 759.068303,
                    "min": 674.8473849999999,
                    "p50": 713.5242559999999,
                    "p95": 759.068303,
                    "p99": 759.068303,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 200.42057699999998,
                    "min": 161.441937,
                    "p50": 192.70161399999998,
                    "p95": 200.42057699999998,
                    "p99": 200.42057699999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 637.180653,
                    "min": 555.0711269999999,
                    "p50": 590.058808,
                    "p95": 637.180653,
                    "p99": 637.180653,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 528.1952239999999,
                    "min": 437.73869399999995,
                    "p50": 500.15642699999995,
                    "p95": 528.1952239999999,
                    "p99": 528.1952239999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.473482,
                    "min": 302.576288,
                    "p50": 331.833128,
                    "p95": 346.473482,
                    "p99": 346.473482,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 713.0293369999999,
                    "min": 639.9911979999999,
                    "p50": 686.194439,
                    "p95": 713.0293369999999,
                    "p99": 713.0293369999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 490.65860299999997,
                    "min": 455.977623,
                    "p50": 476.822247,
                    "p95": 490.65860299999997,
                    "p99": 490.65860299999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 646.571974,
                    "min": 605.118263,
                    "p50": 636.999827,
                    "p95": 646.571974,
                    "p99": 646.571974,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 192.50412,
                    "min": 154.039585,
                    "p50": 181.00608599999998,
                    "p95": 192.50412,
                    "p99": 192.50412,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.12197499999996,
                    "min": 303.61945499999996,
                    "p50": 307.276186,
                    "p95": 344.12197499999996,
                    "p99": 344.12197499999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 570.837693,
                    "min": 528.3257219999999,
                    "p50": 533.9392789999999,
                    "p95": 570.837693,
                    "p99": 570.837693,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.253416,
                    "min": 229.7069,
                    "p50": 266.623553,
                    "p95": 271.253416,
                    "p99": 271.253416,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 420.86332799999997,
                    "min": 378.330624,
                    "p50": 409.93335099999996,
                    "p95": 420.86332799999997,
                    "p99": 420.86332799999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1170.6489259999998,
                    "min": 1084.000176,
                    "p50": 1143.14186,
                    "p95": 1170.6489259999998,
                    "p99": 1170.6489259999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 607.6273279999999,
                    "min": 540.187814,
                    "p50": 575.80111,
                    "p95": 607.6273279999999,
                    "p99": 607.6273279999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 361.343568,
                    "min": 322.822899,
                    "p50": 338.501671,
                    "p95": 361.343568,
                    "p99": 361.343568,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1083.0425559999999,
                    "min": 996.1065739999999,
                    "p50": 1052.084538,
                    "p95": 1083.0425559999999,
                    "p99": 1083.0425559999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 838.6871219999999,
                    "min": 786.2556,
                    "p50": 837.231332,
                    "p95": 838.6871219999999,
                    "p99": 838.6871219999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 688.720452,
                    "min": 634.5632529999999,
                    "p50": 656.9566149999999,
                    "p95": 688.720452,
                    "p99": 688.720452,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1007.447068,
                    "min": 952.3286549999999,
                    "p50": 988.816206,
                    "p95": 1007.447068,
                    "p99": 1007.447068,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 412.57430999999997,
                    "min": 384.322391,
                    "p50": 406.17168599999997,
                    "p95": 412.57430999999997,
                    "p99": 412.57430999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 276.13597899999996,
                    "min": 236.293199,
                    "p50": 244.27364699999998,
                    "p95": 276.13597899999996,
                    "p99": 276.13597899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1449.360502,
                    "min": 1376.570188,
                    "p50": 1424.062017,
                    "p95": 1449.360502,
                    "p99": 1449.360502,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1238.503445,
                    "min": 1178.663388,
                    "p50": 1216.032808,
                    "p95": 1238.503445,
                    "p99": 1238.503445,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1635.937886,
                    "min": 1577.690727,
                    "p50": 1603.550477,
                    "p95": 1635.937886,
                    "p99": 1635.937886,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 752.662685,
                    "min": 678.354374,
                    "p50": 733.336188,
                    "p95": 752.662685,
                    "p99": 752.662685,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 919.6734739999999,
                    "min": 849.599838,
                    "p50": 885.214845,
                    "p95": 919.6734739999999,
                    "p99": 919.6734739999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 524.655544,
                    "min": 474.45323399999995,
                    "p50": 511.55641199999997,
                    "p95": 524.655544,
                    "p99": 524.655544,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 954.0031009999999,
                    "min": 891.564308,
                    "p50": 929.662247,
                    "p95": 954.0031009999999,
                    "p99": 954.0031009999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 374.56404599999996,
                    "min": 328.637303,
                    "p50": 362.285212,
                    "p95": 374.56404599999996,
                    "p99": 374.56404599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1055.7262739999999,
                    "min": 980.93818,
                    "p50": 1008.329136,
                    "p95": 1055.7262739999999,
                    "p99": 1055.7262739999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 734.965794,
                    "min": 685.480792,
                    "p50": 724.7925779999999,
                    "p95": 734.965794,
                    "p99": 734.965794,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 311.388016,
                    "min": 274.825928,
                    "p50": 296.11509,
                    "p95": 311.388016,
                    "p99": 311.388016,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 447.101975,
                    "min": 409.430611,
                    "p50": 430.874638,
                    "p95": 447.101975,
                    "p99": 447.101975,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 869.096833,
                    "min": 802.775101,
                    "p50": 819.389926,
                    "p95": 869.096833,
                    "p99": 869.096833,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1017.366037,
                    "min": 954.169809,
                    "p50": 977.503891,
                    "p95": 1017.366037,
                    "p99": 1017.366037,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1447.692738,
                    "min": 1322.14957,
                    "p50": 1392.696897,
                    "p95": 1447.692738,
                    "p99": 1447.692738,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 505.574532,
                    "min": 465.03234299999997,
                    "p50": 493.02743999999996,
                    "p95": 505.574532,
                    "p99": 505.574532,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1243.1305109999998,
                    "min": 1186.304136,
                    "p50": 1241.165501,
                    "p95": 1243.1305109999998,
                    "p99": 1243.1305109999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 593.286382,
                    "min": 542.867231,
                    "p50": 566.7078359999999,
                    "p95": 593.286382,
                    "p99": 593.286382,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 797.388599,
                    "min": 751.768148,
                    "p50": 776.052334,
                    "p95": 797.388599,
                    "p99": 797.388599,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 664.275076,
                    "min": 612.801345,
                    "p50": 653.717218,
                    "p95": 664.275076,
                    "p99": 664.275076,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.61059699999998,
                    "min": 202.956888,
                    "p50": 233.097716,
                    "p95": 248.61059699999998,
                    "p99": 248.61059699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 436.50845599999997,
                    "min": 402.42781399999996,
                    "p50": 427.838465,
                    "p95": 436.50845599999997,
                    "p99": 436.50845599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 683.7429559999999,
                    "min": 633.672405,
                    "p50": 671.741894,
                    "p95": 683.7429559999999,
                    "p99": 683.7429559999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 607.444946,
                    "min": 557.26362,
                    "p50": 593.616011,
                    "p95": 607.444946,
                    "p99": 607.444946,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1447.7094519999998,
                    "min": 1389.5539549999999,
                    "p50": 1405.414194,
                    "p95": 1447.7094519999998,
                    "p99": 1447.7094519999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1247.4124849999998,
                    "min": 1189.300598,
                    "p50": 1209.428956,
                    "p95": 1247.4124849999998,
                    "p99": 1247.4124849999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 282.980613,
                    "min": 239.387416,
                    "p50": 252.19355499999998,
                    "p95": 282.980613,
                    "p99": 282.980613,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 924.291572,
                    "min": 837.544358,
                    "p50": 863.336325,
                    "p95": 924.291572,
                    "p99": 924.291572,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 851.0644629999999,
                    "min": 772.9664889999999,
                    "p50": 799.4114099999999,
                    "p95": 851.0644629999999,
                    "p99": 851.0644629999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 454.084033,
                    "min": 311.81041799999997,
                    "p50": 352.707501,
                    "p95": 454.084033,
                    "p99": 454.084033,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1009.051079,
                    "min": 951.063357,
                    "p50": 980.5206959999999,
                    "p95": 1009.051079,
                    "p99": 1009.051079,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 772.4537359999999,
                    "min": 699.165254,
                    "p50": 743.2697089999999,
                    "p95": 772.4537359999999,
                    "p99": 772.4537359999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1640.8683859999999,
                    "min": 1572.663063,
                    "p50": 1606.3021569999999,
                    "p95": 1640.8683859999999,
                    "p99": 1640.8683859999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1107.358323,
                    "min": 1049.305504,
                    "p50": 1084.616975,
                    "p95": 1107.358323,
                    "p99": 1107.358323,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 522.8431049999999,
                    "min": 474.953464,
                    "p50": 509.18881899999997,
                    "p95": 522.8431049999999,
                    "p99": 522.8431049999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1066.9951919999999,
                    "min": 1022.0583829999999,
                    "p50": 1043.416084,
                    "p95": 1066.9951919999999,
                    "p99": 1066.9951919999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1670.060102,
                    "min": 1576.316087,
                    "p50": 1615.809186,
                    "p95": 1670.060102,
                    "p99": 1670.060102,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 348.720177,
                    "min": 317.202949,
                    "p50": 330.43466,
                    "p95": 348.720177,
                    "p99": 348.720177,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 769.0061149999999,
                    "min": 717.03741,
                    "p50": 740.445915,
                    "p95": 769.0061149999999,
                    "p99": 769.0061149999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 847.9262349999999,
                    "min": 755.5930549999999,
                    "p50": 809.662514,
                    "p95": 847.9262349999999,
                    "p99": 847.9262349999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 934.7774479999999,
                    "min": 870.1754129999999,
                    "p50": 910.57619,
                    "p95": 934.7774479999999,
                    "p99": 934.7774479999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1448.846164,
                    "min": 1373.4669139999999,
                    "p50": 1421.922867,
                    "p95": 1448.846164,
                    "p99": 1448.846164,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1010.956278,
                    "min": 943.7648919999999,
                    "p50": 1000.8629659999999,
                    "p95": 1010.956278,
                    "p99": 1010.956278,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1086.043983,
                    "min": 1009.3610239999999,
                    "p50": 1050.268486,
                    "p95": 1086.043983,
                    "p99": 1086.043983,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 281.271464,
                    "min": 243.13324799999998,
                    "p50": 266.49544299999997,
                    "p95": 281.271464,
                    "p99": 281.271464,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 508.002779,
                    "min": 473.235453,
                    "p50": 482.82156699999996,
                    "p95": 508.002779,
                    "p99": 508.002779,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 446.651408,
                    "min": 398.163683,
                    "p50": 432.341438,
                    "p95": 446.651408,
                    "p99": 446.651408,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1245.638084,
                    "min": 1141.726072,
                    "p50": 1209.621993,
                    "p95": 1245.638084,
                    "p99": 1245.638084,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 688.782236,
                    "min": 633.004682,
                    "p50": 653.980331,
                    "p95": 688.782236,
                    "p99": 688.782236,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1137.6642219999999,
                    "min": 1063.77821,
                    "p50": 1114.769593,
                    "p95": 1137.6642219999999,
                    "p99": 1137.6642219999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 603.591788,
                    "min": 549.3607559999999,
                    "p50": 590.890102,
                    "p95": 603.591788,
                    "p99": 603.591788,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 353.07246599999996,
                    "min": 329.160626,
                    "p50": 343.426493,
                    "p95": 353.07246599999996,
                    "p99": 353.07246599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.431333,
                    "min": 57.492763999999994,
                    "p50": 89.478889,
                    "p95": 95.431333,
                    "p99": 95.431333,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1331.4443529999999,
                    "min": 1208.4025339999998,
                    "p50": 1283.9217509999999,
                    "p95": 1331.4443529999999,
                    "p99": 1331.4443529999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 302.31188599999996,
                    "min": 256.222452,
                    "p50": 290.76072999999997,
                    "p95": 302.31188599999996,
                    "p99": 302.31188599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 436.02180899999996,
                    "min": 390.771084,
                    "p50": 401.98724,
                    "p95": 436.02180899999996,
                    "p99": 436.02180899999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 165.918182,
                    "min": 134.863053,
                    "p50": 154.527752,
                    "p95": 165.918182,
                    "p99": 165.918182,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 531.363259,
                    "min": 490.46849799999995,
                    "p50": 517.334792,
                    "p95": 531.363259,
                    "p99": 531.363259,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.943338,
                    "min": 81.636411,
                    "p50": 113.95429299999999,
                    "p95": 121.943338,
                    "p99": 121.943338,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 139.103076,
                    "min": 104.344498,
                    "p50": 125.33311499999999,
                    "p95": 139.103076,
                    "p99": 139.103076,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 73.063965,
                    "min": 40.388587,
                    "p50": 44.450381,
                    "p95": 73.063965,
                    "p99": 73.063965,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 153.99378299999998,
                    "min": 118.305399,
                    "p50": 142.402307,
                    "p95": 153.99378299999998,
                    "p99": 153.99378299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.71899299999998,
                    "min": 88.15996299999999,
                    "p50": 125.79954599999999,
                    "p95": 135.71899299999998,
                    "p99": 135.71899299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 189.255303,
                    "min": 148.00282199999998,
                    "p50": 176.923884,
                    "p95": 189.255303,
                    "p99": 189.255303,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 226.60020699999998,
                    "min": 168.072139,
                    "p50": 176.300695,
                    "p95": 226.60020699999998,
                    "p99": 226.60020699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 194.00075099999998,
                    "min": 146.71157,
                    "p50": 183.43083299999998,
                    "p95": 194.00075099999998,
                    "p99": 194.00075099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 683.121031,
                    "min": 623.026137,
                    "p50": 665.993628,
                    "p95": 683.121031,
                    "p99": 683.121031,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 108.90865799999999,
                    "min": 82.307394,
                    "p50": 103.499252,
                    "p95": 108.90865799999999,
                    "p99": 108.90865799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 223.707528,
                    "min": 183.293626,
                    "p50": 212.373356,
                    "p95": 223.707528,
                    "p99": 223.707528,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 244.57691599999998,
                    "min": 194.843947,
                    "p50": 211.67080099999998,
                    "p95": 244.57691599999998,
                    "p99": 244.57691599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 450.31417899999997,
                    "min": 395.068197,
                    "p50": 424.87800999999996,
                    "p95": 450.31417899999997,
                    "p99": 450.31417899999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 84.926082,
                    "min": 79.09951199999999,
                    "p50": 82.12313999999999,
                    "p95": 84.926082,
                    "p99": 84.926082,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 558.227951,
                    "min": 514.458007,
                    "p50": 534.360221,
                    "p95": 558.227951,
                    "p99": 558.227951,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 301.202407,
                    "min": 267.506618,
                    "p50": 297.155592,
                    "p95": 301.202407,
                    "p99": 301.202407,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 230.226351,
                    "min": 187.91044599999998,
                    "p50": 222.03030199999998,
                    "p95": 230.226351,
                    "p99": 230.226351,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 238.39292999999998,
                    "min": 197.05827,
                    "p50": 218.514772,
                    "p95": 238.39292999999998,
                    "p99": 238.39292999999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 211.350462,
                    "min": 172.831504,
                    "p50": 180.042754,
                    "p95": 211.350462,
                    "p99": 211.350462,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.918275,
                    "min": 225.919817,
                    "p50": 235.528131,
                    "p95": 266.918275,
                    "p99": 266.918275,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.13910899999999,
                    "min": 42.075351,
                    "p50": 43.988913,
                    "p95": 82.13910899999999,
                    "p99": 82.13910899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1364.742435,
                    "min": 1292.450012,
                    "p50": 1319.156564,
                    "p95": 1364.742435,
                    "p99": 1364.742435,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.750418,
                    "min": 55.673172,
                    "p50": 93.62431199999999,
                    "p95": 96.750418,
                    "p99": 96.750418,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.089152,
                    "min": 67.787099,
                    "p50": 97.013498,
                    "p95": 109.089152,
                    "p99": 109.089152,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.438491,
                    "min": 107.53205899999999,
                    "p50": 146.435981,
                    "p95": 148.438491,
                    "p99": 148.438491,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 202.758422,
                    "min": 158.883772,
                    "p50": 189.90758699999998,
                    "p95": 202.758422,
                    "p99": 202.758422,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 161.149589,
                    "min": 121.31633699999999,
                    "p50": 154.369741,
                    "p95": 161.149589,
                    "p99": 161.149589,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 190.582993,
                    "min": 144.430608,
                    "p50": 181.36415499999998,
                    "p95": 190.582993,
                    "p99": 190.582993,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.339246,
                    "min": 93.015902,
                    "p50": 119.67656199999999,
                    "p95": 134.339246,
                    "p99": 134.339246,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 174.41371099999998,
                    "min": 135.47556,
                    "p50": 169.848301,
                    "p95": 174.41371099999998,
                    "p99": 174.41371099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 706.374999,
                    "min": 644.564985,
                    "p50": 690.183984,
                    "p95": 706.374999,
                    "p99": 706.374999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 209.85924899999998,
                    "min": 169.19046899999998,
                    "p50": 202.551975,
                    "p95": 209.85924899999998,
                    "p99": 209.85924899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1254.465941,
                    "min": 1207.725346,
                    "p50": 1239.595807,
                    "p95": 1254.465941,
                    "p99": 1254.465941,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 216.762135,
                    "min": 170.35135599999998,
                    "p50": 198.74946699999998,
                    "p95": 216.762135,
                    "p99": 216.762135,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 158.766572,
                    "min": 118.686101,
                    "p50": 145.547033,
                    "p95": 158.766572,
                    "p99": 158.766572,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 257.389545,
                    "min": 218.796462,
                    "p50": 243.90758599999998,
                    "p95": 257.389545,
                    "p99": 257.389545,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 286.7242,
                    "min": 240.64569799999998,
                    "p50": 274.65494,
                    "p95": 286.7242,
                    "p99": 286.7242,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 95.96484799999999,
                    "min": 67.685981,
                    "p50": 88.461073,
                    "p95": 95.96484799999999,
                    "p99": 95.96484799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 170.55869099999998,
                    "min": 132.607531,
                    "p50": 160.587134,
                    "p95": 170.55869099999998,
                    "p99": 170.55869099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.414575,
                    "min": 94.009283,
                    "p50": 96.38465599999999,
                    "p95": 117.414575,
                    "p99": 117.414575,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 231.524081,
                    "min": 193.26186099999998,
                    "p50": 201.788622,
                    "p95": 231.524081,
                    "p99": 231.524081,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.07127499999999,
                    "min": 154.949718,
                    "p50": 185.42819899999998,
                    "p95": 198.07127499999999,
                    "p99": 198.07127499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 530.2336859999999,
                    "min": 494.666524,
                    "p50": 510.112109,
                    "p95": 530.2336859999999,
                    "p99": 530.2336859999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 405.69622,
                    "min": 363.83157,
                    "p50": 383.179511,
                    "p95": 405.69622,
                    "p99": 405.69622,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 185.904765,
                    "min": 132.172922,
                    "p50": 173.39223099999998,
                    "p95": 185.904765,
                    "p99": 185.904765,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 74.824232,
                    "min": 40.010155999999995,
                    "p50": 66.48185,
                    "p95": 74.824232,
                    "p99": 74.824232,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 146.916279,
                    "min": 103.22717499999999,
                    "p50": 137.25026,
                    "p95": 146.916279,
                    "p99": 146.916279,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.28423199999999,
                    "min": 53.495971,
                    "p50": 86.047097,
                    "p95": 93.28423199999999,
                    "p99": 93.28423199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 116.13929399999999,
                    "min": 79.603692,
                    "p50": 93.24488199999999,
                    "p95": 116.13929399999999,
                    "p99": 116.13929399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 676.8498179999999,
                    "min": 641.094982,
                    "p50": 659.3134299999999,
                    "p95": 676.8498179999999,
                    "p99": 676.8498179999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 185.3238,
                    "min": 144.414478,
                    "p50": 173.622128,
                    "p95": 185.3238,
                    "p99": 185.3238,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.096375,
                    "min": 95.961658,
                    "p50": 97.95842599999999,
                    "p95": 137.096375,
                    "p99": 137.096375,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.998172,
                    "min": 78.58433699999999,
                    "p50": 96.254357,
                    "p95": 97.998172,
                    "p99": 97.998172,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 141.115468,
                    "min": 108.958857,
                    "p50": 122.65321499999999,
                    "p95": 141.115468,
                    "p99": 141.115468,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 308.637906,
                    "min": 268.797445,
                    "p50": 277.60812699999997,
                    "p95": 308.637906,
                    "p99": 308.637906,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 73.052944,
                    "min": 43.821853999999995,
                    "p50": 45.526216,
                    "p95": 73.052944,
                    "p99": 73.052944,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1387.670985,
                    "min": 1306.536062,
                    "p50": 1346.74597,
                    "p95": 1387.670985,
                    "p99": 1387.670985,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 281.758865,
                    "min": 235.198919,
                    "p50": 266.044109,
                    "p95": 281.758865,
                    "p99": 281.758865,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 108.76865699999999,
                    "min": 69.835649,
                    "p50": 96.940878,
                    "p95": 108.76865699999999,
                    "p99": 108.76865699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 174.149631,
                    "min": 135.838921,
                    "p50": 167.670246,
                    "p95": 174.149631,
                    "p99": 174.149631,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 230.326561,
                    "min": 191.976068,
                    "p50": 219.83566499999998,
                    "p95": 230.326561,
                    "p99": 230.326561,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.36506299999999,
                    "min": 83.872771,
                    "p50": 94.695578,
                    "p95": 124.36506299999999,
                    "p99": 124.36506299999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.280968,
                    "min": 163.27248699999998,
                    "p50": 184.5948,
                    "p95": 198.280968,
                    "p99": 198.280968,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 724.002215,
                    "min": 672.905797,
                    "p50": 696.934985,
                    "p95": 724.002215,
                    "p99": 724.002215,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 448.460655,
                    "min": 408.523738,
                    "p50": 432.27745699999997,
                    "p95": 448.460655,
                    "p99": 448.460655,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 217.23792999999998,
                    "min": 202.680679,
                    "p50": 213.145377,
                    "p95": 217.23792999999998,
                    "p99": 217.23792999999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.398609,
                    "min": 124.10543999999999,
                    "p50": 150.810552,
                    "p95": 166.398609,
                    "p99": 166.398609,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 232.55959199999998,
                    "min": 201.58370599999998,
                    "p50": 209.852497,
                    "p95": 232.55959199999998,
                    "p99": 232.55959199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 580.9762569999999,
                    "min": 521.201014,
                    "p50": 556.167303,
                    "p95": 580.9762569999999,
                    "p99": 580.9762569999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.26430299999998,
                    "min": 103.431236,
                    "p50": 131.52848799999998,
                    "p95": 140.26430299999998,
                    "p99": 140.26430299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 220.659302,
                    "min": 184.232115,
                    "p50": 214.04295,
                    "p95": 220.659302,
                    "p99": 220.659302,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 202.07230099999998,
                    "min": 159.79488999999998,
                    "p50": 196.71686499999998,
                    "p95": 202.07230099999998,
                    "p99": 202.07230099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.332984,
                    "min": 85.446739,
                    "p50": 114.719343,
                    "p95": 125.332984,
                    "p99": 125.332984,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 313.847597,
                    "min": 264.598588,
                    "p50": 305.180617,
                    "p95": 313.847597,
                    "p99": 313.847597,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.509868,
                    "min": 60.877905999999996,
                    "p50": 85.455097,
                    "p95": 97.509868,
                    "p99": 97.509868,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 156.610645,
                    "min": 113.190075,
                    "p50": 150.27658399999999,
                    "p95": 156.610645,
                    "p99": 156.610645,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 189.345611,
                    "min": 144.880679,
                    "p50": 168.977274,
                    "p95": 189.345611,
                    "p99": 189.345611,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 260.731908,
                    "min": 213.967742,
                    "p50": 253.935735,
                    "p95": 260.731908,
                    "p99": 260.731908,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 467.52651,
                    "min": 401.408569,
                    "p50": 441.79258899999996,
                    "p95": 467.52651,
                    "p99": 467.52651,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 214.06106599999998,
                    "min": 170.895031,
                    "p50": 209.523195,
                    "p95": 214.06106599999998,
                    "p99": 214.06106599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 169.291157,
                    "min": 128.23301999999998,
                    "p50": 131.18918,
                    "p95": 169.291157,
                    "p99": 169.291157,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.870092,
                    "min": 75.019911,
                    "p50": 101.477408,
                    "p95": 111.870092,
                    "p99": 111.870092,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 239.044888,
                    "min": 199.258874,
                    "p50": 231.297337,
                    "p95": 239.044888,
                    "p99": 239.044888,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 293.908168,
                    "min": 256.571178,
                    "p50": 289.26651,
                    "p95": 293.908168,
                    "p99": 293.908168,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 616.092794,
                    "min": 560.490992,
                    "p50": 606.388512,
                    "p95": 616.092794,
                    "p99": 616.092794,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 718.6914069999999,
                    "min": 667.200259,
                    "p50": 701.1516459999999,
                    "p95": 718.6914069999999,
                    "p99": 718.6914069999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1455.644579,
                    "min": 1370.284907,
                    "p50": 1403.359722,
                    "p95": 1455.644579,
                    "p99": 1455.644579,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.477869,
                    "min": 46.140533,
                    "p50": 70.20378099999999,
                    "p95": 84.477869,
                    "p99": 84.477869,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 663.661115,
                    "min": 601.375962,
                    "p50": 629.962256,
                    "p95": 663.661115,
                    "p99": 663.661115,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 197.12713399999998,
                    "min": 167.029147,
                    "p50": 172.841993,
                    "p95": 197.12713399999998,
                    "p99": 197.12713399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 171.103391,
                    "min": 131.373635,
                    "p50": 160.873669,
                    "p95": 171.103391,
                    "p99": 171.103391,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 224.90016599999998,
                    "min": 176.169999,
                    "p50": 206.47934999999998,
                    "p95": 224.90016599999998,
                    "p99": 224.90016599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 131.532301,
                    "min": 89.34578499999999,
                    "p50": 95.03977499999999,
                    "p95": 131.532301,
                    "p99": 131.532301,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.87651299999999,
                    "min": 62.441533,
                    "p50": 98.87676499999999,
                    "p95": 105.87651299999999,
                    "p99": 105.87651299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 79.65182899999999,
                    "min": 41.793209999999995,
                    "p50": 75.007483,
                    "p95": 79.65182899999999,
                    "p99": 79.65182899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 180.061511,
                    "min": 130.62643699999998,
                    "p50": 160.384635,
                    "p95": 180.061511,
                    "p99": 180.061511,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 251.14647,
                    "min": 210.63214599999998,
                    "p50": 246.86362699999998,
                    "p95": 251.14647,
                    "p99": 251.14647,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.30378499999999,
                    "min": 74.796413,
                    "p50": 77.944099,
                    "p95": 106.30378499999999,
                    "p99": 106.30378499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.121752,
                    "min": 96.588594,
                    "p50": 127.141497,
                    "p95": 143.121752,
                    "p99": 143.121752,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 208.345891,
                    "min": 164.967075,
                    "p50": 192.75167199999999,
                    "p95": 208.345891,
                    "p99": 208.345891,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 553.7605609999999,
                    "min": 501.24414299999995,
                    "p50": 540.607028,
                    "p95": 553.7605609999999,
                    "p99": 553.7605609999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.36414399999998,
                    "min": 114.705472,
                    "p50": 152.39761,
                    "p95": 156.36414399999998,
                    "p99": 156.36414399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 297.769117,
                    "min": 248.89842,
                    "p50": 286.867845,
                    "p95": 297.769117,
                    "p99": 297.769117,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 193.533042,
                    "min": 154.802636,
                    "p50": 180.23953,
                    "p95": 193.533042,
                    "p99": 193.533042,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.764622,
                    "min": 54.556684,
                    "p50": 84.31870699999999,
                    "p95": 91.764622,
                    "p99": 91.764622,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 395.733074,
                    "min": 348.500771,
                    "p50": 387.08266299999997,
                    "p95": 395.733074,
                    "p99": 395.733074,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 257.172071,
                    "min": 214.63912499999998,
                    "p50": 236.304907,
                    "p95": 257.172071,
                    "p99": 257.172071,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.77437799999998,
                    "min": 147.722357,
                    "p50": 167.15794699999998,
                    "p95": 187.77437799999998,
                    "p99": 187.77437799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 942.501729,
                    "min": 207.812918,
                    "p50": 244.33969199999999,
                    "p95": 942.501729,
                    "p99": 942.501729,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1024.844482,
                    "min": 846.439143,
                    "p50": 897.35584,
                    "p95": 1024.844482,
                    "p99": 1024.844482,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 664.292331,
                    "min": 581.898603,
                    "p50": 616.871445,
                    "p95": 664.292331,
                    "p99": 664.292331,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 732.855099,
                    "min": 675.320436,
                    "p50": 715.397882,
                    "p95": 732.855099,
                    "p99": 732.855099,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 855.3218569999999,
                    "min": 765.4981849999999,
                    "p50": 778.84119,
                    "p95": 855.3218569999999,
                    "p99": 855.3218569999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 450.981341,
                    "min": 395.75185799999997,
                    "p50": 426.603576,
                    "p95": 450.981341,
                    "p99": 450.981341,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 330.233674,
                    "min": 273.728005,
                    "p50": 302.994122,
                    "p95": 330.233674,
                    "p99": 330.233674,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 413.535246,
                    "min": 395.034176,
                    "p50": 406.334047,
                    "p95": 413.535246,
                    "p99": 413.535246,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 383.637281,
                    "min": 297.185567,
                    "p50": 356.68021899999997,
                    "p95": 383.637281,
                    "p99": 383.637281,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 497.46365299999997,
                    "min": 427.43083099999996,
                    "p50": 483.208268,
                    "p95": 497.46365299999997,
                    "p99": 497.46365299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 524.640893,
                    "min": 472.595785,
                    "p50": 508.18607599999996,
                    "p95": 524.640893,
                    "p99": 524.640893,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 693.256901,
                    "min": 633.861811,
                    "p50": 666.12974,
                    "p95": 693.256901,
                    "p99": 693.256901,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1024.771024,
                    "min": 521.8941159999999,
                    "p50": 583.433623,
                    "p95": 1024.771024,
                    "p99": 1024.771024,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 952.298243,
                    "min": 499.356569,
                    "p50": 551.3466559999999,
                    "p95": 952.298243,
                    "p99": 952.298243,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 676.6299419999999,
                    "min": 586.543863,
                    "p50": 614.574984,
                    "p95": 676.6299419999999,
                    "p99": 676.6299419999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 667.569349,
                    "min": 615.258665,
                    "p50": 645.185175,
                    "p95": 667.569349,
                    "p99": 667.569349,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.106251,
                    "min": 173.519992,
                    "p50": 207.399149,
                    "p95": 217.106251,
                    "p99": 217.106251,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 262.39984599999997,
                    "min": 215.16663599999998,
                    "p50": 230.52427699999998,
                    "p95": 262.39984599999997,
                    "p99": 262.39984599999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 382.90491699999995,
                    "min": 296.559351,
                    "p50": 361.47531299999997,
                    "p95": 382.90491699999995,
                    "p99": 382.90491699999995,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.737441,
                    "min": 275.713502,
                    "p50": 309.263804,
                    "p95": 313.737441,
                    "p99": 313.737441,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 511.56954399999995,
                    "min": 434.06974499999995,
                    "p50": 494.664274,
                    "p95": 511.56954399999995,
                    "p99": 511.56954399999995,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.415907,
                    "min": 132.440308,
                    "p50": 153.199674,
                    "p95": 178.415907,
                    "p99": 178.415907,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 403.607572,
                    "min": 357.215223,
                    "p50": 394.760115,
                    "p95": 403.607572,
                    "p99": 403.607572,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 849.2992919999999,
                    "min": 769.951734,
                    "p50": 810.1863969999999,
                    "p95": 849.2992919999999,
                    "p99": 849.2992919999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 974.312689,
                    "min": 844.681936,
                    "p50": 900.424706,
                    "p95": 974.312689,
                    "p99": 974.312689,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 741.953483,
                    "min": 681.361217,
                    "p50": 706.410624,
                    "p95": 741.953483,
                    "p99": 741.953483,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 434.91416399999997,
                    "min": 383.13172299999997,
                    "p50": 407.58651799999996,
                    "p95": 434.91416399999997,
                    "p99": 434.91416399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 608.479876,
                    "min": 548.141754,
                    "p50": 589.046394,
                    "p95": 608.479876,
                    "p99": 608.479876,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 694.84034,
                    "min": 601.150392,
                    "p50": 632.207229,
                    "p95": 694.84034,
                    "p99": 694.84034,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 630.562922,
                    "min": 554.473992,
                    "p50": 580.79916,
                    "p95": 630.562922,
                    "p99": 630.562922,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 679.837886,
                    "min": 622.5688319999999,
                    "p50": 660.1447959999999,
                    "p95": 679.837886,
                    "p99": 679.837886,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 817.013662,
                    "min": 735.66756,
                    "p50": 758.008553,
                    "p95": 817.013662,
                    "p99": 817.013662,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 618.680844,
                    "min": 497.97889799999996,
                    "p50": 569.513865,
                    "p95": 618.680844,
                    "p99": 618.680844,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 566.871218,
                    "min": 481.908595,
                    "p50": 528.79178,
                    "p95": 566.871218,
                    "p99": 566.871218,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.056077,
                    "min": 128.094235,
                    "p50": 165.792169,
                    "p95": 178.056077,
                    "p99": 178.056077,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 914.159689,
                    "min": 831.816746,
                    "p50": 855.3732789999999,
                    "p95": 914.159689,
                    "p99": 914.159689,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 498.225594,
                    "min": 419.180118,
                    "p50": 479.548141,
                    "p95": 498.225594,
                    "p99": 498.225594,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 469.68168399999996,
                    "min": 363.85625899999997,
                    "p50": 440.66713,
                    "p95": 469.68168399999996,
                    "p99": 469.68168399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 315.252034,
                    "min": 271.999646,
                    "p50": 307.76944,
                    "p95": 315.252034,
                    "p99": 315.252034,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.444592,
                    "min": 358.995674,
                    "p50": 386.51910399999997,
                    "p95": 394.444592,
                    "p99": 394.444592,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 360.639924,
                    "min": 282.685448,
                    "p50": 329.36598499999997,
                    "p95": 360.639924,
                    "p99": 360.639924,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 224.23786099999998,
                    "min": 163.549901,
                    "p50": 210.85777399999998,
                    "p95": 224.23786099999998,
                    "p99": 224.23786099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 265.321868,
                    "min": 223.96508899999998,
                    "p50": 244.436195,
                    "p95": 265.321868,
                    "p99": 265.321868,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 697.632343,
                    "min": 663.896438,
                    "p50": 667.88073,
                    "p95": 697.632343,
                    "p99": 697.632343,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 741.093436,
                    "min": 694.251549,
                    "p50": 715.029578,
                    "p95": 741.093436,
                    "p99": 741.093436,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 585.281309,
                    "min": 530.038108,
                    "p50": 570.7317909999999,
                    "p95": 585.281309,
                    "p99": 585.281309,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 853.807545,
                    "min": 746.526808,
                    "p50": 813.4509499999999,
                    "p95": 853.807545,
                    "p99": 853.807545,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 229.99637199999998,
                    "min": 188.450031,
                    "p50": 222.439809,
                    "p95": 229.99637199999998,
                    "p99": 229.99637199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 568.992031,
                    "min": 491.66033,
                    "p50": 517.330647,
                    "p95": 568.992031,
                    "p99": 568.992031,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1009.107032,
                    "min": 840.333053,
                    "p50": 921.0868869999999,
                    "p95": 1009.107032,
                    "p99": 1009.107032,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 302.546203,
                    "min": 255.66351699999998,
                    "p50": 290.173388,
                    "p95": 302.546203,
                    "p99": 302.546203,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 401.564531,
                    "min": 344.247352,
                    "p50": 370.55618799999996,
                    "p95": 401.564531,
                    "p99": 401.564531,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 365.21138299999996,
                    "min": 324.280481,
                    "p50": 351.71419,
                    "p95": 365.21138299999996,
                    "p99": 365.21138299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 270.128561,
                    "min": 231.852409,
                    "p50": 249.953271,
                    "p95": 270.128561,
                    "p99": 270.128561,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 446.511079,
                    "min": 404.81143299999997,
                    "p50": 428.846974,
                    "p95": 446.511079,
                    "p99": 446.511079,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 510.495052,
                    "min": 459.49956899999995,
                    "p50": 501.64789399999995,
                    "p95": 510.495052,
                    "p99": 510.495052,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 181.003225,
                    "min": 128.794335,
                    "p50": 157.208983,
                    "p95": 181.003225,
                    "p99": 181.003225,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 650.169486,
                    "min": 597.390904,
                    "p50": 636.077581,
                    "p95": 650.169486,
                    "p99": 650.169486,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 692.113602,
                    "min": 627.057249,
                    "p50": 658.606095,
                    "p95": 692.113602,
                    "p99": 692.113602,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 436.299992,
                    "min": 377.491748,
                    "p50": 397.524639,
                    "p95": 436.299992,
                    "p99": 436.299992,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 510.87874999999997,
                    "min": 463.601924,
                    "p50": 490.36533299999996,
                    "p95": 510.87874999999997,
                    "p99": 510.87874999999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 322.662308,
                    "min": 296.19527999999997,
                    "p50": 311.160255,
                    "p95": 322.662308,
                    "p99": 322.662308,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.785032,
                    "min": 253.702713,
                    "p50": 273.715541,
                    "p95": 304.785032,
                    "p99": 304.785032,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 483.12967499999996,
                    "min": 418.03159899999997,
                    "p50": 443.846575,
                    "p95": 483.12967499999996,
                    "p99": 483.12967499999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.00679499999998,
                    "min": 128.614889,
                    "p50": 147.220853,
                    "p95": 170.00679499999998,
                    "p99": 170.00679499999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 206.45978399999998,
                    "min": 170.17767999999998,
                    "p50": 194.281165,
                    "p95": 206.45978399999998,
                    "p99": 206.45978399999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 377.048613,
                    "min": 334.180589,
                    "p50": 361.48551699999996,
                    "p95": 377.048613,
                    "p99": 377.048613,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.8857,
                    "min": 214.394228,
                    "p50": 252.13090699999998,
                    "p95": 261.8857,
                    "p99": 261.8857,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 922.678404,
                    "min": 829.6725749999999,
                    "p50": 875.302832,
                    "p95": 922.678404,
                    "p99": 922.678404,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 558.0783819999999,
                    "min": 515.0948549999999,
                    "p50": 535.349963,
                    "p95": 558.0783819999999,
                    "p99": 558.0783819999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 809.9299619999999,
                    "min": 726.61127,
                    "p50": 771.3534599999999,
                    "p95": 809.9299619999999,
                    "p99": 809.9299619999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.8222949999999,
                    "min": 583.852535,
                    "p50": 614.4331559999999,
                    "p95": 656.8222949999999,
                    "p99": 656.8222949999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 607.073914,
                    "min": 559.334077,
                    "p50": 581.119294,
                    "p95": 607.073914,
                    "p99": 607.073914,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1346.194352,
                    "min": 1245.2000639999999,
                    "p50": 1289.065556,
                    "p95": 1346.194352,
                    "p99": 1346.194352,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 564.58652,
                    "min": 504.555253,
                    "p50": 541.187239,
                    "p95": 564.58652,
                    "p99": 564.58652,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 425.10501999999997,
                    "min": 372.75723,
                    "p50": 409.30414099999996,
                    "p95": 425.10501999999997,
                    "p99": 425.10501999999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 511.97878199999997,
                    "min": 438.58038,
                    "p50": 481.90014099999996,
                    "p95": 511.97878199999997,
                    "p99": 511.97878199999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 745.817642,
                    "min": 675.765369,
                    "p50": 708.563305,
                    "p95": 745.817642,
                    "p99": 745.817642,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 664.870989,
                    "min": 589.7389009999999,
                    "p50": 630.4675599999999,
                    "p95": 664.870989,
                    "p99": 664.870989,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 470.96737199999995,
                    "min": 406.835408,
                    "p50": 444.20795599999997,
                    "p95": 470.96737199999995,
                    "p99": 470.96737199999995,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.619269,
                    "min": 109.525588,
                    "p50": 138.341559,
                    "p95": 148.619269,
                    "p99": 148.619269,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 175.174192,
                    "min": 138.243154,
                    "p50": 158.37738299999998,
                    "p95": 175.174192,
                    "p99": 175.174192,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 388.508656,
                    "min": 339.118726,
                    "p50": 367.76476299999996,
                    "p95": 388.508656,
                    "p99": 388.508656,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 248.94606,
                    "min": 204.437843,
                    "p50": 226.36652099999998,
                    "p95": 248.94606,
                    "p99": 248.94606,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 362.023965,
                    "min": 307.275587,
                    "p50": 344.650933,
                    "p95": 362.023965,
                    "p99": 362.023965,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 217.18220599999998,
                    "min": 170.851598,
                    "p50": 208.121592,
                    "p95": 217.18220599999998,
                    "p99": 217.18220599999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 536.015725,
                    "min": 470.18760599999996,
                    "p50": 511.20343099999997,
                    "p95": 536.015725,
                    "p99": 536.015725,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 315.696196,
                    "min": 271.297274,
                    "p50": 309.44872399999997,
                    "p95": 315.696196,
                    "p99": 315.696196,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.867701,
                    "min": 239.684971,
                    "p50": 271.307084,
                    "p95": 286.867701,
                    "p99": 286.867701,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 355.38827699999996,
                    "min": 314.28236699999997,
                    "p50": 343.42143599999997,
                    "p95": 355.38827699999996,
                    "p99": 355.38827699999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 171.00046799999998,
                    "min": 128.085488,
                    "p50": 133.026897,
                    "p95": 171.00046799999998,
                    "p99": 171.00046799999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 297.025978,
                    "min": 251.562413,
                    "p50": 259.619898,
                    "p95": 297.025978,
                    "p99": 297.025978,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 271.59627,
                    "min": 225.202059,
                    "p50": 241.64691399999998,
                    "p95": 271.59627,
                    "p99": 271.59627,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 235.912171,
                    "min": 191.54892999999998,
                    "p50": 220.223964,
                    "p95": 235.912171,
                    "p99": 235.912171,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 531.018016,
                    "min": 468.22004699999997,
                    "p50": 506.87483999999995,
                    "p95": 531.018016,
                    "p99": 531.018016,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 465.093147,
                    "min": 406.82949099999996,
                    "p50": 446.814618,
                    "p95": 465.093147,
                    "p99": 465.093147,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 667.833265,
                    "min": 626.031836,
                    "p50": 659.1182,
                    "p95": 667.833265,
                    "p99": 667.833265,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1004.797706,
                    "min": 930.9244679999999,
                    "p50": 964.9637829999999,
                    "p95": 1004.797706,
                    "p99": 1004.797706,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 415.832947,
                    "min": 379.560426,
                    "p50": 396.701535,
                    "p95": 415.832947,
                    "p99": 415.832947,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 204.337585,
                    "min": 163.089285,
                    "p50": 196.011729,
                    "p95": 204.337585,
                    "p99": 204.337585,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 392.533644,
                    "min": 345.615993,
                    "p50": 386.787745,
                    "p95": 392.533644,
                    "p99": 392.533644,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 134.966429,
                    "min": 97.05126899999999,
                    "p50": 130.52093399999998,
                    "p95": 134.966429,
                    "p99": 134.966429,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 495.42220899999995,
                    "min": 437.27230599999996,
                    "p50": 474.443104,
                    "p95": 495.42220899999995,
                    "p99": 495.42220899999995,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 617.3983999999999,
                    "min": 546.111726,
                    "p50": 576.045669,
                    "p95": 617.3983999999999,
                    "p99": 617.3983999999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 336.352439,
                    "min": 282.599434,
                    "p50": 299.129958,
                    "p95": 336.352439,
                    "p99": 336.352439,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1030.818435,
                    "min": 972.285033,
                    "p50": 1006.7859249999999,
                    "p95": 1030.818435,
                    "p99": 1030.818435,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 265.851557,
                    "min": 221.472097,
                    "p50": 229.759614,
                    "p95": 265.851557,
                    "p99": 265.851557,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 187.980912,
                    "min": 148.530981,
                    "p50": 177.44233499999999,
                    "p95": 187.980912,
                    "p99": 187.980912,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 340.69093899999996,
                    "min": 293.517592,
                    "p50": 297.776368,
                    "p95": 340.69093899999996,
                    "p99": 340.69093899999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 138.906827,
                    "min": 99.753743,
                    "p50": 125.47261599999999,
                    "p95": 138.906827,
                    "p99": 138.906827,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 530.454091,
                    "min": 484.82083,
                    "p50": 523.558989,
                    "p95": 530.454091,
                    "p99": 530.454091,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 406.134261,
                    "min": 365.923049,
                    "p50": 400.206792,
                    "p95": 406.134261,
                    "p99": 406.134261,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 382.15776999999997,
                    "min": 343.256189,
                    "p50": 365.629216,
                    "p95": 382.15776999999997,
                    "p99": 382.15776999999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 115.193345,
                    "min": 76.681805,
                    "p50": 103.076307,
                    "p95": 115.193345,
                    "p99": 115.193345,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 163.08006699999999,
                    "min": 124.58261399999999,
                    "p50": 151.066387,
                    "p95": 163.08006699999999,
                    "p99": 163.08006699999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 470.737078,
                    "min": 426.941732,
                    "p50": 466.127587,
                    "p95": 470.737078,
                    "p99": 470.737078,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 236.04531,
                    "min": 196.800117,
                    "p50": 220.363577,
                    "p95": 236.04531,
                    "p99": 236.04531,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 306.317857,
                    "min": 268.894473,
                    "p50": 274.72063099999997,
                    "p95": 306.317857,
                    "p99": 306.317857,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 213.22708899999998,
                    "min": 175.87914999999998,
                    "p50": 205.992536,
                    "p95": 213.22708899999998,
                    "p99": 213.22708899999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 360.97853299999997,
                    "min": 316.927184,
                    "p50": 352.77828999999997,
                    "p95": 360.97853299999997,
                    "p99": 360.97853299999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 779.02652,
                    "min": 725.300069,
                    "p50": 761.228574,
                    "p95": 779.02652,
                    "p99": 779.02652,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1258.735673,
                    "min": 1205.9435839999999,
                    "p50": 1228.184837,
                    "p95": 1258.735673,
                    "p99": 1258.735673,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 288.852823,
                    "min": 245.00301399999998,
                    "p50": 267.074232,
                    "p95": 288.852823,
                    "p99": 288.852823,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 157.477248,
                    "min": 114.019356,
                    "p50": 152.088445,
                    "p95": 157.477248,
                    "p99": 157.477248,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 346.40759199999997,
                    "min": 317.984991,
                    "p50": 322.613796,
                    "p95": 346.40759199999997,
                    "p99": 346.40759199999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 519.579666,
                    "min": 473.86520299999995,
                    "p50": 480.760361,
                    "p95": 519.579666,
                    "p99": 519.579666,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 828.4034399999999,
                    "min": 786.019869,
                    "p50": 818.100873,
                    "p95": 828.4034399999999,
                    "p99": 828.4034399999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 678.1239079999999,
                    "min": 630.0521729999999,
                    "p50": 660.849621,
                    "p95": 678.1239079999999,
                    "p99": 678.1239079999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 169.62644899999998,
                    "min": 129.898397,
                    "p50": 143.6171,
                    "p95": 169.62644899999998,
                    "p99": 169.62644899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 320.004769,
                    "min": 279.174406,
                    "p50": 282.85601099999997,
                    "p95": 320.004769,
                    "p99": 320.004769,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 141.62040199999998,
                    "min": 98.247256,
                    "p50": 123.42160399999999,
                    "p95": 141.62040199999998,
                    "p99": 141.62040199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 263.762905,
                    "min": 225.82871899999998,
                    "p50": 250.594616,
                    "p95": 263.762905,
                    "p99": 263.762905,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 282.415738,
                    "min": 237.543548,
                    "p50": 267.698294,
                    "p95": 282.415738,
                    "p99": 282.415738,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 108.02138599999999,
                    "min": 66.868083,
                    "p50": 103.046587,
                    "p95": 108.02138599999999,
                    "p99": 108.02138599999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 217.83821999999998,
                    "min": 178.48049699999999,
                    "p50": 188.61064399999998,
                    "p95": 217.83821999999998,
                    "p99": 217.83821999999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 236.54509199999998,
                    "min": 191.372686,
                    "p50": 219.11666,
                    "p95": 236.54509199999998,
                    "p99": 236.54509199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 120.365021,
                    "min": 81.57184199999999,
                    "p50": 84.173518,
                    "p95": 120.365021,
                    "p99": 120.365021,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 91.51452499999999,
                    "min": 51.546974,
                    "p50": 74.823655,
                    "p95": 91.51452499999999,
                    "p99": 91.51452499999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 562.7613759999999,
                    "min": 245.400069,
                    "p50": 248.85804399999998,
                    "p95": 562.7613759999999,
                    "p99": 562.7613759999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 198.42324499999998,
                    "min": 162.03561299999998,
                    "p50": 188.57459699999998,
                    "p95": 198.42324499999998,
                    "p99": 198.42324499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 181.435951,
                    "min": 145.407368,
                    "p50": 172.51944899999998,
                    "p95": 181.435951,
                    "p99": 181.435951,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 382.02736899999996,
                    "min": 332.979968,
                    "p50": 349.705656,
                    "p95": 382.02736899999996,
                    "p99": 382.02736899999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 557.65647,
                    "min": 520.187595,
                    "p50": 546.992922,
                    "p95": 557.65647,
                    "p99": 557.65647,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 486.60840099999996,
                    "min": 443.462907,
                    "p50": 475.08971699999995,
                    "p95": 486.60840099999996,
                    "p99": 486.60840099999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.14645099999998,
                    "min": 114.92082699999999,
                    "p50": 145.048227,
                    "p95": 156.14645099999998,
                    "p99": 156.14645099999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 788.252588,
                    "min": 737.631838,
                    "p50": 759.81747,
                    "p95": 788.252588,
                    "p99": 788.252588,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 338.65844699999997,
                    "min": 299.174217,
                    "p50": 335.32244099999997,
                    "p95": 338.65844699999997,
                    "p99": 338.65844699999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 225.748246,
                    "min": 182.374147,
                    "p50": 197.85993299999998,
                    "p95": 225.748246,
                    "p99": 225.748246,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 452.429554,
                    "min": 406.391644,
                    "p50": 440.67762999999997,
                    "p95": 452.429554,
                    "p99": 452.429554,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 275.165301,
                    "min": 223.081782,
                    "p50": 245.292455,
                    "p95": 275.165301,
                    "p99": 275.165301,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 689.744202,
                    "min": 642.116912,
                    "p50": 656.9569369999999,
                    "p95": 689.744202,
                    "p99": 689.744202,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 187.480159,
                    "min": 146.395478,
                    "p50": 159.547188,
                    "p95": 187.480159,
                    "p99": 187.480159,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 614.8763819999999,
                    "min": 540.0679349999999,
                    "p50": 590.054627,
                    "p95": 614.8763819999999,
                    "p99": 614.8763819999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 303.068046,
                    "min": 260.421661,
                    "p50": 284.63176599999997,
                    "p95": 303.068046,
                    "p99": 303.068046,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 544.2762369999999,
                    "min": 482.958261,
                    "p50": 506.938558,
                    "p95": 544.2762369999999,
                    "p99": 544.2762369999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 391.133103,
                    "min": 369.501485,
                    "p50": 376.445857,
                    "p95": 391.133103,
                    "p99": 391.133103,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.035453,
                    "min": 199.80539199999998,
                    "p50": 208.18076,
                    "p95": 227.035453,
                    "p99": 227.035453,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 674.2487669999999,
                    "min": 594.7395,
                    "p50": 633.166847,
                    "p95": 674.2487669999999,
                    "p99": 674.2487669999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 406.09959899999996,
                    "min": 356.23470499999996,
                    "p50": 398.959023,
                    "p95": 406.09959899999996,
                    "p99": 406.09959899999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 592.948941,
                    "min": 518.314086,
                    "p50": 554.025704,
                    "p95": 592.948941,
                    "p99": 592.948941,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 925.344432,
                    "min": 799.144864,
                    "p50": 824.424576,
                    "p95": 925.344432,
                    "p99": 925.344432,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 494.644613,
                    "min": 442.85324299999996,
                    "p50": 474.347517,
                    "p95": 494.644613,
                    "p99": 494.644613,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 627.887574,
                    "min": 562.575126,
                    "p50": 583.133698,
                    "p95": 627.887574,
                    "p99": 627.887574,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1342.23851,
                    "min": 1185.6438759999999,
                    "p50": 1211.728854,
                    "p95": 1342.23851,
                    "p99": 1342.23851,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 334.948961,
                    "min": 277.075965,
                    "p50": 283.710347,
                    "p95": 334.948961,
                    "p99": 334.948961,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 552.2231019999999,
                    "min": 122.26817299999999,
                    "p50": 159.059088,
                    "p95": 552.2231019999999,
                    "p99": 552.2231019999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 449.56780599999996,
                    "min": 396.439551,
                    "p50": 430.809763,
                    "p95": 449.56780599999996,
                    "p99": 449.56780599999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 275.132159,
                    "min": 239.52825199999998,
                    "p50": 265.699995,
                    "p95": 275.132159,
                    "p99": 275.132159,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.511611,
                    "min": 161.055757,
                    "p50": 189.950119,
                    "p95": 198.511611,
                    "p99": 198.511611,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 370.84655599999996,
                    "min": 318.586609,
                    "p50": 356.480459,
                    "p95": 370.84655599999996,
                    "p99": 370.84655599999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 815.271136,
                    "min": 692.2509249999999,
                    "p50": 723.9567579999999,
                    "p95": 815.271136,
                    "p99": 815.271136,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 538.571857,
                    "min": 472.32931299999996,
                    "p50": 502.809604,
                    "p95": 538.571857,
                    "p99": 538.571857,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 497.326264,
                    "min": 449.576084,
                    "p50": 482.504435,
                    "p95": 497.326264,
                    "p99": 497.326264,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 560.5956729999999,
                    "min": 517.522445,
                    "p50": 554.427201,
                    "p95": 560.5956729999999,
                    "p99": 560.5956729999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 598.6019679999999,
                    "min": 553.235827,
                    "p50": 592.381795,
                    "p95": 598.6019679999999,
                    "p99": 598.6019679999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 373.36238599999996,
                    "min": 335.95282599999996,
                    "p50": 360.70574799999997,
                    "p95": 373.36238599999996,
                    "p99": 373.36238599999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 263.861553,
                    "min": 224.43986099999998,
                    "p50": 262.496296,
                    "p95": 263.861553,
                    "p99": 263.861553,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 342.79540399999996,
                    "min": 297.72076899999996,
                    "p50": 301.363606,
                    "p95": 342.79540399999996,
                    "p99": 342.79540399999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 190.589036,
                    "min": 150.955885,
                    "p50": 153.24748499999998,
                    "p95": 190.589036,
                    "p99": 190.589036,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 228.58532699999998,
                    "min": 188.024669,
                    "p50": 221.367202,
                    "p95": 228.58532699999998,
                    "p99": 228.58532699999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 413.643286,
                    "min": 369.561084,
                    "p50": 396.577514,
                    "p95": 413.643286,
                    "p99": 413.643286,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 303.89068299999997,
                    "min": 261.40522799999997,
                    "p50": 288.610667,
                    "p95": 303.89068299999997,
                    "p99": 303.89068299999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 784.801714,
                    "min": 739.0031,
                    "p50": 773.638605,
                    "p95": 784.801714,
                    "p99": 784.801714,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 451.44732799999997,
                    "min": 410.18793,
                    "p50": 442.586554,
                    "p95": 451.44732799999997,
                    "p99": 451.44732799999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 698.9861629999999,
                    "min": 646.9481119999999,
                    "p50": 668.193909,
                    "p95": 698.9861629999999,
                    "p99": 698.9861629999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.249346,
                    "min": 113.77280999999999,
                    "p50": 116.02525399999999,
                    "p95": 151.249346,
                    "p99": 151.249346,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 517.94065,
                    "min": 480.82739499999997,
                    "p50": 509.406779,
                    "p95": 517.94065,
                    "p99": 517.94065,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 359.872114,
                    "min": 312.62575599999997,
                    "p50": 353.17785,
                    "p95": 359.872114,
                    "p99": 359.872114,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 340.777825,
                    "min": 166.968389,
                    "p50": 197.398396,
                    "p95": 340.777825,
                    "p99": 340.777825,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 143.289428,
                    "min": 108.754621,
                    "p50": 112.52551899999999,
                    "p95": 143.289428,
                    "p99": 143.289428,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 123.00352199999999,
                    "min": 81.204427,
                    "p50": 113.325463,
                    "p95": 123.00352199999999,
                    "p99": 123.00352199999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 396.76032599999996,
                    "min": 343.89622499999996,
                    "p50": 373.888156,
                    "p95": 396.76032599999996,
                    "p99": 396.76032599999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 438.20003699999995,
                    "min": 387.87393399999996,
                    "p50": 425.04803599999997,
                    "p95": 438.20003699999995,
                    "p99": 438.20003699999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 283.72493099999997,
                    "min": 237.230975,
                    "p50": 277.228184,
                    "p95": 283.72493099999997,
                    "p99": 283.72493099999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 577.7900119999999,
                    "min": 521.934625,
                    "p50": 558.435131,
                    "p95": 577.7900119999999,
                    "p99": 577.7900119999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 304.132677,
                    "min": 265.61864099999997,
                    "p50": 283.790712,
                    "p95": 304.132677,
                    "p99": 304.132677,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 228.08458299999998,
                    "min": 187.321325,
                    "p50": 220.82732,
                    "p95": 228.08458299999998,
                    "p99": 228.08458299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 516.054839,
                    "min": 460.31607399999996,
                    "p50": 499.80911899999995,
                    "p95": 516.054839,
                    "p99": 516.054839,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 412.581747,
                    "min": 366.032899,
                    "p50": 403.608643,
                    "p95": 412.581747,
                    "p99": 412.581747,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 176.75225899999998,
                    "min": 134.40690899999998,
                    "p50": 170.148469,
                    "p95": 176.75225899999998,
                    "p99": 176.75225899999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 252.60586099999998,
                    "min": 212.420795,
                    "p50": 246.508861,
                    "p95": 252.60586099999998,
                    "p99": 252.60586099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 853.9793689999999,
                    "min": 783.938718,
                    "p50": 809.535323,
                    "p95": 853.9793689999999,
                    "p99": 853.9793689999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 332.177329,
                    "min": 289.782927,
                    "p50": 312.37419,
                    "p95": 332.177329,
                    "p99": 332.177329,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1088.110819,
                    "min": 1052.2033999999999,
                    "p50": 1080.363232,
                    "p95": 1088.110819,
                    "p99": 1088.110819,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 464.035011,
                    "min": 424.150758,
                    "p50": 448.239848,
                    "p95": 464.035011,
                    "p99": 464.035011,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.324685,
                    "min": 215.77806199999998,
                    "p50": 239.060791,
                    "p95": 259.324685,
                    "p99": 259.324685,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 897.7443189999999,
                    "min": 835.937778,
                    "p50": 865.453794,
                    "p95": 897.7443189999999,
                    "p99": 897.7443189999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 644.348031,
                    "min": 590.163629,
                    "p50": 631.817228,
                    "p95": 644.348031,
                    "p99": 644.348031,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 295.13496399999997,
                    "min": 256.310478,
                    "p50": 271.574146,
                    "p95": 295.13496399999997,
                    "p99": 295.13496399999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 691.453659,
                    "min": 631.210755,
                    "p50": 661.298094,
                    "p95": 691.453659,
                    "p99": 691.453659,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 338.010738,
                    "min": 297.866579,
                    "p50": 327.933455,
                    "p95": 338.010738,
                    "p99": 338.010738,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 558.850641,
                    "min": 508.020497,
                    "p50": 531.642286,
                    "p95": 558.850641,
                    "p99": 558.850641,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.330038,
                    "min": 382.29900399999997,
                    "p50": 415.65801,
                    "p95": 425.330038,
                    "p99": 425.330038,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 593.337782,
                    "min": 549.710485,
                    "p50": 572.743938,
                    "p95": 593.337782,
                    "p99": 593.337782,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 787.746391,
                    "min": 729.5048409999999,
                    "p50": 752.947096,
                    "p95": 787.746391,
                    "p99": 787.746391,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 382.080003,
                    "min": 345.050101,
                    "p50": 365.649202,
                    "p95": 382.080003,
                    "p99": 382.080003,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 493.83584099999996,
                    "min": 460.296965,
                    "p50": 473.25366599999995,
                    "p95": 493.83584099999996,
                    "p99": 493.83584099999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.852283,
                    "min": 129.130311,
                    "p50": 165.79021799999998,
                    "p95": 168.852283,
                    "p99": 168.852283,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.696532,
                    "min": 169.81283399999998,
                    "p50": 192.918317,
                    "p95": 213.696532,
                    "p99": 213.696532,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 399.055858,
                    "min": 350.142094,
                    "p50": 369.961263,
                    "p95": 399.055858,
                    "p99": 399.055858,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 172.698311,
                    "min": 143.374663,
                    "p50": 146.436592,
                    "p95": 172.698311,
                    "p99": 172.698311,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 467.902174,
                    "min": 420.12150299999996,
                    "p50": 431.475372,
                    "p95": 467.902174,
                    "p99": 467.902174,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 539.900802,
                    "min": 487.344161,
                    "p50": 498.24639199999996,
                    "p95": 539.900802,
                    "p99": 539.900802,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 220.12515299999998,
                    "min": 176.973881,
                    "p50": 181.70064399999998,
                    "p95": 220.12515299999998,
                    "p99": 220.12515299999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 362.16026899999997,
                    "min": 316.21390299999996,
                    "p50": 342.246712,
                    "p95": 362.16026899999997,
                    "p99": 362.16026899999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 326.96517,
                    "min": 284.64023199999997,
                    "p50": 319.116114,
                    "p95": 326.96517,
                    "p99": 326.96517,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 255.318805,
                    "min": 211.76658999999998,
                    "p50": 254.71664099999998,
                    "p95": 255.318805,
                    "p99": 255.318805,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.174789,
                    "min": 110.62449,
                    "p50": 143.64268199999998,
                    "p95": 148.174789,
                    "p99": 148.174789,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 662.570647,
                    "min": 611.549569,
                    "p50": 648.8858859999999,
                    "p95": 662.570647,
                    "p99": 662.570647,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 435.32658299999997,
                    "min": 385.08453699999995,
                    "p50": 425.40134,
                    "p95": 435.32658299999997,
                    "p99": 435.32658299999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 503.70773099999997,
                    "min": 451.88710499999996,
                    "p50": 471.303965,
                    "p95": 503.70773099999997,
                    "p99": 503.70773099999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 747.2946949999999,
                    "min": 708.578141,
                    "p50": 740.9123109999999,
                    "p95": 747.2946949999999,
                    "p99": 747.2946949999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 570.864334,
                    "min": 522.718984,
                    "p50": 549.875697,
                    "p95": 570.864334,
                    "p99": 570.864334,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 288.15297,
                    "min": 245.281374,
                    "p50": 254.277258,
                    "p95": 288.15297,
                    "p99": 288.15297,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 693.622609,
                    "min": 640.542885,
                    "p50": 685.422789,
                    "p95": 693.622609,
                    "p99": 693.622609,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 403.366428,
                    "min": 380.445502,
                    "p50": 396.456005,
                    "p95": 403.366428,
                    "p99": 403.366428,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 540.186796,
                    "min": 505.28284199999996,
                    "p50": 534.748653,
                    "p95": 540.186796,
                    "p99": 540.186796,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 581.6076029999999,
                    "min": 540.04898,
                    "p50": 566.0876039999999,
                    "p95": 581.6076029999999,
                    "p99": 581.6076029999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 766.715395,
                    "min": 720.6849159999999,
                    "p50": 738.3208199999999,
                    "p95": 766.715395,
                    "p99": 766.715395,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 439.997884,
                    "min": 398.106294,
                    "p50": 402.69857299999995,
                    "p95": 439.997884,
                    "p99": 439.997884,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 258.647577,
                    "min": 217.678876,
                    "p50": 251.887429,
                    "p95": 258.647577,
                    "p99": 258.647577,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 330.463468,
                    "min": 292.565625,
                    "p50": 295.42546899999996,
                    "p95": 330.463468,
                    "p99": 330.463468,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 510.195182,
                    "min": 472.79270299999996,
                    "p50": 494.018444,
                    "p95": 510.195182,
                    "p99": 510.195182,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 480.91445799999997,
                    "min": 435.41042,
                    "p50": 471.557621,
                    "p95": 480.91445799999997,
                    "p99": 480.91445799999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1125.462141,
                    "min": 1081.7911669999999,
                    "p50": 1116.898493,
                    "p95": 1125.462141,
                    "p99": 1125.462141,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 295.404653,
                    "min": 256.327749,
                    "p50": 257.969322,
                    "p95": 295.404653,
                    "p99": 295.404653,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.657751,
                    "min": 112.38345199999999,
                    "p50": 145.157693,
                    "p95": 150.657751,
                    "p99": 150.657751,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 219.05024899999998,
                    "min": 182.486075,
                    "p50": 197.98912199999998,
                    "p95": 219.05024899999998,
                    "p99": 219.05024899999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 370.627075,
                    "min": 329.995472,
                    "p50": 354.657175,
                    "p95": 370.627075,
                    "p99": 370.627075,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.168784,
                    "min": 148.16963099999998,
                    "p50": 173.954959,
                    "p95": 185.168784,
                    "p99": 185.168784,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 819.9174449999999,
                    "min": 693.534495,
                    "p50": 720.591876,
                    "p95": 819.9174449999999,
                    "p99": 819.9174449999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 409.22630999999996,
                    "min": 317.811235,
                    "p50": 330.930458,
                    "p95": 409.22630999999996,
                    "p99": 409.22630999999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 192.95382899999998,
                    "min": 136.647772,
                    "p50": 166.619192,
                    "p95": 192.95382899999998,
                    "p99": 192.95382899999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 238.867258,
                    "min": 185.784572,
                    "p50": 218.24121399999999,
                    "p95": 238.867258,
                    "p99": 238.867258,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 552.639457,
                    "min": 449.241224,
                    "p50": 486.040344,
                    "p95": 552.639457,
                    "p99": 552.639457,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 350.75672199999997,
                    "min": 275.310359,
                    "p50": 296.38247,
                    "p95": 350.75672199999997,
                    "p99": 350.75672199999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1060.1960279999998,
                    "min": 892.459918,
                    "p50": 946.537882,
                    "p95": 1060.1960279999998,
                    "p99": 1060.1960279999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 292.496993,
                    "min": 227.14792899999998,
                    "p50": 257.160166,
                    "p95": 292.496993,
                    "p99": 292.496993,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 579.555876,
                    "min": 495.05334799999997,
                    "p50": 514.775033,
                    "p95": 579.555876,
                    "p99": 579.555876,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 456.837883,
                    "min": 358.101335,
                    "p50": 367.814694,
                    "p95": 456.837883,
                    "p99": 456.837883,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 655.7641689999999,
                    "min": 535.960261,
                    "p50": 558.2326909999999,
                    "p95": 655.7641689999999,
                    "p99": 655.7641689999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 671.203724,
                    "min": 588.9959799999999,
                    "p50": 608.9803919999999,
                    "p95": 671.203724,
                    "p99": 671.203724,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 957.6587059999999,
                    "min": 785.270767,
                    "p50": 799.721181,
                    "p95": 957.6587059999999,
                    "p99": 957.6587059999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 737.6630279999999,
                    "min": 624.991951,
                    "p50": 673.6177299999999,
                    "p95": 737.6630279999999,
                    "p99": 737.6630279999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 505.252238,
                    "min": 404.244109,
                    "p50": 444.185776,
                    "p95": 505.252238,
                    "p99": 505.252238,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 182.902702,
                    "min": 146.302416,
                    "p50": 179.804363,
                    "p95": 182.902702,
                    "p99": 182.902702,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 582.2780819999999,
                    "min": 538.230373,
                    "p50": 563.753819,
                    "p95": 582.2780819999999,
                    "p99": 582.2780819999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 437.172532,
                    "min": 394.708964,
                    "p50": 399.892583,
                    "p95": 437.172532,
                    "p99": 437.172532,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 368.205958,
                    "min": 329.20708199999996,
                    "p50": 358.654233,
                    "p95": 368.205958,
                    "p99": 368.205958,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 261.097709,
                    "min": 215.24354399999999,
                    "p50": 241.162892,
                    "p95": 261.097709,
                    "p99": 261.097709,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 141.892288,
                    "min": 111.345379,
                    "p50": 112.89177099999999,
                    "p95": 141.892288,
                    "p99": 141.892288,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.717967,
                    "min": 179.957718,
                    "p50": 209.578802,
                    "p95": 222.717967,
                    "p99": 222.717967,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 549.919208,
                    "min": 501.965202,
                    "p50": 534.5908039999999,
                    "p95": 549.919208,
                    "p99": 549.919208,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 664.7088689999999,
                    "min": 626.603338,
                    "p50": 636.947096,
                    "p95": 664.7088689999999,
                    "p99": 664.7088689999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 292.031877,
                    "min": 253.487022,
                    "p50": 257.957915,
                    "p95": 292.031877,
                    "p99": 292.031877,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 402.856526,
                    "min": 362.036945,
                    "p50": 387.146826,
                    "p95": 402.856526,
                    "p99": 402.856526,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 760.132265,
                    "min": 714.974666,
                    "p50": 720.954606,
                    "p95": 760.132265,
                    "p99": 760.132265,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 472.90045899999996,
                    "min": 431.172577,
                    "p50": 466.564332,
                    "p95": 472.90045899999996,
                    "p99": 472.90045899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 332.94003399999997,
                    "min": 287.035257,
                    "p50": 291.73830799999996,
                    "p95": 332.94003399999997,
                    "p99": 332.94003399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 505.06552999999997,
                    "min": 465.31359199999997,
                    "p50": 476.42038399999996,
                    "p95": 505.06552999999997,
                    "p99": 505.06552999999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1266.735101,
                    "min": 1203.4193619999999,
                    "p50": 1227.2458689999999,
                    "p95": 1266.735101,
                    "p99": 1266.735101,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 707.369554,
                    "min": 638.846859,
                    "p50": 676.763281,
                    "p95": 707.369554,
                    "p99": 707.369554,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 885.609257,
                    "min": 793.2627739999999,
                    "p50": 830.295261,
                    "p95": 885.609257,
                    "p99": 885.609257,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 927.160614,
                    "min": 872.601741,
                    "p50": 889.661709,
                    "p95": 927.160614,
                    "p99": 927.160614,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1216.733047,
                    "min": 1118.429873,
                    "p50": 1133.665923,
                    "p95": 1216.733047,
                    "p99": 1216.733047,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1093.9136039999999,
                    "min": 1032.498071,
                    "p50": 1063.310463,
                    "p95": 1093.9136039999999,
                    "p99": 1093.9136039999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 377.02712199999996,
                    "min": 322.36011199999996,
                    "p50": 363.709246,
                    "p95": 377.02712199999996,
                    "p99": 377.02712199999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 773.4851239999999,
                    "min": 713.695882,
                    "p50": 746.701814,
                    "p95": 773.4851239999999,
                    "p99": 773.4851239999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1048.146369,
                    "min": 952.6528179999999,
                    "p50": 995.304684,
                    "p95": 1048.146369,
                    "p99": 1048.146369,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1471.800643,
                    "min": 1393.8266079999999,
                    "p50": 1435.656607,
                    "p95": 1471.800643,
                    "p99": 1471.800643,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 463.79470999999995,
                    "min": 403.126597,
                    "p50": 436.329727,
                    "p95": 463.79470999999995,
                    "p99": 463.79470999999995,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 604.015051,
                    "min": 558.079737,
                    "p50": 596.6216099999999,
                    "p95": 604.015051,
                    "p99": 604.015051,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 295.547572,
                    "min": 242.66277499999998,
                    "p50": 267.490855,
                    "p95": 295.547572,
                    "p99": 295.547572,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 541.277434,
                    "min": 480.231224,
                    "p50": 493.195683,
                    "p95": 541.277434,
                    "p99": 541.277434,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1701.429784,
                    "min": 1590.720957,
                    "p50": 1638.403147,
                    "p95": 1701.429784,
                    "p99": 1701.429784,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1673.3190009999998,
                    "min": 1591.645578,
                    "p50": 1646.9964989999999,
                    "p95": 1673.3190009999998,
                    "p99": 1673.3190009999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1170.283222,
                    "min": 1118.4260179999999,
                    "p50": 1151.5452719999998,
                    "p95": 1170.283222,
                    "p99": 1170.283222,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1007.3883639999999,
                    "min": 971.2618219999999,
                    "p50": 984.4824689999999,
                    "p95": 1007.3883639999999,
                    "p99": 1007.3883639999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 761.822813,
                    "min": 718.255171,
                    "p50": 732.284438,
                    "p95": 761.822813,
                    "p99": 761.822813,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 702.083345,
                    "min": 644.6134589999999,
                    "p50": 676.035402,
                    "p95": 702.083345,
                    "p99": 702.083345,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 528.451371,
                    "min": 476.1483,
                    "p50": 493.276389,
                    "p95": 528.451371,
                    "p99": 528.451371,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1108.6478849999999,
                    "min": 1025.453324,
                    "p50": 1082.715132,
                    "p95": 1108.6478849999999,
                    "p99": 1108.6478849999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 375.845415,
                    "min": 320.912666,
                    "p50": 358.92341899999997,
                    "p95": 375.845415,
                    "p99": 375.845415,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 938.3151819999999,
                    "min": 877.370542,
                    "p50": 909.848923,
                    "p95": 938.3151819999999,
                    "p99": 938.3151819999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 453.12143899999995,
                    "min": 398.898041,
                    "p50": 433.87676899999997,
                    "p95": 453.12143899999995,
                    "p99": 453.12143899999995,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1462.629039,
                    "min": 1401.3398479999998,
                    "p50": 1427.163985,
                    "p95": 1462.629039,
                    "p99": 1462.629039,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 272.12606999999997,
                    "min": 243.91141499999998,
                    "p50": 248.459486,
                    "p95": 272.12606999999997,
                    "p99": 272.12606999999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 604.282036,
                    "min": 560.535132,
                    "p50": 595.740501,
                    "p95": 604.282036,
                    "p99": 604.282036,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1274.125924,
                    "min": 1182.376677,
                    "p50": 1236.193511,
                    "p95": 1274.125924,
                    "p99": 1274.125924,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 861.482821,
                    "min": 796.993613,
                    "p50": 839.790974,
                    "p95": 861.482821,
                    "p99": 861.482821,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 919.0386239999999,
                    "min": 875.7096469999999,
                    "p50": 898.002355,
                    "p95": 919.0386239999999,
                    "p99": 919.0386239999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 543.2103589999999,
                    "min": 482.36728899999997,
                    "p50": 509.63057299999997,
                    "p95": 543.2103589999999,
                    "p99": 543.2103589999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 460.702729,
                    "min": 397.25820699999997,
                    "p50": 436.27263,
                    "p95": 460.702729,
                    "p99": 460.702729,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 871.023912,
                    "min": 799.012247,
                    "p50": 838.193711,
                    "p95": 871.023912,
                    "p99": 871.023912,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1710.7991849999999,
                    "min": 1592.723307,
                    "p50": 1621.0158079999999,
                    "p95": 1710.7991849999999,
                    "p99": 1710.7991849999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 376.74232,
                    "min": 323.636456,
                    "p50": 330.674175,
                    "p95": 376.74232,
                    "p99": 376.74232,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 612.281992,
                    "min": 567.353989,
                    "p50": 595.832671,
                    "p95": 612.281992,
                    "p99": 612.281992,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 288.844696,
                    "min": 246.722241,
                    "p50": 277.531313,
                    "p95": 288.844696,
                    "p99": 288.844696,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1262.96841,
                    "min": 1191.7308,
                    "p50": 1220.414743,
                    "p95": 1262.96841,
                    "p99": 1262.96841,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1178.00066,
                    "min": 1107.7751739999999,
                    "p50": 1154.467925,
                    "p95": 1178.00066,
                    "p99": 1178.00066,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1041.621824,
                    "min": 951.592323,
                    "p50": 998.8370779999999,
                    "p95": 1041.621824,
                    "p99": 1041.621824,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1095.605887,
                    "min": 1029.393852,
                    "p50": 1076.4395869999998,
                    "p95": 1095.605887,
                    "p99": 1095.605887,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 796.445618,
                    "min": 717.4373509999999,
                    "p50": 736.3753419999999,
                    "p95": 796.445618,
                    "p99": 796.445618,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1485.005187,
                    "min": 1401.962253,
                    "p50": 1431.9301679999999,
                    "p95": 1485.005187,
                    "p99": 1485.005187,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 685.187115,
                    "min": 650.463045,
                    "p50": 670.073912,
                    "p95": 685.187115,
                    "p99": 685.187115,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 383.259618,
                    "min": 342.842259,
                    "p50": 358.24087,
                    "p95": 383.259618,
                    "p99": 383.259618,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 231.067796,
                    "min": 184.720676,
                    "p50": 193.60437299999998,
                    "p95": 231.067796,
                    "p99": 231.067796,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 447.99292499999996,
                    "min": 382.98614299999997,
                    "p50": 425.99834799999996,
                    "p95": 447.99292499999996,
                    "p99": 447.99292499999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 520.1394839999999,
                    "min": 454.009822,
                    "p50": 495.01553099999995,
                    "p95": 520.1394839999999,
                    "p99": 520.1394839999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.999451,
                    "min": 80.74446499999999,
                    "p50": 112.64447299999999,
                    "p95": 122.999451,
                    "p99": 122.999451,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 366.853382,
                    "min": 327.46536699999996,
                    "p50": 349.044917,
                    "p95": 366.853382,
                    "p99": 366.853382,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 198.23692499999999,
                    "min": 159.407228,
                    "p50": 190.656242,
                    "p95": 198.23692499999999,
                    "p99": 198.23692499999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 148.382209,
                    "min": 106.79513,
                    "p50": 112.292542,
                    "p95": 148.382209,
                    "p99": 148.382209,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 847.9300069999999,
                    "min": 762.531656,
                    "p50": 828.390318,
                    "p95": 847.9300069999999,
                    "p99": 847.9300069999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 282.005319,
                    "min": 231.972986,
                    "p50": 261.646999,
                    "p95": 282.005319,
                    "p99": 282.005319,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 338.505067,
                    "min": 279.84461899999997,
                    "p50": 320.84441799999996,
                    "p95": 338.505067,
                    "p99": 338.505067,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 418.03369299999997,
                    "min": 366.26164,
                    "p50": 392.665244,
                    "p95": 418.03369299999997,
                    "p99": 418.03369299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 176.867767,
                    "min": 129.068894,
                    "p50": 161.063471,
                    "p95": 176.867767,
                    "p99": 176.867767,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1392.5096389999999,
                    "min": 1282.4458499999998,
                    "p50": 1346.541966,
                    "p95": 1392.5096389999999,
                    "p99": 1392.5096389999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 585.682724,
                    "min": 524.646289,
                    "p50": 547.552435,
                    "p95": 585.682724,
                    "p99": 585.682724,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 316.732449,
                    "min": 259.88556,
                    "p50": 307.311353,
                    "p95": 316.732449,
                    "p99": 316.732449,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 256.393908,
                    "min": 209.664773,
                    "p50": 252.64828699999998,
                    "p95": 256.393908,
                    "p99": 256.393908,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1124.654082,
                    "min": 1006.0565929999999,
                    "p50": 1065.7087649999999,
                    "p95": 1124.654082,
                    "p99": 1124.654082,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 824.7293589999999,
                    "min": 764.736034,
                    "p50": 795.6859599999999,
                    "p95": 824.7293589999999,
                    "p99": 824.7293589999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 265.16943299999997,
                    "min": 232.13658199999998,
                    "p50": 235.63110899999998,
                    "p95": 265.16943299999997,
                    "p99": 265.16943299999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 549.851498,
                    "min": 502.03714299999996,
                    "p50": 526.0096679999999,
                    "p95": 549.851498,
                    "p99": 549.851498,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 391.733687,
                    "min": 342.90632899999997,
                    "p50": 358.419893,
                    "p95": 391.733687,
                    "p99": 391.733687,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 434.232268,
                    "min": 382.608145,
                    "p50": 414.324858,
                    "p95": 434.232268,
                    "p99": 434.232268,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 154.299142,
                    "min": 119.40974999999999,
                    "p50": 133.128083,
                    "p95": 154.299142,
                    "p99": 154.299142,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 472.24940699999996,
                    "min": 425.93063,
                    "p50": 451.032804,
                    "p95": 472.24940699999996,
                    "p99": 472.24940699999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 236.339167,
                    "min": 193.793926,
                    "p50": 226.61859199999998,
                    "p95": 236.339167,
                    "p99": 236.339167,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 579.5120539999999,
                    "min": 540.513234,
                    "p50": 567.510898,
                    "p95": 579.5120539999999,
                    "p99": 579.5120539999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 352.75501499999996,
                    "min": 307.464675,
                    "p50": 335.72405599999996,
                    "p95": 352.75501499999996,
                    "p99": 352.75501499999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 721.842597,
                    "min": 674.073931,
                    "p50": 711.018822,
                    "p95": 721.842597,
                    "p99": 721.842597,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 508.635245,
                    "min": 470.54335299999997,
                    "p50": 498.39479,
                    "p95": 508.635245,
                    "p99": 508.635245,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 316.32762299999996,
                    "min": 268.43005,
                    "p50": 301.79909599999996,
                    "p95": 316.32762299999996,
                    "p99": 316.32762299999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.80961399999998,
                    "min": 157.451934,
                    "p50": 182.56214699999998,
                    "p95": 198.80961399999998,
                    "p99": 198.80961399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 627.729778,
                    "min": 572.193043,
                    "p50": 618.8043,
                    "p95": 627.729778,
                    "p99": 627.729778,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1211.759409,
                    "min": 1146.259315,
                    "p50": 1187.3818449999999,
                    "p95": 1211.759409,
                    "p99": 1211.759409,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 251.345937,
                    "min": 217.372257,
                    "p50": 245.34251799999998,
                    "p95": 251.345937,
                    "p99": 251.345937,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 281.78977599999996,
                    "min": 240.17982999999998,
                    "p50": 267.014674,
                    "p95": 281.78977599999996,
                    "p99": 281.78977599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 161.663545,
                    "min": 121.427054,
                    "p50": 148.33450399999998,
                    "p95": 161.663545,
                    "p99": 161.663545,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 230.81463699999998,
                    "min": 190.579334,
                    "p50": 193.85347199999998,
                    "p95": 230.81463699999998,
                    "p99": 230.81463699999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 370.817665,
                    "min": 328.795077,
                    "p50": 357.854986,
                    "p95": 370.817665,
                    "p99": 370.817665,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 111.304418,
                    "min": 73.503856,
                    "p50": 75.14807499999999,
                    "p95": 111.304418,
                    "p99": 111.304418,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 754.478077,
                    "min": 709.0596459999999,
                    "p50": 744.836954,
                    "p95": 754.478077,
                    "p99": 754.478077,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 304.419777,
                    "min": 261.881482,
                    "p50": 266.94086699999997,
                    "p95": 304.419777,
                    "p99": 304.419777,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 332.497932,
                    "min": 305.118367,
                    "p50": 311.85067699999996,
                    "p95": 332.497932,
                    "p99": 332.497932,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 184.013149,
                    "min": 142.756912,
                    "p50": 175.95939099999998,
                    "p95": 184.013149,
                    "p99": 184.013149,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 458.071965,
                    "min": 412.963306,
                    "p50": 444.621242,
                    "p95": 458.071965,
                    "p99": 458.071965,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 327.28124199999996,
                    "min": 288.238302,
                    "p50": 312.634457,
                    "p95": 327.28124199999996,
                    "p99": 327.28124199999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 208.489418,
                    "min": 167.44699799999998,
                    "p50": 186.22053699999998,
                    "p95": 208.489418,
                    "p99": 208.489418,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 990.816519,
                    "min": 946.4504619999999,
                    "p50": 972.73862,
                    "p95": 990.816519,
                    "p99": 990.816519,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.026041,
                    "min": 99.76401299999999,
                    "p50": 130.544782,
                    "p95": 137.026041,
                    "p99": 137.026041,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 395.908621,
                    "min": 356.02480299999996,
                    "p50": 361.545792,
                    "p95": 395.908621,
                    "p99": 395.908621,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 522.024687,
                    "min": 472.522424,
                    "p50": 504.63190299999997,
                    "p95": 522.024687,
                    "p99": 522.024687,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 653.262466,
                    "min": 591.3553549999999,
                    "p50": 645.901697,
                    "p95": 653.262466,
                    "p99": 653.262466,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 576.189534,
                    "min": 497.81679299999996,
                    "p50": 550.627154,
                    "p95": 576.189534,
                    "p99": 576.189534,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 878.57056,
                    "min": 839.369249,
                    "p50": 852.945397,
                    "p95": 878.57056,
                    "p99": 878.57056,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 763.698778,
                    "min": 716.612858,
                    "p50": 751.6346239999999,
                    "p95": 763.698778,
                    "p99": 763.698778,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 599.054089,
                    "min": 548.379201,
                    "p50": 590.715056,
                    "p95": 599.054089,
                    "p99": 599.054089,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 741.624605,
                    "min": 656.628984,
                    "p50": 690.675935,
                    "p95": 741.624605,
                    "p99": 741.624605,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 839.056171,
                    "min": 767.794869,
                    "p50": 803.060751,
                    "p95": 839.056171,
                    "p99": 839.056171,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 204.66856299999998,
                    "min": 181.772126,
                    "p50": 201.95165,
                    "p95": 204.66856299999998,
                    "p99": 204.66856299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.123701,
                    "min": 248.898743,
                    "p50": 287.49729099999996,
                    "p95": 322.123701,
                    "p99": 322.123701,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 347.08525399999996,
                    "min": 296.921109,
                    "p50": 305.077123,
                    "p95": 347.08525399999996,
                    "p99": 347.08525399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1140.2686549999999,
                    "min": 1051.33457,
                    "p50": 1094.023397,
                    "p95": 1140.2686549999999,
                    "p99": 1140.2686549999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 398.240073,
                    "min": 337.049483,
                    "p50": 365.268603,
                    "p95": 398.240073,
                    "p99": 398.240073,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 980.098933,
                    "min": 928.0785639999999,
                    "p50": 973.191334,
                    "p95": 980.098933,
                    "p99": 980.098933,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 501.61204299999997,
                    "min": 442.343827,
                    "p50": 488.359158,
                    "p95": 501.61204299999997,
                    "p99": 501.61204299999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 443.343728,
                    "min": 398.500695,
                    "p50": 416.58214,
                    "p95": 443.343728,
                    "p99": 443.343728,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.21236199999998,
                    "min": 144.318241,
                    "p50": 157.081046,
                    "p95": 171.21236199999998,
                    "p99": 171.21236199999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 253.972301,
                    "min": 223.437986,
                    "p50": 243.719943,
                    "p95": 253.972301,
                    "p99": 253.972301,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 330.081619,
                    "min": 260.712952,
                    "p50": 302.384437,
                    "p95": 330.081619,
                    "p99": 330.081619,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.003287,
                    "min": 94.4315,
                    "p50": 102.478573,
                    "p95": 115.003287,
                    "p99": 115.003287,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 203.37557999999999,
                    "min": 169.521819,
                    "p50": 180.95828799999998,
                    "p95": 203.37557999999999,
                    "p99": 203.37557999999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 279.611925,
                    "min": 220.582756,
                    "p50": 264.840979,
                    "p95": 279.611925,
                    "p99": 279.611925,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 99.64771499999999,
                    "min": 83.419072,
                    "p50": 89.93642899999999,
                    "p95": 99.64771499999999,
                    "p99": 99.64771499999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 154.867219,
                    "min": 127.907968,
                    "p50": 131.35790599999999,
                    "p95": 154.867219,
                    "p99": 154.867219,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 158.44116499999998,
                    "min": 128.296435,
                    "p50": 140.890983,
                    "p95": 158.44116499999998,
                    "p99": 158.44116499999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 455.847869,
                    "min": 360.10358099999996,
                    "p50": 432.875448,
                    "p95": 455.847869,
                    "p99": 455.847869,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 578.86128,
                    "min": 490.28184999999996,
                    "p50": 542.387929,
                    "p95": 578.86128,
                    "p99": 578.86128,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 210.396794,
                    "min": 159.341894,
                    "p50": 188.396999,
                    "p95": 210.396794,
                    "p99": 210.396794,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1371.255805,
                    "min": 1170.194178,
                    "p50": 1283.95451,
                    "p95": 1371.255805,
                    "p99": 1371.255805,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 71.953499,
                    "min": 52.942197,
                    "p50": 60.720434999999995,
                    "p95": 71.953499,
                    "p99": 71.953499,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 136.080441,
                    "min": 100.01472299999999,
                    "p50": 121.529643,
                    "p95": 136.080441,
                    "p99": 136.080441,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 705.34949,
                    "min": 628.087321,
                    "p50": 670.973116,
                    "p95": 705.34949,
                    "p99": 705.34949,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 569.867028,
                    "min": 486.581462,
                    "p50": 539.079807,
                    "p95": 569.867028,
                    "p99": 569.867028,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 461.80508799999996,
                    "min": 403.895287,
                    "p50": 426.41949999999997,
                    "p95": 461.80508799999996,
                    "p99": 461.80508799999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 612.764878,
                    "min": 423.739304,
                    "p50": 505.534994,
                    "p95": 612.764878,
                    "p99": 612.764878,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 277.861749,
                    "min": 215.843503,
                    "p50": 253.291429,
                    "p95": 277.861749,
                    "p99": 277.861749,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1318.487469,
                    "min": 1216.4805079999999,
                    "p50": 1263.9959179999998,
                    "p95": 1318.487469,
                    "p99": 1318.487469,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 803.684587,
                    "min": 718.4173519999999,
                    "p50": 746.0075889999999,
                    "p95": 803.684587,
                    "p99": 803.684587,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 586.146227,
                    "min": 538.342505,
                    "p50": 562.65824,
                    "p95": 586.146227,
                    "p99": 586.146227,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 552.401737,
                    "min": 497.98387199999996,
                    "p50": 533.998874,
                    "p95": 552.401737,
                    "p99": 552.401737,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 372.95758,
                    "min": 282.741455,
                    "p50": 326.111014,
                    "p95": 372.95758,
                    "p99": 372.95758,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 885.2513759999999,
                    "min": 827.582064,
                    "p50": 837.403542,
                    "p95": 885.2513759999999,
                    "p99": 885.2513759999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 209.756643,
                    "min": 165.133643,
                    "p50": 174.50006399999998,
                    "p95": 209.756643,
                    "p99": 209.756643,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 652.493164,
                    "min": 630.762618,
                    "p50": 640.138779,
                    "p95": 652.493164,
                    "p99": 652.493164,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 396.70324899999997,
                    "min": 359.243899,
                    "p50": 371.536537,
                    "p95": 396.70324899999997,
                    "p99": 396.70324899999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.230706,
                    "min": 272.733516,
                    "p50": 285.762316,
                    "p95": 303.230706,
                    "p99": 303.230706,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 251.92711,
                    "min": 205.676175,
                    "p50": 208.896268,
                    "p95": 251.92711,
                    "p99": 251.92711,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 698.293083,
                    "min": 599.627227,
                    "p50": 626.095727,
                    "p95": 698.293083,
                    "p99": 698.293083,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1157.081976,
                    "min": 1117.562958,
                    "p50": 1133.30746,
                    "p95": 1157.081976,
                    "p99": 1157.081976,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 237.13482499999998,
                    "min": 225.14847899999998,
                    "p50": 235.686838,
                    "p95": 237.13482499999998,
                    "p99": 237.13482499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 845.174489,
                    "min": 780.9525729999999,
                    "p50": 797.4436479999999,
                    "p95": 845.174489,
                    "p99": 845.174489,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 904.2819509999999,
                    "min": 843.218167,
                    "p50": 875.5765819999999,
                    "p95": 904.2819509999999,
                    "p99": 904.2819509999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 313.807329,
                    "min": 290.3452,
                    "p50": 303.023402,
                    "p95": 313.807329,
                    "p99": 313.807329,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 759.462139,
                    "min": 719.759403,
                    "p50": 728.066516,
                    "p95": 759.462139,
                    "p99": 759.462139,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1025.077119,
                    "min": 955.807552,
                    "p50": 992.40306,
                    "p95": 1025.077119,
                    "p99": 1025.077119,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 473.30950099999995,
                    "min": 406.93285099999997,
                    "p50": 421.717014,
                    "p95": 473.30950099999995,
                    "p99": 473.30950099999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 669.115322,
                    "min": 596.7764149999999,
                    "p50": 607.487628,
                    "p95": 669.115322,
                    "p99": 669.115322,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 601.726546,
                    "min": 540.862035,
                    "p50": 547.186429,
                    "p95": 601.726546,
                    "p99": 601.726546,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1367.703417,
                    "min": 1264.916743,
                    "p50": 1280.5308,
                    "p95": 1367.703417,
                    "p99": 1367.703417,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 684.487536,
                    "min": 661.5311449999999,
                    "p50": 670.367172,
                    "p95": 684.487536,
                    "p99": 684.487536,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 530.709089,
                    "min": 449.116409,
                    "p50": 485.93447599999996,
                    "p95": 530.709089,
                    "p99": 530.709089,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 364.798122,
                    "min": 352.125864,
                    "p50": 354.96327399999996,
                    "p95": 364.798122,
                    "p99": 364.798122,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 962.7126999999999,
                    "min": 901.881987,
                    "p50": 934.4440119999999,
                    "p95": 962.7126999999999,
                    "p99": 962.7126999999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 137.289548,
                    "min": 113.131433,
                    "p50": 125.264618,
                    "p95": 137.289548,
                    "p99": 137.289548,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 34.412501,
                    "min": 28.082120999999997,
                    "p50": 28.68764,
                    "p95": 34.412501,
                    "p99": 34.412501,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 263.29017699999997,
                    "min": 211.85129899999998,
                    "p50": 238.56327299999998,
                    "p95": 263.29017699999997,
                    "p99": 263.29017699999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 474.559307,
                    "min": 372.818532,
                    "p50": 442.25881599999997,
                    "p95": 474.559307,
                    "p99": 474.559307,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 98.51116999999999,
                    "min": 86.715001,
                    "p50": 94.40218499999999,
                    "p95": 98.51116999999999,
                    "p99": 98.51116999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 48.225097999999996,
                    "min": 44.857323,
                    "p50": 46.808684,
                    "p95": 48.225097999999996,
                    "p99": 48.225097999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 209.779348,
                    "min": 169.326498,
                    "p50": 192.11445999999998,
                    "p95": 209.779348,
                    "p99": 209.779348,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 43.693884999999995,
                    "min": 27.483252999999998,
                    "p50": 37.311198999999995,
                    "p95": 43.693884999999995,
                    "p99": 43.693884999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 53.96745,
                    "min": 41.369377,
                    "p50": 44.885554,
                    "p95": 53.96745,
                    "p99": 53.96745,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 116.081127,
                    "min": 103.931559,
                    "p50": 109.31537399999999,
                    "p95": 116.081127,
                    "p99": 116.081127,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 181.455074,
                    "min": 135.636835,
                    "p50": 162.447348,
                    "p95": 181.455074,
                    "p99": 181.455074,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 34.928656,
                    "min": 26.717664,
                    "p50": 27.257482999999997,
                    "p95": 34.928656,
                    "p99": 34.928656,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 88.42354499999999,
                    "min": 74.78665,
                    "p50": 82.429101,
                    "p95": 88.42354499999999,
                    "p99": 88.42354499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 114.32671099999999,
                    "min": 93.656632,
                    "p50": 97.932998,
                    "p95": 114.32671099999999,
                    "p99": 114.32671099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 53.935812,
                    "min": 51.362528999999995,
                    "p50": 52.340108,
                    "p95": 53.935812,
                    "p99": 53.935812,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 64.050304,
                    "min": 51.233652,
                    "p50": 59.046960999999996,
                    "p95": 64.050304,
                    "p99": 64.050304,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 103.98655699999999,
                    "min": 55.749317,
                    "p50": 91.549514,
                    "p95": 103.98655699999999,
                    "p99": 103.98655699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 74.426006,
                    "min": 60.516560999999996,
                    "p50": 66.786939,
                    "p95": 74.426006,
                    "p99": 74.426006,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 89.07415499999999,
                    "min": 69.329453,
                    "p50": 82.602154,
                    "p95": 89.07415499999999,
                    "p99": 89.07415499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 335.036701,
                    "min": 316.96034599999996,
                    "p50": 320.243871,
                    "p95": 335.036701,
                    "p99": 335.036701,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 213.13862999999998,
                    "min": 193.579229,
                    "p50": 201.80295999999998,
                    "p95": 213.13862999999998,
                    "p99": 213.13862999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 511.648985,
                    "min": 462.997751,
                    "p50": 469.659409,
                    "p95": 511.648985,
                    "p99": 511.648985,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 270.793767,
                    "min": 229.305735,
                    "p50": 235.480001,
                    "p95": 270.793767,
                    "p99": 270.793767,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 399.85258,
                    "min": 370.12116299999997,
                    "p50": 384.156454,
                    "p95": 399.85258,
                    "p99": 399.85258,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1582.7444799999998,
                    "min": 1521.0494039999999,
                    "p50": 1550.557633,
                    "p95": 1582.7444799999998,
                    "p99": 1582.7444799999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 388.365779,
                    "min": 342.113931,
                    "p50": 354.25107399999996,
                    "p95": 388.365779,
                    "p99": 388.365779,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 489.50102,
                    "min": 434.99075799999997,
                    "p50": 445.26383,
                    "p95": 489.50102,
                    "p99": 489.50102,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 599.079801,
                    "min": 577.1542949999999,
                    "p50": 582.8682,
                    "p95": 599.079801,
                    "p99": 599.079801,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 298.879464,
                    "min": 289.766975,
                    "p50": 294.972182,
                    "p95": 298.879464,
                    "p99": 298.879464,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1300.6538189999999,
                    "min": 1225.119336,
                    "p50": 1265.527286,
                    "p95": 1300.6538189999999,
                    "p99": 1300.6538189999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 267.517589,
                    "min": 258.142447,
                    "p50": 263.591656,
                    "p95": 267.517589,
                    "p99": 267.517589,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 440.803497,
                    "min": 400.475804,
                    "p50": 411.281884,
                    "p95": 440.803497,
                    "p99": 440.803497,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 977.267528,
                    "min": 939.818185,
                    "p50": 949.8916479999999,
                    "p95": 977.267528,
                    "p99": 977.267528,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.642629,
                    "min": 154.816937,
                    "p50": 172.818898,
                    "p95": 210.642629,
                    "p99": 210.642629,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3184.9528649999997,
                    "min": 2983.8804539999996,
                    "p50": 3038.53066,
                    "p95": 3184.9528649999997,
                    "p99": 3184.9528649999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.595431,
                    "min": 126.451917,
                    "p50": 142.735065,
                    "p95": 172.595431,
                    "p99": 172.595431,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 569.421462,
                    "min": 494.45428599999997,
                    "p50": 509.87026599999996,
                    "p95": 569.421462,
                    "p99": 569.421462,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 690.966637,
                    "min": 647.182595,
                    "p50": 658.82147,
                    "p95": 690.966637,
                    "p99": 690.966637,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 39.254759,
                    "min": 33.103513,
                    "p50": 35.125251,
                    "p95": 39.254759,
                    "p99": 39.254759,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 61.104935,
                    "min": 43.215247,
                    "p50": 43.661715,
                    "p95": 61.104935,
                    "p99": 61.104935,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.251009,
                    "min": 26.421556,
                    "p50": 27.02976,
                    "p95": 27.251009,
                    "p99": 27.251009,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 45.252474,
                    "min": 38.014731999999995,
                    "p50": 39.813901,
                    "p95": 45.252474,
                    "p99": 45.252474,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 56.195859999999996,
                    "min": 47.608058,
                    "p50": 54.360698,
                    "p95": 56.195859999999996,
                    "p99": 56.195859999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 153.833091,
                    "min": 103.611177,
                    "p50": 115.68033399999999,
                    "p95": 153.833091,
                    "p99": 153.833091,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 62.725021999999996,
                    "min": 51.625119,
                    "p50": 56.827611,
                    "p95": 62.725021999999996,
                    "p99": 62.725021999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 42.749691,
                    "min": 32.511564,
                    "p50": 34.141056,
                    "p95": 42.749691,
                    "p99": 42.749691,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 174.419918,
                    "min": 138.815577,
                    "p50": 151.368226,
                    "p95": 174.419918,
                    "p99": 174.419918,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 41.867467,
                    "min": 36.4769,
                    "p50": 39.346942999999996,
                    "p95": 41.867467,
                    "p99": 41.867467,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.282617,
                    "min": 25.976495,
                    "p50": 26.895553,
                    "p95": 27.282617,
                    "p99": 27.282617,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 54.649082,
                    "min": 48.865162,
                    "p50": 51.516239,
                    "p95": 54.649082,
                    "p99": 54.649082,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 32.643105,
                    "min": 26.654163,
                    "p50": 26.723506999999998,
                    "p95": 32.643105,
                    "p99": 32.643105,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 71.681006,
                    "min": 51.429626999999996,
                    "p50": 63.070660999999994,
                    "p95": 71.681006,
                    "p99": 71.681006,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 305.57881599999996,
                    "min": 241.78498199999999,
                    "p50": 262.329201,
                    "p95": 305.57881599999996,
                    "p99": 305.57881599999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 34.48055,
                    "min": 27.486283,
                    "p50": 29.171585,
                    "p95": 34.48055,
                    "p99": 34.48055,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 143.01554,
                    "min": 114.88495999999999,
                    "p50": 129.664693,
                    "p95": 143.01554,
                    "p99": 143.01554,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 81.011055,
                    "min": 72.814621,
                    "p50": 78.487464,
                    "p95": 81.011055,
                    "p99": 81.011055,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 52.334213999999996,
                    "min": 45.800717,
                    "p50": 46.989135,
                    "p95": 52.334213999999996,
                    "p99": 52.334213999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 71.51510999999999,
                    "min": 67.521385,
                    "p50": 68.647909,
                    "p95": 71.51510999999999,
                    "p99": 71.51510999999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.400181999999997,
                    "min": 26.771103,
                    "p50": 27.081495,
                    "p95": 27.400181999999997,
                    "p99": 27.400181999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.924332999999997,
                    "min": 26.590757,
                    "p50": 26.742547,
                    "p95": 26.924332999999997,
                    "p99": 26.924332999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.846742,
                    "min": 24.602812999999998,
                    "p50": 26.64161,
                    "p95": 27.846742,
                    "p99": 27.846742,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.311498999999998,
                    "min": 25.143006,
                    "p50": 27.059585,
                    "p95": 27.311498999999998,
                    "p99": 27.311498999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.695137,
                    "min": 26.069841,
                    "p50": 26.751662999999997,
                    "p95": 27.695137,
                    "p99": 27.695137,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.807568,
                    "min": 26.357353999999997,
                    "p50": 26.790556,
                    "p95": 27.807568,
                    "p99": 27.807568,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 36.395626,
                    "min": 26.453834,
                    "p50": 26.726713999999998,
                    "p95": 36.395626,
                    "p99": 36.395626,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 34.04952,
                    "min": 24.689632,
                    "p50": 26.728621999999998,
                    "p95": 34.04952,
                    "p99": 34.04952,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 65.643422,
                    "min": 55.808457999999995,
                    "p50": 59.647644,
                    "p95": 65.643422,
                    "p99": 65.643422,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 28.271299,
                    "min": 24.766696,
                    "p50": 26.970046999999997,
                    "p95": 28.271299,
                    "p99": 28.271299,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 53.799456,
                    "min": 42.838105999999996,
                    "p50": 43.289812999999995,
                    "p95": 53.799456,
                    "p99": 53.799456,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 32.68822,
                    "min": 27.110673,
                    "p50": 31.947338,
                    "p95": 32.68822,
                    "p99": 32.68822,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 49.027015999999996,
                    "min": 27.070202,
                    "p50": 27.675297,
                    "p95": 49.027015999999996,
                    "p99": 49.027015999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.825848999999998,
                    "min": 25.083028,
                    "p50": 26.701068,
                    "p95": 26.825848999999998,
                    "p99": 26.825848999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 137.72482,
                    "min": 75.061371,
                    "p50": 116.615037,
                    "p95": 137.72482,
                    "p99": 137.72482,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.995583999999997,
                    "min": 25.465066999999998,
                    "p50": 26.846788999999998,
                    "p95": 26.995583999999997,
                    "p99": 26.995583999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 29.130632,
                    "min": 26.322722,
                    "p50": 27.021755,
                    "p95": 29.130632,
                    "p99": 29.130632,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.306987,
                    "min": 26.21667,
                    "p50": 27.009294999999998,
                    "p95": 27.306987,
                    "p99": 27.306987,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 357.628694,
                    "min": 313.45574799999997,
                    "p50": 324.946552,
                    "p95": 357.628694,
                    "p99": 357.628694,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.74977099999998,
                    "min": 131.27226299999998,
                    "p50": 134.858449,
                    "p95": 180.74977099999998,
                    "p99": 180.74977099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2901.470402,
                    "min": 2748.593646,
                    "p50": 2797.438511,
                    "p95": 2901.470402,
                    "p99": 2901.470402,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 614.793918,
                    "min": 590.449586,
                    "p50": 604.6983329999999,
                    "p95": 614.793918,
                    "p99": 614.793918,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 253.37385899999998,
                    "min": 240.45908799999998,
                    "p50": 244.63739099999998,
                    "p95": 253.37385899999998,
                    "p99": 253.37385899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 164.08337899999998,
                    "min": 114.603921,
                    "p50": 161.35368,
                    "p95": 164.08337899999998,
                    "p99": 164.08337899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 234.950806,
                    "min": 203.915021,
                    "p50": 218.079839,
                    "p95": 234.950806,
                    "p99": 234.950806,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 900.563088,
                    "min": 853.948328,
                    "p50": 882.278523,
                    "p95": 900.563088,
                    "p99": 900.563088,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 427.697814,
                    "min": 399.312564,
                    "p50": 417.27128999999996,
                    "p95": 427.697814,
                    "p99": 427.697814,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 379.855933,
                    "min": 315.29693199999997,
                    "p50": 357.994348,
                    "p95": 379.855933,
                    "p99": 379.855933,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1193.1331229999998,
                    "min": 1139.486207,
                    "p50": 1151.273138,
                    "p95": 1193.1331229999998,
                    "p99": 1193.1331229999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1472.239722,
                    "min": 1398.6407829999998,
                    "p50": 1425.15887,
                    "p95": 1472.239722,
                    "p99": 1472.239722,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 437.272356,
                    "min": 424.20878899999997,
                    "p50": 433.566873,
                    "p95": 437.272356,
                    "p99": 437.272356,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 194.982181,
                    "min": 183.37869799999999,
                    "p50": 188.991538,
                    "p95": 194.982181,
                    "p99": 194.982181,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 579.5657199999999,
                    "min": 523.540934,
                    "p50": 535.269365,
                    "p95": 579.5657199999999,
                    "p99": 579.5657199999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 312.771751,
                    "min": 267.345263,
                    "p50": 299.102258,
                    "p95": 312.771751,
                    "p99": 312.771751,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 392.78457399999996,
                    "min": 376.53287,
                    "p50": 378.81881899999996,
                    "p95": 392.78457399999996,
                    "p99": 392.78457399999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 474.281103,
                    "min": 414.224601,
                    "p50": 460.630356,
                    "p95": 474.281103,
                    "p99": 474.281103,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 301.774874,
                    "min": 264.003386,
                    "p50": 270.24179799999996,
                    "p95": 301.774874,
                    "p99": 301.774874,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2089.816847,
                    "min": 1858.902404,
                    "p50": 1907.619821,
                    "p95": 2089.816847,
                    "p99": 2089.816847,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 362.073282,
                    "min": 270.459109,
                    "p50": 294.781237,
                    "p95": 362.073282,
                    "p99": 362.073282,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 742.504144,
                    "min": 601.440483,
                    "p50": 659.189674,
                    "p95": 742.504144,
                    "p99": 742.504144,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 971.718583,
                    "min": 872.021941,
                    "p50": 905.2280609999999,
                    "p95": 971.718583,
                    "p99": 971.718583,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 415.725782,
                    "min": 363.645609,
                    "p50": 381.649635,
                    "p95": 415.725782,
                    "p99": 415.725782,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1024.475221,
                    "min": 916.753558,
                    "p50": 967.6809179999999,
                    "p95": 1024.475221,
                    "p99": 1024.475221,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 565.098083,
                    "min": 490.072814,
                    "p50": 551.448205,
                    "p95": 565.098083,
                    "p99": 565.098083,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1190.9389159999998,
                    "min": 1067.708251,
                    "p50": 1116.544024,
                    "p95": 1190.9389159999998,
                    "p99": 1190.9389159999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 462.56755499999997,
                    "min": 399.83565999999996,
                    "p50": 438.122192,
                    "p95": 462.56755499999997,
                    "p99": 462.56755499999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 721.7185979999999,
                    "min": 621.302273,
                    "p50": 677.7899679999999,
                    "p95": 721.7185979999999,
                    "p99": 721.7185979999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2530.547342,
                    "min": 2440.049075,
                    "p50": 2482.83934,
                    "p95": 2530.547342,
                    "p99": 2530.547342,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 812.802681,
                    "min": 687.048673,
                    "p50": 748.671375,
                    "p95": 812.802681,
                    "p99": 812.802681,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 515.744496,
                    "min": 447.76512199999996,
                    "p50": 484.705537,
                    "p95": 515.744496,
                    "p99": 515.744496,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 893.5467729999999,
                    "min": 791.35417,
                    "p50": 834.364098,
                    "p95": 893.5467729999999,
                    "p99": 893.5467729999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 270.77459799999997,
                    "min": 213.12400399999999,
                    "p50": 248.985503,
                    "p95": 270.77459799999997,
                    "p99": 270.77459799999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 922.294579,
                    "min": 832.8540019999999,
                    "p50": 889.579076,
                    "p95": 922.294579,
                    "p99": 922.294579,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1403.904075,
                    "min": 1239.351206,
                    "p50": 1362.369583,
                    "p95": 1403.904075,
                    "p99": 1403.904075,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3259.956296,
                    "min": 3050.899004,
                    "p50": 3100.401805,
                    "p95": 3259.956296,
                    "p99": 3259.956296,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 297.40675,
                    "min": 239.35405599999999,
                    "p50": 255.51933799999998,
                    "p95": 297.40675,
                    "p99": 297.40675,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 458.360344,
                    "min": 446.70561799999996,
                    "p50": 456.28684599999997,
                    "p95": 458.360344,
                    "p99": 458.360344,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 406.001689,
                    "min": 378.771281,
                    "p50": 385.617793,
                    "p95": 406.001689,
                    "p99": 406.001689,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 739.398183,
                    "min": 719.108072,
                    "p50": 736.060792,
                    "p95": 739.398183,
                    "p99": 739.398183,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 703.473023,
                    "min": 649.378065,
                    "p50": 658.5275409999999,
                    "p95": 703.473023,
                    "p99": 703.473023,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 895.676106,
                    "min": 812.088844,
                    "p50": 860.383743,
                    "p95": 895.676106,
                    "p99": 895.676106,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1070.565196,
                    "min": 1042.523217,
                    "p50": 1060.763044,
                    "p95": 1070.565196,
                    "p99": 1070.565196,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 975.0196569999999,
                    "min": 917.630053,
                    "p50": 948.1128709999999,
                    "p95": 975.0196569999999,
                    "p99": 975.0196569999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 803.438823,
                    "min": 747.530763,
                    "p50": 784.899148,
                    "p95": 803.438823,
                    "p99": 803.438823,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1445.2130049999998,
                    "min": 1387.542217,
                    "p50": 1434.40013,
                    "p95": 1445.2130049999998,
                    "p99": 1445.2130049999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 560.826593,
                    "min": 507.001622,
                    "p50": 517.463183,
                    "p95": 560.826593,
                    "p99": 560.826593,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 354.552687,
                    "min": 310.71921299999997,
                    "p50": 318.81917799999997,
                    "p95": 354.552687,
                    "p99": 354.552687,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1249.799247,
                    "min": 1214.382824,
                    "p50": 1223.957209,
                    "p95": 1249.799247,
                    "p99": 1249.799247,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 628.803813,
                    "min": 588.308108,
                    "p50": 606.859883,
                    "p95": 628.803813,
                    "p99": 628.803813,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1037.3579949999998,
                    "min": 982.9477509999999,
                    "p50": 993.903795,
                    "p95": 1037.3579949999998,
                    "p99": 1037.3579949999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.94255699999997,
                    "min": 288.688602,
                    "p50": 299.42596,
                    "p95": 313.94255699999997,
                    "p99": 313.94255699999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 637.744695,
                    "min": 612.692951,
                    "p50": 630.818458,
                    "p95": 637.744695,
                    "p99": 637.744695,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 876.59841,
                    "min": 862.5563689999999,
                    "p50": 872.864118,
                    "p95": 876.59841,
                    "p99": 876.59841,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1754.065915,
                    "min": 1673.3829799999999,
                    "p50": 1697.994455,
                    "p95": 1754.065915,
                    "p99": 1754.065915,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 515.236455,
                    "min": 493.61028699999997,
                    "p50": 510.870595,
                    "p95": 515.236455,
                    "p99": 515.236455,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.821447,
                    "min": 250.80933199999998,
                    "p50": 256.200951,
                    "p95": 258.821447,
                    "p99": 258.821447,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.20169199999998,
                    "min": 168.85791,
                    "p50": 216.042541,
                    "p95": 223.20169199999998,
                    "p99": 223.20169199999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 568.592951,
                    "min": 540.562462,
                    "p50": 551.700129,
                    "p95": 568.592951,
                    "p99": 568.592951,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1302.2880149999999,
                    "min": 1267.771517,
                    "p50": 1282.7271859999998,
                    "p95": 1302.2880149999999,
                    "p99": 1302.2880149999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 817.780933,
                    "min": 767.560496,
                    "p50": 774.911129,
                    "p95": 817.780933,
                    "p99": 817.780933,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 686.027216,
                    "min": 666.563621,
                    "p50": 675.461838,
                    "p95": 686.027216,
                    "p99": 686.027216,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 413.013623,
                    "min": 377.306924,
                    "p50": 382.835396,
                    "p95": 413.013623,
                    "p99": 413.013623,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 502.929283,
                    "min": 456.215246,
                    "p50": 469.255477,
                    "p95": 502.929283,
                    "p99": 502.929283,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.34119899999996,
                    "min": 323.34837799999997,
                    "p50": 340.726257,
                    "p95": 352.34119899999996,
                    "p99": 352.34119899999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 190.29869,
                    "min": 173.755853,
                    "p50": 179.833788,
                    "p95": 190.29869,
                    "p99": 190.29869,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 602.643394,
                    "min": 582.355099,
                    "p50": 590.713029,
                    "p95": 602.643394,
                    "p99": 602.643394,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 428.02516199999997,
                    "min": 414.977821,
                    "p50": 419.04499799999996,
                    "p95": 428.02516199999997,
                    "p99": 428.02516199999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 694.002854,
                    "min": 642.869812,
                    "p50": 662.290659,
                    "p95": 694.002854,
                    "p99": 694.002854,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2079.724362,
                    "min": 2022.373821,
                    "p50": 2044.4975049999998,
                    "p95": 2079.724362,
                    "p99": 2079.724362,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4127.1175379999995,
                    "min": 4036.534768,
                    "p50": 4087.5682629999997,
                    "p95": 4127.1175379999995,
                    "p99": 4127.1175379999995,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2293.568567,
                    "min": 2225.044979,
                    "p50": 2281.9081499999998,
                    "p95": 2293.568567,
                    "p99": 2293.568567,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 6098.979109999999,
                    "min": 5889.5742359999995,
                    "p50": 5951.46004,
                    "p95": 6098.979109999999,
                    "p99": 6098.979109999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1290.661525,
                    "min": 1237.438834,
                    "p50": 1249.436729,
                    "p95": 1290.661525,
                    "p99": 1290.661525,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1885.766067,
                    "min": 1827.12778,
                    "p50": 1849.289069,
                    "p95": 1885.766067,
                    "p99": 1885.766067,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7932.67088,
                    "min": 7818.957246,
                    "p50": 7865.495567999999,
                    "p95": 7932.67088,
                    "p99": 7932.67088,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1103.896247,
                    "min": 1020.413205,
                    "p50": 1069.9803689999999,
                    "p95": 1103.896247,
                    "p99": 1103.896247,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2790.3636269999997,
                    "min": 2631.312254,
                    "p50": 2669.629438,
                    "p95": 2790.3636269999997,
                    "p99": 2790.3636269999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1475.89447,
                    "min": 1417.368995,
                    "p50": 1425.182161,
                    "p95": 1475.89447,
                    "p99": 1475.89447,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 894.730239,
                    "min": 840.0551959999999,
                    "p50": 856.319364,
                    "p95": 894.730239,
                    "p99": 894.730239,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3113.1841959999997,
                    "min": 3059.651829,
                    "p50": 3089.0532989999997,
                    "p95": 3113.1841959999997,
                    "p99": 3113.1841959999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2929.590619,
                    "min": 2832.5969529999998,
                    "p50": 2885.077528,
                    "p95": 2929.590619,
                    "p99": 2929.590619,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3629.177443,
                    "min": 3490.1094679999997,
                    "p50": 3531.7442459999997,
                    "p95": 3629.177443,
                    "p99": 3629.177443,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1666.9790449999998,
                    "min": 1616.5754709999999,
                    "p50": 1640.715534,
                    "p95": 1666.9790449999998,
                    "p99": 1666.9790449999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2478.256959,
                    "min": 2403.8549049999997,
                    "p50": 2438.4897739999997,
                    "p95": 2478.256959,
                    "p99": 2478.256959,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 744.7087419999999,
                    "min": 698.73941,
                    "p50": 720.398434,
                    "p95": 744.7087419999999,
                    "p99": 744.7087419999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 571.249654,
                    "min": 520.963036,
                    "p50": 530.268777,
                    "p95": 571.249654,
                    "p99": 571.249654,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1076.701415,
                    "min": 989.156619,
                    "p50": 1034.275834,
                    "p95": 1076.701415,
                    "p99": 1076.701415,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1522.112913,
                    "min": 1457.659037,
                    "p50": 1494.048816,
                    "p95": 1522.112913,
                    "p99": 1522.112913,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4865.038176999999,
                    "min": 4802.331016,
                    "p50": 4847.96353,
                    "p95": 4865.038176999999,
                    "p99": 4865.038176999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2027.744788,
                    "min": 1897.840432,
                    "p50": 1974.701214,
                    "p95": 2027.744788,
                    "p99": 2027.744788,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 628.397025,
                    "min": 566.762821,
                    "p50": 572.375081,
                    "p95": 628.397025,
                    "p99": 628.397025,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 237.595565,
                    "min": 187.466351,
                    "p50": 193.499341,
                    "p95": 237.595565,
                    "p99": 237.595565,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2474.8989189999998,
                    "min": 2393.583797,
                    "p50": 2446.164929,
                    "p95": 2474.8989189999998,
                    "p99": 2474.8989189999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 389.61503799999997,
                    "min": 372.660123,
                    "p50": 380.706663,
                    "p95": 389.61503799999997,
                    "p99": 389.61503799999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 477.96565,
                    "min": 410.325388,
                    "p50": 431.66907299999997,
                    "p95": 477.96565,
                    "p99": 477.96565,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 526.553015,
                    "min": 465.521126,
                    "p50": 483.146324,
                    "p95": 526.553015,
                    "p99": 526.553015,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 950.906576,
                    "min": 863.5194419999999,
                    "p50": 913.448237,
                    "p95": 950.906576,
                    "p99": 950.906576,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 324.95851,
                    "min": 285.152854,
                    "p50": 289.574462,
                    "p95": 324.95851,
                    "p99": 324.95851,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 374.763606,
                    "min": 332.026486,
                    "p50": 333.187273,
                    "p95": 374.763606,
                    "p99": 374.763606,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 806.0000319999999,
                    "min": 735.660256,
                    "p50": 758.596558,
                    "p95": 806.0000319999999,
                    "p99": 806.0000319999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 659.0238969999999,
                    "min": 602.625054,
                    "p50": 624.752482,
                    "p95": 659.0238969999999,
                    "p99": 659.0238969999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 250.26584499999998,
                    "min": 233.48750199999998,
                    "p50": 238.93974699999998,
                    "p95": 250.26584499999998,
                    "p99": 250.26584499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 670.381794,
                    "min": 651.242621,
                    "p50": 656.663312,
                    "p95": 670.381794,
                    "p99": 670.381794,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2108.555856,
                    "min": 2013.114006,
                    "p50": 2065.583838,
                    "p95": 2108.555856,
                    "p99": 2108.555856,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 922.546973,
                    "min": 849.868755,
                    "p50": 879.5691979999999,
                    "p95": 922.546973,
                    "p99": 922.546973,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 633.970864,
                    "min": 607.732037,
                    "p50": 625.386396,
                    "p95": 633.970864,
                    "p99": 633.970864,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1470.9423889999998,
                    "min": 1411.970084,
                    "p50": 1432.869315,
                    "p95": 1470.9423889999998,
                    "p99": 1470.9423889999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1014.828417,
                    "min": 959.1486,
                    "p50": 971.2695309999999,
                    "p95": 1014.828417,
                    "p99": 1014.828417,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4685.3220599999995,
                    "min": 4582.702932,
                    "p50": 4655.607762,
                    "p95": 4685.3220599999995,
                    "p99": 4685.3220599999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1395.5868209999999,
                    "min": 1301.574803,
                    "p50": 1308.464741,
                    "p95": 1395.5868209999999,
                    "p99": 1395.5868209999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 776.1301199999999,
                    "min": 732.0139889999999,
                    "p50": 745.8953339999999,
                    "p95": 776.1301199999999,
                    "p99": 776.1301199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1653.275529,
                    "min": 1531.3121039999999,
                    "p50": 1536.153677,
                    "p95": 1653.275529,
                    "p99": 1653.275529,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3552.128925,
                    "min": 3429.483023,
                    "p50": 3505.575758,
                    "p95": 3552.128925,
                    "p99": 3552.128925,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1806.547897,
                    "min": 1747.322434,
                    "p50": 1784.628457,
                    "p95": 1806.547897,
                    "p99": 1806.547897,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2412.031517,
                    "min": 2305.584007,
                    "p50": 2355.54852,
                    "p95": 2412.031517,
                    "p99": 2412.031517,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 438.17993099999995,
                    "min": 379.808768,
                    "p50": 405.53295099999997,
                    "p95": 438.17993099999995,
                    "p99": 438.17993099999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1739.626184,
                    "min": 1645.798179,
                    "p50": 1666.316944,
                    "p95": 1739.626184,
                    "p99": 1739.626184,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 547.7096839999999,
                    "min": 502.432737,
                    "p50": 512.674924,
                    "p95": 547.7096839999999,
                    "p99": 547.7096839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1243.056063,
                    "min": 1185.637978,
                    "p50": 1202.242909,
                    "p95": 1243.056063,
                    "p99": 1243.056063,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1107.762223,
                    "min": 1073.2537849999999,
                    "p50": 1079.7795919999999,
                    "p95": 1107.762223,
                    "p99": 1107.762223,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1815.669883,
                    "min": 1751.5143329999999,
                    "p50": 1792.246839,
                    "p95": 1815.669883,
                    "p99": 1815.669883,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 557.853738,
                    "min": 500.744089,
                    "p50": 514.5323089999999,
                    "p95": 557.853738,
                    "p99": 557.853738,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1118.14318,
                    "min": 1065.59338,
                    "p50": 1083.1213249999998,
                    "p95": 1118.14318,
                    "p99": 1118.14318,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1598.024381,
                    "min": 1521.019358,
                    "p50": 1538.316742,
                    "p95": 1598.024381,
                    "p99": 1598.024381,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1233.409097,
                    "min": 1149.3530799999999,
                    "p50": 1201.6603109999999,
                    "p95": 1233.409097,
                    "p99": 1233.409097,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1371.991249,
                    "min": 1299.2075049999999,
                    "p50": 1313.007351,
                    "p95": 1371.991249,
                    "p99": 1371.991249,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2426.423551,
                    "min": 2322.873631,
                    "p50": 2369.4983349999998,
                    "p95": 2426.423551,
                    "p99": 2426.423551,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3527.406489,
                    "min": 3468.328144,
                    "p50": 3513.897877,
                    "p95": 3527.406489,
                    "p99": 3527.406489,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1476.3880159999999,
                    "min": 1408.463746,
                    "p50": 1457.2663519999999,
                    "p95": 1476.3880159999999,
                    "p99": 1476.3880159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 675.526744,
                    "min": 588.29671,
                    "p50": 667.5781099999999,
                    "p95": 675.526744,
                    "p99": 675.526744,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 402.25918099999996,
                    "min": 381.579571,
                    "p50": 398.57207,
                    "p95": 402.25918099999996,
                    "p99": 402.25918099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 768.107393,
                    "min": 723.9746369999999,
                    "p50": 738.283645,
                    "p95": 768.107393,
                    "p99": 768.107393,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2146.7325419999997,
                    "min": 2040.008181,
                    "p50": 2051.310111,
                    "p95": 2146.7325419999997,
                    "p99": 2146.7325419999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 896.803725,
                    "min": 844.9622999999999,
                    "p50": 848.92986,
                    "p95": 896.803725,
                    "p99": 896.803725,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1643.0627809999999,
                    "min": 1627.798685,
                    "p50": 1639.37429,
                    "p95": 1643.0627809999999,
                    "p99": 1643.0627809999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1003.2593559999999,
                    "min": 957.371756,
                    "p50": 981.5960829999999,
                    "p95": 1003.2593559999999,
                    "p99": 1003.2593559999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10834.434121999999,
                    "min": 10718.478018,
                    "p50": 10779.742278,
                    "p95": 10834.434121999999,
                    "p99": 10834.434121999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1579.8959599999998,
                    "min": 1522.6585969999999,
                    "p50": 1536.700122,
                    "p95": 1579.8959599999998,
                    "p99": 1579.8959599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5463.161536,
                    "min": 5354.247297999999,
                    "p50": 5412.745255,
                    "p95": 5463.161536,
                    "p99": 5463.161536,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 816.4835999999999,
                    "min": 789.124787,
                    "p50": 799.517439,
                    "p95": 816.4835999999999,
                    "p99": 816.4835999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 523.454558,
                    "min": 460.959022,
                    "p50": 482.044354,
                    "p95": 523.454558,
                    "p99": 523.454558,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1368.354903,
                    "min": 1317.112738,
                    "p50": 1327.91818,
                    "p95": 1368.354903,
                    "p99": 1368.354903,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4372.60999,
                    "min": 4268.545008,
                    "p50": 4326.166693,
                    "p95": 4372.60999,
                    "p99": 4372.60999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1695.872156,
                    "min": 1637.324302,
                    "p50": 1662.7823119999998,
                    "p95": 1695.872156,
                    "p99": 1695.872156,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1467.777092,
                    "min": 1419.590381,
                    "p50": 1440.69291,
                    "p95": 1467.777092,
                    "p99": 1467.777092,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1963.1302979999998,
                    "min": 1898.120128,
                    "p50": 1921.968292,
                    "p95": 1963.1302979999998,
                    "p99": 1963.1302979999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 635.09868,
                    "min": 566.150929,
                    "p50": 586.646574,
                    "p95": 635.09868,
                    "p99": 635.09868,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1275.301669,
                    "min": 1198.1417709999998,
                    "p50": 1263.71705,
                    "p95": 1275.301669,
                    "p99": 1275.301669,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 419.712206,
                    "min": 365.48704299999997,
                    "p50": 370.439829,
                    "p95": 419.712206,
                    "p99": 419.712206,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 975.0721159999999,
                    "min": 906.241276,
                    "p50": 912.0156569999999,
                    "p95": 975.0721159999999,
                    "p99": 975.0721159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 734.162337,
                    "min": 689.493824,
                    "p50": 691.9606729999999,
                    "p95": 734.162337,
                    "p99": 734.162337,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1058.530692,
                    "min": 996.7725469999999,
                    "p50": 1012.912745,
                    "p95": 1058.530692,
                    "p99": 1058.530692,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1138.1573059999998,
                    "min": 1106.295169,
                    "p50": 1127.246838,
                    "p95": 1138.1573059999998,
                    "p99": 1138.1573059999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3314.292062,
                    "min": 3222.2228379999997,
                    "p50": 3250.2226189999997,
                    "p95": 3314.292062,
                    "p99": 3314.292062,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2225.276782,
                    "min": 2126.25567,
                    "p50": 2214.074182,
                    "p95": 2225.276782,
                    "p99": 2225.276782,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 369.398578,
                    "min": 312.706217,
                    "p50": 328.811756,
                    "p95": 369.398578,
                    "p99": 369.398578,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1993.939299,
                    "min": 1875.165092,
                    "p50": 1922.5600949999998,
                    "p95": 1993.939299,
                    "p99": 1993.939299,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1484.279016,
                    "min": 1418.128504,
                    "p50": 1472.0645439999998,
                    "p95": 1484.279016,
                    "p99": 1484.279016,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1034.838969,
                    "min": 966.068265,
                    "p50": 1014.4708099999999,
                    "p95": 1034.838969,
                    "p99": 1034.838969,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 560.6416839999999,
                    "min": 491.12940299999997,
                    "p50": 517.8989369999999,
                    "p95": 560.6416839999999,
                    "p99": 560.6416839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4765.581478,
                    "min": 4646.330725,
                    "p50": 4747.521334,
                    "p95": 4765.581478,
                    "p99": 4765.581478,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2401.3696219999997,
                    "min": 2373.934534,
                    "p50": 2384.192543,
                    "p95": 2401.3696219999997,
                    "p99": 2401.3696219999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 641.616642,
                    "min": 600.620735,
                    "p50": 612.337885,
                    "p95": 641.616642,
                    "p99": 641.616642,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 727.601912,
                    "min": 689.444078,
                    "p50": 704.035587,
                    "p95": 727.601912,
                    "p99": 727.601912,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 454.14406499999996,
                    "min": 393.58412999999996,
                    "p50": 417.002664,
                    "p95": 454.14406499999996,
                    "p99": 454.14406499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 488.29010999999997,
                    "min": 462.113723,
                    "p50": 468.90176599999995,
                    "p95": 488.29010999999997,
                    "p99": 488.29010999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.161905,
                    "min": 228.349391,
                    "p50": 238.285775,
                    "p95": 243.161905,
                    "p99": 243.161905,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 910.81905,
                    "min": 848.141,
                    "p50": 868.697872,
                    "p95": 910.81905,
                    "p99": 910.81905,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 600.000155,
                    "min": 519.138905,
                    "p50": 560.3063569999999,
                    "p95": 600.000155,
                    "p99": 600.000155,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 768.7259839999999,
                    "min": 732.9399599999999,
                    "p50": 752.043235,
                    "p95": 768.7259839999999,
                    "p99": 768.7259839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 411.517766,
                    "min": 369.527134,
                    "p50": 375.01648,
                    "p95": 411.517766,
                    "p99": 411.517766,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 658.8054559999999,
                    "min": 644.1715479999999,
                    "p50": 649.4825609999999,
                    "p95": 658.8054559999999,
                    "p99": 658.8054559999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 304.378247,
                    "min": 280.506276,
                    "p50": 285.701908,
                    "p95": 304.378247,
                    "p99": 304.378247,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 196.796109,
                    "min": 171.767115,
                    "p50": 189.648088,
                    "p95": 196.796109,
                    "p99": 196.796109,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1978.0028869999999,
                    "min": 1895.7941609999998,
                    "p50": 1918.0647279999998,
                    "p95": 1978.0028869999999,
                    "p99": 1978.0028869999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 920.8774579999999,
                    "min": 897.556016,
                    "p50": 905.996645,
                    "p95": 920.8774579999999,
                    "p99": 920.8774579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2228.8481739999997,
                    "min": 2155.974376,
                    "p50": 2206.144512,
                    "p95": 2228.8481739999997,
                    "p99": 2228.8481739999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 854.525903,
                    "min": 791.6357949999999,
                    "p50": 798.840744,
                    "p95": 854.525903,
                    "p99": 854.525903,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 703.7193129999999,
                    "min": 686.283739,
                    "p50": 691.415663,
                    "p95": 703.7193129999999,
                    "p99": 703.7193129999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 480.79315499999996,
                    "min": 473.28754399999997,
                    "p50": 478.47968,
                    "p95": 480.79315499999996,
                    "p99": 480.79315499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1598.683963,
                    "min": 1528.508462,
                    "p50": 1553.5290949999999,
                    "p95": 1598.683963,
                    "p99": 1598.683963,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1278.186011,
                    "min": 1221.5192929999998,
                    "p50": 1247.718203,
                    "p95": 1278.186011,
                    "p99": 1278.186011,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3308.2828289999998,
                    "min": 3223.8070089999997,
                    "p50": 3264.899965,
                    "p95": 3308.2828289999998,
                    "p99": 3308.2828289999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1043.9885259999999,
                    "min": 969.750601,
                    "p50": 1019.0687939999999,
                    "p95": 1043.9885259999999,
                    "p99": 1043.9885259999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10799.544866,
                    "min": 10714.115607,
                    "p50": 10731.882654,
                    "p95": 10799.544866,
                    "p99": 10799.544866,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 593.3123899999999,
                    "min": 568.07253,
                    "p50": 587.074033,
                    "p95": 593.3123899999999,
                    "p99": 593.3123899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1489.64085,
                    "min": 1422.830194,
                    "p50": 1449.3232209999999,
                    "p95": 1489.64085,
                    "p99": 1489.64085,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1374.7201659999998,
                    "min": 1313.8868619999998,
                    "p50": 1341.353006,
                    "p95": 1374.7201659999998,
                    "p99": 1374.7201659999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4384.075795,
                    "min": 4310.97692,
                    "p50": 4354.942540999999,
                    "p95": 4384.075795,
                    "p99": 4384.075795,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 379.41923199999997,
                    "min": 364.948327,
                    "p50": 371.941518,
                    "p95": 379.41923199999997,
                    "p99": 379.41923199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1733.058616,
                    "min": 1638.426238,
                    "p50": 1658.715013,
                    "p95": 1733.058616,
                    "p99": 1733.058616,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1164.619692,
                    "min": 1119.048262,
                    "p50": 1127.4762899999998,
                    "p95": 1164.619692,
                    "p99": 1164.619692,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5474.002038,
                    "min": 5314.854321,
                    "p50": 5399.674269,
                    "p95": 5474.002038,
                    "p99": 5474.002038,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 704.87299,
                    "min": 666.268325,
                    "p50": 678.454602,
                    "p95": 704.87299,
                    "p99": 704.87299,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 589.4327059999999,
                    "min": 577.6497929999999,
                    "p50": 583.877488,
                    "p95": 589.4327059999999,
                    "p99": 589.4327059999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 864.617765,
                    "min": 843.0115539999999,
                    "p50": 853.1015649999999,
                    "p95": 864.617765,
                    "p99": 864.617765,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 350.37150199999996,
                    "min": 300.201168,
                    "p50": 315.928639,
                    "p95": 350.37150199999996,
                    "p99": 350.37150199999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 409.920119,
                    "min": 395.78074999999995,
                    "p50": 402.075514,
                    "p95": 409.920119,
                    "p99": 409.920119,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 796.252499,
                    "min": 758.9128509999999,
                    "p50": 763.8651699999999,
                    "p95": 796.252499,
                    "p99": 796.252499,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 501.22641999999996,
                    "min": 483.408623,
                    "p50": 495.53777199999996,
                    "p95": 501.22641999999996,
                    "p99": 501.22641999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 936.036358,
                    "min": 883.1773019999999,
                    "p50": 900.199448,
                    "p95": 936.036358,
                    "p99": 936.036358,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 307.34813099999997,
                    "min": 300.901383,
                    "p50": 303.257044,
                    "p95": 307.34813099999997,
                    "p99": 307.34813099999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 764.810478,
                    "min": 717.493868,
                    "p50": 726.9802579999999,
                    "p95": 764.810478,
                    "p99": 764.810478,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 565.558453,
                    "min": 546.604427,
                    "p50": 556.972855,
                    "p95": 565.558453,
                    "p99": 565.558453,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 691.51522,
                    "min": 629.542746,
                    "p50": 644.086469,
                    "p95": 691.51522,
                    "p99": 691.51522,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 810.95417,
                    "min": 797.8313009999999,
                    "p50": 806.013231,
                    "p95": 810.95417,
                    "p99": 810.95417,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 428.85027399999996,
                    "min": 378.58066299999996,
                    "p50": 387.49139299999996,
                    "p95": 428.85027399999996,
                    "p99": 428.85027399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.920823,
                    "min": 460.41479,
                    "p50": 470.297886,
                    "p95": 479.920823,
                    "p99": 479.920823,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 216.83741799999999,
                    "min": 179.11878199999998,
                    "p50": 186.410909,
                    "p95": 216.83741799999999,
                    "p99": 216.83741799999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 344.110026,
                    "min": 303.795522,
                    "p50": 328.606582,
                    "p95": 344.110026,
                    "p99": 344.110026,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 411.453555,
                    "min": 355.35623999999996,
                    "p50": 386.96917299999996,
                    "p95": 411.453555,
                    "p99": 411.453555,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.561308,
                    "min": 238.62028099999998,
                    "p50": 251.14854,
                    "p95": 298.561308,
                    "p99": 298.561308,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 526.57957,
                    "min": 448.261849,
                    "p50": 494.994916,
                    "p95": 526.57957,
                    "p99": 526.57957,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 194.317689,
                    "min": 147.400361,
                    "p50": 167.559903,
                    "p95": 194.317689,
                    "p99": 194.317689,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 446.003037,
                    "min": 381.530492,
                    "p50": 413.280214,
                    "p95": 446.003037,
                    "p99": 446.003037,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 471.47816,
                    "min": 305.359081,
                    "p50": 345.031861,
                    "p95": 471.47816,
                    "p99": 471.47816,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 263.96934,
                    "min": 209.873603,
                    "p50": 223.36901999999998,
                    "p95": 263.96934,
                    "p99": 263.96934,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 485.26821099999995,
                    "min": 433.631352,
                    "p50": 460.097924,
                    "p95": 485.26821099999995,
                    "p99": 485.26821099999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 691.4071339999999,
                    "min": 589.444706,
                    "p50": 594.037019,
                    "p95": 691.4071339999999,
                    "p99": 691.4071339999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 774.113297,
                    "min": 764.107166,
                    "p50": 767.7932089999999,
                    "p95": 774.113297,
                    "p99": 774.113297,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 246.57516999999999,
                    "min": 229.446069,
                    "p50": 231.92629399999998,
                    "p95": 246.57516999999999,
                    "p99": 246.57516999999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 439.30227499999995,
                    "min": 396.468662,
                    "p50": 412.60263199999997,
                    "p95": 439.30227499999995,
                    "p99": 439.30227499999995,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 689.44795,
                    "min": 676.320492,
                    "p50": 683.933468,
                    "p95": 689.44795,
                    "p99": 689.44795,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 390.60740899999996,
                    "min": 301.81735299999997,
                    "p50": 320.45766199999997,
                    "p95": 390.60740899999996,
                    "p99": 390.60740899999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 511.78088599999995,
                    "min": 501.52363299999996,
                    "p50": 503.119079,
                    "p95": 511.78088599999995,
                    "p99": 511.78088599999995,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 366.69525799999997,
                    "min": 320.387334,
                    "p50": 342.82399,
                    "p95": 366.69525799999997,
                    "p99": 366.69525799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 230.050683,
                    "min": 154.16491299999998,
                    "p50": 202.050455,
                    "p95": 230.050683,
                    "p99": 230.050683,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 166.472531,
                    "min": 121.62292599999999,
                    "p50": 130.755068,
                    "p95": 166.472531,
                    "p99": 166.472531,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 376.891101,
                    "min": 305.596528,
                    "p50": 343.315321,
                    "p95": 376.891101,
                    "p99": 376.891101,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 322.785018,
                    "min": 240.87318599999998,
                    "p50": 285.426158,
                    "p95": 322.785018,
                    "p99": 322.785018,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 261.62073499999997,
                    "min": 205.300679,
                    "p50": 231.144254,
                    "p95": 261.62073499999997,
                    "p99": 261.62073499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 365.909399,
                    "min": 277.863186,
                    "p50": 331.241375,
                    "p95": 365.909399,
                    "p99": 365.909399,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.888142,
                    "min": 147.47607499999998,
                    "p50": 152.519551,
                    "p95": 186.888142,
                    "p99": 186.888142,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.502673,
                    "min": 92.20853,
                    "p50": 112.961158,
                    "p95": 148.502673,
                    "p99": 148.502673,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 479.686507,
                    "min": 389.02964199999997,
                    "p50": 443.92918599999996,
                    "p95": 479.686507,
                    "p99": 479.686507,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 423.741836,
                    "min": 339.74725,
                    "p50": 362.69239899999997,
                    "p95": 423.741836,
                    "p99": 423.741836,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 494.714775,
                    "min": 448.34993299999996,
                    "p50": 484.21892199999996,
                    "p95": 494.714775,
                    "p99": 494.714775,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 273.968862,
                    "min": 216.16170699999998,
                    "p50": 228.670974,
                    "p95": 273.968862,
                    "p99": 273.968862,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 322.27421699999996,
                    "min": 267.11030999999997,
                    "p50": 299.949254,
                    "p95": 322.27421699999996,
                    "p99": 322.27421699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 216.16823699999998,
                    "min": 165.01254799999998,
                    "p50": 186.416961,
                    "p95": 216.16823699999998,
                    "p99": 216.16823699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 350.415117,
                    "min": 297.56821099999996,
                    "p50": 315.898079,
                    "p95": 350.415117,
                    "p99": 350.415117,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 174.361416,
                    "min": 144.53114499999998,
                    "p50": 146.576946,
                    "p95": 174.361416,
                    "p99": 174.361416,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 385.23539,
                    "min": 326.884406,
                    "p50": 377.78864699999997,
                    "p95": 385.23539,
                    "p99": 385.23539,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 296.020642,
                    "min": 237.69526499999998,
                    "p50": 243.28832699999998,
                    "p95": 296.020642,
                    "p99": 296.020642,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 157.647502,
                    "min": 112.912915,
                    "p50": 133.713501,
                    "p95": 157.647502,
                    "p99": 157.647502,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 182.924261,
                    "min": 152.104335,
                    "p50": 166.31283,
                    "p95": 182.924261,
                    "p99": 182.924261,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 340.6755,
                    "min": 267.878672,
                    "p50": 288.073112,
                    "p95": 340.6755,
                    "p99": 340.6755,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 434.64192699999995,
                    "min": 299.162946,
                    "p50": 342.688924,
                    "p95": 434.64192699999995,
                    "p99": 434.64192699999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 472.584395,
                    "min": 410.772312,
                    "p50": 467.86053699999997,
                    "p95": 472.584395,
                    "p99": 472.584395,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 241.81157199999998,
                    "min": 168.870908,
                    "p50": 191.09834999999998,
                    "p95": 241.81157199999998,
                    "p99": 241.81157199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 432.047286,
                    "min": 359.489937,
                    "p50": 402.604408,
                    "p95": 432.047286,
                    "p99": 432.047286,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 283.231791,
                    "min": 192.10388799999998,
                    "p50": 204.86876099999998,
                    "p95": 283.231791,
                    "p99": 283.231791,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 356.581641,
                    "min": 247.369688,
                    "p50": 282.159735,
                    "p95": 356.581641,
                    "p99": 356.581641,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 268.305156,
                    "min": 205.552091,
                    "p50": 223.374787,
                    "p95": 268.305156,
                    "p99": 268.305156,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.632987,
                    "min": 94.125683,
                    "p50": 100.84321399999999,
                    "p95": 120.632987,
                    "p99": 120.632987,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 192.582496,
                    "min": 141.908888,
                    "p50": 152.255672,
                    "p95": 192.582496,
                    "p99": 192.582496,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.554567,
                    "min": 189.62329,
                    "p50": 216.914706,
                    "p95": 242.554567,
                    "p99": 242.554567,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 230.510404,
                    "min": 183.833767,
                    "p50": 187.264482,
                    "p95": 230.510404,
                    "p99": 230.510404,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 511.549084,
                    "min": 389.14980199999997,
                    "p50": 442.617286,
                    "p95": 511.549084,
                    "p99": 511.549084,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 397.96682799999996,
                    "min": 338.08300099999997,
                    "p50": 372.97161,
                    "p95": 397.96682799999996,
                    "p99": 397.96682799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 138.37461399999998,
                    "min": 99.915228,
                    "p50": 123.085017,
                    "p95": 138.37461399999998,
                    "p99": 138.37461399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 303.806556,
                    "min": 254.956461,
                    "p50": 266.10874,
                    "p95": 303.806556,
                    "p99": 303.806556,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 347.120552,
                    "min": 246.33515,
                    "p50": 253.151965,
                    "p95": 347.120552,
                    "p99": 347.120552,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 164.701293,
                    "min": 121.228276,
                    "p50": 131.373981,
                    "p95": 164.701293,
                    "p99": 164.701293,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 331.034046,
                    "min": 277.621285,
                    "p50": 321.960107,
                    "p95": 331.034046,
                    "p99": 331.034046,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 276.686415,
                    "min": 225.024071,
                    "p50": 263.311309,
                    "p95": 276.686415,
                    "p99": 276.686415,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 491.376741,
                    "min": 430.953257,
                    "p50": 482.34624499999995,
                    "p95": 491.376741,
                    "p99": 491.376741,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 400.284264,
                    "min": 324.891097,
                    "p50": 359.440653,
                    "p95": 400.284264,
                    "p99": 400.284264,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 189.4682,
                    "min": 164.89568699999998,
                    "p50": 167.737459,
                    "p95": 189.4682,
                    "p99": 189.4682,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 344.372299,
                    "min": 298.116696,
                    "p50": 326.654343,
                    "p95": 344.372299,
                    "p99": 344.372299,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 499.314503,
                    "min": 455.378082,
                    "p50": 488.89392999999995,
                    "p95": 499.314503,
                    "p99": 499.314503,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 147.682522,
                    "min": 81.894958,
                    "p50": 130.430468,
                    "p95": 147.682522,
                    "p99": 147.682522,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 278.416589,
                    "min": 223.632611,
                    "p50": 250.003614,
                    "p95": 278.416589,
                    "p99": 278.416589,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 318.844227,
                    "min": 225.153638,
                    "p50": 266.569438,
                    "p95": 318.844227,
                    "p99": 318.844227,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 316.028326,
                    "min": 263.170091,
                    "p50": 272.650765,
                    "p95": 316.028326,
                    "p99": 316.028326,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 442.82506,
                    "min": 401.079644,
                    "p50": 436.39343099999996,
                    "p95": 442.82506,
                    "p99": 442.82506,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 360.684256,
                    "min": 279.309335,
                    "p50": 321.491472,
                    "p95": 360.684256,
                    "p99": 360.684256,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 359.168274,
                    "min": 295.118836,
                    "p50": 351.65750199999997,
                    "p95": 359.168274,
                    "p99": 359.168274,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 127.565922,
                    "min": 101.354179,
                    "p50": 109.84393,
                    "p95": 127.565922,
                    "p99": 127.565922,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 210.82195299999998,
                    "min": 158.74977199999998,
                    "p50": 168.476639,
                    "p95": 210.82195299999998,
                    "p99": 210.82195299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 176.564987,
                    "min": 142.392982,
                    "p50": 149.898114,
                    "p95": 176.564987,
                    "p99": 176.564987,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 392.769482,
                    "min": 342.20687799999996,
                    "p50": 381.98769899999996,
                    "p95": 392.769482,
                    "p99": 392.769482,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 247.25383499999998,
                    "min": 196.78363299999998,
                    "p50": 209.790226,
                    "p95": 247.25383499999998,
                    "p99": 247.25383499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 365.864965,
                    "min": 324.201289,
                    "p50": 334.25185999999997,
                    "p95": 365.864965,
                    "p99": 365.864965,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 228.250553,
                    "min": 184.569556,
                    "p50": 204.049193,
                    "p95": 228.250553,
                    "p99": 228.250553,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.00384099999997,
                    "min": 200.775768,
                    "p50": 215.92621699999998,
                    "p95": 266.00384099999997,
                    "p99": 266.00384099999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 76.777621,
                    "min": 75.14847499999999,
                    "p50": 76.001133,
                    "p95": 76.777621,
                    "p99": 76.777621,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1041.720022,
                    "min": 974.449627,
                    "p50": 1016.597231,
                    "p95": 1041.720022,
                    "p99": 1041.720022,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 271.884633,
                    "min": 234.43632599999998,
                    "p50": 240.937952,
                    "p95": 271.884633,
                    "p99": 271.884633,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 375.868335,
                    "min": 315.29783499999996,
                    "p50": 351.75230999999997,
                    "p95": 375.868335,
                    "p99": 375.868335,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 183.735986,
                    "min": 135.623905,
                    "p50": 143.93950999999998,
                    "p95": 183.735986,
                    "p99": 183.735986,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 459.63235399999996,
                    "min": 404.43409099999997,
                    "p50": 426.002037,
                    "p95": 459.63235399999996,
                    "p99": 459.63235399999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 99.16971099999999,
                    "min": 91.15043399999999,
                    "p50": 97.784334,
                    "p95": 99.16971099999999,
                    "p99": 99.16971099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 157.86114,
                    "min": 123.434224,
                    "p50": 124.969968,
                    "p95": 157.86114,
                    "p99": 157.86114,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 66.60835,
                    "min": 57.518373,
                    "p50": 58.377109999999995,
                    "p95": 66.60835,
                    "p99": 66.60835,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.857251,
                    "min": 125.86518799999999,
                    "p50": 133.981328,
                    "p95": 167.857251,
                    "p99": 167.857251,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 125.67930199999999,
                    "min": 67.90324199999999,
                    "p50": 115.63838,
                    "p95": 125.67930199999999,
                    "p99": 125.67930199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 183.00240599999998,
                    "min": 147.49060699999998,
                    "p50": 151.763345,
                    "p95": 183.00240599999998,
                    "p99": 183.00240599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 241.394733,
                    "min": 130.92381799999998,
                    "p50": 183.954689,
                    "p95": 241.394733,
                    "p99": 241.394733,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 164.445854,
                    "min": 155.206629,
                    "p50": 159.799068,
                    "p95": 164.445854,
                    "p99": 164.445854,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 558.671261,
                    "min": 496.922424,
                    "p50": 550.961489,
                    "p95": 558.671261,
                    "p99": 558.671261,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 99.08064499999999,
                    "min": 89.65682,
                    "p50": 90.703998,
                    "p95": 99.08064499999999,
                    "p99": 99.08064499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.02866999999998,
                    "min": 138.676866,
                    "p50": 181.132113,
                    "p95": 236.02866999999998,
                    "p99": 236.02866999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 192.955848,
                    "min": 149.294263,
                    "p50": 188.361541,
                    "p95": 192.955848,
                    "p99": 192.955848,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 438.743672,
                    "min": 402.231502,
                    "p50": 409.677163,
                    "p95": 438.743672,
                    "p99": 438.743672,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.215564,
                    "min": 115.900725,
                    "p50": 123.78882899999999,
                    "p95": 124.215564,
                    "p99": 124.215564,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 535.035009,
                    "min": 522.920016,
                    "p50": 530.6559589999999,
                    "p95": 535.035009,
                    "p99": 535.035009,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 298.787196,
                    "min": 287.051384,
                    "p50": 291.177979,
                    "p95": 298.787196,
                    "p99": 298.787196,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.49746399999998,
                    "min": 217.541628,
                    "p50": 221.263198,
                    "p95": 227.49746399999998,
                    "p99": 227.49746399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.95448499999998,
                    "min": 229.37433099999998,
                    "p50": 232.338212,
                    "p95": 237.95448499999998,
                    "p99": 237.95448499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 225.50976799999998,
                    "min": 200.800684,
                    "p50": 208.89837699999998,
                    "p95": 225.50976799999998,
                    "p99": 225.50976799999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.03911,
                    "min": 253.464858,
                    "p50": 261.323582,
                    "p95": 266.03911,
                    "p99": 266.03911,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.044721,
                    "min": 68.902975,
                    "p50": 74.863112,
                    "p95": 75.044721,
                    "p99": 75.044721,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1333.638145,
                    "min": 1241.032768,
                    "p50": 1249.136681,
                    "p95": 1333.638145,
                    "p99": 1333.638145,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.90047799999999,
                    "min": 81.806169,
                    "p50": 92.738051,
                    "p95": 97.90047799999999,
                    "p99": 97.90047799999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 119.400364,
                    "min": 80.281229,
                    "p50": 114.70592599999999,
                    "p95": 119.400364,
                    "p99": 119.400364,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.61058,
                    "min": 129.77139599999998,
                    "p50": 147.410214,
                    "p95": 151.61058,
                    "p99": 151.61058,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.45673599999998,
                    "min": 184.50144699999998,
                    "p50": 194.960273,
                    "p95": 206.45673599999998,
                    "p99": 206.45673599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.693693,
                    "min": 145.881947,
                    "p50": 160.721247,
                    "p95": 167.693693,
                    "p99": 167.693693,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.181381,
                    "min": 175.012213,
                    "p50": 185.749439,
                    "p95": 191.181381,
                    "p99": 191.181381,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.432196,
                    "min": 127.065446,
                    "p50": 136.204679,
                    "p95": 139.432196,
                    "p99": 139.432196,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.54977499999998,
                    "min": 171.483509,
                    "p50": 172.60562,
                    "p95": 177.54977499999998,
                    "p99": 177.54977499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 665.391984,
                    "min": 649.105238,
                    "p50": 660.508008,
                    "p95": 665.391984,
                    "p99": 665.391984,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 186.461625,
                    "min": 172.654204,
                    "p50": 182.33236499999998,
                    "p95": 186.461625,
                    "p99": 186.461625,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1105.70325,
                    "min": 1055.604735,
                    "p50": 1066.1571649999998,
                    "p95": 1105.70325,
                    "p99": 1105.70325,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 232.660114,
                    "min": 184.766968,
                    "p50": 189.78945399999998,
                    "p95": 232.660114,
                    "p99": 232.660114,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.326031,
                    "min": 134.65453,
                    "p50": 139.229201,
                    "p95": 165.326031,
                    "p99": 165.326031,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 226.35011599999999,
                    "min": 214.316495,
                    "p50": 220.00721199999998,
                    "p95": 226.35011599999999,
                    "p99": 226.35011599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 297.910371,
                    "min": 243.94188,
                    "p50": 248.852982,
                    "p95": 297.910371,
                    "p99": 297.910371,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 101.833951,
                    "min": 80.812259,
                    "p50": 91.72912,
                    "p95": 101.833951,
                    "p99": 101.833951,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 203.663208,
                    "min": 100.10632799999999,
                    "p50": 149.143857,
                    "p95": 203.663208,
                    "p99": 203.663208,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.849963,
                    "min": 119.149988,
                    "p50": 121.652243,
                    "p95": 143.849963,
                    "p99": 143.849963,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 228.632372,
                    "min": 166.152807,
                    "p50": 195.99464,
                    "p95": 228.632372,
                    "p99": 228.632372,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.040497,
                    "min": 149.685511,
                    "p50": 169.90723,
                    "p95": 211.040497,
                    "p99": 211.040497,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 493.25145299999997,
                    "min": 392.81899699999997,
                    "p50": 461.12420299999997,
                    "p95": 493.25145299999997,
                    "p99": 493.25145299999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 379.286839,
                    "min": 332.090781,
                    "p50": 347.71880699999997,
                    "p95": 379.286839,
                    "p99": 379.286839,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 162.67812899999998,
                    "min": 117.958548,
                    "p50": 156.93156399999998,
                    "p95": 162.67812899999998,
                    "p99": 162.67812899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.662923,
                    "min": 39.644442,
                    "p50": 61.282889,
                    "p95": 61.662923,
                    "p99": 61.662923,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 158.00717699999998,
                    "min": 123.974071,
                    "p50": 129.867812,
                    "p95": 158.00717699999998,
                    "p99": 158.00717699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.478061,
                    "min": 75.970175,
                    "p50": 82.815574,
                    "p95": 86.478061,
                    "p99": 86.478061,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 120.155841,
                    "min": 63.289223,
                    "p50": 102.54370899999999,
                    "p95": 120.155841,
                    "p99": 120.155841,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 603.495109,
                    "min": 530.0551879999999,
                    "p50": 556.831361,
                    "p95": 603.495109,
                    "p99": 603.495109,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 215.24756,
                    "min": 177.14241199999998,
                    "p50": 183.871677,
                    "p95": 215.24756,
                    "p99": 215.24756,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.568243,
                    "min": 133.699243,
                    "p50": 138.23156799999998,
                    "p95": 143.568243,
                    "p99": 143.568243,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.287967,
                    "min": 85.259265,
                    "p50": 90.814453,
                    "p95": 94.287967,
                    "p99": 94.287967,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 155.824221,
                    "min": 139.08531399999998,
                    "p50": 145.96947699999998,
                    "p95": 155.824221,
                    "p99": 155.824221,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 331.333826,
                    "min": 282.447887,
                    "p50": 287.092777,
                    "p95": 331.333826,
                    "p99": 331.333826,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.190707,
                    "min": 56.62795,
                    "p50": 73.316457,
                    "p95": 81.190707,
                    "p99": 81.190707,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1285.195089,
                    "min": 1184.574964,
                    "p50": 1219.6079359999999,
                    "p95": 1285.195089,
                    "p99": 1285.195089,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 299.557174,
                    "min": 255.366466,
                    "p50": 262.120144,
                    "p95": 299.557174,
                    "p99": 299.557174,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 116.562055,
                    "min": 97.034583,
                    "p50": 110.089672,
                    "p95": 116.562055,
                    "p99": 116.562055,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 194.346187,
                    "min": 161.173408,
                    "p50": 169.475266,
                    "p95": 194.346187,
                    "p99": 194.346187,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.18879199999998,
                    "min": 196.93139,
                    "p50": 216.26647599999998,
                    "p95": 227.18879199999998,
                    "p99": 227.18879199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.11649699999998,
                    "min": 114.27223699999999,
                    "p50": 122.571129,
                    "p95": 132.11649699999998,
                    "p99": 132.11649699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 197.409113,
                    "min": 176.268712,
                    "p50": 192.040524,
                    "p95": 197.409113,
                    "p99": 197.409113,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 694.534689,
                    "min": 617.744434,
                    "p50": 642.539061,
                    "p95": 694.534689,
                    "p99": 694.534689,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 422.07073299999996,
                    "min": 397.130745,
                    "p50": 404.55463299999997,
                    "p95": 422.07073299999996,
                    "p99": 422.07073299999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 211.006421,
                    "min": 203.73465199999998,
                    "p50": 205.10359599999998,
                    "p95": 211.006421,
                    "p99": 211.006421,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 175.723765,
                    "min": 153.375078,
                    "p50": 162.004428,
                    "p95": 175.723765,
                    "p99": 175.723765,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 260.746739,
                    "min": 218.959101,
                    "p50": 228.145006,
                    "p95": 260.746739,
                    "p99": 260.746739,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 527.7645749999999,
                    "min": 493.96032699999995,
                    "p50": 517.491492,
                    "p95": 527.7645749999999,
                    "p99": 527.7645749999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 160.29751299999998,
                    "min": 123.45556499999999,
                    "p50": 129.485028,
                    "p95": 160.29751299999998,
                    "p99": 160.29751299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 264.97358199999996,
                    "min": 166.94124,
                    "p50": 199.307031,
                    "p95": 264.97358199999996,
                    "p99": 264.97358199999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 204.04158999999999,
                    "min": 170.37095399999998,
                    "p50": 184.436354,
                    "p95": 204.04158999999999,
                    "p99": 204.04158999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.257801,
                    "min": 110.04943899999999,
                    "p50": 117.87572999999999,
                    "p95": 127.257801,
                    "p99": 127.257801,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 348.53720899999996,
                    "min": 266.51565,
                    "p50": 278.231298,
                    "p95": 348.53720899999996,
                    "p99": 348.53720899999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.80227,
                    "min": 81.441211,
                    "p50": 89.828496,
                    "p95": 93.80227,
                    "p99": 93.80227,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 174.723087,
                    "min": 138.31401599999998,
                    "p50": 140.144413,
                    "p95": 174.723087,
                    "p99": 174.723087,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 165.938517,
                    "min": 120.485175,
                    "p50": 160.954432,
                    "p95": 165.938517,
                    "p99": 165.938517,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 258.180766,
                    "min": 199.86659899999998,
                    "p50": 217.483523,
                    "p95": 258.180766,
                    "p99": 258.180766,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 428.71483,
                    "min": 370.52210199999996,
                    "p50": 375.30807999999996,
                    "p95": 428.71483,
                    "p99": 428.71483,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 202.989274,
                    "min": 180.960636,
                    "p50": 184.87931899999998,
                    "p95": 202.989274,
                    "p99": 202.989274,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 192.13984299999998,
                    "min": 148.498226,
                    "p50": 151.568645,
                    "p95": 192.13984299999998,
                    "p99": 192.13984299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 128.636812,
                    "min": 97.484721,
                    "p50": 99.481866,
                    "p95": 128.636812,
                    "p99": 128.636812,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 266.343324,
                    "min": 202.888671,
                    "p50": 205.709029,
                    "p95": 266.343324,
                    "p99": 266.343324,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 317.487465,
                    "min": 245.949817,
                    "p50": 279.446233,
                    "p95": 317.487465,
                    "p99": 317.487465,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 532.7620469999999,
                    "min": 475.691514,
                    "p50": 488.83146899999997,
                    "p95": 532.7620469999999,
                    "p99": 532.7620469999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 723.766499,
                    "min": 596.847079,
                    "p50": 616.703482,
                    "p95": 723.766499,
                    "p99": 723.766499,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1194.582844,
                    "min": 1140.221029,
                    "p50": 1188.943329,
                    "p95": 1194.582844,
                    "p99": 1194.582844,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 80.30973399999999,
                    "min": 68.742736,
                    "p50": 69.072636,
                    "p95": 80.30973399999999,
                    "p99": 80.30973399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 596.066861,
                    "min": 524.147399,
                    "p50": 583.755496,
                    "p95": 596.066861,
                    "p99": 596.066861,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 179.881045,
                    "min": 158.46918,
                    "p50": 176.55514599999998,
                    "p95": 179.881045,
                    "p99": 179.881045,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 199.515534,
                    "min": 148.506534,
                    "p50": 167.057163,
                    "p95": 199.515534,
                    "p99": 199.515534,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 244.655553,
                    "min": 189.56837299999998,
                    "p50": 202.98695899999998,
                    "p95": 244.655553,
                    "p99": 244.655553,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 156.76826499999999,
                    "min": 98.70483499999999,
                    "p50": 122.885511,
                    "p95": 156.76826499999999,
                    "p99": 156.76826499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.872987,
                    "min": 92.870936,
                    "p50": 94.556916,
                    "p95": 114.872987,
                    "p99": 114.872987,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 65.06755799999999,
                    "min": 61.866673999999996,
                    "p50": 62.251034999999995,
                    "p95": 65.06755799999999,
                    "p99": 65.06755799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 203.826396,
                    "min": 158.37918299999998,
                    "p50": 162.152256,
                    "p95": 203.826396,
                    "p99": 203.826396,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 299.15085,
                    "min": 220.926118,
                    "p50": 222.012327,
                    "p95": 299.15085,
                    "p99": 299.15085,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.33559899999999,
                    "min": 102.41342499999999,
                    "p50": 104.666623,
                    "p95": 126.33559899999999,
                    "p99": 126.33559899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 138.773311,
                    "min": 129.08049,
                    "p50": 130.88117599999998,
                    "p95": 138.773311,
                    "p99": 138.773311,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 228.58503399999998,
                    "min": 188.212697,
                    "p50": 189.59746099999998,
                    "p95": 228.58503399999998,
                    "p99": 228.58503399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 565.44436,
                    "min": 441.91038499999996,
                    "p50": 479.91000399999996,
                    "p95": 565.44436,
                    "p99": 565.44436,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 140.40126899999998,
                    "min": 128.724186,
                    "p50": 139.712356,
                    "p95": 140.40126899999998,
                    "p99": 140.40126899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 296.293678,
                    "min": 243.35393499999998,
                    "p50": 248.35246099999998,
                    "p95": 296.293678,
                    "p99": 296.293678,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 218.196069,
                    "min": 168.07595,
                    "p50": 170.812797,
                    "p95": 218.196069,
                    "p99": 218.196069,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.702455,
                    "min": 59.258953999999996,
                    "p50": 81.235259,
                    "p95": 85.702455,
                    "p99": 85.702455,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 422.61789999999996,
                    "min": 338.63434,
                    "p50": 347.24552,
                    "p95": 422.61789999999996,
                    "p99": 422.61789999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 146.86920899999998,
                    "min": 133.290098,
                    "p50": 139.622758,
                    "p95": 146.86920899999998,
                    "p99": 146.86920899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 135.932162,
                    "min": 72.242931,
                    "p50": 119.47411299999999,
                    "p95": 135.932162,
                    "p99": 135.932162,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 236.258106,
                    "min": 152.519914,
                    "p50": 161.014332,
                    "p95": 236.258106,
                    "p99": 236.258106,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 558.893096,
                    "min": 492.726991,
                    "p50": 534.2979379999999,
                    "p95": 558.893096,
                    "p99": 558.893096,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 437.84004999999996,
                    "min": 359.732728,
                    "p50": 396.268106,
                    "p95": 437.84004999999996,
                    "p99": 437.84004999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 496.174777,
                    "min": 385.609918,
                    "p50": 429.141753,
                    "p95": 496.174777,
                    "p99": 496.174777,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 516.715259,
                    "min": 469.980729,
                    "p50": 489.315045,
                    "p95": 516.715259,
                    "p99": 516.715259,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 280.129193,
                    "min": 248.219932,
                    "p50": 255.651156,
                    "p95": 280.129193,
                    "p99": 280.129193,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 254.840142,
                    "min": 181.508756,
                    "p50": 199.80871399999998,
                    "p95": 254.840142,
                    "p99": 254.840142,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 268.88478399999997,
                    "min": 226.948605,
                    "p50": 234.58628,
                    "p95": 268.88478399999997,
                    "p99": 268.88478399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 259.836142,
                    "min": 206.430692,
                    "p50": 240.51215499999998,
                    "p95": 259.836142,
                    "p99": 259.836142,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 316.694233,
                    "min": 272.28504,
                    "p50": 279.759482,
                    "p95": 316.694233,
                    "p99": 316.694233,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 344.51286999999996,
                    "min": 289.72796,
                    "p50": 305.70397199999996,
                    "p95": 344.51286999999996,
                    "p99": 344.51286999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 431.894542,
                    "min": 359.543906,
                    "p50": 401.408678,
                    "p95": 431.894542,
                    "p99": 431.894542,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 380.73047499999996,
                    "min": 311.476051,
                    "p50": 353.86125,
                    "p95": 380.73047499999996,
                    "p99": 380.73047499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 360.70049,
                    "min": 262.276533,
                    "p50": 348.076122,
                    "p95": 360.70049,
                    "p99": 360.70049,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 429.933917,
                    "min": 329.450546,
                    "p50": 373.41342699999996,
                    "p95": 429.933917,
                    "p99": 429.933917,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 421.89696799999996,
                    "min": 363.986787,
                    "p50": 403.329497,
                    "p95": 421.89696799999996,
                    "p99": 421.89696799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 172.34572599999998,
                    "min": 141.05835,
                    "p50": 143.729826,
                    "p95": 172.34572599999998,
                    "p99": 172.34572599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.759019,
                    "min": 156.722188,
                    "p50": 164.792091,
                    "p95": 186.759019,
                    "p99": 186.759019,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 220.89378499999998,
                    "min": 202.39548299999998,
                    "p50": 209.477792,
                    "p95": 220.89378499999998,
                    "p99": 220.89378499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 261.093028,
                    "min": 180.59070699999998,
                    "p50": 228.131889,
                    "p95": 261.093028,
                    "p99": 261.093028,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 367.565682,
                    "min": 270.62350399999997,
                    "p50": 287.293387,
                    "p95": 367.565682,
                    "p99": 367.565682,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 160.946832,
                    "min": 102.35932,
                    "p50": 130.54542899999998,
                    "p95": 160.946832,
                    "p99": 160.946832,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 265.701431,
                    "min": 224.890783,
                    "p50": 238.658039,
                    "p95": 265.701431,
                    "p99": 265.701431,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 528.507643,
                    "min": 445.328691,
                    "p50": 496.03286699999995,
                    "p95": 528.507643,
                    "p99": 528.507643,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 572.7256659999999,
                    "min": 517.457048,
                    "p50": 562.172657,
                    "p95": 572.7256659999999,
                    "p99": 572.7256659999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 463.720245,
                    "min": 372.378627,
                    "p50": 442.7115,
                    "p95": 463.720245,
                    "p99": 463.720245,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 324.44031,
                    "min": 245.787862,
                    "p50": 268.833732,
                    "p95": 324.44031,
                    "p99": 324.44031,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 367.52209999999997,
                    "min": 311.037182,
                    "p50": 326.508176,
                    "p95": 367.52209999999997,
                    "p99": 367.52209999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 452.284698,
                    "min": 398.292595,
                    "p50": 410.71957699999996,
                    "p95": 452.284698,
                    "p99": 452.284698,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 394.14075299999996,
                    "min": 343.307008,
                    "p50": 381.306019,
                    "p95": 394.14075299999996,
                    "p99": 394.14075299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 449.765456,
                    "min": 416.546272,
                    "p50": 427.779899,
                    "p95": 449.765456,
                    "p99": 449.765456,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 530.255576,
                    "min": 460.35240699999997,
                    "p50": 507.109599,
                    "p95": 530.255576,
                    "p99": 530.255576,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 375.180787,
                    "min": 334.6798,
                    "p50": 350.78311199999996,
                    "p95": 375.180787,
                    "p99": 375.180787,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 352.755274,
                    "min": 327.360721,
                    "p50": 333.17940899999996,
                    "p95": 352.755274,
                    "p99": 352.755274,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 142.666166,
                    "min": 117.00447399999999,
                    "p50": 123.481534,
                    "p95": 142.666166,
                    "p99": 142.666166,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 594.248298,
                    "min": 489.573667,
                    "p50": 560.980561,
                    "p95": 594.248298,
                    "p99": 594.248298,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 308.029965,
                    "min": 267.347124,
                    "p50": 281.824434,
                    "p95": 308.029965,
                    "p99": 308.029965,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 303.031132,
                    "min": 273.41193899999996,
                    "p50": 291.928231,
                    "p95": 303.031132,
                    "p99": 303.031132,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 223.95681499999998,
                    "min": 184.67859299999998,
                    "p50": 210.242007,
                    "p95": 223.95681499999998,
                    "p99": 223.95681499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 278.146308,
                    "min": 224.064765,
                    "p50": 228.43167799999998,
                    "p95": 278.146308,
                    "p99": 278.146308,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 259.61132,
                    "min": 179.090027,
                    "p50": 229.079892,
                    "p95": 259.61132,
                    "p99": 259.61132,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 143.138602,
                    "min": 113.24761199999999,
                    "p50": 139.241603,
                    "p95": 143.138602,
                    "p99": 143.138602,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 184.396984,
                    "min": 159.29482,
                    "p50": 168.583181,
                    "p95": 184.396984,
                    "p99": 184.396984,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 438.00593499999997,
                    "min": 353.04033699999997,
                    "p50": 359.802693,
                    "p95": 438.00593499999997,
                    "p99": 438.00593499999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 458.03434699999997,
                    "min": 367.24129,
                    "p50": 409.271686,
                    "p95": 458.03434699999997,
                    "p99": 458.03434699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 410.67575899999997,
                    "min": 302.009731,
                    "p50": 340.419248,
                    "p95": 410.67575899999997,
                    "p99": 410.67575899999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 473.660596,
                    "min": 437.65178399999996,
                    "p50": 462.735803,
                    "p95": 473.660596,
                    "p99": 473.660596,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 170.76297,
                    "min": 124.54253299999999,
                    "p50": 137.288354,
                    "p95": 170.76297,
                    "p99": 170.76297,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 348.98673099999996,
                    "min": 291.751123,
                    "p50": 329.888922,
                    "p95": 348.98673099999996,
                    "p99": 348.98673099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 567.0949439999999,
                    "min": 508.011309,
                    "p50": 545.7253079999999,
                    "p95": 567.0949439999999,
                    "p99": 567.0949439999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 203.991274,
                    "min": 161.05695599999999,
                    "p50": 177.206586,
                    "p95": 203.991274,
                    "p99": 203.991274,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 237.795613,
                    "min": 217.595519,
                    "p50": 224.44618499999999,
                    "p95": 237.795613,
                    "p99": 237.795613,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 209.838802,
                    "min": 200.98073,
                    "p50": 202.8981,
                    "p95": 209.838802,
                    "p99": 209.838802,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 167.60063499999998,
                    "min": 152.483306,
                    "p50": 160.58378199999999,
                    "p95": 167.60063499999998,
                    "p99": 167.60063499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 300.728005,
                    "min": 245.850386,
                    "p50": 279.484218,
                    "p95": 300.728005,
                    "p99": 300.728005,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 319.157114,
                    "min": 227.91830399999998,
                    "p50": 277.392658,
                    "p95": 319.157114,
                    "p99": 319.157114,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.863835,
                    "min": 68.96234,
                    "p50": 118.51941099999999,
                    "p95": 149.863835,
                    "p99": 149.863835,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 425.786831,
                    "min": 340.026932,
                    "p50": 381.397631,
                    "p95": 425.786831,
                    "p99": 425.786831,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2269.256407,
                    "min": 2207.4727749999997,
                    "p50": 2241.306983,
                    "p95": 2269.256407,
                    "p99": 2269.256407,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1423.8078699999999,
                    "min": 1345.641156,
                    "p50": 1371.759633,
                    "p95": 1423.8078699999999,
                    "p99": 1423.8078699999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1713.736183,
                    "min": 1632.8725749999999,
                    "p50": 1664.299853,
                    "p95": 1713.736183,
                    "p99": 1713.736183,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1130.854259,
                    "min": 1065.014864,
                    "p50": 1075.108104,
                    "p95": 1130.854259,
                    "p99": 1130.854259,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 991.8931269999999,
                    "min": 912.6193499999999,
                    "p50": 933.092354,
                    "p95": 991.8931269999999,
                    "p99": 991.8931269999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1566.5342329999999,
                    "min": 1493.436279,
                    "p50": 1519.1848949999999,
                    "p95": 1566.5342329999999,
                    "p99": 1566.5342329999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 534.1327709999999,
                    "min": 459.429447,
                    "p50": 492.602063,
                    "p95": 534.1327709999999,
                    "p99": 534.1327709999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 703.2352569999999,
                    "min": 632.103653,
                    "p50": 642.635945,
                    "p95": 703.2352569999999,
                    "p99": 703.2352569999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1235.884301,
                    "min": 1207.785247,
                    "p50": 1217.7431219999999,
                    "p95": 1235.884301,
                    "p99": 1235.884301,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 797.227412,
                    "min": 765.09214,
                    "p50": 784.695155,
                    "p95": 797.227412,
                    "p99": 797.227412,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3007.617199,
                    "min": 2955.795759,
                    "p50": 2994.054979,
                    "p95": 3007.617199,
                    "p99": 3007.617199,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2026.300902,
                    "min": 1780.896583,
                    "p50": 1848.357182,
                    "p95": 2026.300902,
                    "p99": 2026.300902,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2663.898679,
                    "min": 2587.915032,
                    "p50": 2638.3314769999997,
                    "p95": 2663.898679,
                    "p99": 2663.898679,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2176.0334199999998,
                    "min": 2067.130582,
                    "p50": 2109.4509669999998,
                    "p95": 2176.0334199999998,
                    "p99": 2176.0334199999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1991.993068,
                    "min": 1920.165243,
                    "p50": 1957.7730809999998,
                    "p95": 1991.993068,
                    "p99": 1991.993068,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4484.442373,
                    "min": 4373.574869,
                    "p50": 4442.819625,
                    "p95": 4484.442373,
                    "p99": 4484.442373,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 989.657024,
                    "min": 942.8798539999999,
                    "p50": 985.3579279999999,
                    "p95": 989.657024,
                    "p99": 989.657024,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 744.2999229999999,
                    "min": 728.088788,
                    "p50": 740.3844839999999,
                    "p95": 744.2999229999999,
                    "p99": 744.2999229999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 874.283366,
                    "min": 858.56705,
                    "p50": 868.612753,
                    "p95": 874.283366,
                    "p99": 874.283366,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1413.3254789999999,
                    "min": 1288.87204,
                    "p50": 1310.268957,
                    "p95": 1413.3254789999999,
                    "p99": 1413.3254789999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1199.18127,
                    "min": 1135.8167019999999,
                    "p50": 1147.334605,
                    "p95": 1199.18127,
                    "p99": 1199.18127,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 813.493473,
                    "min": 788.6338099999999,
                    "p50": 805.986002,
                    "p95": 813.493473,
                    "p99": 813.493473,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.072206,
                    "min": 237.71023599999998,
                    "p50": 239.484273,
                    "p95": 243.072206,
                    "p99": 243.072206,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 321.247236,
                    "min": 291.536319,
                    "p50": 304.40248299999996,
                    "p95": 321.247236,
                    "p99": 321.247236,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 709.154266,
                    "min": 669.560882,
                    "p50": 685.027685,
                    "p95": 709.154266,
                    "p99": 709.154266,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 436.738899,
                    "min": 416.555474,
                    "p50": 429.489984,
                    "p95": 436.738899,
                    "p99": 436.738899,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 647.263967,
                    "min": 613.5118669999999,
                    "p50": 621.146763,
                    "p95": 647.263967,
                    "p99": 647.263967,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 372.204884,
                    "min": 356.652703,
                    "p50": 361.869939,
                    "p95": 372.204884,
                    "p99": 372.204884,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 942.111055,
                    "min": 916.7531339999999,
                    "p50": 927.624653,
                    "p95": 942.111055,
                    "p99": 942.111055,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 610.604279,
                    "min": 551.1016109999999,
                    "p50": 559.534468,
                    "p95": 610.604279,
                    "p99": 610.604279,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 519.800248,
                    "min": 476.790709,
                    "p50": 491.690025,
                    "p95": 519.800248,
                    "p99": 519.800248,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 740.798378,
                    "min": 684.53012,
                    "p50": 697.722682,
                    "p95": 740.798378,
                    "p99": 740.798378,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 333.00841499999996,
                    "min": 311.703983,
                    "p50": 313.090212,
                    "p95": 333.00841499999996,
                    "p99": 333.00841499999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 611.9150579999999,
                    "min": 565.876642,
                    "p50": 573.18734,
                    "p95": 611.9150579999999,
                    "p99": 611.9150579999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 548.913629,
                    "min": 498.621723,
                    "p50": 513.8304479999999,
                    "p95": 548.913629,
                    "p99": 548.913629,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 453.916225,
                    "min": 431.521039,
                    "p50": 441.052827,
                    "p95": 453.916225,
                    "p99": 453.916225,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1046.978783,
                    "min": 1008.0838699999999,
                    "p50": 1030.970052,
                    "p95": 1046.978783,
                    "p99": 1046.978783,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 921.386355,
                    "min": 866.380333,
                    "p50": 904.780685,
                    "p95": 921.386355,
                    "p99": 921.386355,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1396.7090329999999,
                    "min": 1335.2836969999998,
                    "p50": 1363.91743,
                    "p95": 1396.7090329999999,
                    "p99": 1396.7090329999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2077.80413,
                    "min": 1983.4035629999998,
                    "p50": 1993.1083959999999,
                    "p95": 2077.80413,
                    "p99": 2077.80413,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 840.3584109999999,
                    "min": 821.9813459999999,
                    "p50": 831.191473,
                    "p95": 840.3584109999999,
                    "p99": 840.3584109999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 386.30736199999996,
                    "min": 372.80132799999996,
                    "p50": 377.774003,
                    "p95": 386.30736199999996,
                    "p99": 386.30736199999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 781.288908,
                    "min": 754.901391,
                    "p50": 761.036842,
                    "p95": 781.288908,
                    "p99": 781.288908,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 250.74260199999998,
                    "min": 234.624438,
                    "p50": 246.392957,
                    "p95": 250.74260199999998,
                    "p99": 250.74260199999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 991.5717559999999,
                    "min": 948.8437279999999,
                    "p50": 968.670804,
                    "p95": 991.5717559999999,
                    "p99": 991.5717559999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1197.949278,
                    "min": 1173.262125,
                    "p50": 1185.237282,
                    "p95": 1197.949278,
                    "p99": 1197.949278,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 686.5337129999999,
                    "min": 636.1989599999999,
                    "p50": 644.6260199999999,
                    "p95": 686.5337129999999,
                    "p99": 686.5337129999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2491.0465449999997,
                    "min": 2438.701542,
                    "p50": 2458.2800429999998,
                    "p95": 2491.0465449999997,
                    "p99": 2491.0465449999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 633.905131,
                    "min": 581.923641,
                    "p50": 597.669387,
                    "p95": 633.905131,
                    "p99": 633.905131,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 442.084416,
                    "min": 407.49400599999996,
                    "p50": 416.37330199999997,
                    "p95": 442.084416,
                    "p99": 442.084416,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 794.9275369999999,
                    "min": 767.148743,
                    "p50": 772.5376,
                    "p95": 794.9275369999999,
                    "p99": 794.9275369999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 310.796645,
                    "min": 278.98416399999996,
                    "p50": 299.775572,
                    "p95": 310.796645,
                    "p99": 310.796645,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1267.698021,
                    "min": 1235.583739,
                    "p50": 1248.084857,
                    "p95": 1267.698021,
                    "p99": 1267.698021,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1033.128678,
                    "min": 942.123302,
                    "p50": 959.1912699999999,
                    "p95": 1033.128678,
                    "p99": 1033.128678,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 907.2324759999999,
                    "min": 885.311892,
                    "p50": 898.86114,
                    "p95": 907.2324759999999,
                    "p99": 907.2324759999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 241.830265,
                    "min": 230.27743999999998,
                    "p50": 232.489271,
                    "p95": 241.830265,
                    "p99": 241.830265,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 358.475942,
                    "min": 313.47411,
                    "p50": 348.201399,
                    "p95": 358.475942,
                    "p99": 358.475942,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1125.3304229999999,
                    "min": 1089.882096,
                    "p50": 1103.098771,
                    "p95": 1125.3304229999999,
                    "p99": 1125.3304229999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 541.381898,
                    "min": 531.268903,
                    "p50": 536.0484789999999,
                    "p95": 541.381898,
                    "p99": 541.381898,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 753.910938,
                    "min": 700.161927,
                    "p50": 716.709668,
                    "p95": 753.910938,
                    "p99": 753.910938,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 511.339381,
                    "min": 466.416635,
                    "p50": 475.578754,
                    "p95": 511.339381,
                    "p99": 511.339381,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 858.924127,
                    "min": 827.1601949999999,
                    "p50": 837.712724,
                    "p95": 858.924127,
                    "p99": 858.924127,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1887.011479,
                    "min": 1839.65733,
                    "p50": 1854.995629,
                    "p95": 1887.011479,
                    "p99": 1887.011479,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3095.935455,
                    "min": 3040.3367319999998,
                    "p50": 3067.0737209999998,
                    "p95": 3095.935455,
                    "p99": 3095.935455,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 657.533493,
                    "min": 637.487669,
                    "p50": 650.178241,
                    "p95": 657.533493,
                    "p99": 657.533493,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 379.058637,
                    "min": 338.790716,
                    "p50": 359.418676,
                    "p95": 379.058637,
                    "p99": 379.058637,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 929.857266,
                    "min": 902.0100719999999,
                    "p50": 914.8619689999999,
                    "p95": 929.857266,
                    "p99": 929.857266,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1397.941003,
                    "min": 1319.077706,
                    "p50": 1345.761472,
                    "p95": 1397.941003,
                    "p99": 1397.941003,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2217.5269439999997,
                    "min": 2196.951988,
                    "p50": 2210.38444,
                    "p95": 2217.5269439999997,
                    "p99": 2217.5269439999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1798.489636,
                    "min": 1762.250487,
                    "p50": 1774.27944,
                    "p95": 1798.489636,
                    "p99": 1798.489636,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 405.91923499999996,
                    "min": 391.66468299999997,
                    "p50": 401.636171,
                    "p95": 405.91923499999996,
                    "p99": 405.91923499999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 821.992906,
                    "min": 799.696686,
                    "p50": 808.082059,
                    "p95": 821.992906,
                    "p99": 821.992906,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 322.853733,
                    "min": 301.83435499999996,
                    "p50": 311.049902,
                    "p95": 322.853733,
                    "p99": 322.853733,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 695.391548,
                    "min": 620.417323,
                    "p50": 659.312774,
                    "p95": 695.391548,
                    "p99": 695.391548,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 740.92548,
                    "min": 701.8080649999999,
                    "p50": 712.5134969999999,
                    "p95": 740.92548,
                    "p99": 740.92548,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 233.565215,
                    "min": 222.037355,
                    "p50": 226.30444599999998,
                    "p95": 233.565215,
                    "p99": 233.565215,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 570.568057,
                    "min": 525.078236,
                    "p50": 530.500244,
                    "p95": 570.568057,
                    "p99": 570.568057,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 579.614152,
                    "min": 564.487179,
                    "p50": 575.802831,
                    "p95": 579.614152,
                    "p99": 579.614152,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 288.57347,
                    "min": 261.38595399999997,
                    "p50": 268.94189,
                    "p95": 288.57347,
                    "p99": 288.57347,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 216.893395,
                    "min": 179.533569,
                    "p50": 182.917115,
                    "p95": 216.893395,
                    "p99": 216.893395,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 738.277696,
                    "min": 604.379161,
                    "p50": 619.4328049999999,
                    "p95": 738.277696,
                    "p99": 738.277696,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 505.066964,
                    "min": 473.9899,
                    "p50": 484.922467,
                    "p95": 505.066964,
                    "p99": 505.066964,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 473.31330099999997,
                    "min": 431.715708,
                    "p50": 444.980759,
                    "p95": 473.31330099999997,
                    "p99": 473.31330099999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 681.6981949999999,
                    "min": 660.187085,
                    "p50": 669.1447009999999,
                    "p95": 681.6981949999999,
                    "p99": 681.6981949999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1041.696766,
                    "min": 991.2323779999999,
                    "p50": 1003.607815,
                    "p95": 1041.696766,
                    "p99": 1041.696766,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 925.5126789999999,
                    "min": 864.97016,
                    "p50": 875.58997,
                    "p95": 925.5126789999999,
                    "p99": 925.5126789999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.852265,
                    "min": 254.728712,
                    "p50": 256.586518,
                    "p95": 260.852265,
                    "p99": 260.852265,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1462.772772,
                    "min": 1406.975215,
                    "p50": 1435.011937,
                    "p95": 1462.772772,
                    "p99": 1462.772772,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 651.1489839999999,
                    "min": 591.566783,
                    "p50": 599.4070849999999,
                    "p95": 651.1489839999999,
                    "p99": 651.1489839999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 409.288218,
                    "min": 381.982277,
                    "p50": 392.94278099999997,
                    "p95": 409.288218,
                    "p99": 409.288218,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 846.4287519999999,
                    "min": 792.260152,
                    "p50": 804.012242,
                    "p95": 846.4287519999999,
                    "p99": 846.4287519999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 521.683526,
                    "min": 447.210825,
                    "p50": 460.389188,
                    "p95": 521.683526,
                    "p99": 521.683526,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1294.088781,
                    "min": 1235.793277,
                    "p50": 1285.127952,
                    "p95": 1294.088781,
                    "p99": 1294.088781,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 379.60603199999997,
                    "min": 318.149524,
                    "p50": 325.024452,
                    "p95": 379.60603199999997,
                    "p99": 379.60603199999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1104.515073,
                    "min": 1065.829971,
                    "p50": 1084.506975,
                    "p95": 1104.515073,
                    "p99": 1104.515073,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 571.8727309999999,
                    "min": 513.2823609999999,
                    "p50": 534.1165659999999,
                    "p95": 571.8727309999999,
                    "p99": 571.8727309999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 971.9109599999999,
                    "min": 931.1650179999999,
                    "p50": 949.5879659999999,
                    "p95": 971.9109599999999,
                    "p99": 971.9109599999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 742.7098119999999,
                    "min": 719.21767,
                    "p50": 732.685658,
                    "p95": 742.7098119999999,
                    "p99": 742.7098119999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 343.086925,
                    "min": 288.28432599999996,
                    "p50": 297.91362699999996,
                    "p95": 343.086925,
                    "p99": 343.086925,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 849.5791419999999,
                    "min": 782.415617,
                    "p50": 790.0042,
                    "p95": 849.5791419999999,
                    "p99": 849.5791419999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 516.385542,
                    "min": 487.734245,
                    "p50": 497.279518,
                    "p95": 516.385542,
                    "p99": 516.385542,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 727.88262,
                    "min": 678.249815,
                    "p50": 695.0172249999999,
                    "p95": 727.88262,
                    "p99": 727.88262,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1218.7429049999998,
                    "min": 1028.638635,
                    "p50": 1034.810845,
                    "p95": 1218.7429049999998,
                    "p99": 1218.7429049999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 665.191051,
                    "min": 592.02293,
                    "p50": 597.0990469999999,
                    "p95": 665.191051,
                    "p99": 665.191051,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 765.747477,
                    "min": 735.770994,
                    "p50": 750.263782,
                    "p95": 765.747477,
                    "p99": 765.747477,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1697.184919,
                    "min": 1489.071005,
                    "p50": 1559.046934,
                    "p95": 1697.184919,
                    "p99": 1697.184919,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 408.715425,
                    "min": 371.397646,
                    "p50": 393.80686,
                    "p95": 408.715425,
                    "p99": 408.715425,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.80198099999998,
                    "min": 189.648619,
                    "p50": 206.911869,
                    "p95": 243.80198099999998,
                    "p99": 243.80198099999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 568.600603,
                    "min": 505.69903999999997,
                    "p50": 546.70179,
                    "p95": 568.600603,
                    "p99": 568.600603,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 401.608517,
                    "min": 341.903917,
                    "p50": 352.36672899999996,
                    "p95": 401.608517,
                    "p99": 401.608517,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 254.461831,
                    "min": 236.80453699999998,
                    "p50": 248.91688599999998,
                    "p95": 254.461831,
                    "p99": 254.461831,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 505.220828,
                    "min": 438.96373,
                    "p50": 452.61643499999997,
                    "p95": 505.220828,
                    "p99": 505.220828,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 919.1777119999999,
                    "min": 902.473806,
                    "p50": 911.601225,
                    "p95": 919.1777119999999,
                    "p99": 919.1777119999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 647.1063429999999,
                    "min": 639.218761,
                    "p50": 642.239516,
                    "p95": 647.1063429999999,
                    "p99": 647.1063429999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 795.7006349999999,
                    "min": 764.094791,
                    "p50": 790.685312,
                    "p95": 795.7006349999999,
                    "p99": 795.7006349999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 932.122891,
                    "min": 902.3174339999999,
                    "p50": 911.931695,
                    "p95": 932.122891,
                    "p99": 932.122891,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1094.5990239999999,
                    "min": 971.76486,
                    "p50": 989.782777,
                    "p95": 1094.5990239999999,
                    "p99": 1094.5990239999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 650.5910749999999,
                    "min": 601.489869,
                    "p50": 612.9716139999999,
                    "p95": 650.5910749999999,
                    "p99": 650.5910749999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 470.22817699999996,
                    "min": 413.971857,
                    "p50": 427.286345,
                    "p95": 470.22817699999996,
                    "p99": 470.22817699999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 588.4391079999999,
                    "min": 538.514221,
                    "p50": 554.941422,
                    "p95": 588.4391079999999,
                    "p99": 588.4391079999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 303.03481999999997,
                    "min": 295.707578,
                    "p50": 297.152315,
                    "p95": 303.03481999999997,
                    "p99": 303.03481999999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 371.461462,
                    "min": 345.940945,
                    "p50": 357.87764899999996,
                    "p95": 371.461462,
                    "p99": 371.461462,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 763.349664,
                    "min": 664.211959,
                    "p50": 671.56549,
                    "p95": 763.349664,
                    "p99": 763.349664,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 529.463028,
                    "min": 470.65560999999997,
                    "p50": 481.382991,
                    "p95": 529.463028,
                    "p99": 529.463028,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1328.455145,
                    "min": 1265.4758689999999,
                    "p50": 1289.348644,
                    "p95": 1328.455145,
                    "p99": 1328.455145,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 779.6360649999999,
                    "min": 715.676444,
                    "p50": 737.8986649999999,
                    "p95": 779.6360649999999,
                    "p99": 779.6360649999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1156.579076,
                    "min": 1110.122048,
                    "p50": 1127.5444619999998,
                    "p95": 1156.579076,
                    "p99": 1156.579076,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 284.980647,
                    "min": 233.719509,
                    "p50": 237.22177499999998,
                    "p95": 284.980647,
                    "p99": 284.980647,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 896.178058,
                    "min": 848.948032,
                    "p50": 852.892153,
                    "p95": 896.178058,
                    "p99": 896.178058,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 587.660608,
                    "min": 570.184412,
                    "p50": 580.8652969999999,
                    "p95": 587.660608,
                    "p99": 587.660608,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 351.30594099999996,
                    "min": 305.34897,
                    "p50": 316.88969,
                    "p95": 351.30594099999996,
                    "p99": 351.30594099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 269.842563,
                    "min": 219.430096,
                    "p50": 227.79167099999998,
                    "p95": 269.842563,
                    "p99": 269.842563,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.741313,
                    "min": 176.640004,
                    "p50": 183.74386099999998,
                    "p95": 184.741313,
                    "p99": 184.741313,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 706.659758,
                    "min": 614.823275,
                    "p50": 620.72462,
                    "p95": 706.659758,
                    "p99": 706.659758,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 731.338791,
                    "min": 702.88925,
                    "p50": 714.102628,
                    "p95": 731.338791,
                    "p99": 731.338791,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 490.832997,
                    "min": 439.356973,
                    "p50": 455.68924,
                    "p95": 490.832997,
                    "p99": 490.832997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 947.827365,
                    "min": 890.7451269999999,
                    "p50": 924.54269,
                    "p95": 947.827365,
                    "p99": 947.827365,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 496.07093999999995,
                    "min": 453.051388,
                    "p50": 489.69960899999995,
                    "p95": 496.07093999999995,
                    "p99": 496.07093999999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 412.141307,
                    "min": 356.858946,
                    "p50": 373.25168199999996,
                    "p95": 412.141307,
                    "p99": 412.141307,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 829.1580819999999,
                    "min": 811.9031339999999,
                    "p50": 824.8695289999999,
                    "p95": 829.1580819999999,
                    "p99": 829.1580819999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 706.34564,
                    "min": 651.337397,
                    "p50": 667.897657,
                    "p95": 706.34564,
                    "p99": 706.34564,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 287.20322799999997,
                    "min": 265.9923,
                    "p50": 271.742683,
                    "p95": 287.20322799999997,
                    "p99": 287.20322799999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 453.217807,
                    "min": 394.445738,
                    "p50": 401.976251,
                    "p95": 453.217807,
                    "p99": 453.217807,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1378.5483629999999,
                    "min": 1355.3269169999999,
                    "p50": 1358.483194,
                    "p95": 1378.5483629999999,
                    "p99": 1378.5483629999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 551.6904069999999,
                    "min": 527.1575789999999,
                    "p50": 538.760265,
                    "p95": 551.6904069999999,
                    "p99": 551.6904069999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1937.662838,
                    "min": 1777.460226,
                    "p50": 1802.7538279999999,
                    "p95": 1937.662838,
                    "p99": 1937.662838,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1011.392927,
                    "min": 938.596919,
                    "p50": 972.688558,
                    "p95": 1011.392927,
                    "p99": 1011.392927,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 513.428064,
                    "min": 500.501832,
                    "p50": 510.792222,
                    "p95": 513.428064,
                    "p99": 513.428064,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1933.424959,
                    "min": 1854.60023,
                    "p50": 1905.910969,
                    "p95": 1933.424959,
                    "p99": 1933.424959,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1356.074574,
                    "min": 1320.4929969999998,
                    "p50": 1328.3399769999999,
                    "p95": 1356.074574,
                    "p99": 1356.074574,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 648.1835609999999,
                    "min": 598.492079,
                    "p50": 608.157574,
                    "p95": 648.1835609999999,
                    "p99": 648.1835609999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1475.6881779999999,
                    "min": 1421.084852,
                    "p50": 1435.942736,
                    "p95": 1475.6881779999999,
                    "p99": 1475.6881779999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 707.5338439999999,
                    "min": 675.386483,
                    "p50": 694.897104,
                    "p95": 707.5338439999999,
                    "p99": 707.5338439999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1195.7972439999999,
                    "min": 1153.5498029999999,
                    "p50": 1178.9317999999998,
                    "p95": 1195.7972439999999,
                    "p99": 1195.7972439999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 886.335655,
                    "min": 868.130468,
                    "p50": 878.874614,
                    "p95": 886.335655,
                    "p99": 886.335655,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1275.320675,
                    "min": 1225.168362,
                    "p50": 1245.938567,
                    "p95": 1275.320675,
                    "p99": 1275.320675,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1710.148121,
                    "min": 1593.867153,
                    "p50": 1665.039117,
                    "p95": 1710.148121,
                    "p99": 1710.148121,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 790.6405599999999,
                    "min": 769.26204,
                    "p50": 782.249651,
                    "p95": 790.6405599999999,
                    "p99": 790.6405599999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1099.5227909999999,
                    "min": 1049.99947,
                    "p50": 1067.31641,
                    "p95": 1099.5227909999999,
                    "p99": 1099.5227909999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 406.12645699999996,
                    "min": 316.887681,
                    "p50": 327.17168799999996,
                    "p95": 406.12645699999996,
                    "p99": 406.12645699999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 461.087513,
                    "min": 412.31312599999995,
                    "p50": 423.16626399999996,
                    "p95": 461.087513,
                    "p99": 461.087513,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 631.204843,
                    "min": 559.1398399999999,
                    "p50": 567.38424,
                    "p95": 631.204843,
                    "p99": 631.204843,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.89187,
                    "min": 248.77114899999998,
                    "p50": 255.242508,
                    "p95": 291.89187,
                    "p99": 291.89187,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 731.6026079999999,
                    "min": 627.925265,
                    "p50": 665.5979189999999,
                    "p95": 731.6026079999999,
                    "p99": 731.6026079999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 795.298091,
                    "min": 752.699654,
                    "p50": 769.784273,
                    "p95": 795.298091,
                    "p99": 795.298091,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 324.80849,
                    "min": 300.421904,
                    "p50": 306.25599,
                    "p95": 324.80849,
                    "p99": 324.80849,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 559.1790159999999,
                    "min": 508.759354,
                    "p50": 513.624808,
                    "p95": 559.1790159999999,
                    "p99": 559.1790159999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 468.33913099999995,
                    "min": 449.836171,
                    "p50": 456.56114299999996,
                    "p95": 468.33913099999995,
                    "p99": 468.33913099999995,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 404.368514,
                    "min": 351.783302,
                    "p50": 374.11294699999996,
                    "p95": 404.368514,
                    "p99": 404.368514,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.355209,
                    "min": 190.28015499999998,
                    "p50": 204.681525,
                    "p95": 228.355209,
                    "p99": 228.355209,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 987.4964729999999,
                    "min": 900.7990589999999,
                    "p50": 941.7359349999999,
                    "p95": 987.4964729999999,
                    "p99": 987.4964729999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 703.555965,
                    "min": 607.797497,
                    "p50": 615.296827,
                    "p95": 703.555965,
                    "p99": 703.555965,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 754.328443,
                    "min": 696.567689,
                    "p50": 718.776655,
                    "p95": 754.328443,
                    "p99": 754.328443,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1108.782015,
                    "min": 1055.7593219999999,
                    "p50": 1077.701764,
                    "p95": 1108.782015,
                    "p99": 1108.782015,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 865.518555,
                    "min": 805.430243,
                    "p50": 819.898787,
                    "p95": 865.518555,
                    "p99": 865.518555,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 420.669511,
                    "min": 394.847259,
                    "p50": 407.85486499999996,
                    "p95": 420.669511,
                    "p99": 420.669511,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1192.182086,
                    "min": 1112.846481,
                    "p50": 1129.5656119999999,
                    "p95": 1192.182086,
                    "p99": 1192.182086,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 668.6352919999999,
                    "min": 652.147962,
                    "p50": 664.7340429999999,
                    "p95": 668.6352919999999,
                    "p99": 668.6352919999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 938.9935869999999,
                    "min": 906.968165,
                    "p50": 910.7123009999999,
                    "p95": 938.9935869999999,
                    "p99": 938.9935869999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1026.2848669999998,
                    "min": 967.2695349999999,
                    "p50": 1002.196557,
                    "p95": 1026.2848669999998,
                    "p99": 1026.2848669999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1351.906667,
                    "min": 1283.866194,
                    "p50": 1318.029033,
                    "p95": 1351.906667,
                    "p99": 1351.906667,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 756.358436,
                    "min": 714.595813,
                    "p50": 733.145091,
                    "p95": 756.358436,
                    "p99": 756.358436,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 469.162735,
                    "min": 416.459001,
                    "p50": 423.730618,
                    "p95": 469.162735,
                    "p99": 469.162735,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 549.546668,
                    "min": 535.598945,
                    "p50": 545.237116,
                    "p95": 549.546668,
                    "p99": 549.546668,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 899.920975,
                    "min": 846.736225,
                    "p50": 851.330155,
                    "p95": 899.920975,
                    "p99": 899.920975,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 857.49027,
                    "min": 787.3236019999999,
                    "p50": 801.677345,
                    "p95": 857.49027,
                    "p99": 857.49027,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1956.9454449999998,
                    "min": 1876.121594,
                    "p50": 1897.0826949999998,
                    "p95": 1956.9454449999998,
                    "p99": 1956.9454449999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 533.569438,
                    "min": 475.456567,
                    "p50": 487.229469,
                    "p95": 533.569438,
                    "p99": 533.569438,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 253.939934,
                    "min": 212.713531,
                    "p50": 235.63164999999998,
                    "p95": 253.939934,
                    "p99": 253.939934,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 372.28769,
                    "min": 357.063127,
                    "p50": 362.129375,
                    "p95": 372.28769,
                    "p99": 372.28769,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 644.435063,
                    "min": 603.4815189999999,
                    "p50": 606.345517,
                    "p95": 644.435063,
                    "p99": 644.435063,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 306.99017299999997,
                    "min": 294.978885,
                    "p50": 298.10702499999996,
                    "p95": 306.99017299999997,
                    "p99": 306.99017299999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1088.177229,
                    "min": 1040.100567,
                    "p50": 1057.746374,
                    "p95": 1088.177229,
                    "p99": 1088.177229,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 567.540265,
                    "min": 509.457379,
                    "p50": 525.026298,
                    "p95": 567.540265,
                    "p99": 567.540265,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 258.672072,
                    "min": 243.63879899999998,
                    "p50": 252.183764,
                    "p95": 258.672072,
                    "p99": 258.672072,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 381.439928,
                    "min": 307.41204999999997,
                    "p50": 326.753247,
                    "p95": 381.439928,
                    "p99": 381.439928,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 720.865339,
                    "min": 708.462996,
                    "p50": 717.551057,
                    "p95": 720.865339,
                    "p99": 720.865339,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 460.71721099999996,
                    "min": 444.871338,
                    "p50": 452.894181,
                    "p95": 460.71721099999996,
                    "p99": 460.71721099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1395.869534,
                    "min": 1338.9508449999998,
                    "p50": 1385.96517,
                    "p95": 1395.869534,
                    "p99": 1395.869534,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 397.56373099999996,
                    "min": 380.952227,
                    "p50": 386.190751,
                    "p95": 397.56373099999996,
                    "p99": 397.56373099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 866.421531,
                    "min": 770.545705,
                    "p50": 787.259048,
                    "p95": 866.421531,
                    "p99": 866.421531,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 613.672139,
                    "min": 586.595437,
                    "p50": 593.29919,
                    "p95": 613.672139,
                    "p99": 613.672139,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 903.560604,
                    "min": 840.616007,
                    "p50": 853.133962,
                    "p95": 903.560604,
                    "p99": 903.560604,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 941.3779109999999,
                    "min": 905.2251679999999,
                    "p50": 923.9786949999999,
                    "p95": 941.3779109999999,
                    "p99": 941.3779109999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1267.809139,
                    "min": 1217.2673969999998,
                    "p50": 1228.148923,
                    "p95": 1267.809139,
                    "p99": 1267.809139,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1099.376839,
                    "min": 978.6226519999999,
                    "p50": 984.3545929999999,
                    "p95": 1099.376839,
                    "p99": 1099.376839,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 655.629274,
                    "min": 644.859063,
                    "p50": 650.804073,
                    "p95": 655.629274,
                    "p99": 655.629274,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 260.613167,
                    "min": 246.259153,
                    "p50": 256.237402,
                    "p95": 260.613167,
                    "p99": 260.613167,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 904.7884849999999,
                    "min": 800.853586,
                    "p50": 819.8206849999999,
                    "p95": 904.7884849999999,
                    "p99": 904.7884849999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 662.817136,
                    "min": 607.5348809999999,
                    "p50": 613.609599,
                    "p95": 662.817136,
                    "p99": 662.817136,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 532.5005,
                    "min": 505.294788,
                    "p50": 518.137927,
                    "p95": 532.5005,
                    "p99": 532.5005,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 369.335851,
                    "min": 351.729239,
                    "p50": 358.97763699999996,
                    "p95": 369.335851,
                    "p99": 369.335851,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 241.489298,
                    "min": 190.238498,
                    "p50": 204.52434699999998,
                    "p95": 241.489298,
                    "p99": 241.489298,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 341.140758,
                    "min": 272.870431,
                    "p50": 306.487535,
                    "p95": 341.140758,
                    "p99": 341.140758,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 791.76388,
                    "min": 750.553065,
                    "p50": 768.118026,
                    "p95": 791.76388,
                    "p99": 791.76388,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1014.0899969999999,
                    "min": 927.629791,
                    "p50": 947.2817369999999,
                    "p95": 1014.0899969999999,
                    "p99": 1014.0899969999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 444.42659699999996,
                    "min": 396.750191,
                    "p50": 411.588125,
                    "p95": 444.42659699999996,
                    "p99": 444.42659699999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 610.392517,
                    "min": 550.450008,
                    "p50": 562.290086,
                    "p95": 610.392517,
                    "p99": 610.392517,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1081.880975,
                    "min": 1056.325881,
                    "p50": 1060.621757,
                    "p95": 1081.880975,
                    "p99": 1081.880975,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 667.957308,
                    "min": 658.613121,
                    "p50": 663.09209,
                    "p95": 667.957308,
                    "p99": 667.957308,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 461.72616999999997,
                    "min": 454.272455,
                    "p50": 458.987537,
                    "p95": 461.72616999999997,
                    "p99": 461.72616999999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 729.218498,
                    "min": 705.7812309999999,
                    "p50": 718.1979759999999,
                    "p95": 729.218498,
                    "p99": 729.218498,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2193.475339,
                    "min": 2146.801779,
                    "p50": 2183.599351,
                    "p95": 2193.475339,
                    "p99": 2193.475339,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1199.440224,
                    "min": 1144.796634,
                    "p50": 1193.642701,
                    "p95": 1199.440224,
                    "p99": 1199.440224,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1481.841173,
                    "min": 1447.125609,
                    "p50": 1457.224329,
                    "p95": 1481.841173,
                    "p99": 1481.841173,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1692.242307,
                    "min": 1600.3731129999999,
                    "p50": 1621.449621,
                    "p95": 1692.242307,
                    "p99": 1692.242307,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2051.441817,
                    "min": 2004.489572,
                    "p50": 2028.192691,
                    "p95": 2051.441817,
                    "p99": 2051.441817,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1914.0629239999998,
                    "min": 1850.5929589999998,
                    "p50": 1890.327345,
                    "p95": 1914.0629239999998,
                    "p99": 1914.0629239999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 637.427073,
                    "min": 613.655447,
                    "p50": 622.725106,
                    "p95": 637.427073,
                    "p99": 637.427073,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1345.794707,
                    "min": 1302.480807,
                    "p50": 1323.144067,
                    "p95": 1345.794707,
                    "p99": 1345.794707,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1772.7450119999999,
                    "min": 1730.218731,
                    "p50": 1750.112731,
                    "p95": 1772.7450119999999,
                    "p99": 1772.7450119999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2569.1061019999997,
                    "min": 2485.3284049999997,
                    "p50": 2531.5294519999998,
                    "p95": 2569.1061019999997,
                    "p99": 2569.1061019999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 795.6571319999999,
                    "min": 744.285384,
                    "p50": 764.6373159999999,
                    "p95": 795.6571319999999,
                    "p99": 795.6571319999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1084.406508,
                    "min": 1035.4139069999999,
                    "p50": 1062.304179,
                    "p95": 1084.406508,
                    "p99": 1084.406508,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 483.08435399999996,
                    "min": 466.78950199999997,
                    "p50": 477.538663,
                    "p95": 483.08435399999996,
                    "p99": 483.08435399999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 941.0277,
                    "min": 894.064943,
                    "p50": 906.5045829999999,
                    "p95": 941.0277,
                    "p99": 941.0277,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2921.323097,
                    "min": 2824.726549,
                    "p50": 2892.921252,
                    "p95": 2921.323097,
                    "p99": 2921.323097,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2856.665226,
                    "min": 2806.011923,
                    "p50": 2830.393544,
                    "p95": 2856.665226,
                    "p99": 2856.665226,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2051.534604,
                    "min": 1983.0305059999998,
                    "p50": 2008.341448,
                    "p95": 2051.534604,
                    "p99": 2051.534604,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1733.1782349999999,
                    "min": 1693.2712299999998,
                    "p50": 1714.5859209999999,
                    "p95": 1733.1782349999999,
                    "p99": 1733.1782349999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1312.9940789999998,
                    "min": 1291.274281,
                    "p50": 1302.908086,
                    "p95": 1312.9940789999998,
                    "p99": 1312.9940789999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1209.567695,
                    "min": 1142.4109839999999,
                    "p50": 1152.451249,
                    "p95": 1209.567695,
                    "p99": 1209.567695,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 960.0940139999999,
                    "min": 874.1697029999999,
                    "p50": 884.5769009999999,
                    "p95": 960.0940139999999,
                    "p99": 960.0940139999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1903.9962229999999,
                    "min": 1833.234117,
                    "p50": 1852.273996,
                    "p95": 1903.9962229999999,
                    "p99": 1903.9962229999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 632.729371,
                    "min": 568.177886,
                    "p50": 605.490112,
                    "p95": 632.729371,
                    "p99": 632.729371,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1620.895889,
                    "min": 1560.7766139999999,
                    "p50": 1575.372459,
                    "p95": 1620.895889,
                    "p99": 1620.895889,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 773.355916,
                    "min": 746.84807,
                    "p50": 752.7355,
                    "p95": 773.355916,
                    "p99": 773.355916,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2500.379258,
                    "min": 2460.171419,
                    "p50": 2483.469886,
                    "p95": 2500.379258,
                    "p99": 2500.379258,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 477.45485099999996,
                    "min": 462.18312899999995,
                    "p50": 471.182418,
                    "p95": 477.45485099999996,
                    "p99": 477.45485099999996,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1072.5129809999999,
                    "min": 1003.970522,
                    "p50": 1038.9397079999999,
                    "p95": 1072.5129809999999,
                    "p99": 1072.5129809999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2181.882646,
                    "min": 2104.667541,
                    "p50": 2123.999746,
                    "p95": 2181.882646,
                    "p99": 2181.882646,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1470.255612,
                    "min": 1412.1664759999999,
                    "p50": 1438.3419199999998,
                    "p95": 1470.255612,
                    "p99": 1470.255612,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1537.071567,
                    "min": 1462.032143,
                    "p50": 1495.1359029999999,
                    "p95": 1537.071567,
                    "p99": 1537.071567,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 898.5777059999999,
                    "min": 824.409688,
                    "p50": 839.028929,
                    "p95": 898.5777059999999,
                    "p99": 898.5777059999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 723.6609129999999,
                    "min": 696.353579,
                    "p50": 716.947181,
                    "p95": 723.6609129999999,
                    "p99": 723.6609129999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1404.504934,
                    "min": 1344.3088759999998,
                    "p50": 1371.600315,
                    "p95": 1404.504934,
                    "p99": 1404.504934,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2700.827915,
                    "min": 2626.952469,
                    "p50": 2674.361096,
                    "p95": 2700.827915,
                    "p99": 2700.827915,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 629.439003,
                    "min": 564.1947789999999,
                    "p50": 577.18558,
                    "p95": 629.439003,
                    "p99": 629.439003,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 993.858132,
                    "min": 960.165169,
                    "p50": 965.567697,
                    "p95": 993.858132,
                    "p99": 993.858132,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 459.630369,
                    "min": 435.798299,
                    "p50": 439.940839,
                    "p95": 459.630369,
                    "p99": 459.630369,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2034.625446,
                    "min": 1998.0892079999999,
                    "p50": 2016.985438,
                    "p95": 2034.625446,
                    "p99": 2034.625446,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1924.8420279999998,
                    "min": 1856.8871139999999,
                    "p50": 1878.35671,
                    "p95": 1924.8420279999998,
                    "p99": 1924.8420279999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1640.433225,
                    "min": 1604.324743,
                    "p50": 1625.945829,
                    "p95": 1640.433225,
                    "p99": 1640.433225,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1762.1038369999999,
                    "min": 1727.7221379999999,
                    "p50": 1737.7081529999998,
                    "p95": 1762.1038369999999,
                    "p99": 1762.1038369999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1265.497422,
                    "min": 1220.156519,
                    "p50": 1243.754393,
                    "p95": 1265.497422,
                    "p99": 1265.497422,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2381.511739,
                    "min": 2321.124393,
                    "p50": 2334.691469,
                    "p95": 2381.511739,
                    "p99": 2381.511739,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1109.096304,
                    "min": 1089.145096,
                    "p50": 1097.3248509999999,
                    "p95": 1109.096304,
                    "p99": 1109.096304,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 830.3673309999999,
                    "min": 803.485632,
                    "p50": 817.196231,
                    "p95": 830.3673309999999,
                    "p99": 830.3673309999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 499.427311,
                    "min": 450.97537,
                    "p50": 463.043216,
                    "p95": 499.427311,
                    "p99": 499.427311,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 934.1028359999999,
                    "min": 913.595235,
                    "p50": 925.0873489999999,
                    "p95": 934.1028359999999,
                    "p99": 934.1028359999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1174.058791,
                    "min": 1054.4520929999999,
                    "p50": 1077.8902739999999,
                    "p95": 1174.058791,
                    "p99": 1174.058791,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 241.13579,
                    "min": 218.39362799999998,
                    "p50": 228.60875299999998,
                    "p95": 241.13579,
                    "p99": 241.13579,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 896.915094,
                    "min": 749.160162,
                    "p50": 759.8057,
                    "p95": 896.915094,
                    "p99": 896.915094,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 437.21921799999996,
                    "min": 397.14786399999997,
                    "p50": 406.483429,
                    "p95": 437.21921799999996,
                    "p99": 437.21921799999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 335.23763099999996,
                    "min": 269.749907,
                    "p50": 290.424468,
                    "p95": 335.23763099999996,
                    "p99": 335.23763099999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1815.399068,
                    "min": 1771.795402,
                    "p50": 1786.35762,
                    "p95": 1815.399068,
                    "p99": 1815.399068,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 593.713363,
                    "min": 564.383891,
                    "p50": 582.704024,
                    "p95": 593.713363,
                    "p99": 593.713363,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 760.5161879999999,
                    "min": 690.8814199999999,
                    "p50": 699.43729,
                    "p95": 760.5161879999999,
                    "p99": 760.5161879999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 876.890308,
                    "min": 862.9790489999999,
                    "p50": 872.225912,
                    "p95": 876.890308,
                    "p99": 876.890308,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 365.01615799999996,
                    "min": 336.667919,
                    "p50": 343.274002,
                    "p95": 365.01615799999996,
                    "p99": 365.01615799999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3002.5879569999997,
                    "min": 2923.234184,
                    "p50": 2957.641163,
                    "p95": 3002.5879569999997,
                    "p99": 3002.5879569999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1229.366197,
                    "min": 1176.61662,
                    "p50": 1217.436099,
                    "p95": 1229.366197,
                    "p99": 1229.366197,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 676.348829,
                    "min": 625.195644,
                    "p50": 639.436696,
                    "p95": 676.348829,
                    "p99": 676.348829,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 543.565841,
                    "min": 512.225788,
                    "p50": 532.282273,
                    "p95": 543.565841,
                    "p99": 543.565841,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2438.146371,
                    "min": 2356.334156,
                    "p50": 2384.24365,
                    "p95": 2438.146371,
                    "p99": 2438.146371,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1128.740906,
                    "min": 1053.220063,
                    "p50": 1066.633988,
                    "p95": 1128.740906,
                    "p99": 1128.740906,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 364.46007399999996,
                    "min": 351.284449,
                    "p50": 356.606401,
                    "p95": 364.46007399999996,
                    "p99": 364.46007399999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 759.417663,
                    "min": 707.02953,
                    "p50": 713.55881,
                    "p95": 759.417663,
                    "p99": 759.417663,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 518.4504069999999,
                    "min": 500.418924,
                    "p50": 515.05093,
                    "p95": 518.4504069999999,
                    "p99": 518.4504069999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 616.5522109999999,
                    "min": 551.178151,
                    "p50": 565.2097679999999,
                    "p95": 616.5522109999999,
                    "p99": 616.5522109999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 208.588585,
                    "min": 197.25662499999999,
                    "p50": 202.332887,
                    "p95": 208.588585,
                    "p99": 208.588585,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 618.148693,
                    "min": 592.480644,
                    "p50": 607.89679,
                    "p95": 618.148693,
                    "p99": 618.148693,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.79972,
                    "min": 297.533734,
                    "p50": 305.672889,
                    "p95": 350.79972,
                    "p99": 350.79972,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 804.4522059999999,
                    "min": 742.710257,
                    "p50": 765.946703,
                    "p95": 804.4522059999999,
                    "p99": 804.4522059999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 464.745772,
                    "min": 435.694307,
                    "p50": 461.84466399999997,
                    "p95": 464.745772,
                    "p99": 464.745772,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 988.0954019999999,
                    "min": 933.786534,
                    "p50": 943.069343,
                    "p95": 988.0954019999999,
                    "p99": 988.0954019999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 717.0171449999999,
                    "min": 652.9807559999999,
                    "p50": 666.266296,
                    "p95": 717.0171449999999,
                    "p99": 717.0171449999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 451.136627,
                    "min": 396.73959399999995,
                    "p50": 414.693779,
                    "p95": 451.136627,
                    "p99": 451.136627,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 285.214474,
                    "min": 241.931235,
                    "p50": 259.81651,
                    "p95": 285.214474,
                    "p99": 285.214474,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 859.448459,
                    "min": 802.1003119999999,
                    "p50": 819.7574209999999,
                    "p95": 859.448459,
                    "p99": 859.448459,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1594.3591179999999,
                    "min": 1556.2430829999998,
                    "p50": 1565.5325309999998,
                    "p95": 1594.3591179999999,
                    "p99": 1594.3591179999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 501.62012699999997,
                    "min": 490.11033699999996,
                    "p50": 498.67639199999996,
                    "p95": 501.62012699999997,
                    "p99": 501.62012699999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 621.8199619999999,
                    "min": 543.640689,
                    "p50": 554.850233,
                    "p95": 621.8199619999999,
                    "p99": 621.8199619999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 310.25260299999997,
                    "min": 264.791983,
                    "p50": 299.941372,
                    "p95": 310.25260299999997,
                    "p99": 310.25260299999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 490.71455,
                    "min": 442.75845699999996,
                    "p50": 452.857782,
                    "p95": 490.71455,
                    "p99": 490.71455,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 816.292031,
                    "min": 738.009916,
                    "p50": 793.1191719999999,
                    "p95": 816.292031,
                    "p99": 816.292031,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 209.539918,
                    "min": 195.41366599999998,
                    "p50": 200.086129,
                    "p95": 209.539918,
                    "p99": 209.539918,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1595.02075,
                    "min": 1485.559047,
                    "p50": 1532.301047,
                    "p95": 1595.02075,
                    "p99": 1595.02075,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 608.5319489999999,
                    "min": 578.891365,
                    "p50": 597.75206,
                    "p95": 608.5319489999999,
                    "p99": 608.5319489999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 750.783854,
                    "min": 687.629057,
                    "p50": 698.732894,
                    "p95": 750.783854,
                    "p99": 750.783854,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 394.334991,
                    "min": 345.558998,
                    "p50": 349.537127,
                    "p95": 394.334991,
                    "p99": 394.334991,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 961.9578759999999,
                    "min": 915.012762,
                    "p50": 931.9699939999999,
                    "p95": 961.9578759999999,
                    "p99": 961.9578759999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 665.18143,
                    "min": 642.867202,
                    "p50": 652.491953,
                    "p95": 665.18143,
                    "p99": 665.18143,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 463.23198299999996,
                    "min": 394.844615,
                    "p50": 406.459212,
                    "p95": 463.23198299999996,
                    "p99": 463.23198299999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2094.699741,
                    "min": 2009.5559329999999,
                    "p50": 2026.522747,
                    "p95": 2094.699741,
                    "p99": 2094.699741,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 250.99252099999998,
                    "min": 242.37371499999998,
                    "p50": 249.130383,
                    "p95": 250.99252099999998,
                    "p99": 250.99252099999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 819.6245739999999,
                    "min": 782.775771,
                    "p50": 800.096333,
                    "p95": 819.6245739999999,
                    "p99": 819.6245739999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1095.1252259999999,
                    "min": 1040.033166,
                    "p50": 1053.4437269999999,
                    "p95": 1095.1252259999999,
                    "p99": 1095.1252259999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 178.75721,
                    "min": 153.374818,
                    "p50": 176.636886,
                    "p95": 178.75721,
                    "p99": 178.75721,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 164.832774,
                    "min": 124.19268299999999,
                    "p50": 163.016402,
                    "p95": 164.832774,
                    "p99": 164.832774,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 248.71396099999998,
                    "min": 241.553742,
                    "p50": 246.403923,
                    "p95": 248.71396099999998,
                    "p99": 248.71396099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.19980099999998,
                    "min": 180.012193,
                    "p50": 217.880397,
                    "p95": 219.19980099999998,
                    "p99": 219.19980099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.627195,
                    "min": 138.80783599999998,
                    "p50": 176.592817,
                    "p95": 180.627195,
                    "p99": 180.627195,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.74108199999998,
                    "min": 166.929359,
                    "p50": 204.799603,
                    "p95": 206.74108199999998,
                    "p99": 206.74108199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.26593599999998,
                    "min": 211.983885,
                    "p50": 230.88262999999998,
                    "p95": 234.26593599999998,
                    "p99": 234.26593599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.53497,
                    "min": 79.30375599999999,
                    "p50": 80.833015,
                    "p95": 82.53497,
                    "p99": 82.53497,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 98.400706,
                    "min": 56.099948,
                    "p50": 94.247053,
                    "p95": 98.400706,
                    "p99": 98.400706,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.32179699999999,
                    "min": 86.82762799999999,
                    "p50": 109.00773199999999,
                    "p95": 110.32179699999999,
                    "p99": 110.32179699999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 317.952007,
                    "min": 291.226096,
                    "p50": 314.527497,
                    "p95": 317.952007,
                    "p99": 317.952007,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.539829,
                    "min": 109.012919,
                    "p50": 122.01717099999999,
                    "p95": 127.539829,
                    "p99": 127.539829,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 282.962784,
                    "min": 253.621748,
                    "p50": 279.856831,
                    "p95": 282.962784,
                    "p99": 282.962784,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.72976599999998,
                    "min": 137.40427599999998,
                    "p50": 148.96164,
                    "p95": 150.72976599999998,
                    "p99": 150.72976599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.658794,
                    "min": 97.59272,
                    "p50": 135.410173,
                    "p95": 136.658794,
                    "p99": 136.658794,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 95.316531,
                    "min": 72.434829,
                    "p50": 92.538431,
                    "p95": 95.316531,
                    "p99": 95.316531,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 152.802633,
                    "min": 123.15008999999999,
                    "p50": 148.489579,
                    "p95": 152.802633,
                    "p99": 152.802633,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 197.25695399999998,
                    "min": 144.755719,
                    "p50": 159.021422,
                    "p95": 197.25695399999998,
                    "p99": 197.25695399999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 52.469319999999996,
                    "min": 48.113699,
                    "p50": 48.540337,
                    "p95": 52.469319999999996,
                    "p99": 52.469319999999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 102.37453,
                    "min": 96.347785,
                    "p50": 100.89485599999999,
                    "p95": 102.37453,
                    "p99": 102.37453,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 182.260006,
                    "min": 137.941038,
                    "p50": 173.995859,
                    "p95": 182.260006,
                    "p99": 182.260006,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 41.993489,
                    "min": 39.010782,
                    "p50": 40.567854,
                    "p95": 41.993489,
                    "p99": 41.993489,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 71.258292,
                    "min": 58.103992,
                    "p50": 69.980355,
                    "p95": 71.258292,
                    "p99": 71.258292,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 79.821134,
                    "min": 60.981012,
                    "p50": 79.01928699999999,
                    "p95": 79.821134,
                    "p99": 79.821134,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 254.66285,
                    "min": 215.807704,
                    "p50": 222.49971499999998,
                    "p95": 254.66285,
                    "p99": 254.66285,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 305.058404,
                    "min": 281.90723199999996,
                    "p50": 300.18737799999997,
                    "p95": 305.058404,
                    "p99": 305.058404,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 113.307155,
                    "min": 103.947599,
                    "p50": 108.634626,
                    "p95": 113.307155,
                    "p99": 113.307155,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 647.8798919999999,
                    "min": 630.241673,
                    "p50": 644.127947,
                    "p95": 647.8798919999999,
                    "p99": 647.8798919999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 33.036282,
                    "min": 26.633274,
                    "p50": 31.096607,
                    "p95": 33.036282,
                    "p99": 33.036282,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 61.887941999999995,
                    "min": 52.522766,
                    "p50": 60.306503,
                    "p95": 61.887941999999995,
                    "p99": 61.887941999999995,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 375.11967,
                    "min": 344.62809699999997,
                    "p50": 348.246981,
                    "p95": 375.11967,
                    "p99": 375.11967,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 141.656038,
                    "min": 128.496041,
                    "p50": 132.71204,
                    "p95": 141.656038,
                    "p99": 141.656038,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 144.45883899999998,
                    "min": 105.006412,
                    "p50": 133.738881,
                    "p95": 144.45883899999998,
                    "p99": 144.45883899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.706241,
                    "min": 117.37665,
                    "p50": 153.590507,
                    "p95": 154.706241,
                    "p99": 154.706241,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.38760699999999,
                    "min": 59.22609,
                    "p50": 95.634326,
                    "p95": 97.38760699999999,
                    "p99": 97.38760699999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 385.773081,
                    "min": 376.99925199999996,
                    "p50": 385.281044,
                    "p95": 385.773081,
                    "p99": 385.773081,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 243.00212299999998,
                    "min": 201.562625,
                    "p50": 241.765109,
                    "p95": 243.00212299999998,
                    "p99": 243.00212299999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 190.66833799999998,
                    "min": 152.500326,
                    "p50": 188.957761,
                    "p95": 190.66833799999998,
                    "p99": 190.66833799999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 182.87947599999998,
                    "min": 141.16301099999998,
                    "p50": 177.931876,
                    "p95": 182.87947599999998,
                    "p99": 182.87947599999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.938232,
                    "min": 116.714294,
                    "p50": 120.037178,
                    "p95": 120.938232,
                    "p99": 120.938232,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 271.978966,
                    "min": 248.63845899999998,
                    "p50": 269.35285,
                    "p95": 271.978966,
                    "p99": 271.978966,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.098263,
                    "min": 59.380131,
                    "p50": 68.496999,
                    "p95": 75.098263,
                    "p99": 75.098263,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 215.02867999999998,
                    "min": 198.92140799999999,
                    "p50": 210.92376,
                    "p95": 215.02867999999998,
                    "p99": 215.02867999999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 131.687245,
                    "min": 110.57657999999999,
                    "p50": 130.899732,
                    "p95": 131.687245,
                    "p99": 131.687245,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.07626499999999,
                    "min": 69.69518099999999,
                    "p50": 107.245453,
                    "p95": 109.07626499999999,
                    "p99": 109.07626499999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.95983799999999,
                    "min": 80.263622,
                    "p50": 85.50320699999999,
                    "p95": 86.95983799999999,
                    "p99": 86.95983799999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 205.448909,
                    "min": 163.68938799999998,
                    "p50": 200.95242499999998,
                    "p95": 205.448909,
                    "p99": 205.448909,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.225555,
                    "min": 242.913017,
                    "p50": 282.308097,
                    "p95": 283.225555,
                    "p99": 283.225555,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.167861,
                    "min": 44.154385,
                    "p50": 80.685836,
                    "p95": 83.167861,
                    "p99": 83.167861,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.216827,
                    "min": 167.510531,
                    "p50": 204.808539,
                    "p95": 211.216827,
                    "p99": 211.216827,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.03716899999998,
                    "min": 182.159733,
                    "p50": 217.97454499999998,
                    "p95": 222.03716899999998,
                    "p99": 222.03716899999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.659802,
                    "min": 56.716463999999995,
                    "p50": 94.344763,
                    "p95": 94.659802,
                    "p99": 94.659802,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 195.063979,
                    "min": 176.321785,
                    "p50": 190.832267,
                    "p95": 195.063979,
                    "p99": 195.063979,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 250.206101,
                    "min": 238.153288,
                    "p50": 247.109432,
                    "p95": 250.206101,
                    "p99": 250.206101,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.043358,
                    "min": 84.004528,
                    "p50": 121.257116,
                    "p95": 125.043358,
                    "p99": 125.043358,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.091307,
                    "min": 140.354514,
                    "p50": 162.794993,
                    "p95": 166.091307,
                    "p99": 166.091307,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.180204,
                    "min": 135.651791,
                    "p50": 149.26701599999998,
                    "p95": 153.180204,
                    "p99": 153.180204,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 317.39599899999996,
                    "min": 290.904809,
                    "p50": 316.443539,
                    "p95": 317.39599899999996,
                    "p99": 317.39599899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.49454799999998,
                    "min": 148.51251399999998,
                    "p50": 177.17517899999999,
                    "p95": 179.49454799999998,
                    "p99": 179.49454799999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.41142299999998,
                    "min": 119.94492199999999,
                    "p50": 135.62710099999998,
                    "p95": 145.41142299999998,
                    "p99": 145.41142299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.58013899999999,
                    "min": 77.40820099999999,
                    "p50": 107.97004799999999,
                    "p95": 110.58013899999999,
                    "p99": 110.58013899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 235.723186,
                    "min": 221.881331,
                    "p50": 231.86439399999998,
                    "p95": 235.723186,
                    "p99": 235.723186,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 30.963953999999998,
                    "min": 24.562208,
                    "p50": 29.503666,
                    "p95": 30.963953999999998,
                    "p99": 30.963953999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.107257999999998,
                    "min": 24.433652,
                    "p50": 24.724397,
                    "p95": 26.107257999999998,
                    "p99": 26.107257999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 75.36660599999999,
                    "min": 72.243585,
                    "p50": 74.018957,
                    "p95": 75.36660599999999,
                    "p99": 75.36660599999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 142.25121099999998,
                    "min": 133.339999,
                    "p50": 140.733938,
                    "p95": 142.25121099999998,
                    "p99": 142.25121099999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.515015,
                    "min": 22.314263,
                    "p50": 24.282719,
                    "p95": 26.515015,
                    "p99": 26.515015,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.374581,
                    "min": 24.430391999999998,
                    "p50": 24.688267999999997,
                    "p95": 26.374581,
                    "p99": 26.374581,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 59.385197,
                    "min": 42.123864999999995,
                    "p50": 57.249581,
                    "p95": 59.385197,
                    "p99": 59.385197,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.834065,
                    "min": 21.99624,
                    "p50": 24.370117,
                    "p95": 26.834065,
                    "p99": 26.834065,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 59.038523999999995,
                    "min": 31.535838,
                    "p50": 51.289466999999995,
                    "p95": 59.038523999999995,
                    "p99": 59.038523999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.357383,
                    "min": 24.50779,
                    "p50": 26.084975999999997,
                    "p95": 27.357383,
                    "p99": 27.357383,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 46.215122,
                    "min": 37.408657999999996,
                    "p50": 43.9567,
                    "p95": 46.215122,
                    "p99": 46.215122,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.93938,
                    "min": 23.234218,
                    "p50": 24.674135,
                    "p95": 24.93938,
                    "p99": 24.93938,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.645014,
                    "min": 24.22108,
                    "p50": 24.602950999999997,
                    "p95": 26.645014,
                    "p99": 26.645014,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 25.633361999999998,
                    "min": 24.103534,
                    "p50": 24.407746,
                    "p95": 25.633361999999998,
                    "p99": 25.633361999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.097061,
                    "min": 22.255202,
                    "p50": 24.359937,
                    "p95": 27.097061,
                    "p99": 27.097061,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.786624999999997,
                    "min": 24.20617,
                    "p50": 24.519623,
                    "p95": 24.786624999999997,
                    "p99": 24.786624999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 25.230421999999997,
                    "min": 22.507877,
                    "p50": 24.581018999999998,
                    "p95": 25.230421999999997,
                    "p99": 25.230421999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.713589,
                    "min": 22.344621999999998,
                    "p50": 24.369595999999998,
                    "p95": 26.713589,
                    "p99": 26.713589,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.659668,
                    "min": 21.049608,
                    "p50": 24.327824999999997,
                    "p95": 24.659668,
                    "p99": 24.659668,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 146.149933,
                    "min": 109.88576499999999,
                    "p50": 144.600153,
                    "p95": 146.149933,
                    "p99": 146.149933,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.432541,
                    "min": 63.352711,
                    "p50": 101.096436,
                    "p95": 105.432541,
                    "p99": 105.432541,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 212.75519799999998,
                    "min": 176.78226999999998,
                    "p50": 211.65080999999998,
                    "p95": 212.75519799999998,
                    "p99": 212.75519799999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 114.548062,
                    "min": 75.276721,
                    "p50": 113.302323,
                    "p95": 114.548062,
                    "p99": 114.548062,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 177.96926499999998,
                    "min": 137.19749299999998,
                    "p50": 175.940089,
                    "p95": 177.96926499999998,
                    "p99": 177.96926499999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 658.3050989999999,
                    "min": 630.695896,
                    "p50": 653.151979,
                    "p95": 658.3050989999999,
                    "p99": 658.3050989999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 165.987683,
                    "min": 123.23091199999999,
                    "p50": 163.40106699999998,
                    "p95": 165.987683,
                    "p99": 165.987683,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 203.048135,
                    "min": 195.654003,
                    "p50": 199.64697999999999,
                    "p95": 203.048135,
                    "p99": 203.048135,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 260.70671899999996,
                    "min": 245.598704,
                    "p50": 255.541935,
                    "p95": 260.70671899999996,
                    "p99": 260.70671899999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 137.807596,
                    "min": 99.48984899999999,
                    "p50": 136.796699,
                    "p95": 137.807596,
                    "p99": 137.807596,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 534.76519,
                    "min": 491.481295,
                    "p50": 527.5338409999999,
                    "p95": 534.76519,
                    "p99": 534.76519,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 129.017121,
                    "min": 125.19274,
                    "p50": 126.141526,
                    "p95": 129.017121,
                    "p99": 129.017121,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 186.93602099999998,
                    "min": 179.516065,
                    "p50": 184.67282,
                    "p95": 186.93602099999998,
                    "p99": 186.93602099999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 410.85598999999996,
                    "min": 368.84117499999996,
                    "p50": 406.748134,
                    "p95": 410.85598999999996,
                    "p99": 410.85598999999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.509137,
                    "min": 71.94467999999999,
                    "p50": 89.204764,
                    "p95": 89.509137,
                    "p99": 89.509137,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1265.4728249999998,
                    "min": 1242.091678,
                    "p50": 1250.989622,
                    "p95": 1265.4728249999998,
                    "p99": 1265.4728249999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 74.369997,
                    "min": 45.849061,
                    "p50": 73.649896,
                    "p95": 74.369997,
                    "p99": 74.369997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 228.307895,
                    "min": 216.70307,
                    "p50": 224.194979,
                    "p95": 228.307895,
                    "p99": 228.307895,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.433578,
                    "min": 250.07648799999998,
                    "p50": 287.781436,
                    "p95": 290.433578,
                    "p99": 290.433578,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.888754,
                    "min": 24.086783999999998,
                    "p50": 24.566219999999998,
                    "p95": 24.888754,
                    "p99": 24.888754,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.939507,
                    "min": 24.120500999999997,
                    "p50": 24.571928999999997,
                    "p95": 24.939507,
                    "p99": 24.939507,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.904359,
                    "min": 24.104252,
                    "p50": 24.540553,
                    "p95": 24.904359,
                    "p99": 24.904359,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 28.669297999999998,
                    "min": 22.468947999999997,
                    "p50": 24.684946999999998,
                    "p95": 28.669297999999998,
                    "p99": 28.669297999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 25.867922,
                    "min": 23.416103,
                    "p50": 24.18535,
                    "p95": 25.867922,
                    "p99": 25.867922,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 28.069056,
                    "min": 24.067726,
                    "p50": 27.123936999999998,
                    "p95": 28.069056,
                    "p99": 28.069056,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 25.194421,
                    "min": 24.150002,
                    "p50": 24.565958,
                    "p95": 25.194421,
                    "p99": 25.194421,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.850296999999998,
                    "min": 18.470257,
                    "p50": 24.431835,
                    "p95": 26.850296999999998,
                    "p99": 26.850296999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 45.773472,
                    "min": 40.233306999999996,
                    "p50": 43.088589,
                    "p95": 45.773472,
                    "p99": 45.773472,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.73341,
                    "min": 24.375386,
                    "p50": 25.222493,
                    "p95": 26.73341,
                    "p99": 26.73341,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.483954999999998,
                    "min": 22.062711,
                    "p50": 24.507913,
                    "p95": 26.483954999999998,
                    "p99": 26.483954999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 26.68629,
                    "min": 24.195262,
                    "p50": 24.538529,
                    "p95": 26.68629,
                    "p99": 26.68629,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.574654,
                    "min": 24.497512999999998,
                    "p50": 24.660138,
                    "p95": 26.574654,
                    "p99": 26.574654,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 24.722386999999998,
                    "min": 22.979595,
                    "p50": 24.469500999999998,
                    "p95": 24.722386999999998,
                    "p99": 24.722386999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 88.312829,
                    "min": 74.106805,
                    "p50": 84.87020299999999,
                    "p95": 88.312829,
                    "p99": 88.312829,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.433418,
                    "min": 23.901177999999998,
                    "p50": 24.423634,
                    "p95": 31.433418,
                    "p99": 31.433418,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 35.313426,
                    "min": 31.34881,
                    "p50": 33.939768,
                    "p95": 35.313426,
                    "p99": 35.313426,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.902682,
                    "min": 21.638053,
                    "p50": 24.689535,
                    "p95": 24.902682,
                    "p99": 24.902682,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.802635,
                    "min": 23.596535,
                    "p50": 24.621361,
                    "p95": 24.802635,
                    "p99": 24.802635,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.126817,
                    "min": 23.469213,
                    "p50": 24.772623,
                    "p95": 27.126817,
                    "p99": 27.126817,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.737551,
                    "min": 24.330755,
                    "p50": 24.702378,
                    "p95": 26.737551,
                    "p99": 26.737551,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.718588999999998,
                    "min": 23.559388,
                    "p50": 24.321678,
                    "p95": 26.718588999999998,
                    "p99": 26.718588999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 25.344579,
                    "min": 22.503214999999997,
                    "p50": 24.650948999999997,
                    "p95": 25.344579,
                    "p99": 25.344579,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.610001,
                    "min": 23.640174,
                    "p50": 24.475673999999998,
                    "p95": 24.610001,
                    "p99": 24.610001,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.685928999999998,
                    "min": 21.042749,
                    "p50": 24.279286,
                    "p95": 26.685928999999998,
                    "p99": 26.685928999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 25.825226999999998,
                    "min": 23.984434,
                    "p50": 24.463741,
                    "p95": 25.825226999999998,
                    "p99": 25.825226999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 25.134397,
                    "min": 22.515548,
                    "p50": 24.213258999999997,
                    "p95": 25.134397,
                    "p99": 25.134397,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.594956999999997,
                    "min": 24.175371,
                    "p50": 24.457084,
                    "p95": 24.594956999999997,
                    "p99": 24.594956999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 26.697352,
                    "min": 24.096384999999998,
                    "p50": 24.677364999999998,
                    "p95": 26.697352,
                    "p99": 26.697352,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.859641,
                    "min": 24.418335,
                    "p50": 24.489013999999997,
                    "p95": 24.859641,
                    "p99": 24.859641,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 24.892653,
                    "min": 24.340697,
                    "p50": 24.653658,
                    "p95": 24.892653,
                    "p99": 24.892653,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.736686,
                    "min": 23.008202,
                    "p50": 24.337666,
                    "p95": 24.736686,
                    "p99": 24.736686,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 24.771843,
                    "min": 22.839537999999997,
                    "p50": 24.612578,
                    "p95": 24.771843,
                    "p99": 24.771843,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.587051,
                    "min": 24.043713999999998,
                    "p50": 24.421844,
                    "p95": 24.587051,
                    "p99": 24.587051,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 51.87283,
                    "min": 44.591277,
                    "p50": 47.411741,
                    "p95": 51.87283,
                    "p99": 51.87283,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.814189,
                    "min": 18.283763999999998,
                    "p50": 24.508212999999998,
                    "p95": 26.814189,
                    "p99": 26.814189,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.230646999999998,
                    "min": 24.260067,
                    "p50": 24.56806,
                    "p95": 27.230646999999998,
                    "p99": 27.230646999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.883176,
                    "min": 24.070553999999998,
                    "p50": 24.533744,
                    "p95": 26.883176,
                    "p99": 26.883176,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.78650299999998,
                    "min": 140.47411599999998,
                    "p50": 153.73613799999998,
                    "p95": 154.78650299999998,
                    "p99": 154.78650299999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.23840899999999,
                    "min": 37.896218999999995,
                    "p50": 73.98645499999999,
                    "p95": 75.23840899999999,
                    "p99": 75.23840899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1273.864394,
                    "min": 1240.7615859999999,
                    "p50": 1257.330042,
                    "p95": 1273.864394,
                    "p99": 1273.864394,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.52385599999997,
                    "min": 245.469245,
                    "p50": 286.359341,
                    "p95": 290.52385599999997,
                    "p99": 290.52385599999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.138231,
                    "min": 86.703724,
                    "p50": 126.381773,
                    "p95": 128.138231,
                    "p99": 128.138231,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 88.135016,
                    "min": 77.937955,
                    "p50": 86.584397,
                    "p95": 88.135016,
                    "p99": 88.135016,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.914211,
                    "min": 100.429644,
                    "p50": 114.74484299999999,
                    "p95": 119.914211,
                    "p99": 119.914211,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 411.863427,
                    "min": 396.155372,
                    "p50": 406.74251,
                    "p95": 411.863427,
                    "p99": 411.863427,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 202.57950599999998,
                    "min": 193.57380799999999,
                    "p50": 200.509356,
                    "p95": 202.57950599999998,
                    "p99": 202.57950599999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 177.27983899999998,
                    "min": 136.291898,
                    "p50": 173.625225,
                    "p95": 177.27983899999998,
                    "p99": 177.27983899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 537.227191,
                    "min": 489.387709,
                    "p50": 528.113022,
                    "p95": 537.227191,
                    "p99": 537.227191,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 659.045722,
                    "min": 647.150956,
                    "p50": 654.683089,
                    "p95": 659.045722,
                    "p99": 659.045722,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 214.605503,
                    "min": 173.979388,
                    "p50": 213.649145,
                    "p95": 214.605503,
                    "p99": 214.605503,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.40835799999999,
                    "min": 89.27256,
                    "p50": 101.933432,
                    "p95": 102.40835799999999,
                    "p99": 102.40835799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 258.509946,
                    "min": 215.78086399999998,
                    "p50": 253.98947099999998,
                    "p95": 258.509946,
                    "p99": 258.509946,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.408377,
                    "min": 134.584084,
                    "p50": 150.18978099999998,
                    "p95": 156.408377,
                    "p99": 156.408377,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 188.430973,
                    "min": 148.83929999999998,
                    "p50": 186.81996999999998,
                    "p95": 188.430973,
                    "p99": 188.430973,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 227.87092299999998,
                    "min": 219.115921,
                    "p50": 224.606847,
                    "p95": 227.87092299999998,
                    "p99": 227.87092299999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.953611,
                    "min": 128.856987,
                    "p50": 138.576582,
                    "p95": 143.953611,
                    "p99": 143.953611,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 773.18936,
                    "min": 738.7363359999999,
                    "p50": 765.403996,
                    "p95": 773.18936,
                    "p99": 773.18936,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 135.852124,
                    "min": 128.28097,
                    "p50": 131.33553,
                    "p95": 135.852124,
                    "p99": 135.852124,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 253.721003,
                    "min": 215.496678,
                    "p50": 249.292981,
                    "p95": 253.721003,
                    "p99": 253.721003,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 392.12663,
                    "min": 379.349045,
                    "p50": 384.611356,
                    "p95": 392.12663,
                    "p99": 392.12663,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 156.088604,
                    "min": 143.701981,
                    "p50": 153.51474399999998,
                    "p95": 156.088604,
                    "p99": 156.088604,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 407.728526,
                    "min": 366.45174499999996,
                    "p50": 400.856945,
                    "p95": 407.728526,
                    "p99": 407.728526,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 232.95857099999998,
                    "min": 192.140988,
                    "p50": 230.76053,
                    "p95": 232.95857099999998,
                    "p99": 232.95857099999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 456.15140499999995,
                    "min": 441.97511399999996,
                    "p50": 451.296926,
                    "p95": 456.15140499999995,
                    "p99": 456.15140499999995,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.707414,
                    "min": 181.276581,
                    "p50": 188.662806,
                    "p95": 193.707414,
                    "p99": 193.707414,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 271.520463,
                    "min": 232.12614399999998,
                    "p50": 269.586058,
                    "p95": 271.520463,
                    "p99": 271.520463,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 967.368988,
                    "min": 950.3182099999999,
                    "p50": 960.140375,
                    "p95": 967.368988,
                    "p99": 967.368988,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 293.151661,
                    "min": 278.340417,
                    "p50": 290.052071,
                    "p95": 293.151661,
                    "p99": 293.151661,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 211.442884,
                    "min": 202.22341799999998,
                    "p50": 210.522451,
                    "p95": 211.442884,
                    "p99": 211.442884,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 346.146849,
                    "min": 335.860592,
                    "p50": 341.806356,
                    "p95": 346.146849,
                    "p99": 346.146849,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.53431499999999,
                    "min": 75.786576,
                    "p50": 111.078068,
                    "p95": 112.53431499999999,
                    "p99": 112.53431499999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 362.563853,
                    "min": 351.043831,
                    "p50": 360.18947199999997,
                    "p95": 362.563853,
                    "p99": 362.563853,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 503.31139199999996,
                    "min": 463.628178,
                    "p50": 501.199146,
                    "p95": 503.31139199999996,
                    "p99": 503.31139199999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1298.750675,
                    "min": 1279.67214,
                    "p50": 1292.359095,
                    "p95": 1298.750675,
                    "p99": 1298.750675,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.586104,
                    "min": 162.764939,
                    "p50": 166.24059499999998,
                    "p95": 173.586104,
                    "p99": 173.586104,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.200896,
                    "min": 284.157161,
                    "p50": 291.40214299999997,
                    "p95": 298.200896,
                    "p99": 298.200896,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.662448,
                    "min": 249.444119,
                    "p50": 250.96957799999998,
                    "p95": 258.662448,
                    "p99": 258.662448,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 462.115609,
                    "min": 428.601586,
                    "p50": 458.146667,
                    "p95": 462.115609,
                    "p99": 462.115609,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 419.759005,
                    "min": 377.82109499999996,
                    "p50": 414.75287599999996,
                    "p95": 419.759005,
                    "p99": 419.759005,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 544.091637,
                    "min": 522.348718,
                    "p50": 537.902708,
                    "p95": 544.091637,
                    "p99": 544.091637,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 686.209974,
                    "min": 627.016831,
                    "p50": 667.665478,
                    "p95": 686.209974,
                    "p99": 686.209974,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 586.697182,
                    "min": 578.3126159999999,
                    "p50": 583.490694,
                    "p95": 586.697182,
                    "p99": 586.697182,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.133911,
                    "min": 485.63854699999996,
                    "p50": 502.387342,
                    "p95": 516.133911,
                    "p99": 516.133911,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 901.398323,
                    "min": 833.1879349999999,
                    "p50": 876.663731,
                    "p95": 901.398323,
                    "p99": 901.398323,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 340.596392,
                    "min": 294.41334,
                    "p50": 333.190336,
                    "p95": 340.596392,
                    "p99": 340.596392,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.962765,
                    "min": 196.736246,
                    "p50": 206.96668,
                    "p95": 209.962765,
                    "p99": 209.962765,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 776.297781,
                    "min": 753.023661,
                    "p50": 770.884838,
                    "p95": 776.297781,
                    "p99": 776.297781,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 377.12091999999996,
                    "min": 351.26858799999997,
                    "p50": 373.67943099999997,
                    "p95": 377.12091999999996,
                    "p99": 377.12091999999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 628.893425,
                    "min": 585.114556,
                    "p50": 619.535305,
                    "p95": 628.893425,
                    "p99": 628.893425,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 931.3689009999999,
                    "min": 885.069945,
                    "p50": 920.3394609999999,
                    "p95": 931.3689009999999,
                    "p99": 931.3689009999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2004.341471,
                    "min": 1937.6581919999999,
                    "p50": 1978.4557049999999,
                    "p95": 2004.341471,
                    "p99": 2004.341471,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2823.872024,
                    "min": 2751.4589619999997,
                    "p50": 2808.11856,
                    "p95": 2823.872024,
                    "p99": 2823.872024,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5617.678663,
                    "min": 5536.771443,
                    "p50": 5585.571943,
                    "p95": 5617.678663,
                    "p99": 5617.678663,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1574.23135,
                    "min": 1551.517367,
                    "p50": 1569.0670719999998,
                    "p95": 1574.23135,
                    "p99": 1574.23135,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 736.1068389999999,
                    "min": 709.9477959999999,
                    "p50": 731.797299,
                    "p95": 736.1068389999999,
                    "p99": 736.1068389999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 601.301463,
                    "min": 559.247514,
                    "p50": 594.747678,
                    "p95": 601.301463,
                    "p99": 601.301463,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1724.323661,
                    "min": 1663.4421539999998,
                    "p50": 1710.48695,
                    "p95": 1724.323661,
                    "p99": 1724.323661,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4228.19362,
                    "min": 4159.803908,
                    "p50": 4195.765219,
                    "p95": 4228.19362,
                    "p99": 4228.19362,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2495.211186,
                    "min": 2440.562124,
                    "p50": 2460.392581,
                    "p95": 2495.211186,
                    "p99": 2495.211186,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2141.680335,
                    "min": 2077.281163,
                    "p50": 2107.891037,
                    "p95": 2141.680335,
                    "p99": 2141.680335,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1155.997073,
                    "min": 1137.323545,
                    "p50": 1145.5449919999999,
                    "p95": 1155.997073,
                    "p99": 1155.997073,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1428.9981699999998,
                    "min": 1409.2888189999999,
                    "p50": 1423.863128,
                    "p95": 1428.9981699999998,
                    "p99": 1428.9981699999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1016.7217169999999,
                    "min": 970.6154399999999,
                    "p50": 1012.5370989999999,
                    "p95": 1016.7217169999999,
                    "p99": 1016.7217169999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 460.17278999999996,
                    "min": 416.625976,
                    "p50": 458.135152,
                    "p95": 460.17278999999996,
                    "p99": 460.17278999999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1863.177089,
                    "min": 1795.717219,
                    "p50": 1837.736847,
                    "p95": 1863.177089,
                    "p99": 1863.177089,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1303.894432,
                    "min": 1272.98587,
                    "p50": 1285.861283,
                    "p95": 1303.894432,
                    "p99": 1303.894432,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 427.65977799999996,
                    "min": 405.143081,
                    "p50": 423.467915,
                    "p95": 427.65977799999996,
                    "p99": 427.65977799999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1304.523486,
                    "min": 1269.8890529999999,
                    "p50": 1293.0145459999999,
                    "p95": 1304.523486,
                    "p99": 1304.523486,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2587.977603,
                    "min": 2536.607618,
                    "p50": 2581.963823,
                    "p95": 2587.977603,
                    "p99": 2587.977603,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1432.28516,
                    "min": 1416.277953,
                    "p50": 1428.769229,
                    "p95": 1432.28516,
                    "p99": 1432.28516,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3759.475995,
                    "min": 3693.824924,
                    "p50": 3751.021906,
                    "p95": 3759.475995,
                    "p99": 3759.475995,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 811.309525,
                    "min": 778.112954,
                    "p50": 798.8265719999999,
                    "p95": 811.309525,
                    "p99": 811.309525,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1198.586935,
                    "min": 1173.703822,
                    "p50": 1187.5873709999998,
                    "p95": 1198.586935,
                    "p99": 1198.586935,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5002.9564199999995,
                    "min": 4907.012435,
                    "p50": 4930.74536,
                    "p95": 5002.9564199999995,
                    "p99": 5002.9564199999995,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 691.089848,
                    "min": 666.3399529999999,
                    "p50": 687.023544,
                    "p95": 691.089848,
                    "p99": 691.089848,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1730.6622399999999,
                    "min": 1688.62031,
                    "p50": 1711.137551,
                    "p95": 1730.6622399999999,
                    "p99": 1730.6622399999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 925.261844,
                    "min": 876.0658229999999,
                    "p50": 912.1677589999999,
                    "p95": 925.261844,
                    "p99": 925.261844,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 547.969527,
                    "min": 538.805293,
                    "p50": 544.1716359999999,
                    "p95": 547.969527,
                    "p99": 547.969527,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1948.180289,
                    "min": 1930.2553149999999,
                    "p50": 1944.697254,
                    "p95": 1948.180289,
                    "p99": 1948.180289,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1839.421244,
                    "min": 1790.783596,
                    "p50": 1825.945158,
                    "p95": 1839.421244,
                    "p99": 1839.421244,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2239.872479,
                    "min": 2165.376803,
                    "p50": 2216.405064,
                    "p95": 2239.872479,
                    "p99": 2239.872479,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1051.673621,
                    "min": 1027.604484,
                    "p50": 1033.243149,
                    "p95": 1051.673621,
                    "p99": 1051.673621,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1574.635119,
                    "min": 1536.3988689999999,
                    "p50": 1554.315877,
                    "p95": 1574.635119,
                    "p99": 1574.635119,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 878.133927,
                    "min": 829.517531,
                    "p50": 874.91698,
                    "p95": 878.133927,
                    "p99": 878.133927,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 639.8331919999999,
                    "min": 595.082892,
                    "p50": 636.755129,
                    "p95": 639.8331919999999,
                    "p99": 639.8331919999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1237.5921509999998,
                    "min": 1213.4260199999999,
                    "p50": 1228.2490699999998,
                    "p95": 1237.5921509999998,
                    "p99": 1237.5921509999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1826.559507,
                    "min": 1767.4461569999999,
                    "p50": 1814.760298,
                    "p95": 1826.559507,
                    "p99": 1826.559507,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 6006.233988,
                    "min": 5924.708082,
                    "p50": 5967.137302,
                    "p95": 6006.233988,
                    "p99": 6006.233988,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2434.473505,
                    "min": 2365.924219,
                    "p50": 2408.435235,
                    "p95": 2434.473505,
                    "p99": 2434.473505,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 701.1286369999999,
                    "min": 678.634454,
                    "p50": 692.7675419999999,
                    "p95": 701.1286369999999,
                    "p99": 701.1286369999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 219.39290699999998,
                    "min": 211.869917,
                    "p50": 217.228287,
                    "p95": 219.39290699999998,
                    "p99": 219.39290699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3010.485678,
                    "min": 2953.5899259999997,
                    "p50": 2990.677346,
                    "p95": 3010.485678,
                    "p99": 3010.485678,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 459.61252199999996,
                    "min": 443.132293,
                    "p50": 458.143348,
                    "p95": 459.61252199999996,
                    "p99": 459.61252199999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 522.787785,
                    "min": 474.626362,
                    "p50": 514.1933319999999,
                    "p95": 522.787785,
                    "p99": 522.787785,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 578.248509,
                    "min": 532.00449,
                    "p50": 572.628202,
                    "p95": 578.248509,
                    "p99": 578.248509,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1087.142355,
                    "min": 1070.31044,
                    "p50": 1078.073832,
                    "p95": 1087.142355,
                    "p99": 1087.142355,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 339.937971,
                    "min": 318.268405,
                    "p50": 336.635839,
                    "p95": 339.937971,
                    "p99": 339.937971,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 398.49656799999997,
                    "min": 358.265429,
                    "p50": 394.26793899999996,
                    "p95": 398.49656799999997,
                    "p99": 398.49656799999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 935.6762229999999,
                    "min": 915.356153,
                    "p50": 927.176625,
                    "p95": 935.6762229999999,
                    "p99": 935.6762229999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 761.653966,
                    "min": 736.01416,
                    "p50": 758.443997,
                    "p95": 761.653966,
                    "p99": 761.653966,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 284.038796,
                    "min": 272.52380899999997,
                    "p50": 278.18316999999996,
                    "p95": 284.038796,
                    "p99": 284.038796,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 817.406394,
                    "min": 766.074971,
                    "p50": 813.730825,
                    "p95": 817.406394,
                    "p99": 817.406394,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3427.7229319999997,
                    "min": 3307.288399,
                    "p50": 3377.038099,
                    "p95": 3427.7229319999997,
                    "p99": 3427.7229319999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1390.926857,
                    "min": 1367.956862,
                    "p50": 1384.201003,
                    "p95": 1390.926857,
                    "p99": 1390.926857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1010.1352489999999,
                    "min": 978.552005,
                    "p50": 999.306777,
                    "p95": 1010.1352489999999,
                    "p99": 1010.1352489999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2355.7542519999997,
                    "min": 2274.489049,
                    "p50": 2317.115659,
                    "p95": 2355.7542519999997,
                    "p99": 2355.7542519999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1575.4366579999999,
                    "min": 1549.073975,
                    "p50": 1565.435325,
                    "p95": 1575.4366579999999,
                    "p99": 1575.4366579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7718.287442999999,
                    "min": 7597.734286,
                    "p50": 7637.123941,
                    "p95": 7718.287442999999,
                    "p99": 7718.287442999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2167.200031,
                    "min": 2111.7182749999997,
                    "p50": 2134.277293,
                    "p95": 2167.200031,
                    "p99": 2167.200031,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1194.546265,
                    "min": 1137.001827,
                    "p50": 1179.356149,
                    "p95": 1194.546265,
                    "p99": 1194.546265,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2542.853314,
                    "min": 2489.146948,
                    "p50": 2514.4436459999997,
                    "p95": 2542.853314,
                    "p99": 2542.853314,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5819.267744,
                    "min": 5692.518158,
                    "p50": 5740.972003999999,
                    "p95": 5819.267744,
                    "p99": 5819.267744,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2924.934757,
                    "min": 2884.445738,
                    "p50": 2901.053958,
                    "p95": 2924.934757,
                    "p99": 2924.934757,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3887.885986,
                    "min": 3811.720859,
                    "p50": 3847.1346059999996,
                    "p95": 3887.885986,
                    "p99": 3887.885986,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 618.784513,
                    "min": 606.111423,
                    "p50": 613.1086829999999,
                    "p95": 618.784513,
                    "p99": 618.784513,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2745.301453,
                    "min": 2679.519305,
                    "p50": 2720.891796,
                    "p95": 2745.301453,
                    "p99": 2745.301453,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 811.7712399999999,
                    "min": 798.573906,
                    "p50": 804.933995,
                    "p95": 811.7712399999999,
                    "p99": 811.7712399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1948.332811,
                    "min": 1907.215655,
                    "p50": 1941.664341,
                    "p95": 1948.332811,
                    "p99": 1948.332811,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1773.257059,
                    "min": 1750.209396,
                    "p50": 1754.2068829999998,
                    "p95": 1773.257059,
                    "p99": 1773.257059,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2943.313811,
                    "min": 2872.4300319999998,
                    "p50": 2891.288083,
                    "p95": 2943.313811,
                    "p99": 2943.313811,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 813.7890729999999,
                    "min": 762.487233,
                    "p50": 802.203453,
                    "p95": 813.7890729999999,
                    "p99": 813.7890729999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1779.6899449999999,
                    "min": 1739.6083899999999,
                    "p50": 1751.45956,
                    "p95": 1779.6899449999999,
                    "p99": 1779.6899449999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2535.73323,
                    "min": 2499.9842,
                    "p50": 2514.561679,
                    "p95": 2535.73323,
                    "p99": 2535.73323,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1975.158477,
                    "min": 1909.7445799999998,
                    "p50": 1945.541285,
                    "p95": 1975.158477,
                    "p99": 1975.158477,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2144.6069199999997,
                    "min": 2107.512229,
                    "p50": 2129.297041,
                    "p95": 2144.6069199999997,
                    "p99": 2144.6069199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3848.99399,
                    "min": 3775.3279589999997,
                    "p50": 3836.490942,
                    "p95": 3848.99399,
                    "p99": 3848.99399,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5763.721936,
                    "min": 5702.63613,
                    "p50": 5744.927682,
                    "p95": 5763.721936,
                    "p99": 5763.721936,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2354.701482,
                    "min": 2316.074884,
                    "p50": 2331.296963,
                    "p95": 2354.701482,
                    "p99": 2354.701482,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1003.243161,
                    "min": 978.1464199999999,
                    "p50": 992.439933,
                    "p95": 1003.243161,
                    "p99": 1003.243161,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 615.384378,
                    "min": 608.237295,
                    "p50": 612.352586,
                    "p95": 615.384378,
                    "p99": 615.384378,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1201.834245,
                    "min": 1140.668741,
                    "p50": 1186.106112,
                    "p95": 1201.834245,
                    "p99": 1201.834245,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3406.48571,
                    "min": 3338.459491,
                    "p50": 3366.445612,
                    "p95": 3406.48571,
                    "p99": 3406.48571,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1386.58763,
                    "min": 1341.9770549999998,
                    "p50": 1372.946098,
                    "p95": 1386.58763,
                    "p99": 1386.58763,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2739.7899509999997,
                    "min": 2664.043269,
                    "p50": 2708.818328,
                    "p95": 2739.7899509999997,
                    "p99": 2739.7899509999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1579.230339,
                    "min": 1561.953842,
                    "p50": 1567.7823959999998,
                    "p95": 1579.230339,
                    "p99": 1579.230339,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 880.9305529999999,
                    "min": 858.5307439999999,
                    "p50": 875.948168,
                    "p95": 880.9305529999999,
                    "p99": 880.9305529999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 159.49482899999998,
                    "min": 121.65320799999999,
                    "p50": 156.32083799999998,
                    "p95": 159.49482899999998,
                    "p99": 159.49482899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 461.51032499999997,
                    "min": 413.912335,
                    "p50": 452.36602,
                    "p95": 461.51032499999997,
                    "p99": 461.51032499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 101.891949,
                    "min": 92.261315,
                    "p50": 98.70504299999999,
                    "p95": 101.891949,
                    "p99": 101.891949,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 71.945968,
                    "min": 34.142106999999996,
                    "p50": 67.480057,
                    "p95": 71.945968,
                    "p99": 71.945968,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 140.63384,
                    "min": 100.362816,
                    "p50": 139.784325,
                    "p95": 140.63384,
                    "p99": 140.63384,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 375.23941099999996,
                    "min": 357.07722,
                    "p50": 372.262208,
                    "p95": 375.23941099999996,
                    "p99": 375.23941099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 167.87492799999998,
                    "min": 141.792411,
                    "p50": 165.67877099999998,
                    "p95": 167.87492799999998,
                    "p99": 167.87492799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 154.34909199999998,
                    "min": 109.21392999999999,
                    "p50": 149.11376099999998,
                    "p95": 154.34909199999998,
                    "p99": 154.34909199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 189.93300499999998,
                    "min": 148.071844,
                    "p50": 187.26081499999998,
                    "p95": 189.93300499999998,
                    "p99": 189.93300499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 85.34942199999999,
                    "min": 43.594122,
                    "p50": 81.738666,
                    "p95": 85.34942199999999,
                    "p99": 85.34942199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 134.18766499999998,
                    "min": 118.373331,
                    "p50": 131.414077,
                    "p95": 134.18766499999998,
                    "p99": 134.18766499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 54.136185,
                    "min": 35.305735,
                    "p50": 53.358230999999996,
                    "p95": 54.136185,
                    "p99": 54.136185,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 107.554108,
                    "min": 67.414472,
                    "p50": 105.307975,
                    "p95": 107.554108,
                    "p99": 107.554108,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 96.376559,
                    "min": 74.890214,
                    "p50": 90.002647,
                    "p95": 96.376559,
                    "p99": 96.376559,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 117.625704,
                    "min": 76.182429,
                    "p50": 115.324613,
                    "p95": 117.625704,
                    "p99": 117.625704,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 126.338104,
                    "min": 84.89263299999999,
                    "p50": 123.097718,
                    "p95": 126.338104,
                    "p99": 126.338104,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 290.82989699999996,
                    "min": 252.505462,
                    "p50": 288.812185,
                    "p95": 290.82989699999996,
                    "p99": 290.82989699999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 209.326449,
                    "min": 195.54186099999998,
                    "p50": 207.977655,
                    "p95": 209.326449,
                    "p99": 209.326449,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 26.157237,
                    "min": 24.089952999999998,
                    "p50": 24.792035,
                    "p95": 26.157237,
                    "p99": 26.157237,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 110.22806399999999,
                    "min": 90.038192,
                    "p50": 107.82260099999999,
                    "p95": 110.22806399999999,
                    "p99": 110.22806399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 92.870072,
                    "min": 78.05429,
                    "p50": 90.844464,
                    "p95": 92.870072,
                    "p99": 92.870072,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 74.60817399999999,
                    "min": 52.598696,
                    "p50": 67.606031,
                    "p95": 74.60817399999999,
                    "p99": 74.60817399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 40.406251,
                    "min": 24.278069,
                    "p50": 34.647213,
                    "p95": 40.406251,
                    "p99": 40.406251,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 210.60525299999998,
                    "min": 196.042646,
                    "p50": 208.43876799999998,
                    "p95": 210.60525299999998,
                    "p99": 210.60525299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 126.58017699999999,
                    "min": 85.09047,
                    "p50": 123.27802299999999,
                    "p95": 126.58017699999999,
                    "p99": 126.58017699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 48.428943,
                    "min": 23.664533,
                    "p50": 43.466778,
                    "p95": 48.428943,
                    "p99": 48.428943,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 56.429448,
                    "min": 47.555568,
                    "p50": 50.786147,
                    "p95": 56.429448,
                    "p99": 56.429448,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 29.715086,
                    "min": 24.601889,
                    "p50": 28.090574,
                    "p95": 29.715086,
                    "p99": 29.715086,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 36.208751,
                    "min": 28.649487999999998,
                    "p50": 32.47463,
                    "p95": 36.208751,
                    "p99": 36.208751,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.362544,
                    "min": 24.223792,
                    "p50": 24.872450999999998,
                    "p95": 26.362544,
                    "p99": 26.362544,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 65.329025,
                    "min": 30.394990999999997,
                    "p50": 60.015390999999994,
                    "p95": 65.329025,
                    "p99": 65.329025,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 42.782108,
                    "min": 30.002398,
                    "p50": 39.718759,
                    "p95": 42.782108,
                    "p99": 42.782108,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 54.460761,
                    "min": 26.174464999999998,
                    "p50": 51.614388999999996,
                    "p95": 54.460761,
                    "p99": 54.460761,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 28.521732999999998,
                    "min": 23.541598,
                    "p50": 24.696116,
                    "p95": 28.521732999999998,
                    "p99": 28.521732999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 47.362877,
                    "min": 24.312468,
                    "p50": 44.584866999999996,
                    "p95": 47.362877,
                    "p99": 47.362877,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.732875,
                    "min": 21.991222999999998,
                    "p50": 24.533671,
                    "p95": 24.732875,
                    "p99": 24.732875,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.476198999999998,
                    "min": 21.772493,
                    "p50": 24.302827,
                    "p95": 26.476198999999998,
                    "p99": 26.476198999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 209.655307,
                    "min": 186.57455299999998,
                    "p50": 206.684921,
                    "p95": 209.655307,
                    "p99": 209.655307,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 123.22693199999999,
                    "min": 97.487467,
                    "p50": 117.700526,
                    "p95": 123.22693199999999,
                    "p99": 123.22693199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 233.637033,
                    "min": 191.486953,
                    "p50": 231.38546499999998,
                    "p95": 233.637033,
                    "p99": 233.637033,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 110.32491999999999,
                    "min": 67.817227,
                    "p50": 108.135431,
                    "p95": 110.32491999999999,
                    "p99": 110.32491999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 98.312342,
                    "min": 82.433968,
                    "p50": 97.05558099999999,
                    "p95": 98.312342,
                    "p99": 98.312342,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.306884,
                    "min": 39.858726,
                    "p50": 76.621712,
                    "p95": 78.306884,
                    "p99": 78.306884,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 176.57287,
                    "min": 158.992609,
                    "p50": 173.855629,
                    "p95": 176.57287,
                    "p99": 176.57287,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 148.525045,
                    "min": 105.870314,
                    "p50": 145.456518,
                    "p95": 148.525045,
                    "p99": 148.525045,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 331.65729999999996,
                    "min": 290.352991,
                    "p50": 327.164958,
                    "p95": 331.65729999999996,
                    "p99": 331.65729999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 126.46306899999999,
                    "min": 112.618467,
                    "p50": 124.89882399999999,
                    "p95": 126.46306899999999,
                    "p99": 126.46306899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1000.718498,
                    "min": 963.4371629999999,
                    "p50": 993.4624329999999,
                    "p95": 1000.718498,
                    "p99": 1000.718498,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 89.323437,
                    "min": 49.669539,
                    "p50": 88.554737,
                    "p95": 89.323437,
                    "p99": 89.323437,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 168.392026,
                    "min": 160.478793,
                    "p50": 165.106345,
                    "p95": 168.392026,
                    "p99": 168.392026,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 157.655678,
                    "min": 115.77502,
                    "p50": 154.587017,
                    "p95": 157.655678,
                    "p99": 157.655678,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 427.530077,
                    "min": 418.647792,
                    "p50": 424.20349799999997,
                    "p95": 427.530077,
                    "p99": 427.530077,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.023511,
                    "min": 30.032277999999998,
                    "p50": 59.320367999999995,
                    "p95": 62.023511,
                    "p99": 62.023511,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 187.151053,
                    "min": 145.874063,
                    "p50": 183.97647899999998,
                    "p95": 187.151053,
                    "p99": 187.151053,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 142.299276,
                    "min": 96.609652,
                    "p50": 136.38976399999999,
                    "p95": 142.299276,
                    "p99": 142.299276,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 521.802456,
                    "min": 511.943313,
                    "p50": 518.50235,
                    "p95": 521.802456,
                    "p99": 521.802456,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1121.417667,
                    "min": 1084.148332,
                    "p50": 1114.983996,
                    "p95": 1121.417667,
                    "p99": 1121.417667,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 966.7507019999999,
                    "min": 956.271746,
                    "p50": 963.954392,
                    "p95": 966.7507019999999,
                    "p99": 966.7507019999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1451.673235,
                    "min": 1385.7694219999998,
                    "p50": 1432.3012059999999,
                    "p95": 1451.673235,
                    "p99": 1451.673235,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 500.605594,
                    "min": 452.68605399999996,
                    "p50": 493.80630499999995,
                    "p95": 500.605594,
                    "p99": 500.605594,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 657.1200789999999,
                    "min": 647.6703,
                    "p50": 651.4051999999999,
                    "p95": 657.1200789999999,
                    "p99": 657.1200789999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1288.3108049999998,
                    "min": 1233.535205,
                    "p50": 1265.11747,
                    "p95": 1288.3108049999998,
                    "p99": 1288.3108049999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 815.5153419999999,
                    "min": 767.1247539999999,
                    "p50": 811.41311,
                    "p95": 815.5153419999999,
                    "p99": 815.5153419999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1480.816159,
                    "min": 1460.172543,
                    "p50": 1471.6615809999998,
                    "p95": 1480.816159,
                    "p99": 1480.816159,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 480.202291,
                    "min": 462.087631,
                    "p50": 469.777697,
                    "p95": 480.202291,
                    "p99": 480.202291,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1201.4815409999999,
                    "min": 1176.7305979999999,
                    "p50": 1188.505134,
                    "p95": 1201.4815409999999,
                    "p99": 1201.4815409999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 907.8212599999999,
                    "min": 861.316168,
                    "p50": 897.197461,
                    "p95": 907.8212599999999,
                    "p99": 907.8212599999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1055.002203,
                    "min": 1015.9365919999999,
                    "p50": 1045.356438,
                    "p95": 1055.002203,
                    "p99": 1055.002203,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1336.922108,
                    "min": 1318.665587,
                    "p50": 1326.580494,
                    "p95": 1336.922108,
                    "p99": 1336.922108,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 615.61433,
                    "min": 598.9045629999999,
                    "p50": 610.2208909999999,
                    "p95": 615.61433,
                    "p99": 615.61433,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 763.84156,
                    "min": 751.577602,
                    "p50": 761.648687,
                    "p95": 763.84156,
                    "p99": 763.84156,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 169.84669399999999,
                    "min": 129.53329,
                    "p50": 168.570367,
                    "p95": 169.84669399999999,
                    "p99": 169.84669399999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 270.96774999999997,
                    "min": 251.00762999999998,
                    "p50": 263.172772,
                    "p95": 270.96774999999997,
                    "p99": 270.96774999999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 340.943306,
                    "min": 289.527624,
                    "p50": 329.39703199999997,
                    "p95": 340.943306,
                    "p99": 340.943306,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 235.44601799999998,
                    "min": 206.81962199999998,
                    "p50": 231.032556,
                    "p95": 235.44601799999998,
                    "p99": 235.44601799999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 428.57449299999996,
                    "min": 377.953271,
                    "p50": 425.40727999999996,
                    "p95": 428.57449299999996,
                    "p99": 428.57449299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 138.46693299999998,
                    "min": 113.435897,
                    "p50": 134.370618,
                    "p95": 138.46693299999998,
                    "p99": 138.46693299999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 365.238054,
                    "min": 323.29938599999997,
                    "p50": 357.459517,
                    "p95": 365.238054,
                    "p99": 365.238054,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 298.284023,
                    "min": 279.191617,
                    "p50": 295.17668,
                    "p95": 298.284023,
                    "p99": 298.284023,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 201.75915899999998,
                    "min": 197.371503,
                    "p50": 199.730405,
                    "p95": 201.75915899999998,
                    "p99": 201.75915899999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 394.926677,
                    "min": 383.918584,
                    "p50": 391.78706999999997,
                    "p95": 394.926677,
                    "p99": 394.926677,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 993.21652,
                    "min": 960.104698,
                    "p50": 980.228568,
                    "p95": 993.21652,
                    "p99": 993.21652,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1311.416951,
                    "min": 1284.033134,
                    "p50": 1294.4600309999998,
                    "p95": 1311.416951,
                    "p99": 1311.416951,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 360.437676,
                    "min": 353.150306,
                    "p50": 356.889415,
                    "p95": 360.437676,
                    "p99": 360.437676,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 668.976,
                    "min": 625.447177,
                    "p50": 662.666018,
                    "p95": 668.976,
                    "p99": 668.976,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1142.73626,
                    "min": 1090.832217,
                    "p50": 1130.659377,
                    "p95": 1142.73626,
                    "p99": 1142.73626,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 514.1932499999999,
                    "min": 501.36756499999996,
                    "p50": 509.80637099999996,
                    "p95": 514.1932499999999,
                    "p99": 514.1932499999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 837.259909,
                    "min": 785.833932,
                    "p50": 828.3388709999999,
                    "p95": 837.259909,
                    "p99": 837.259909,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 348.417732,
                    "min": 302.252344,
                    "p50": 342.861051,
                    "p95": 348.417732,
                    "p99": 348.417732,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 193.80739599999998,
                    "min": 151.470496,
                    "p50": 188.243284,
                    "p95": 193.80739599999998,
                    "p99": 193.80739599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 125.97537,
                    "min": 113.50001499999999,
                    "p50": 124.56173799999999,
                    "p95": 125.97537,
                    "p99": 125.97537,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 326.135908,
                    "min": 315.283544,
                    "p50": 322.69093399999997,
                    "p95": 326.135908,
                    "p99": 326.135908,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 257.54170999999997,
                    "min": 249.87415199999998,
                    "p50": 255.704004,
                    "p95": 257.54170999999997,
                    "p99": 257.54170999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 219.743233,
                    "min": 202.162751,
                    "p50": 212.600655,
                    "p95": 219.743233,
                    "p99": 219.743233,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 302.526685,
                    "min": 280.19145399999996,
                    "p50": 297.746198,
                    "p95": 302.526685,
                    "p99": 302.526685,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.107733,
                    "min": 125.115353,
                    "p50": 144.539815,
                    "p95": 149.107733,
                    "p99": 149.107733,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 104.707189,
                    "min": 64.67410699999999,
                    "p50": 103.269669,
                    "p95": 104.707189,
                    "p99": 104.707189,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 420.554735,
                    "min": 406.26649899999995,
                    "p50": 415.371423,
                    "p95": 420.554735,
                    "p99": 420.554735,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 366.222786,
                    "min": 327.041788,
                    "p50": 363.03495,
                    "p95": 366.222786,
                    "p99": 366.222786,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 476.02336299999996,
                    "min": 435.102223,
                    "p50": 473.159431,
                    "p95": 476.02336299999996,
                    "p99": 476.02336299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.761351,
                    "min": 220.833145,
                    "p50": 232.05285099999998,
                    "p95": 236.761351,
                    "p99": 236.761351,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.93323399999997,
                    "min": 279.391596,
                    "p50": 281.30015099999997,
                    "p95": 282.93323399999997,
                    "p99": 282.93323399999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 174.443638,
                    "min": 168.10125299999999,
                    "p50": 169.780929,
                    "p95": 174.443638,
                    "p99": 174.443638,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 311.299374,
                    "min": 268.38144,
                    "p50": 308.622227,
                    "p95": 311.299374,
                    "p99": 311.299374,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 145.011631,
                    "min": 105.40179599999999,
                    "p50": 141.474312,
                    "p95": 145.011631,
                    "p99": 145.011631,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 359.661615,
                    "min": 313.23377,
                    "p50": 352.56028499999996,
                    "p95": 359.661615,
                    "p99": 359.661615,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 254.201902,
                    "min": 206.65792399999998,
                    "p50": 245.599653,
                    "p95": 254.201902,
                    "p99": 254.201902,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 128.040922,
                    "min": 101.625115,
                    "p50": 121.884564,
                    "p95": 128.040922,
                    "p99": 128.040922,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 164.696229,
                    "min": 125.942269,
                    "p50": 164.254654,
                    "p95": 164.696229,
                    "p99": 164.696229,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 294.034224,
                    "min": 253.88713099999998,
                    "p50": 290.943397,
                    "p95": 294.034224,
                    "p99": 294.034224,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 336.18738099999996,
                    "min": 293.25879299999997,
                    "p50": 330.604633,
                    "p95": 336.18738099999996,
                    "p99": 336.18738099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 457.133152,
                    "min": 415.110299,
                    "p50": 453.267436,
                    "p95": 457.133152,
                    "p99": 457.133152,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 187.702327,
                    "min": 172.53652,
                    "p50": 186.054569,
                    "p95": 187.702327,
                    "p99": 187.702327,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 405.30498,
                    "min": 384.112493,
                    "p50": 400.856977,
                    "p95": 405.30498,
                    "p99": 405.30498,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 207.52702599999998,
                    "min": 192.603222,
                    "p50": 204.17732099999998,
                    "p95": 207.52702599999998,
                    "p99": 207.52702599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 268.105171,
                    "min": 262.79823899999997,
                    "p50": 267.158004,
                    "p95": 268.105171,
                    "p99": 268.105171,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 228.168015,
                    "min": 218.07659999999998,
                    "p50": 225.62851799999999,
                    "p95": 228.168015,
                    "p99": 228.168015,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 104.706722,
                    "min": 62.483031999999994,
                    "p50": 101.317392,
                    "p95": 104.706722,
                    "p99": 104.706722,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.56966699999998,
                    "min": 122.66035,
                    "p50": 146.76358399999998,
                    "p95": 150.56966699999998,
                    "p99": 150.56966699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 212.680837,
                    "min": 207.146559,
                    "p50": 210.27191,
                    "p95": 212.680837,
                    "p99": 212.680837,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 193.710903,
                    "min": 151.139871,
                    "p50": 189.320401,
                    "p95": 193.710903,
                    "p99": 193.710903,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 422.92546799999997,
                    "min": 373.644568,
                    "p50": 418.576487,
                    "p95": 422.92546799999997,
                    "p99": 422.92546799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 364.241153,
                    "min": 319.544847,
                    "p50": 354.742869,
                    "p95": 364.241153,
                    "p99": 364.241153,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 107.98833499999999,
                    "min": 65.443082,
                    "p50": 99.52703,
                    "p95": 107.98833499999999,
                    "p99": 107.98833499999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 280.98122,
                    "min": 270.67530999999997,
                    "p50": 278.05584999999996,
                    "p95": 280.98122,
                    "p99": 280.98122,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 265.10119399999996,
                    "min": 218.171788,
                    "p50": 253.669831,
                    "p95": 265.10119399999996,
                    "p99": 265.10119399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 127.386758,
                    "min": 117.937956,
                    "p50": 124.38400299999999,
                    "p95": 127.386758,
                    "p99": 127.386758,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 301.95338899999996,
                    "min": 280.222811,
                    "p50": 299.685956,
                    "p95": 301.95338899999996,
                    "p99": 301.95338899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 233.239984,
                    "min": 193.75666099999998,
                    "p50": 231.527962,
                    "p95": 233.239984,
                    "p99": 233.239984,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 479.35277099999996,
                    "min": 434.019823,
                    "p50": 468.04835299999996,
                    "p95": 479.35277099999996,
                    "p99": 479.35277099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 348.382213,
                    "min": 304.037034,
                    "p50": 343.78092499999997,
                    "p95": 348.382213,
                    "p99": 348.382213,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 168.865301,
                    "min": 162.34411699999998,
                    "p50": 167.776646,
                    "p95": 168.865301,
                    "p99": 168.865301,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 327.99551199999996,
                    "min": 314.962442,
                    "p50": 322.618312,
                    "p95": 327.99551199999996,
                    "p99": 327.99551199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 482.231515,
                    "min": 463.232963,
                    "p50": 476.07728199999997,
                    "p95": 482.231515,
                    "p99": 482.231515,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 128.474,
                    "min": 103.88303099999999,
                    "p50": 125.20018999999999,
                    "p95": 128.474,
                    "p99": 128.474,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.497966,
                    "min": 220.410144,
                    "p50": 233.260417,
                    "p95": 236.497966,
                    "p99": 236.497966,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 259.17774299999996,
                    "min": 246.09242999999998,
                    "p50": 255.212604,
                    "p95": 259.17774299999996,
                    "p99": 259.17774299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 283.78722799999997,
                    "min": 238.814203,
                    "p50": 278.186801,
                    "p95": 283.78722799999997,
                    "p99": 283.78722799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 424.321265,
                    "min": 375.328489,
                    "p50": 415.47101499999997,
                    "p95": 424.321265,
                    "p99": 424.321265,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 303.126716,
                    "min": 257.902934,
                    "p50": 300.582549,
                    "p95": 303.126716,
                    "p99": 303.126716,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 326.99028999999996,
                    "min": 285.37947099999997,
                    "p50": 323.530029,
                    "p95": 326.99028999999996,
                    "p99": 326.99028999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 104.25656,
                    "min": 64.708479,
                    "p50": 103.04710399999999,
                    "p95": 104.25656,
                    "p99": 104.25656,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 169.43958999999998,
                    "min": 130.119313,
                    "p50": 164.46459299999998,
                    "p95": 169.43958999999998,
                    "p99": 169.43958999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 147.285382,
                    "min": 109.07445899999999,
                    "p50": 144.71377099999998,
                    "p95": 147.285382,
                    "p99": 147.285382,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 371.07728,
                    "min": 329.435162,
                    "p50": 367.149415,
                    "p95": 371.07728,
                    "p99": 371.07728,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 217.288613,
                    "min": 170.795513,
                    "p50": 214.07320199999998,
                    "p95": 217.288613,
                    "p99": 217.288613,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 347.379027,
                    "min": 305.61008699999996,
                    "p50": 339.221427,
                    "p95": 347.379027,
                    "p99": 347.379027,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 198.608038,
                    "min": 175.989799,
                    "p50": 191.61712,
                    "p95": 198.608038,
                    "p99": 198.608038,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 154.79688099999998,
                    "min": 138.472027,
                    "p50": 154.17607099999998,
                    "p95": 154.79688099999998,
                    "p99": 154.79688099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 52.503499,
                    "min": 27.028837,
                    "p50": 52.075976999999995,
                    "p95": 52.503499,
                    "p99": 52.503499,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 705.1888399999999,
                    "min": 678.1432219999999,
                    "p50": 701.771389,
                    "p95": 705.1888399999999,
                    "p99": 705.1888399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 172.574719,
                    "min": 134.679047,
                    "p50": 169.64702499999999,
                    "p95": 172.574719,
                    "p99": 172.574719,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 236.69064899999998,
                    "min": 194.99478,
                    "p50": 233.113282,
                    "p95": 236.69064899999998,
                    "p99": 236.69064899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 105.475118,
                    "min": 96.04935499999999,
                    "p50": 104.417836,
                    "p95": 105.475118,
                    "p99": 105.475118,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 303.119495,
                    "min": 257.87240399999996,
                    "p50": 299.89709,
                    "p95": 303.119495,
                    "p99": 303.119495,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 81.82715,
                    "min": 55.715996999999994,
                    "p50": 77.418302,
                    "p95": 81.82715,
                    "p99": 81.82715,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 94.96986,
                    "min": 52.302955,
                    "p50": 91.427235,
                    "p95": 94.96986,
                    "p99": 94.96986,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 40.260234,
                    "min": 24.667997999999997,
                    "p50": 39.582333999999996,
                    "p95": 40.260234,
                    "p99": 40.260234,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 101.85865,
                    "min": 94.232447,
                    "p50": 98.490826,
                    "p95": 101.85865,
                    "p99": 101.85865,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 89.95492399999999,
                    "min": 56.033358,
                    "p50": 85.575345,
                    "p95": 89.95492399999999,
                    "p99": 89.95492399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 114.609589,
                    "min": 94.692139,
                    "p50": 110.770372,
                    "p95": 114.609589,
                    "p99": 114.609589,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 127.26105799999999,
                    "min": 101.148569,
                    "p50": 124.58107,
                    "p95": 127.26105799999999,
                    "p99": 127.26105799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 119.269105,
                    "min": 78.928265,
                    "p50": 118.280165,
                    "p95": 119.269105,
                    "p99": 119.269105,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 376.38525699999997,
                    "min": 359.02364,
                    "p50": 369.33763999999996,
                    "p95": 376.38525699999997,
                    "p99": 376.38525699999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 65.597728,
                    "min": 52.154278,
                    "p50": 65.409392,
                    "p95": 65.597728,
                    "p99": 65.597728,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 134.093357,
                    "min": 121.650832,
                    "p50": 130.358701,
                    "p95": 134.093357,
                    "p99": 134.093357,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 137.605841,
                    "min": 121.186112,
                    "p50": 136.785249,
                    "p95": 137.605841,
                    "p99": 137.605841,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 265.059726,
                    "min": 223.628368,
                    "p50": 263.116789,
                    "p95": 265.059726,
                    "p99": 265.059726,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.663872,
                    "min": 45.688714,
                    "p50": 83.684328,
                    "p95": 86.663872,
                    "p99": 86.663872,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 340.576073,
                    "min": 329.797772,
                    "p50": 334.828368,
                    "p95": 340.576073,
                    "p99": 340.576073,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 189.54257199999998,
                    "min": 165.904393,
                    "p50": 188.737314,
                    "p95": 189.54257199999998,
                    "p99": 189.54257199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 145.584487,
                    "min": 137.388891,
                    "p50": 144.056498,
                    "p95": 145.584487,
                    "p99": 145.584487,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 152.777466,
                    "min": 118.692533,
                    "p50": 151.757039,
                    "p95": 152.777466,
                    "p99": 152.777466,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 137.37981299999998,
                    "min": 97.42291499999999,
                    "p50": 135.907827,
                    "p95": 137.37981299999998,
                    "p99": 137.37981299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 173.246655,
                    "min": 168.589213,
                    "p50": 170.37957899999998,
                    "p95": 173.246655,
                    "p99": 173.246655,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 46.526731999999996,
                    "min": 43.345042,
                    "p50": 45.491240999999995,
                    "p95": 46.526731999999996,
                    "p99": 46.526731999999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 787.740144,
                    "min": 770.5505089999999,
                    "p50": 778.616375,
                    "p95": 787.740144,
                    "p99": 787.740144,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 64.09508,
                    "min": 59.999461999999994,
                    "p50": 61.102568,
                    "p95": 64.09508,
                    "p99": 64.09508,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.455151,
                    "min": 41.740815999999995,
                    "p50": 75.078182,
                    "p95": 77.455151,
                    "p99": 77.455151,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 100.973654,
                    "min": 76.333174,
                    "p50": 99.752577,
                    "p95": 100.973654,
                    "p99": 100.973654,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 130.318374,
                    "min": 91.28545,
                    "p50": 128.36575399999998,
                    "p95": 130.318374,
                    "p99": 130.318374,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 109.978523,
                    "min": 95.486254,
                    "p50": 107.52668299999999,
                    "p95": 109.978523,
                    "p99": 109.978523,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.120875,
                    "min": 83.800139,
                    "p50": 120.927723,
                    "p95": 122.120875,
                    "p99": 122.120875,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 96.99108299999999,
                    "min": 90.02427399999999,
                    "p50": 92.33992099999999,
                    "p95": 96.99108299999999,
                    "p99": 96.99108299999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 117.80101599999999,
                    "min": 75.60091,
                    "p50": 114.17293699999999,
                    "p95": 117.80101599999999,
                    "p99": 117.80101599999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 414.333801,
                    "min": 371.416987,
                    "p50": 412.649932,
                    "p95": 414.333801,
                    "p99": 414.333801,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 129.58691199999998,
                    "min": 84.518694,
                    "p50": 124.327918,
                    "p95": 129.58691199999998,
                    "p99": 129.58691199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 714.861287,
                    "min": 671.48578,
                    "p50": 704.176653,
                    "p95": 714.861287,
                    "p99": 714.861287,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 132.875178,
                    "min": 127.68096299999999,
                    "p50": 131.850606,
                    "p95": 132.875178,
                    "p99": 132.875178,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.850059,
                    "min": 97.460155,
                    "p50": 98.946179,
                    "p95": 102.850059,
                    "p99": 102.850059,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 161.02584299999998,
                    "min": 145.287462,
                    "p50": 154.790616,
                    "p95": 161.02584299999998,
                    "p99": 161.02584299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 176.73282799999998,
                    "min": 166.087528,
                    "p50": 171.42704,
                    "p95": 176.73282799999998,
                    "p99": 176.73282799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 75.050522,
                    "min": 34.514517999999995,
                    "p50": 67.450998,
                    "p95": 75.050522,
                    "p99": 75.050522,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 108.005197,
                    "min": 65.948122,
                    "p50": 105.760257,
                    "p95": 108.005197,
                    "p99": 108.005197,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 86.87515499999999,
                    "min": 83.96992399999999,
                    "p50": 86.17154699999999,
                    "p95": 86.87515499999999,
                    "p99": 86.87515499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 146.726678,
                    "min": 137.28269799999998,
                    "p50": 137.8401,
                    "p95": 146.726678,
                    "p99": 146.726678,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 120.028177,
                    "min": 117.796408,
                    "p50": 118.69591299999999,
                    "p95": 120.028177,
                    "p99": 120.028177,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 307.82619,
                    "min": 266.169289,
                    "p50": 303.068552,
                    "p95": 307.82619,
                    "p99": 307.82619,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 241.591995,
                    "min": 227.714015,
                    "p50": 238.353141,
                    "p95": 241.591995,
                    "p99": 241.591995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 115.12188099999999,
                    "min": 92.24943499999999,
                    "p50": 112.34082699999999,
                    "p95": 115.12188099999999,
                    "p99": 115.12188099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 42.670698,
                    "min": 38.898464,
                    "p50": 39.920266999999996,
                    "p95": 42.670698,
                    "p99": 42.670698,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 98.28385899999999,
                    "min": 54.011398,
                    "p50": 91.810164,
                    "p95": 98.28385899999999,
                    "p99": 98.28385899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 58.035607,
                    "min": 44.765864,
                    "p50": 53.003332,
                    "p95": 58.035607,
                    "p99": 58.035607,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 84.915894,
                    "min": 41.359258,
                    "p50": 78.341261,
                    "p95": 84.915894,
                    "p99": 84.915894,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 372.987955,
                    "min": 365.263708,
                    "p50": 369.84934699999997,
                    "p95": 372.987955,
                    "p99": 372.987955,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.63726899999999,
                    "min": 82.611282,
                    "p50": 121.984372,
                    "p95": 122.63726899999999,
                    "p99": 122.63726899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 98.374049,
                    "min": 52.867779999999996,
                    "p50": 92.400211,
                    "p95": 98.374049,
                    "p99": 98.374049,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 63.921178,
                    "min": 59.9396,
                    "p50": 60.546566999999996,
                    "p95": 63.921178,
                    "p99": 63.921178,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 100.472597,
                    "min": 83.03880199999999,
                    "p50": 99.733031,
                    "p95": 100.472597,
                    "p99": 100.472597,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 191.326475,
                    "min": 150.516821,
                    "p50": 189.408461,
                    "p95": 191.326475,
                    "p99": 191.326475,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.217347,
                    "min": 24.488242,
                    "p50": 45.588391,
                    "p95": 48.217347,
                    "p99": 48.217347,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 784.628196,
                    "min": 768.0967019999999,
                    "p50": 775.430344,
                    "p95": 784.628196,
                    "p99": 784.628196,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 171.979945,
                    "min": 130.596262,
                    "p50": 165.318083,
                    "p95": 171.979945,
                    "p99": 171.979945,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 78.61406699999999,
                    "min": 38.411245,
                    "p50": 74.653533,
                    "p95": 78.61406699999999,
                    "p99": 78.61406699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 117.70225099999999,
                    "min": 108.399315,
                    "p50": 114.65574,
                    "p95": 117.70225099999999,
                    "p99": 117.70225099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 151.374236,
                    "min": 105.61020099999999,
                    "p50": 143.72632199999998,
                    "p95": 151.374236,
                    "p99": 151.374236,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 87.87490199999999,
                    "min": 45.998847999999995,
                    "p50": 84.831041,
                    "p95": 87.87490199999999,
                    "p99": 87.87490199999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 129.523773,
                    "min": 90.728922,
                    "p50": 128.99786699999999,
                    "p95": 129.523773,
                    "p99": 129.523773,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 415.114439,
                    "min": 395.91979499999997,
                    "p50": 413.14237599999996,
                    "p95": 415.114439,
                    "p99": 415.114439,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 265.597405,
                    "min": 251.991513,
                    "p50": 261.26345699999996,
                    "p95": 265.597405,
                    "p99": 265.597405,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 138.001281,
                    "min": 98.16577199999999,
                    "p50": 136.32179299999999,
                    "p95": 138.001281,
                    "p99": 138.001281,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 110.743472,
                    "min": 70.135538,
                    "p50": 106.620277,
                    "p95": 110.743472,
                    "p99": 110.743472,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 154.065753,
                    "min": 133.312401,
                    "p50": 152.73914,
                    "p95": 154.065753,
                    "p99": 154.065753,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 343.548607,
                    "min": 334.74695499999996,
                    "p50": 339.694749,
                    "p95": 343.548607,
                    "p99": 343.548607,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 96.0171,
                    "min": 53.664054,
                    "p50": 92.88744899999999,
                    "p95": 96.0171,
                    "p99": 96.0171,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 144.353781,
                    "min": 98.88038499999999,
                    "p50": 138.18179,
                    "p95": 144.353781,
                    "p99": 144.353781,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 127.01295999999999,
                    "min": 110.6901,
                    "p50": 124.5522,
                    "p95": 127.01295999999999,
                    "p99": 127.01295999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.742791,
                    "min": 46.940821,
                    "p50": 84.631641,
                    "p95": 85.742791,
                    "p99": 85.742791,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 194.232566,
                    "min": 152.64045199999998,
                    "p50": 190.72423799999999,
                    "p95": 194.232566,
                    "p99": 194.232566,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 65.222704,
                    "min": 31.719993,
                    "p50": 60.877378,
                    "p95": 65.222704,
                    "p99": 65.222704,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 103.130192,
                    "min": 98.685682,
                    "p50": 100.97766999999999,
                    "p95": 103.130192,
                    "p99": 103.130192,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 116.225563,
                    "min": 105.803328,
                    "p50": 114.385083,
                    "p95": 116.225563,
                    "p99": 116.225563,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 156.67673299999998,
                    "min": 113.627653,
                    "p50": 153.122424,
                    "p95": 156.67673299999998,
                    "p99": 156.67673299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 269.75091299999997,
                    "min": 264.112688,
                    "p50": 267.578506,
                    "p95": 269.75091299999997,
                    "p99": 269.75091299999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 132.540671,
                    "min": 127.70611199999999,
                    "p50": 130.99542,
                    "p95": 132.540671,
                    "p99": 132.540671,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 112.993353,
                    "min": 90.266655,
                    "p50": 108.215723,
                    "p95": 112.993353,
                    "p99": 112.993353,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 80.109782,
                    "min": 38.864404,
                    "p50": 77.481161,
                    "p95": 80.109782,
                    "p99": 80.109782,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 150.180069,
                    "min": 107.465065,
                    "p50": 146.24242999999998,
                    "p95": 150.180069,
                    "p99": 150.180069,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 175.731126,
                    "min": 149.09855299999998,
                    "p50": 171.333678,
                    "p95": 175.731126,
                    "p99": 175.731126,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 348.852339,
                    "min": 311.154003,
                    "p50": 341.84594999999996,
                    "p95": 348.852339,
                    "p99": 348.852339,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 423.17414199999996,
                    "min": 383.189144,
                    "p50": 417.253419,
                    "p95": 423.17414199999996,
                    "p99": 423.17414199999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 804.3479259999999,
                    "min": 766.92543,
                    "p50": 791.586549,
                    "p95": 804.3479259999999,
                    "p99": 804.3479259999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 53.992616999999996,
                    "min": 45.770914999999995,
                    "p50": 46.260099,
                    "p95": 53.992616999999996,
                    "p99": 53.992616999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 378.308469,
                    "min": 333.055968,
                    "p50": 374.564033,
                    "p95": 378.308469,
                    "p99": 378.308469,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 131.95922299999998,
                    "min": 125.190902,
                    "p50": 128.053586,
                    "p95": 131.95922299999998,
                    "p99": 131.95922299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 108.932553,
                    "min": 83.441615,
                    "p50": 105.64309999999999,
                    "p95": 108.932553,
                    "p99": 108.932553,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 141.26969,
                    "min": 99.071294,
                    "p50": 138.249891,
                    "p95": 141.26969,
                    "p99": 141.26969,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.52805099999999,
                    "min": 47.001698,
                    "p50": 85.321167,
                    "p95": 87.52805099999999,
                    "p99": 87.52805099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 69.21343399999999,
                    "min": 33.852136,
                    "p50": 66.930759,
                    "p95": 69.21343399999999,
                    "p99": 69.21343399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 46.651419999999995,
                    "min": 24.581429999999997,
                    "p50": 41.131301,
                    "p95": 46.651419999999995,
                    "p99": 46.651419999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 114.297837,
                    "min": 107.58720199999999,
                    "p50": 112.23571199999999,
                    "p95": 114.297837,
                    "p99": 114.297837,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 159.12972399999998,
                    "min": 144.087608,
                    "p50": 155.779924,
                    "p95": 159.12972399999998,
                    "p99": 159.12972399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 78.996572,
                    "min": 40.801311999999996,
                    "p50": 78.777734,
                    "p95": 78.996572,
                    "p99": 78.996572,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 98.106038,
                    "min": 87.932542,
                    "p50": 93.579878,
                    "p95": 98.106038,
                    "p99": 98.106038,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 135.58218499999998,
                    "min": 92.802825,
                    "p50": 133.030697,
                    "p95": 135.58218499999998,
                    "p99": 135.58218499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 309.70446899999996,
                    "min": 284.306968,
                    "p50": 304.76642899999996,
                    "p95": 309.70446899999996,
                    "p99": 309.70446899999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 101.70053399999999,
                    "min": 61.015454999999996,
                    "p50": 99.83028999999999,
                    "p95": 101.70053399999999,
                    "p99": 101.70053399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 176.138344,
                    "min": 170.241516,
                    "p50": 173.27030499999998,
                    "p95": 176.138344,
                    "p99": 176.138344,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 120.009642,
                    "min": 113.570618,
                    "p50": 118.33979,
                    "p95": 120.009642,
                    "p99": 120.009642,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 56.108836,
                    "min": 27.793975999999997,
                    "p50": 52.980692999999995,
                    "p95": 56.108836,
                    "p99": 56.108836,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 241.667238,
                    "min": 226.57386,
                    "p50": 237.847727,
                    "p95": 241.667238,
                    "p99": 241.667238,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 141.552929,
                    "min": 101.774872,
                    "p50": 140.313022,
                    "p95": 141.552929,
                    "p99": 141.552929,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 117.873622,
                    "min": 99.21704,
                    "p50": 117.235282,
                    "p95": 117.873622,
                    "p99": 117.873622,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 169.476777,
                    "min": 125.05977899999999,
                    "p50": 165.301241,
                    "p95": 169.476777,
                    "p99": 169.476777,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 557.854664,
                    "min": 515.750456,
                    "p50": 547.8942519999999,
                    "p95": 557.854664,
                    "p99": 557.854664,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 372.659834,
                    "min": 362.03269,
                    "p50": 366.593393,
                    "p95": 372.659834,
                    "p99": 372.659834,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 425.15486799999996,
                    "min": 390.62094099999996,
                    "p50": 419.51178999999996,
                    "p95": 425.15486799999996,
                    "p99": 425.15486799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 493.24470199999996,
                    "min": 449.27577299999996,
                    "p50": 482.992602,
                    "p95": 493.24470199999996,
                    "p99": 493.24470199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 269.226612,
                    "min": 223.504863,
                    "p50": 263.63606899999996,
                    "p95": 269.226612,
                    "p99": 269.226612,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 198.210221,
                    "min": 178.794072,
                    "p50": 188.829603,
                    "p95": 198.210221,
                    "p99": 198.210221,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.028581,
                    "min": 201.89436899999998,
                    "p50": 239.183114,
                    "p95": 242.028581,
                    "p99": 242.028581,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 215.96717999999998,
                    "min": 175.111709,
                    "p50": 213.072659,
                    "p95": 215.96717999999998,
                    "p99": 215.96717999999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 294.969794,
                    "min": 249.09182099999998,
                    "p50": 288.174245,
                    "p95": 294.969794,
                    "p99": 294.969794,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 317.72040699999997,
                    "min": 298.031341,
                    "p50": 313.50051099999996,
                    "p95": 317.72040699999997,
                    "p99": 317.72040699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 391.956778,
                    "min": 350.357984,
                    "p50": 388.14784,
                    "p95": 391.956778,
                    "p99": 391.956778,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 346.617828,
                    "min": 300.012857,
                    "p50": 339.722947,
                    "p95": 346.617828,
                    "p99": 346.617828,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 318.03124299999996,
                    "min": 276.699342,
                    "p50": 314.744686,
                    "p95": 318.03124299999996,
                    "p99": 318.03124299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 367.26951399999996,
                    "min": 343.04254599999996,
                    "p50": 363.661384,
                    "p95": 367.26951399999996,
                    "p99": 367.26951399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 392.162621,
                    "min": 349.386492,
                    "p50": 388.250904,
                    "p95": 392.162621,
                    "p99": 392.162621,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 145.10117,
                    "min": 127.61236799999999,
                    "p50": 140.778753,
                    "p95": 145.10117,
                    "p99": 145.10117,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.125382,
                    "min": 125.948573,
                    "p50": 165.338716,
                    "p95": 168.125382,
                    "p99": 168.125382,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.045118,
                    "min": 176.90265499999998,
                    "p50": 214.496683,
                    "p95": 218.045118,
                    "p99": 218.045118,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 192.63978799999998,
                    "min": 186.851767,
                    "p50": 189.892745,
                    "p95": 192.63978799999998,
                    "p99": 192.63978799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 291.689465,
                    "min": 264.370026,
                    "p50": 289.529851,
                    "p95": 291.689465,
                    "p99": 291.689465,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.277148,
                    "min": 91.9664,
                    "p50": 114.754364,
                    "p95": 116.277148,
                    "p99": 116.277148,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 241.331559,
                    "min": 230.097906,
                    "p50": 238.085008,
                    "p95": 241.331559,
                    "p99": 241.331559,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 488.862259,
                    "min": 447.43994799999996,
                    "p50": 480.878109,
                    "p95": 488.862259,
                    "p99": 488.862259,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 549.689142,
                    "min": 499.51695099999995,
                    "p50": 546.786111,
                    "p95": 549.689142,
                    "p99": 549.689142,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 425.598956,
                    "min": 412.572808,
                    "p50": 423.32221699999997,
                    "p95": 425.598956,
                    "p99": 425.598956,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 268.059999,
                    "min": 245.915628,
                    "p50": 264.169408,
                    "p95": 268.059999,
                    "p99": 268.059999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 346.158601,
                    "min": 335.67258699999996,
                    "p50": 341.31098199999997,
                    "p95": 346.158601,
                    "p99": 346.158601,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 371.009286,
                    "min": 327.830147,
                    "p50": 367.82147699999996,
                    "p95": 371.009286,
                    "p99": 371.009286,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 350.06314299999997,
                    "min": 322.48474999999996,
                    "p50": 347.712294,
                    "p95": 350.06314299999997,
                    "p99": 350.06314299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 395.746924,
                    "min": 385.55100799999997,
                    "p50": 392.332583,
                    "p95": 395.746924,
                    "p99": 395.746924,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 468.658146,
                    "min": 421.63102399999997,
                    "p50": 456.174194,
                    "p95": 468.658146,
                    "p99": 468.658146,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 323.038994,
                    "min": 285.146862,
                    "p50": 320.316392,
                    "p95": 323.038994,
                    "p99": 323.038994,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 301.623271,
                    "min": 259.222473,
                    "p50": 296.509556,
                    "p95": 301.623271,
                    "p99": 301.623271,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.09191399999999,
                    "min": 108.698955,
                    "p50": 110.71390799999999,
                    "p95": 112.09191399999999,
                    "p99": 112.09191399999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 522.761303,
                    "min": 479.84034699999995,
                    "p50": 516.263838,
                    "p95": 522.761303,
                    "p99": 522.761303,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 276.776818,
                    "min": 258.875024,
                    "p50": 275.338298,
                    "p95": 276.776818,
                    "p99": 276.776818,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 252.511349,
                    "min": 232.487339,
                    "p50": 249.180603,
                    "p95": 252.511349,
                    "p99": 252.511349,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 181.73515,
                    "min": 175.335925,
                    "p50": 179.559339,
                    "p95": 181.73515,
                    "p99": 181.73515,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 232.414641,
                    "min": 205.329264,
                    "p50": 228.324593,
                    "p95": 232.414641,
                    "p99": 232.414641,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 207.756248,
                    "min": 202.53566999999998,
                    "p50": 205.530171,
                    "p95": 207.756248,
                    "p99": 207.756248,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 136.420424,
                    "min": 121.161971,
                    "p50": 132.5918,
                    "p95": 136.420424,
                    "p99": 136.420424,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 160.91609599999998,
                    "min": 120.382488,
                    "p50": 156.37106799999998,
                    "p95": 160.91609599999998,
                    "p99": 160.91609599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 397.40957499999996,
                    "min": 352.280581,
                    "p50": 383.656751,
                    "p95": 397.40957499999996,
                    "p99": 397.40957499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 427.97479,
                    "min": 405.491847,
                    "p50": 424.025448,
                    "p95": 427.97479,
                    "p99": 427.97479,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 344.572071,
                    "min": 308.883246,
                    "p50": 340.208804,
                    "p95": 344.572071,
                    "p99": 344.572071,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 490.21700999999996,
                    "min": 475.27666999999997,
                    "p50": 487.45494399999995,
                    "p95": 490.21700999999996,
                    "p99": 490.21700999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 146.335918,
                    "min": 100.828603,
                    "p50": 139.171788,
                    "p95": 146.335918,
                    "p99": 146.335918,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 319.64014399999996,
                    "min": 277.904106,
                    "p50": 316.381279,
                    "p95": 319.64014399999996,
                    "p99": 319.64014399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 552.01649,
                    "min": 538.365818,
                    "p50": 547.1797809999999,
                    "p95": 552.01649,
                    "p99": 552.01649,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.15730299999998,
                    "min": 153.120468,
                    "p50": 191.986957,
                    "p95": 194.15730299999998,
                    "p99": 194.15730299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 244.72476699999999,
                    "min": 200.96615699999998,
                    "p50": 229.164055,
                    "p95": 244.72476699999999,
                    "p99": 244.72476699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 216.485661,
                    "min": 180.991312,
                    "p50": 213.875341,
                    "p95": 216.485661,
                    "p99": 216.485661,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.522091,
                    "min": 158.59339799999998,
                    "p50": 163.506084,
                    "p95": 168.522091,
                    "p99": 168.522091,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 271.215347,
                    "min": 226.763195,
                    "p50": 264.007972,
                    "p95": 271.215347,
                    "p99": 271.215347,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 295.224337,
                    "min": 266.851654,
                    "p50": 292.18413499999997,
                    "p95": 295.224337,
                    "p99": 295.224337,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.726782,
                    "min": 75.429902,
                    "p50": 114.806229,
                    "p95": 116.726782,
                    "p99": 116.726782,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 372.03869699999996,
                    "min": 340.131936,
                    "p50": 367.889417,
                    "p95": 372.03869699999996,
                    "p99": 372.03869699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 595.8476949999999,
                    "min": 581.21579,
                    "p50": 592.640936,
                    "p95": 595.8476949999999,
                    "p99": 595.8476949999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 373.351469,
                    "min": 332.706657,
                    "p50": 372.240767,
                    "p95": 373.351469,
                    "p99": 373.351469,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 448.581916,
                    "min": 404.17173099999997,
                    "p50": 445.55724699999996,
                    "p95": 448.581916,
                    "p99": 448.581916,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 297.255028,
                    "min": 285.505539,
                    "p50": 295.453022,
                    "p95": 297.255028,
                    "p99": 297.255028,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 262.188644,
                    "min": 222.735916,
                    "p50": 260.747033,
                    "p95": 262.188644,
                    "p99": 262.188644,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.982708,
                    "min": 395.909582,
                    "p50": 408.20878,
                    "p95": 411.982708,
                    "p99": 411.982708,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.404358,
                    "min": 132.98442599999998,
                    "p50": 150.06810299999998,
                    "p95": 150.404358,
                    "p99": 150.404358,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 188.17958099999998,
                    "min": 148.629402,
                    "p50": 187.22270799999998,
                    "p95": 188.17958099999998,
                    "p99": 188.17958099999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 340.71549,
                    "min": 330.94795799999997,
                    "p50": 333.81523,
                    "p95": 340.71549,
                    "p99": 340.71549,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.482939,
                    "min": 185.18556099999998,
                    "p50": 224.08891699999998,
                    "p95": 227.482939,
                    "p99": 227.482939,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 778.898094,
                    "min": 764.714329,
                    "p50": 775.25978,
                    "p95": 778.898094,
                    "p99": 778.898094,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 485.38557099999997,
                    "min": 445.45968,
                    "p50": 480.727832,
                    "p95": 485.38557099999997,
                    "p99": 485.38557099999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 690.730634,
                    "min": 668.046395,
                    "p50": 683.789978,
                    "p95": 690.730634,
                    "p99": 690.730634,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 559.498355,
                    "min": 534.572547,
                    "p50": 554.7073849999999,
                    "p95": 559.498355,
                    "p99": 559.498355,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 522.245537,
                    "min": 474.07735499999995,
                    "p50": 514.750961,
                    "p95": 522.245537,
                    "p99": 522.245537,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1148.093643,
                    "min": 1131.834805,
                    "p50": 1139.823966,
                    "p95": 1148.093643,
                    "p99": 1148.093643,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 300.00773699999996,
                    "min": 204.980616,
                    "p50": 244.481521,
                    "p95": 300.00773699999996,
                    "p99": 300.00773699999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 231.01681599999998,
                    "min": 152.89962699999998,
                    "p50": 191.722476,
                    "p95": 231.01681599999998,
                    "p99": 231.01681599999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 266.020508,
                    "min": 203.191106,
                    "p50": 219.01694899999998,
                    "p95": 266.020508,
                    "p99": 266.020508,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 318.593003,
                    "min": 275.98823,
                    "p50": 313.075524,
                    "p95": 318.593003,
                    "p99": 318.593003,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.67742799999996,
                    "min": 240.639299,
                    "p50": 276.501958,
                    "p95": 283.67742799999996,
                    "p99": 283.67742799999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 245.77444,
                    "min": 177.572981,
                    "p50": 203.662141,
                    "p95": 245.77444,
                    "p99": 245.77444,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 80.97130299999999,
                    "min": 70.126848,
                    "p50": 79.719326,
                    "p95": 80.97130299999999,
                    "p99": 80.97130299999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.099952,
                    "min": 92.904596,
                    "p50": 95.04353599999999,
                    "p95": 97.099952,
                    "p99": 97.099952,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 181.14140999999998,
                    "min": 174.09004199999998,
                    "p50": 177.52808299999998,
                    "p95": 181.14140999999998,
                    "p99": 181.14140999999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.008271,
                    "min": 80.257029,
                    "p50": 119.07343999999999,
                    "p95": 121.008271,
                    "p99": 121.008271,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.69655899999998,
                    "min": 154.259298,
                    "p50": 162.521427,
                    "p95": 167.69655899999998,
                    "p99": 167.69655899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.73889199999999,
                    "min": 70.533377,
                    "p50": 108.984189,
                    "p95": 114.73889199999999,
                    "p99": 114.73889199999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 299.724221,
                    "min": 190.585502,
                    "p50": 229.335576,
                    "p95": 299.724221,
                    "p99": 299.724221,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.92035199999998,
                    "min": 106.41480399999999,
                    "p50": 147.06476,
                    "p95": 150.92035199999998,
                    "p99": 150.92035199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.282588,
                    "min": 117.090513,
                    "p50": 133.324827,
                    "p95": 137.282588,
                    "p99": 137.282588,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 211.96604,
                    "min": 160.785158,
                    "p50": 166.109783,
                    "p95": 211.96604,
                    "p99": 211.96604,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 92.00218799999999,
                    "min": 52.272572,
                    "p50": 89.906291,
                    "p95": 92.00218799999999,
                    "p99": 92.00218799999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 142.804856,
                    "min": 102.315389,
                    "p50": 139.45185,
                    "p95": 142.804856,
                    "p99": 142.804856,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 130.744527,
                    "min": 88.84322,
                    "p50": 126.791293,
                    "p95": 130.744527,
                    "p99": 130.744527,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 141.56648099999998,
                    "min": 76.366131,
                    "p50": 116.906972,
                    "p95": 141.56648099999998,
                    "p99": 141.56648099999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.79753699999998,
                    "min": 221.94179799999998,
                    "p50": 227.761506,
                    "p95": 237.79753699999998,
                    "p99": 237.79753699999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 204.584047,
                    "min": 166.442013,
                    "p50": 203.150917,
                    "p95": 204.584047,
                    "p99": 204.584047,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 293.161605,
                    "min": 261.111603,
                    "p50": 290.149676,
                    "p95": 293.161605,
                    "p99": 293.161605,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 421.742527,
                    "min": 380.501101,
                    "p50": 417.797888,
                    "p95": 421.742527,
                    "p99": 421.742527,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.721169,
                    "min": 159.378908,
                    "p50": 191.540775,
                    "p95": 198.721169,
                    "p99": 198.721169,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 103.23387,
                    "min": 80.131395,
                    "p50": 97.988423,
                    "p95": 103.23387,
                    "p99": 103.23387,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 182.201843,
                    "min": 138.705031,
                    "p50": 164.38645,
                    "p95": 182.201843,
                    "p99": 182.201843,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.743167,
                    "min": 38.789221,
                    "p50": 74.40713099999999,
                    "p95": 77.743167,
                    "p99": 77.743167,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 220.29564,
                    "min": 178.053191,
                    "p50": 214.100505,
                    "p95": 220.29564,
                    "p99": 220.29564,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 264.257303,
                    "min": 220.36265,
                    "p50": 260.430953,
                    "p95": 264.257303,
                    "p99": 264.257303,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.648574,
                    "min": 113.92776699999999,
                    "p50": 151.436796,
                    "p95": 154.648574,
                    "p99": 154.648574,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 798.748213,
                    "min": 791.004698,
                    "p50": 796.7380109999999,
                    "p95": 798.748213,
                    "p99": 798.748213,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 211.346377,
                    "min": 172.921642,
                    "p50": 208.901525,
                    "p95": 211.346377,
                    "p99": 211.346377,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 156.464796,
                    "min": 143.481269,
                    "p50": 153.996286,
                    "p95": 156.464796,
                    "p99": 156.464796,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 269.251609,
                    "min": 237.722061,
                    "p50": 266.948055,
                    "p95": 269.251609,
                    "p99": 269.251609,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 116.946213,
                    "min": 110.450243,
                    "p50": 115.36314399999999,
                    "p95": 116.946213,
                    "p99": 116.946213,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 423.68980899999997,
                    "min": 381.190289,
                    "p50": 419.193068,
                    "p95": 423.68980899999997,
                    "p99": 423.68980899999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 327.518584,
                    "min": 286.08759299999997,
                    "p50": 323.67144099999996,
                    "p95": 327.518584,
                    "p99": 327.518584,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 308.57424,
                    "min": 266.413306,
                    "p50": 305.40691,
                    "p95": 308.57424,
                    "p99": 308.57424,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 97.558706,
                    "min": 81.95688,
                    "p50": 96.312421,
                    "p95": 97.558706,
                    "p99": 97.558706,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 137.235719,
                    "min": 96.11456,
                    "p50": 134.870867,
                    "p95": 137.235719,
                    "p99": 137.235719,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 375.860328,
                    "min": 331.43037699999996,
                    "p50": 369.678368,
                    "p95": 375.860328,
                    "p99": 375.860328,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 194.223855,
                    "min": 191.17180199999999,
                    "p50": 192.17393099999998,
                    "p95": 194.223855,
                    "p99": 194.223855,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 254.357991,
                    "min": 241.25566099999998,
                    "p50": 248.95827,
                    "p95": 254.357991,
                    "p99": 254.357991,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 173.755246,
                    "min": 138.84098699999998,
                    "p50": 171.50049199999998,
                    "p95": 173.755246,
                    "p99": 173.755246,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 288.67280999999997,
                    "min": 245.586705,
                    "p50": 286.48346,
                    "p95": 288.67280999999997,
                    "p99": 288.67280999999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 611.692221,
                    "min": 589.14359,
                    "p50": 607.772464,
                    "p95": 611.692221,
                    "p99": 611.692221,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 991.0237,
                    "min": 951.865244,
                    "p50": 985.0516289999999,
                    "p95": 991.0237,
                    "p99": 991.0237,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 231.56348,
                    "min": 219.355032,
                    "p50": 229.937218,
                    "p95": 231.56348,
                    "p99": 231.56348,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 118.90725499999999,
                    "min": 114.612432,
                    "p50": 115.355702,
                    "p95": 118.90725499999999,
                    "p99": 118.90725499999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 260.886779,
                    "min": 251.677379,
                    "p50": 258.132356,
                    "p95": 260.886779,
                    "p99": 260.886779,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 369.81309699999997,
                    "min": 325.45305199999996,
                    "p50": 368.49793,
                    "p95": 369.81309699999997,
                    "p99": 369.81309699999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 590.465197,
                    "min": 569.692697,
                    "p50": 587.2128369999999,
                    "p95": 590.465197,
                    "p99": 590.465197,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 484.58025799999996,
                    "min": 466.11965899999996,
                    "p50": 477.08033,
                    "p95": 484.58025799999996,
                    "p99": 484.58025799999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.635351,
                    "min": 88.589246,
                    "p50": 126.00790699999999,
                    "p95": 126.635351,
                    "p99": 126.635351,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 235.55794799999998,
                    "min": 191.990548,
                    "p50": 229.245367,
                    "p95": 235.55794799999998,
                    "p99": 235.55794799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 107.56217099999999,
                    "min": 78.576954,
                    "p50": 104.78386599999999,
                    "p95": 107.56217099999999,
                    "p99": 107.56217099999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 195.858949,
                    "min": 153.74584199999998,
                    "p50": 192.971789,
                    "p95": 195.858949,
                    "p99": 195.858949,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 204.952889,
                    "min": 189.375959,
                    "p50": 203.02369199999998,
                    "p95": 204.952889,
                    "p99": 204.952889,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.76532999999999,
                    "min": 44.518356999999995,
                    "p50": 83.07947899999999,
                    "p95": 85.76532999999999,
                    "p99": 85.76532999999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 160.438618,
                    "min": 146.783548,
                    "p50": 159.36631699999998,
                    "p95": 160.438618,
                    "p99": 160.438618,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 171.99194599999998,
                    "min": 132.628176,
                    "p50": 170.400344,
                    "p95": 171.99194599999998,
                    "p99": 171.99194599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.218564,
                    "min": 55.025141,
                    "p50": 93.13274299999999,
                    "p95": 96.218564,
                    "p99": 96.218564,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 69.244384,
                    "min": 62.667443999999996,
                    "p50": 64.981661,
                    "p95": 69.244384,
                    "p99": 69.244384,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 185.03564899999998,
                    "min": 171.169039,
                    "p50": 181.549735,
                    "p95": 185.03564899999998,
                    "p99": 185.03564899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 148.86412099999998,
                    "min": 111.614651,
                    "p50": 147.41956,
                    "p95": 148.86412099999998,
                    "p99": 148.86412099999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 137.455296,
                    "min": 99.27879899999999,
                    "p50": 137.007068,
                    "p95": 137.455296,
                    "p99": 137.455296,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 223.099585,
                    "min": 178.671281,
                    "p50": 216.67443,
                    "p95": 223.099585,
                    "p99": 223.099585,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 317.390456,
                    "min": 277.030145,
                    "p50": 316.278816,
                    "p95": 317.390456,
                    "p99": 317.390456,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 278.155426,
                    "min": 238.35633199999998,
                    "p50": 273.64257599999996,
                    "p95": 278.155426,
                    "p99": 278.155426,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 99.116963,
                    "min": 60.193794,
                    "p50": 94.51088399999999,
                    "p95": 99.116963,
                    "p99": 99.116963,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 437.485712,
                    "min": 416.57134099999996,
                    "p50": 434.340654,
                    "p95": 437.485712,
                    "p99": 437.485712,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 200.36049,
                    "min": 159.854636,
                    "p50": 198.521748,
                    "p95": 200.36049,
                    "p99": 200.36049,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 142.878107,
                    "min": 112.01167,
                    "p50": 136.168128,
                    "p95": 142.878107,
                    "p99": 142.878107,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 257.486629,
                    "min": 218.377503,
                    "p50": 252.824832,
                    "p95": 257.486629,
                    "p99": 257.486629,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 157.363294,
                    "min": 121.07597899999999,
                    "p50": 156.776458,
                    "p95": 157.363294,
                    "p99": 157.363294,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 389.61609799999997,
                    "min": 342.82343399999996,
                    "p50": 383.982332,
                    "p95": 389.61609799999997,
                    "p99": 389.61609799999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 120.34941599999999,
                    "min": 84.954072,
                    "p50": 118.046934,
                    "p95": 120.34941599999999,
                    "p99": 120.34941599999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 340.95478399999996,
                    "min": 298.029742,
                    "p50": 335.786077,
                    "p95": 340.95478399999996,
                    "p99": 340.95478399999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 178.344144,
                    "min": 139.224728,
                    "p50": 177.030419,
                    "p95": 178.344144,
                    "p99": 178.344144,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 300.870863,
                    "min": 264.434672,
                    "p50": 294.940951,
                    "p95": 300.870863,
                    "p99": 300.870863,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 237.155687,
                    "min": 198.60359,
                    "p50": 236.14609399999998,
                    "p95": 237.155687,
                    "p99": 237.155687,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 145.96962,
                    "min": 86.491491,
                    "p50": 126.532315,
                    "p95": 145.96962,
                    "p99": 145.96962,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 333.659649,
                    "min": 257.828969,
                    "p50": 296.602011,
                    "p95": 333.659649,
                    "p99": 333.659649,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 233.344519,
                    "min": 181.290413,
                    "p50": 196.21272,
                    "p95": 233.344519,
                    "p99": 233.344519,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 305.367047,
                    "min": 224.395839,
                    "p50": 261.263044,
                    "p95": 305.367047,
                    "p99": 305.367047,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 452.42449899999997,
                    "min": 343.631803,
                    "p50": 380.236287,
                    "p95": 452.42449899999997,
                    "p99": 452.42449899999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 281.558492,
                    "min": 211.964025,
                    "p50": 227.15794599999998,
                    "p95": 281.558492,
                    "p99": 281.558492,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 279.752117,
                    "min": 243.42852499999998,
                    "p50": 277.524379,
                    "p95": 279.752117,
                    "p99": 279.752117,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 601.102414,
                    "min": 506.59890099999996,
                    "p50": 548.180117,
                    "p95": 601.102414,
                    "p99": 601.102414,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 159.36598999999998,
                    "min": 148.78558099999998,
                    "p50": 158.361088,
                    "p95": 159.36598999999998,
                    "p99": 159.36598999999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 96.010542,
                    "min": 58.813911,
                    "p50": 90.745438,
                    "p95": 96.010542,
                    "p99": 96.010542,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 212.49664099999998,
                    "min": 207.88895399999998,
                    "p50": 209.62433099999998,
                    "p95": 212.49664099999998,
                    "p99": 212.49664099999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 160.054836,
                    "min": 122.327739,
                    "p50": 141.065316,
                    "p95": 160.054836,
                    "p99": 160.054836,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 119.373643,
                    "min": 107.135729,
                    "p50": 108.26961899999999,
                    "p95": 119.373643,
                    "p99": 119.373643,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 197.49123,
                    "min": 173.78166099999999,
                    "p50": 175.762913,
                    "p95": 197.49123,
                    "p99": 197.49123,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 381.38816599999996,
                    "min": 331.61452299999996,
                    "p50": 336.541336,
                    "p95": 381.38816599999996,
                    "p99": 381.38816599999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 279.89313799999996,
                    "min": 205.185308,
                    "p50": 243.148892,
                    "p95": 279.89313799999996,
                    "p99": 279.89313799999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 210.562809,
                    "min": 190.159384,
                    "p50": 204.697546,
                    "p95": 210.562809,
                    "p99": 210.562809,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 237.73851299999998,
                    "min": 193.87788999999998,
                    "p50": 231.154383,
                    "p95": 237.73851299999998,
                    "p99": 237.73851299999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 255.590367,
                    "min": 207.06815699999999,
                    "p50": 246.256417,
                    "p95": 255.590367,
                    "p99": 255.590367,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.10466599999998,
                    "min": 147.840949,
                    "p50": 162.781254,
                    "p95": 163.10466599999998,
                    "p99": 163.10466599999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.42551499999999,
                    "min": 83.498744,
                    "p50": 121.695003,
                    "p95": 126.42551499999999,
                    "p99": 126.42551499999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.62434399999998,
                    "min": 111.925688,
                    "p50": 149.296753,
                    "p95": 151.62434399999998,
                    "p99": 151.62434399999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.54127199999999,
                    "min": 55.853884,
                    "p50": 93.805138,
                    "p95": 94.54127199999999,
                    "p99": 94.54127199999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.961964,
                    "min": 70.40881499999999,
                    "p50": 107.68119499999999,
                    "p95": 112.961964,
                    "p99": 112.961964,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.27199299999998,
                    "min": 170.74460499999998,
                    "p50": 176.63615,
                    "p95": 178.27199299999998,
                    "p99": 178.27199299999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 141.36694799999998,
                    "min": 132.331838,
                    "p50": 135.58127199999998,
                    "p95": 141.36694799999998,
                    "p99": 141.36694799999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.85157699999996,
                    "min": 310.211325,
                    "p50": 314.208394,
                    "p95": 319.85157699999996,
                    "p99": 319.85157699999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.569009,
                    "min": 185.66703099999998,
                    "p50": 189.942174,
                    "p95": 193.569009,
                    "p99": 193.569009,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.360219,
                    "min": 270.262541,
                    "p50": 282.162852,
                    "p95": 283.360219,
                    "p99": 283.360219,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.24434699999999,
                    "min": 70.28228899999999,
                    "p50": 80.434174,
                    "p95": 83.24434699999999,
                    "p99": 83.24434699999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 221.739468,
                    "min": 195.72508399999998,
                    "p50": 218.27248899999998,
                    "p95": 221.739468,
                    "p99": 221.739468,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 169.454129,
                    "min": 160.971296,
                    "p50": 168.052204,
                    "p95": 169.454129,
                    "p99": 169.454129,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.10696399999999,
                    "min": 99.40237499999999,
                    "p50": 103.784528,
                    "p95": 104.10696399999999,
                    "p99": 104.10696399999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.778978,
                    "min": 75.08429199999999,
                    "p50": 82.180747,
                    "p95": 84.778978,
                    "p99": 84.778978,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 65.124048,
                    "min": 33.154694,
                    "p50": 63.684891,
                    "p95": 65.124048,
                    "p99": 65.124048,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 180.985077,
                    "min": 173.153159,
                    "p50": 178.273644,
                    "p95": 180.985077,
                    "p99": 180.985077,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 203.28582,
                    "min": 184.177943,
                    "p50": 200.51841199999998,
                    "p95": 203.28582,
                    "p99": 203.28582,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 141.414875,
                    "min": 97.56143999999999,
                    "p50": 135.05168899999998,
                    "p95": 141.414875,
                    "p99": 141.414875,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 257.472699,
                    "min": 250.695776,
                    "p50": 254.967175,
                    "p95": 257.472699,
                    "p99": 257.472699,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.062635,
                    "min": 108.68183599999999,
                    "p50": 146.736726,
                    "p95": 149.062635,
                    "p99": 149.062635,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 114.493106,
                    "min": 101.052551,
                    "p50": 113.62699099999999,
                    "p95": 114.493106,
                    "p99": 114.493106,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 231.909743,
                    "min": 189.16525099999998,
                    "p50": 225.74212799999998,
                    "p95": 231.909743,
                    "p99": 231.909743,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 191.795208,
                    "min": 151.215183,
                    "p50": 189.439504,
                    "p95": 191.795208,
                    "p99": 191.795208,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 120.466713,
                    "min": 76.483655,
                    "p50": 93.53438899999999,
                    "p95": 120.466713,
                    "p99": 120.466713,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.152239,
                    "min": 87.112526,
                    "p50": 125.54966599999999,
                    "p95": 126.152239,
                    "p99": 126.152239,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 366.37411399999996,
                    "min": 324.49752,
                    "p50": 362.984446,
                    "p95": 366.37411399999996,
                    "p99": 366.37411399999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 159.538511,
                    "min": 118.760183,
                    "p50": 156.915946,
                    "p95": 159.538511,
                    "p99": 159.538511,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 470.51639,
                    "min": 459.260562,
                    "p50": 468.68312199999997,
                    "p95": 470.51639,
                    "p99": 470.51639,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.189621,
                    "min": 401.556497,
                    "p50": 408.585962,
                    "p95": 411.189621,
                    "p99": 411.189621,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.946223,
                    "min": 219.361889,
                    "p50": 223.469503,
                    "p95": 227.946223,
                    "p99": 227.946223,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 780.82552,
                    "min": 767.175431,
                    "p50": 779.702828,
                    "p95": 780.82552,
                    "p99": 780.82552,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 555.332863,
                    "min": 522.770678,
                    "p50": 553.7618729999999,
                    "p95": 555.332863,
                    "p99": 555.332863,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 269.296722,
                    "min": 249.90281399999998,
                    "p50": 262.362155,
                    "p95": 269.296722,
                    "p99": 269.296722,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 597.11428,
                    "min": 585.841429,
                    "p50": 594.0911679999999,
                    "p95": 597.11428,
                    "p99": 597.11428,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 300.942482,
                    "min": 289.531568,
                    "p50": 298.88829,
                    "p95": 300.942482,
                    "p99": 300.942482,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 486.455296,
                    "min": 477.59399299999995,
                    "p50": 482.651035,
                    "p95": 486.455296,
                    "p99": 486.455296,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 374.689864,
                    "min": 334.32703899999996,
                    "p50": 373.239243,
                    "p95": 374.689864,
                    "p99": 374.689864,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 523.27573,
                    "min": 508.22452499999997,
                    "p50": 519.2896559999999,
                    "p95": 523.27573,
                    "p99": 523.27573,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 688.386114,
                    "min": 648.194228,
                    "p50": 684.185386,
                    "p95": 688.386114,
                    "p99": 688.386114,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 337.945587,
                    "min": 330.594652,
                    "p50": 333.790666,
                    "p95": 337.945587,
                    "p99": 337.945587,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 450.26170099999996,
                    "min": 442.652922,
                    "p50": 445.078833,
                    "p95": 450.26170099999996,
                    "p99": 450.26170099999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.71004,
                    "min": 148.67191,
                    "p50": 150.35595,
                    "p95": 151.71004,
                    "p99": 151.71004,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.17668,
                    "min": 186.89127399999998,
                    "p50": 188.930873,
                    "p95": 193.17668,
                    "p99": 193.17668,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 189.10768299999998,
                    "min": 175.25750599999998,
                    "p50": 186.421968,
                    "p95": 189.10768299999998,
                    "p99": 189.10768299999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 101.067889,
                    "min": 82.891757,
                    "p50": 97.359269,
                    "p95": 101.067889,
                    "p99": 101.067889,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 217.120803,
                    "min": 179.692188,
                    "p50": 215.64243299999998,
                    "p95": 217.120803,
                    "p99": 217.120803,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 248.68718199999998,
                    "min": 207.36623699999998,
                    "p50": 244.804924,
                    "p95": 248.68718199999998,
                    "p99": 248.68718199999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.574303,
                    "min": 74.760609,
                    "p50": 112.533986,
                    "p95": 113.574303,
                    "p99": 113.574303,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 175.39926599999998,
                    "min": 149.35969699999998,
                    "p50": 171.04080399999998,
                    "p95": 175.39926599999998,
                    "p99": 175.39926599999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 159.14601,
                    "min": 147.373483,
                    "p50": 157.08609099999998,
                    "p95": 159.14601,
                    "p99": 159.14601,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.063786,
                    "min": 107.69347599999999,
                    "p50": 126.891016,
                    "p95": 128.063786,
                    "p99": 128.063786,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.465223,
                    "min": 44.80986,
                    "p50": 82.542215,
                    "p95": 83.465223,
                    "p99": 83.465223,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 298.28067899999996,
                    "min": 258.04335,
                    "p50": 295.039852,
                    "p95": 298.28067899999996,
                    "p99": 298.28067899999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 202.02850899999999,
                    "min": 162.085952,
                    "p50": 200.683482,
                    "p95": 202.02850899999999,
                    "p99": 202.02850899999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 237.22000599999998,
                    "min": 228.721894,
                    "p50": 231.231937,
                    "p95": 237.22000599999998,
                    "p99": 237.22000599999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 335.878601,
                    "min": 319.519148,
                    "p50": 332.727443,
                    "p95": 335.878601,
                    "p99": 335.878601,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 263.452004,
                    "min": 257.319198,
                    "p50": 259.54175599999996,
                    "p95": 263.452004,
                    "p99": 263.452004,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 147.100856,
                    "min": 139.86470699999998,
                    "p50": 143.45997599999998,
                    "p95": 147.100856,
                    "p99": 147.100856,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.215103,
                    "min": 274.338109,
                    "p50": 282.636213,
                    "p95": 286.215103,
                    "p99": 286.215103,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 181.036418,
                    "min": 173.45298,
                    "p50": 177.69642299999998,
                    "p95": 181.036418,
                    "p99": 181.036418,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 239.29057899999998,
                    "min": 198.40778999999998,
                    "p50": 233.47385,
                    "p95": 239.29057899999998,
                    "p99": 239.29057899999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.34238399999998,
                    "min": 230.011126,
                    "p50": 247.425537,
                    "p95": 251.34238399999998,
                    "p99": 251.34238399999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 321.208843,
                    "min": 283.68368599999997,
                    "p50": 316.108842,
                    "p95": 321.208843,
                    "p99": 321.208843,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 192.924252,
                    "min": 153.51107299999998,
                    "p50": 185.494294,
                    "p95": 192.924252,
                    "p99": 192.924252,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.569418,
                    "min": 84.283095,
                    "p50": 121.781506,
                    "p95": 124.569418,
                    "p99": 124.569418,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.850988,
                    "min": 120.24037899999999,
                    "p50": 150.035574,
                    "p95": 151.850988,
                    "p99": 151.850988,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 220.50867499999998,
                    "min": 186.862798,
                    "p50": 214.128606,
                    "p95": 220.50867499999998,
                    "p99": 220.50867499999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.23240199999998,
                    "min": 168.48515799999998,
                    "p50": 205.189757,
                    "p95": 211.23240199999998,
                    "p99": 211.23240199999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 459.899007,
                    "min": 416.212584,
                    "p50": 452.17569899999995,
                    "p95": 459.899007,
                    "p99": 459.899007,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.031929,
                    "min": 98.62863499999999,
                    "p50": 135.255548,
                    "p95": 140.031929,
                    "p99": 140.031929,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.55184299999999,
                    "min": 42.482377,
                    "p50": 69.880927,
                    "p95": 83.55184299999999,
                    "p99": 83.55184299999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.86861999999999,
                    "min": 69.91619399999999,
                    "p50": 107.67471599999999,
                    "p95": 110.86861999999999,
                    "p99": 110.86861999999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.522497,
                    "min": 131.153988,
                    "p50": 162.97256,
                    "p95": 170.522497,
                    "p99": 170.522497,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.736841,
                    "min": 56.043462999999996,
                    "p50": 93.393993,
                    "p95": 94.736841,
                    "p99": 94.736841,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 681.4140219999999,
                    "min": 623.885328,
                    "p50": 663.084881,
                    "p95": 681.4140219999999,
                    "p99": 681.4140219999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.81415,
                    "min": 320.949934,
                    "p50": 330.70304999999996,
                    "p95": 341.81415,
                    "p99": 341.81415,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.902594,
                    "min": 157.447634,
                    "p50": 164.545557,
                    "p95": 169.902594,
                    "p99": 169.902594,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 207.756798,
                    "min": 167.003865,
                    "p50": 205.708789,
                    "p95": 207.756798,
                    "p99": 207.756798,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 466.79232299999995,
                    "min": 418.934819,
                    "p50": 461.091117,
                    "p95": 466.79232299999995,
                    "p99": 466.79232299999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 293.307998,
                    "min": 255.00729099999998,
                    "p50": 289.020267,
                    "p95": 293.307998,
                    "p99": 293.307998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 882.0352469999999,
                    "min": 843.464705,
                    "p50": 870.0647289999999,
                    "p95": 882.0352469999999,
                    "p99": 882.0352469999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.234492,
                    "min": 244.682299,
                    "p50": 250.69098699999998,
                    "p95": 253.234492,
                    "p99": 253.234492,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 510.471349,
                    "min": 497.847376,
                    "p50": 499.79125,
                    "p95": 510.471349,
                    "p99": 510.471349,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 376.255831,
                    "min": 335.471227,
                    "p50": 374.19194699999997,
                    "p95": 376.255831,
                    "p99": 376.255831,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 554.29571,
                    "min": 529.250322,
                    "p50": 537.6188159999999,
                    "p95": 554.29571,
                    "p99": 554.29571,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 587.103402,
                    "min": 548.151656,
                    "p50": 578.075457,
                    "p95": 587.103402,
                    "p99": 587.103402,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 778.372429,
                    "min": 736.380635,
                    "p50": 770.4802129999999,
                    "p95": 778.372429,
                    "p99": 778.372429,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 628.638521,
                    "min": 620.9659869999999,
                    "p50": 626.117806,
                    "p95": 628.638521,
                    "p99": 628.638521,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.474117,
                    "min": 410.57995,
                    "p50": 415.952121,
                    "p95": 425.474117,
                    "p99": 425.474117,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.58350399999999,
                    "min": 92.95172199999999,
                    "p50": 94.175642,
                    "p95": 95.58350399999999,
                    "p99": 95.58350399999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.94592999999998,
                    "min": 242.027754,
                    "p50": 245.777537,
                    "p95": 246.94592999999998,
                    "p99": 246.94592999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.32302099999998,
                    "min": 178.48320099999998,
                    "p50": 190.49068,
                    "p95": 191.32302099999998,
                    "p99": 191.32302099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.135002,
                    "min": 124.24819799999999,
                    "p50": 161.84617799999998,
                    "p95": 163.135002,
                    "p99": 163.135002,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 129.948789,
                    "min": 114.738423,
                    "p50": 121.68960899999999,
                    "p95": 129.948789,
                    "p99": 129.948789,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 80.455272,
                    "min": 41.943371,
                    "p50": 80.261089,
                    "p95": 80.455272,
                    "p99": 80.455272,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 108.725714,
                    "min": 105.85617099999999,
                    "p50": 107.538382,
                    "p95": 108.725714,
                    "p99": 108.725714,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 232.476658,
                    "min": 217.34740599999998,
                    "p50": 231.908986,
                    "p95": 232.476658,
                    "p99": 232.476658,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.017809,
                    "min": 265.418087,
                    "p50": 281.65787,
                    "p95": 283.017809,
                    "p99": 283.017809,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.41807599999999,
                    "min": 126.31989899999999,
                    "p50": 134.949953,
                    "p95": 136.41807599999999,
                    "p99": 136.41807599999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 176.834971,
                    "min": 138.392547,
                    "p50": 175.61545099999998,
                    "p95": 176.834971,
                    "p99": 176.834971,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 318.434168,
                    "min": 275.13122,
                    "p50": 313.653445,
                    "p95": 318.434168,
                    "p99": 318.434168,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.955997,
                    "min": 166.143701,
                    "p50": 203.94633299999998,
                    "p95": 205.955997,
                    "p99": 205.955997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.92707099999998,
                    "min": 111.029355,
                    "p50": 148.367542,
                    "p95": 149.92707099999998,
                    "p99": 149.92707099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.23457499999998,
                    "min": 204.33977,
                    "p50": 215.583486,
                    "p95": 219.23457499999998,
                    "p99": 219.23457499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1067.13323,
                    "min": 1025.379817,
                    "p50": 1044.985296,
                    "p95": 1067.13323,
                    "p99": 1067.13323,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 591.024354,
                    "min": 559.100516,
                    "p50": 581.204944,
                    "p95": 591.024354,
                    "p99": 591.024354,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 725.1103089999999,
                    "min": 699.171437,
                    "p50": 721.687338,
                    "p95": 725.1103089999999,
                    "p99": 725.1103089999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 782.6251189999999,
                    "min": 758.830616,
                    "p50": 777.3435929999999,
                    "p95": 782.6251189999999,
                    "p99": 782.6251189999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1017.9372189999999,
                    "min": 974.3559769999999,
                    "p50": 982.8355329999999,
                    "p95": 1017.9372189999999,
                    "p99": 1017.9372189999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 930.60659,
                    "min": 882.6169179999999,
                    "p50": 921.282398,
                    "p95": 930.60659,
                    "p99": 930.60659,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 321.652201,
                    "min": 276.227873,
                    "p50": 305.34799899999996,
                    "p95": 321.652201,
                    "p99": 321.652201,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 652.875499,
                    "min": 638.661221,
                    "p50": 650.2309809999999,
                    "p95": 652.875499,
                    "p99": 652.875499,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 860.3408909999999,
                    "min": 833.4779189999999,
                    "p50": 842.7084639999999,
                    "p95": 860.3408909999999,
                    "p99": 860.3408909999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1244.157682,
                    "min": 1181.285285,
                    "p50": 1225.235932,
                    "p95": 1244.157682,
                    "p99": 1244.157682,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 395.89212299999997,
                    "min": 335.446619,
                    "p50": 377.75518,
                    "p95": 395.89212299999997,
                    "p99": 395.89212299999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 519.5822509999999,
                    "min": 482.82690499999995,
                    "p50": 514.394819,
                    "p95": 519.5822509999999,
                    "p99": 519.5822509999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 247.628571,
                    "min": 205.524169,
                    "p50": 243.572512,
                    "p95": 247.628571,
                    "p99": 247.628571,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 450.38253599999996,
                    "min": 430.711372,
                    "p50": 447.1681,
                    "p95": 450.38253599999996,
                    "p99": 450.38253599999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1408.871968,
                    "min": 1364.5141979999999,
                    "p50": 1383.7643409999998,
                    "p95": 1408.871968,
                    "p99": 1408.871968,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1358.706498,
                    "min": 1317.752598,
                    "p50": 1342.949576,
                    "p95": 1358.706498,
                    "p99": 1358.706498,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 969.509768,
                    "min": 953.227907,
                    "p50": 964.105047,
                    "p95": 969.509768,
                    "p99": 969.509768,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 836.223124,
                    "min": 808.956378,
                    "p50": 828.9996649999999,
                    "p95": 836.223124,
                    "p99": 836.223124,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 639.433943,
                    "min": 628.584625,
                    "p50": 633.091941,
                    "p95": 639.433943,
                    "p99": 639.433943,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 584.379054,
                    "min": 550.481264,
                    "p50": 568.904426,
                    "p95": 584.379054,
                    "p99": 584.379054,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 447.498389,
                    "min": 404.75608,
                    "p50": 438.871288,
                    "p95": 447.498389,
                    "p99": 447.498389,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 905.7706589999999,
                    "min": 869.895493,
                    "p50": 895.499788,
                    "p95": 905.7706589999999,
                    "p99": 905.7706589999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 310.34772699999996,
                    "min": 293.944658,
                    "p50": 304.030466,
                    "p95": 310.34772699999996,
                    "p99": 310.34772699999996,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 775.688192,
                    "min": 731.756362,
                    "p50": 763.35674,
                    "p95": 775.688192,
                    "p99": 775.688192,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 373.787559,
                    "min": 331.358814,
                    "p50": 368.19469399999997,
                    "p95": 373.787559,
                    "p99": 373.787559,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1204.698034,
                    "min": 1168.498453,
                    "p50": 1187.556699,
                    "p95": 1204.698034,
                    "p99": 1204.698034,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 240.89719499999998,
                    "min": 234.088798,
                    "p50": 238.920606,
                    "p95": 240.89719499999998,
                    "p99": 240.89719499999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 507.364124,
                    "min": 491.11973,
                    "p50": 500.637273,
                    "p95": 507.364124,
                    "p99": 507.364124,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1038.758495,
                    "min": 1020.9605399999999,
                    "p50": 1033.143789,
                    "p95": 1038.758495,
                    "p99": 1038.758495,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 713.504821,
                    "min": 691.916794,
                    "p50": 696.872853,
                    "p95": 713.504821,
                    "p99": 713.504821,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 766.588363,
                    "min": 724.027606,
                    "p50": 763.8498579999999,
                    "p95": 766.588363,
                    "p99": 766.588363,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 438.893874,
                    "min": 396.15941,
                    "p50": 436.91074499999996,
                    "p95": 438.893874,
                    "p99": 438.893874,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 384.71342699999997,
                    "min": 333.00017199999996,
                    "p50": 371.261559,
                    "p95": 384.71342699999997,
                    "p99": 384.71342699999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 707.500593,
                    "min": 652.7675439999999,
                    "p50": 701.033473,
                    "p95": 707.500593,
                    "p99": 707.500593,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1373.864028,
                    "min": 1347.789497,
                    "p50": 1362.635661,
                    "p95": 1373.864028,
                    "p99": 1373.864028,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 305.363934,
                    "min": 268.348622,
                    "p50": 303.331039,
                    "p95": 305.363934,
                    "p99": 305.363934,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 508.448655,
                    "min": 493.36438799999996,
                    "p50": 503.661592,
                    "p95": 508.448655,
                    "p99": 508.448655,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 240.476778,
                    "min": 222.26116299999998,
                    "p50": 235.74656199999998,
                    "p95": 240.476778,
                    "p99": 240.476778,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1048.854234,
                    "min": 989.057927,
                    "p50": 1022.982312,
                    "p95": 1048.854234,
                    "p99": 1048.854234,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1006.241396,
                    "min": 916.247991,
                    "p50": 968.3214429999999,
                    "p95": 1006.241396,
                    "p99": 1006.241396,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 841.717959,
                    "min": 784.119477,
                    "p50": 834.0856229999999,
                    "p95": 841.717959,
                    "p99": 841.717959,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 900.402387,
                    "min": 883.846198,
                    "p50": 890.344976,
                    "p95": 900.402387,
                    "p99": 900.402387,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 636.118622,
                    "min": 592.260503,
                    "p50": 630.891988,
                    "p95": 636.118622,
                    "p99": 636.118622,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1224.774236,
                    "min": 1165.624271,
                    "p50": 1190.9422869999999,
                    "p95": 1224.774236,
                    "p99": 1224.774236,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 572.129812,
                    "min": 559.181757,
                    "p50": 570.05439,
                    "p95": 572.129812,
                    "p99": 572.129812,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 325.94600399999996,
                    "min": 302.58088599999996,
                    "p50": 324.335579,
                    "p95": 325.94600399999996,
                    "p99": 325.94600399999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 195.484278,
                    "min": 186.37580499999999,
                    "p50": 193.730118,
                    "p95": 195.484278,
                    "p99": 195.484278,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 368.507584,
                    "min": 356.81137,
                    "p50": 366.50224599999996,
                    "p95": 368.507584,
                    "p99": 368.507584,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 424.482196,
                    "min": 411.304101,
                    "p50": 420.359294,
                    "p95": 424.482196,
                    "p99": 424.482196,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 105.643115,
                    "min": 97.795501,
                    "p50": 104.929175,
                    "p95": 105.643115,
                    "p99": 105.643115,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 304.769911,
                    "min": 294.21234799999996,
                    "p50": 302.94370299999997,
                    "p95": 304.769911,
                    "p99": 304.769911,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 173.641146,
                    "min": 160.00557899999998,
                    "p50": 171.154946,
                    "p95": 173.641146,
                    "p99": 173.641146,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 130.349719,
                    "min": 120.25802999999999,
                    "p50": 127.47176999999999,
                    "p95": 130.349719,
                    "p99": 130.349719,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 703.540808,
                    "min": 681.069411,
                    "p50": 692.938,
                    "p95": 703.540808,
                    "p99": 703.540808,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.768024,
                    "min": 207.315283,
                    "p50": 235.443269,
                    "p95": 236.768024,
                    "p99": 236.768024,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.424466,
                    "min": 259.967892,
                    "p50": 279.739624,
                    "p95": 282.424466,
                    "p99": 282.424466,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 355.186464,
                    "min": 339.425301,
                    "p50": 344.601158,
                    "p95": 355.186464,
                    "p99": 355.186464,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.104509,
                    "min": 113.053179,
                    "p50": 146.686825,
                    "p95": 149.104509,
                    "p99": 149.104509,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1140.194504,
                    "min": 1104.427953,
                    "p50": 1127.290874,
                    "p95": 1140.194504,
                    "p99": 1140.194504,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 489.16509299999996,
                    "min": 455.660313,
                    "p50": 476.181811,
                    "p95": 489.16509299999996,
                    "p99": 489.16509299999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 260.784188,
                    "min": 220.266461,
                    "p50": 257.730211,
                    "p95": 260.784188,
                    "p99": 260.784188,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 219.821994,
                    "min": 175.344228,
                    "p50": 214.74829599999998,
                    "p95": 219.821994,
                    "p99": 219.821994,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 918.7020789999999,
                    "min": 891.744377,
                    "p50": 910.243028,
                    "p95": 918.7020789999999,
                    "p99": 918.7020789999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 322.82089099999996,
                    "min": 297.199144,
                    "p50": 318.736342,
                    "p95": 322.82089099999996,
                    "p99": 322.82089099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.965531,
                    "min": 109.33937999999999,
                    "p50": 121.953876,
                    "p95": 125.965531,
                    "p99": 125.965531,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 220.717185,
                    "min": 182.309325,
                    "p50": 213.259427,
                    "p95": 220.717185,
                    "p99": 220.717185,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.107891,
                    "min": 127.490731,
                    "p50": 164.55418899999998,
                    "p95": 167.107891,
                    "p99": 167.107891,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.84613299999998,
                    "min": 171.930379,
                    "p50": 178.328386,
                    "p95": 182.84613299999998,
                    "p99": 182.84613299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.501108,
                    "min": 65.034823,
                    "p50": 81.58330099999999,
                    "p95": 83.501108,
                    "p99": 83.501108,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 194.254843,
                    "min": 154.49349999999998,
                    "p50": 192.27819,
                    "p95": 194.254843,
                    "p99": 194.254843,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.571573,
                    "min": 70.93103599999999,
                    "p50": 108.59891599999999,
                    "p95": 109.571573,
                    "p99": 109.571573,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.495883,
                    "min": 228.500303,
                    "p50": 235.383252,
                    "p95": 236.495883,
                    "p99": 236.495883,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.241539,
                    "min": 112.466507,
                    "p50": 150.86754299999998,
                    "p95": 152.241539,
                    "p99": 152.241539,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.867284,
                    "min": 275.36254199999996,
                    "p50": 284.301937,
                    "p95": 286.867284,
                    "p99": 286.867284,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 210.562004,
                    "min": 168.494759,
                    "p50": 206.521165,
                    "p95": 210.562004,
                    "p99": 210.562004,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.730458,
                    "min": 127.572448,
                    "p50": 136.58558499999998,
                    "p95": 138.730458,
                    "p99": 138.730458,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.927054,
                    "min": 80.031857,
                    "p50": 94.961491,
                    "p95": 95.927054,
                    "p99": 95.927054,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.10234599999998,
                    "min": 235.464302,
                    "p50": 249.63737799999998,
                    "p95": 251.10234599999998,
                    "p99": 251.10234599999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 463.516378,
                    "min": 448.78457699999996,
                    "p50": 460.787901,
                    "p95": 463.516378,
                    "p99": 463.516378,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 168.58324299999998,
                    "min": 154.772109,
                    "p50": 164.97765099999998,
                    "p95": 168.58324299999998,
                    "p99": 168.58324299999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.648798,
                    "min": 140.448014,
                    "p50": 178.131854,
                    "p95": 178.648798,
                    "p99": 178.648798,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.80439199999999,
                    "min": 71.827225,
                    "p50": 108.987298,
                    "p95": 110.80439199999999,
                    "p99": 110.80439199999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 156.125067,
                    "min": 146.072689,
                    "p50": 151.530324,
                    "p95": 156.125067,
                    "p99": 156.125067,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 240.047329,
                    "min": 201.466094,
                    "p50": 236.142623,
                    "p95": 240.047329,
                    "p99": 240.047329,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.71995299999999,
                    "min": 77.35704199999999,
                    "p50": 81.21901199999999,
                    "p95": 81.71995299999999,
                    "p99": 81.71995299999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 463.150355,
                    "min": 452.257588,
                    "p50": 460.035345,
                    "p95": 463.150355,
                    "p99": 463.150355,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 196.153541,
                    "min": 154.71545999999998,
                    "p50": 192.797015,
                    "p95": 196.153541,
                    "p99": 196.153541,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.455053,
                    "min": 205.60133299999998,
                    "p50": 221.031992,
                    "p95": 223.455053,
                    "p99": 223.455053,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.99851699999999,
                    "min": 85.302218,
                    "p50": 122.334751,
                    "p95": 123.99851699999999,
                    "p99": 123.99851699999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 289.13242299999996,
                    "min": 279.503631,
                    "p50": 283.634443,
                    "p95": 289.13242299999996,
                    "p99": 289.13242299999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 209.336737,
                    "min": 199.144095,
                    "p50": 206.453239,
                    "p95": 209.336737,
                    "p99": 209.336737,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.902946,
                    "min": 128.5615,
                    "p50": 136.601797,
                    "p95": 136.902946,
                    "p99": 136.902946,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 606.5534749999999,
                    "min": 581.917467,
                    "p50": 597.090826,
                    "p95": 606.5534749999999,
                    "p99": 606.5534749999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.972017,
                    "min": 57.048615999999996,
                    "p50": 94.68923,
                    "p95": 97.972017,
                    "p99": 97.972017,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 252.79182,
                    "min": 242.817367,
                    "p50": 250.61470799999998,
                    "p95": 252.79182,
                    "p99": 252.79182,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 330.39943999999997,
                    "min": 309.31127499999997,
                    "p50": 322.304108,
                    "p95": 330.39943999999997,
                    "p99": 330.39943999999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "erigon": {
            "name": "erigon",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 615.630855,
                    "min": 579.824092,
                    "p50": 594.421157,
                    "p95": 615.630855,
                    "p99": 615.630855,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 978.840008,
                    "min": 950.770311,
                    "p50": 969.156298,
                    "p95": 978.840008,
                    "p99": 978.840008,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 874.8004129999999,
                    "min": 833.36316,
                    "p50": 846.1460119999999,
                    "p95": 874.8004129999999,
                    "p99": 874.8004129999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 671.504648,
                    "min": 640.518916,
                    "p50": 654.507041,
                    "p95": 671.504648,
                    "p99": 671.504648,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 808.402485,
                    "min": 766.837325,
                    "p50": 781.689928,
                    "p95": 808.402485,
                    "p99": 808.402485,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 908.8679639999999,
                    "min": 887.0270079999999,
                    "p50": 898.432197,
                    "p95": 908.8679639999999,
                    "p99": 908.8679639999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.716186,
                    "min": 205.00714,
                    "p50": 208.948038,
                    "p95": 227.716186,
                    "p99": 227.716186,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 292.17875599999996,
                    "min": 266.327741,
                    "p50": 269.397788,
                    "p95": 292.17875599999996,
                    "p99": 292.17875599999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.67960899999997,
                    "min": 329.124481,
                    "p50": 333.97467,
                    "p95": 345.67960899999997,
                    "p99": 345.67960899999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1330.7058749999999,
                    "min": 1261.7288569999998,
                    "p50": 1280.52892,
                    "p95": 1330.7058749999999,
                    "p99": 1330.7058749999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 419.661741,
                    "min": 394.712765,
                    "p50": 408.001238,
                    "p95": 419.661741,
                    "p99": 419.661741,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1152.239845,
                    "min": 1105.9723239999998,
                    "p50": 1120.455279,
                    "p95": 1152.239845,
                    "p99": 1152.239845,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 533.0790969999999,
                    "min": 512.3947529999999,
                    "p50": 518.629163,
                    "p95": 533.0790969999999,
                    "p99": 533.0790969999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 468.706414,
                    "min": 453.107157,
                    "p50": 461.04126099999996,
                    "p95": 468.706414,
                    "p99": 468.706414,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 515.141974,
                    "min": 430.83923,
                    "p50": 503.446891,
                    "p95": 515.141974,
                    "p99": 515.141974,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 827.673359,
                    "min": 759.1278269999999,
                    "p50": 774.238968,
                    "p95": 827.673359,
                    "p99": 827.673359,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1022.040364,
                    "min": 978.439353,
                    "p50": 1015.0781559999999,
                    "p95": 1022.040364,
                    "p99": 1022.040364,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 347.488564,
                    "min": 315.360749,
                    "p50": 321.34525099999996,
                    "p95": 347.488564,
                    "p99": 347.488564,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 575.025458,
                    "min": 542.997063,
                    "p50": 556.4070449999999,
                    "p95": 575.025458,
                    "p99": 575.025458,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 897.7182849999999,
                    "min": 861.073752,
                    "p50": 887.9591389999999,
                    "p95": 897.7182849999999,
                    "p99": 897.7182849999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.287915,
                    "min": 224.106181,
                    "p50": 272.176823,
                    "p95": 281.287915,
                    "p99": 281.287915,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 419.15106499999996,
                    "min": 409.470603,
                    "p50": 416.500094,
                    "p95": 419.15106499999996,
                    "p99": 419.15106499999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 486.18154599999997,
                    "min": 424.96838299999996,
                    "p50": 467.450275,
                    "p95": 486.18154599999997,
                    "p99": 486.18154599999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 284.158884,
                    "min": 263.963323,
                    "p50": 274.72157899999996,
                    "p95": 284.158884,
                    "p99": 284.158884,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1537.672345,
                    "min": 1476.610578,
                    "p50": 1489.394294,
                    "p95": 1537.672345,
                    "p99": 1537.672345,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 901.3678259999999,
                    "min": 867.807963,
                    "p50": 889.3804739999999,
                    "p95": 901.3678259999999,
                    "p99": 901.3678259999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 674.375452,
                    "min": 661.308709,
                    "p50": 663.68035,
                    "p95": 674.375452,
                    "p99": 674.375452,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 640.422546,
                    "min": 601.0338399999999,
                    "p50": 620.175389,
                    "p95": 640.422546,
                    "p99": 640.422546,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 381.049581,
                    "min": 354.130883,
                    "p50": 366.95951399999996,
                    "p95": 381.049581,
                    "p99": 381.049581,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1026.3772239999998,
                    "min": 1000.289633,
                    "p50": 1011.3905589999999,
                    "p95": 1026.3772239999998,
                    "p99": 1026.3772239999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.660337,
                    "min": 163.56142499999999,
                    "p50": 170.182165,
                    "p95": 201.660337,
                    "p99": 201.660337,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 771.972817,
                    "min": 744.181972,
                    "p50": 757.1297509999999,
                    "p95": 771.972817,
                    "p99": 771.972817,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 451.095357,
                    "min": 408.82014599999997,
                    "p50": 425.802961,
                    "p95": 451.095357,
                    "p99": 451.095357,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 332.06172499999997,
                    "min": 312.376777,
                    "p50": 320.342725,
                    "p95": 332.06172499999997,
                    "p99": 332.06172499999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 232.548622,
                    "min": 211.61272499999998,
                    "p50": 221.037241,
                    "p95": 232.548622,
                    "p99": 232.548622,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 728.5146629999999,
                    "min": 696.523189,
                    "p50": 713.2559679999999,
                    "p95": 728.5146629999999,
                    "p99": 728.5146629999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1148.109013,
                    "min": 1105.039751,
                    "p50": 1123.2702689999999,
                    "p95": 1148.109013,
                    "p99": 1148.109013,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.70131999999998,
                    "min": 204.619147,
                    "p50": 208.546448,
                    "p95": 218.70131999999998,
                    "p99": 218.70131999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 798.9408679999999,
                    "min": 766.474789,
                    "p50": 773.5606329999999,
                    "p95": 798.9408679999999,
                    "p99": 798.9408679999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 851.586279,
                    "min": 824.5713099999999,
                    "p50": 839.877926,
                    "p95": 851.586279,
                    "p99": 851.586279,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 303.12523899999997,
                    "min": 266.262027,
                    "p50": 273.979823,
                    "p95": 303.12523899999997,
                    "p99": 303.12523899999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 727.4025909999999,
                    "min": 703.411689,
                    "p50": 717.193641,
                    "p95": 727.4025909999999,
                    "p99": 727.4025909999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 975.692833,
                    "min": 952.086775,
                    "p50": 964.074269,
                    "p95": 975.692833,
                    "p99": 975.692833,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 422.84114999999997,
                    "min": 396.709888,
                    "p50": 404.335375,
                    "p95": 422.84114999999997,
                    "p99": 422.84114999999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 616.416978,
                    "min": 579.460571,
                    "p50": 590.267075,
                    "p95": 616.416978,
                    "p99": 616.416978,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 557.075121,
                    "min": 520.158049,
                    "p50": 533.483082,
                    "p95": 557.075121,
                    "p99": 557.075121,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1282.268711,
                    "min": 1258.990755,
                    "p50": 1268.0875819999999,
                    "p95": 1282.268711,
                    "p99": 1282.268711,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 662.4210499999999,
                    "min": 635.407469,
                    "p50": 646.004943,
                    "p95": 662.4210499999999,
                    "p99": 662.4210499999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 485.87395599999996,
                    "min": 455.677215,
                    "p50": 469.92399,
                    "p95": 485.87395599999996,
                    "p99": 485.87395599999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.229531,
                    "min": 330.43157099999996,
                    "p50": 337.182297,
                    "p95": 349.229531,
                    "p99": 349.229531,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 919.107579,
                    "min": 892.567339,
                    "p50": 905.098858,
                    "p95": 919.107579,
                    "p99": 919.107579,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 130.858637,
                    "min": 120.327625,
                    "p50": 126.54692999999999,
                    "p95": 130.858637,
                    "p99": 130.858637,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 49.711003,
                    "min": 43.044362,
                    "p50": 46.558338,
                    "p95": 49.711003,
                    "p99": 49.711003,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 297.867907,
                    "min": 248.19400299999998,
                    "p50": 262.113783,
                    "p95": 297.867907,
                    "p99": 297.867907,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 535.777599,
                    "min": 436.67124099999995,
                    "p50": 478.273844,
                    "p95": 535.777599,
                    "p99": 535.777599,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 110.61316099999999,
                    "min": 72.80602499999999,
                    "p50": 91.315893,
                    "p95": 110.61316099999999,
                    "p99": 110.61316099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 104.226815,
                    "min": 66.95830699999999,
                    "p50": 69.956755,
                    "p95": 104.226815,
                    "p99": 104.226815,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 249.36001199999998,
                    "min": 188.111632,
                    "p50": 209.47909199999998,
                    "p95": 249.36001199999998,
                    "p99": 249.36001199999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.393384,
                    "min": 49.216764999999995,
                    "p50": 52.624919,
                    "p95": 72.393384,
                    "p99": 72.393384,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 98.129898,
                    "min": 74.599136,
                    "p50": 80.201931,
                    "p95": 98.129898,
                    "p99": 98.129898,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 119.79843799999999,
                    "min": 106.70527399999999,
                    "p50": 113.288457,
                    "p95": 119.79843799999999,
                    "p99": 119.79843799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 181.57677999999999,
                    "min": 158.9487,
                    "p50": 177.613146,
                    "p95": 181.57677999999999,
                    "p99": 181.57677999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.483232,
                    "min": 35.837088,
                    "p50": 39.282108,
                    "p95": 45.483232,
                    "p99": 45.483232,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 88.924239,
                    "min": 80.20763099999999,
                    "p50": 82.433517,
                    "p95": 88.924239,
                    "p99": 88.924239,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 103.37355799999999,
                    "min": 90.528224,
                    "p50": 96.38541599999999,
                    "p95": 103.37355799999999,
                    "p99": 103.37355799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 68.14703999999999,
                    "min": 49.104543,
                    "p50": 63.49787,
                    "p95": 68.14703999999999,
                    "p99": 68.14703999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 81.393337,
                    "min": 63.932354,
                    "p50": 65.784821,
                    "p95": 81.393337,
                    "p99": 81.393337,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 105.37467799999999,
                    "min": 86.96254499999999,
                    "p50": 91.078904,
                    "p95": 105.37467799999999,
                    "p99": 105.37467799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 75.043234,
                    "min": 64.34588099999999,
                    "p50": 69.364425,
                    "p95": 75.043234,
                    "p99": 75.043234,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 85.156312,
                    "min": 72.81109,
                    "p50": 76.357851,
                    "p95": 85.156312,
                    "p99": 85.156312,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 308.172345,
                    "min": 282.857867,
                    "p50": 290.156347,
                    "p95": 308.172345,
                    "p99": 308.172345,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 195.951019,
                    "min": 162.761966,
                    "p50": 172.08552799999998,
                    "p95": 195.951019,
                    "p99": 195.951019,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 479.59308699999997,
                    "min": 414.968432,
                    "p50": 434.281774,
                    "p95": 479.59308699999997,
                    "p99": 479.59308699999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 225.2471,
                    "min": 197.40433399999998,
                    "p50": 211.235806,
                    "p95": 225.2471,
                    "p99": 225.2471,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 365.234533,
                    "min": 337.878783,
                    "p50": 354.803392,
                    "p95": 365.234533,
                    "p99": 365.234533,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1507.0553499999999,
                    "min": 1471.4199509999999,
                    "p50": 1484.9660959999999,
                    "p95": 1507.0553499999999,
                    "p99": 1507.0553499999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 334.368566,
                    "min": 311.018345,
                    "p50": 316.65646699999996,
                    "p95": 334.368566,
                    "p99": 334.368566,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 417.06221,
                    "min": 388.255107,
                    "p50": 406.67837499999996,
                    "p95": 417.06221,
                    "p99": 417.06221,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 575.752566,
                    "min": 530.229094,
                    "p50": 542.301399,
                    "p95": 575.752566,
                    "p99": 575.752566,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 294.15470999999997,
                    "min": 255.12706799999998,
                    "p50": 283.27918,
                    "p95": 294.15470999999997,
                    "p99": 294.15470999999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1217.634435,
                    "min": 1178.3070269999998,
                    "p50": 1194.58847,
                    "p95": 1217.634435,
                    "p99": 1217.634435,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 272.34421,
                    "min": 223.406466,
                    "p50": 244.805431,
                    "p95": 272.34421,
                    "p99": 272.34421,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 407.678571,
                    "min": 367.072678,
                    "p50": 376.854553,
                    "p95": 407.678571,
                    "p99": 407.678571,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 926.025234,
                    "min": 888.74104,
                    "p50": 903.9304199999999,
                    "p95": 926.025234,
                    "p99": 926.025234,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 179.87259,
                    "min": 136.011554,
                    "p50": 145.18105599999998,
                    "p95": 179.87259,
                    "p99": 179.87259,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2959.920627,
                    "min": 2933.5580219999997,
                    "p50": 2952.33099,
                    "p95": 2959.920627,
                    "p99": 2959.920627,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 124.548262,
                    "min": 105.82888899999999,
                    "p50": 108.844583,
                    "p95": 124.548262,
                    "p99": 124.548262,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 492.09842399999997,
                    "min": 453.21297699999997,
                    "p50": 461.137209,
                    "p95": 492.09842399999997,
                    "p99": 492.09842399999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 612.099343,
                    "min": 584.943552,
                    "p50": 609.225628,
                    "p95": 612.099343,
                    "p99": 612.099343,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 45.977595,
                    "min": 35.639942999999995,
                    "p50": 40.615165,
                    "p95": 45.977595,
                    "p99": 45.977595,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 55.665149,
                    "min": 44.078255,
                    "p50": 51.587877,
                    "p95": 55.665149,
                    "p99": 55.665149,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.082859,
                    "min": 34.113164,
                    "p50": 35.636365999999995,
                    "p95": 48.082859,
                    "p99": 48.082859,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 55.546566999999996,
                    "min": 46.740348,
                    "p50": 49.601656999999996,
                    "p95": 55.546566999999996,
                    "p99": 55.546566999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 65.217021,
                    "min": 56.417638999999994,
                    "p50": 59.488744,
                    "p95": 65.217021,
                    "p99": 65.217021,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 115.553304,
                    "min": 107.33384,
                    "p50": 110.922376,
                    "p95": 115.553304,
                    "p99": 115.553304,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 71.58443799999999,
                    "min": 54.5096,
                    "p50": 63.672051999999994,
                    "p95": 71.58443799999999,
                    "p99": 71.58443799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 47.720890999999995,
                    "min": 34.422686999999996,
                    "p50": 43.252967,
                    "p95": 47.720890999999995,
                    "p99": 47.720890999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 207.473837,
                    "min": 168.254344,
                    "p50": 179.53748299999998,
                    "p95": 207.473837,
                    "p99": 207.473837,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 55.615933,
                    "min": 46.590771,
                    "p50": 50.574037,
                    "p95": 55.615933,
                    "p99": 55.615933,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 50.32617,
                    "min": 43.74088,
                    "p50": 45.168341999999996,
                    "p95": 50.32617,
                    "p99": 50.32617,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 68.694919,
                    "min": 56.048628,
                    "p50": 63.775866,
                    "p95": 68.694919,
                    "p99": 68.694919,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 86.248086,
                    "min": 50.974118,
                    "p50": 57.282753,
                    "p95": 86.248086,
                    "p99": 86.248086,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 74.200737,
                    "min": 68.03081999999999,
                    "p50": 72.396784,
                    "p95": 74.200737,
                    "p99": 74.200737,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 337.67038299999996,
                    "min": 253.36871599999998,
                    "p50": 307.957974,
                    "p95": 337.67038299999996,
                    "p99": 337.67038299999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.405929,
                    "min": 67.471856,
                    "p50": 77.255301,
                    "p95": 93.405929,
                    "p99": 93.405929,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 169.43979,
                    "min": 125.92451899999999,
                    "p50": 146.311789,
                    "p95": 169.43979,
                    "p99": 169.43979,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 95.052061,
                    "min": 75.336105,
                    "p50": 81.52868199999999,
                    "p95": 95.052061,
                    "p99": 95.052061,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 59.990575,
                    "min": 52.208655,
                    "p50": 57.920826999999996,
                    "p95": 59.990575,
                    "p99": 59.990575,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 80.407935,
                    "min": 51.886433,
                    "p50": 53.860647,
                    "p95": 80.407935,
                    "p99": 80.407935,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 30.176544999999997,
                    "min": 26.729347999999998,
                    "p50": 27.236293999999997,
                    "p95": 30.176544999999997,
                    "p99": 30.176544999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.46031,
                    "min": 26.574279999999998,
                    "p50": 26.913722,
                    "p95": 27.46031,
                    "p99": 27.46031,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 42.551212,
                    "min": 26.721391,
                    "p50": 29.098812,
                    "p95": 42.551212,
                    "p99": 42.551212,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.850654,
                    "min": 22.020198,
                    "p50": 27.040779999999998,
                    "p95": 29.850654,
                    "p99": 29.850654,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.442117999999997,
                    "min": 24.661904999999997,
                    "p50": 27.020642,
                    "p95": 27.442117999999997,
                    "p99": 27.442117999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.469686,
                    "min": 21.816755999999998,
                    "p50": 27.165564999999997,
                    "p95": 27.469686,
                    "p99": 27.469686,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 32.385993,
                    "min": 26.747705999999997,
                    "p50": 27.217662999999998,
                    "p95": 32.385993,
                    "p99": 32.385993,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 32.128288,
                    "min": 25.25665,
                    "p50": 27.088088,
                    "p95": 32.128288,
                    "p99": 32.128288,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 74.0611,
                    "min": 45.14266,
                    "p50": 48.267351,
                    "p95": 74.0611,
                    "p99": 74.0611,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 31.647015,
                    "min": 27.113728,
                    "p50": 27.682039999999997,
                    "p95": 31.647015,
                    "p99": 31.647015,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 60.995571999999996,
                    "min": 38.314572999999996,
                    "p50": 40.340533,
                    "p95": 60.995571999999996,
                    "p99": 60.995571999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 38.858405,
                    "min": 30.098874,
                    "p50": 32.117238,
                    "p95": 38.858405,
                    "p99": 38.858405,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 37.381826,
                    "min": 28.873337,
                    "p50": 31.249457,
                    "p95": 37.381826,
                    "p99": 37.381826,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.335714,
                    "min": 22.391118,
                    "p50": 26.932111,
                    "p95": 27.335714,
                    "p99": 27.335714,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 116.221077,
                    "min": 85.519796,
                    "p50": 93.429858,
                    "p95": 116.221077,
                    "p99": 116.221077,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 98.557777,
                    "min": 59.423179999999995,
                    "p50": 63.279638999999996,
                    "p95": 98.557777,
                    "p99": 98.557777,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 29.876182,
                    "min": 26.938283,
                    "p50": 28.434552999999998,
                    "p95": 29.876182,
                    "p99": 29.876182,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 41.065684,
                    "min": 26.613279,
                    "p50": 27.420921,
                    "p95": 41.065684,
                    "p99": 41.065684,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 331.56602699999996,
                    "min": 312.697923,
                    "p50": 325.075691,
                    "p95": 331.56602699999996,
                    "p99": 331.56602699999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.54115099999999,
                    "min": 108.991411,
                    "p50": 132.515611,
                    "p95": 156.54115099999999,
                    "p99": 156.54115099999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3009.063818,
                    "min": 2961.637933,
                    "p50": 2985.148436,
                    "p95": 3009.063818,
                    "p99": 3009.063818,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 668.471594,
                    "min": 610.218036,
                    "p50": 630.556059,
                    "p95": 668.471594,
                    "p99": 668.471594,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 257.771544,
                    "min": 223.243166,
                    "p50": 237.825369,
                    "p95": 257.771544,
                    "p99": 257.771544,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 172.58905199999998,
                    "min": 140.019701,
                    "p50": 148.974089,
                    "p95": 172.58905199999998,
                    "p99": 172.58905199999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 226.99201,
                    "min": 195.190756,
                    "p50": 200.411713,
                    "p95": 226.99201,
                    "p99": 226.99201,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 939.493695,
                    "min": 907.981043,
                    "p50": 920.349084,
                    "p95": 939.493695,
                    "p99": 939.493695,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 432.512791,
                    "min": 406.301268,
                    "p50": 415.206265,
                    "p95": 432.512791,
                    "p99": 432.512791,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 371.200533,
                    "min": 346.10747399999997,
                    "p50": 354.735759,
                    "p95": 371.200533,
                    "p99": 371.200533,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1229.345124,
                    "min": 1202.874226,
                    "p50": 1209.55721,
                    "p95": 1229.345124,
                    "p99": 1229.345124,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1530.69579,
                    "min": 1485.0789399999999,
                    "p50": 1506.479754,
                    "p95": 1530.69579,
                    "p99": 1530.69579,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 458.704541,
                    "min": 426.989936,
                    "p50": 439.60396,
                    "p95": 458.704541,
                    "p99": 458.704541,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 189.09952099999998,
                    "min": 162.657167,
                    "p50": 176.3018,
                    "p95": 189.09952099999998,
                    "p99": 189.09952099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 571.287634,
                    "min": 530.696922,
                    "p50": 557.631249,
                    "p95": 571.287634,
                    "p99": 571.287634,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 322.70271399999996,
                    "min": 289.471768,
                    "p50": 291.25840999999997,
                    "p95": 322.70271399999996,
                    "p99": 322.70271399999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 421.81154799999996,
                    "min": 370.142021,
                    "p50": 390.385061,
                    "p95": 421.81154799999996,
                    "p99": 421.81154799999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 502.48347099999995,
                    "min": 464.04247899999996,
                    "p50": 486.43325699999997,
                    "p95": 502.48347099999995,
                    "p99": 502.48347099999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 290.504378,
                    "min": 255.051862,
                    "p50": 260.27094999999997,
                    "p95": 290.504378,
                    "p99": 290.504378,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1940.5097569999998,
                    "min": 1856.106069,
                    "p50": 1883.5071269999999,
                    "p95": 1940.5097569999998,
                    "p99": 1940.5097569999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 299.648035,
                    "min": 268.08894499999997,
                    "p50": 275.546649,
                    "p95": 299.648035,
                    "p99": 299.648035,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 602.459356,
                    "min": 566.325412,
                    "p50": 584.0346109999999,
                    "p95": 602.459356,
                    "p99": 602.459356,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 926.243127,
                    "min": 874.737616,
                    "p50": 882.313724,
                    "p95": 926.243127,
                    "p99": 926.243127,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 356.553479,
                    "min": 320.806537,
                    "p50": 330.542919,
                    "p95": 356.553479,
                    "p99": 356.553479,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 987.512881,
                    "min": 929.941202,
                    "p50": 955.6208439999999,
                    "p95": 987.512881,
                    "p99": 987.512881,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 550.496489,
                    "min": 510.128272,
                    "p50": 518.318356,
                    "p95": 550.496489,
                    "p99": 550.496489,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1127.06992,
                    "min": 1094.505579,
                    "p50": 1105.326619,
                    "p95": 1127.06992,
                    "p99": 1127.06992,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 409.449815,
                    "min": 374.909629,
                    "p50": 386.65043499999996,
                    "p95": 409.449815,
                    "p99": 409.449815,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.1512409999999,
                    "min": 628.437918,
                    "p50": 647.17725,
                    "p95": 673.1512409999999,
                    "p99": 673.1512409999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2517.091126,
                    "min": 2454.399897,
                    "p50": 2494.9138669999998,
                    "p95": 2517.091126,
                    "p99": 2517.091126,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 707.806975,
                    "min": 680.626927,
                    "p50": 699.322244,
                    "p95": 707.806975,
                    "p99": 707.806975,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 488.449073,
                    "min": 455.30265099999997,
                    "p50": 472.235375,
                    "p95": 488.449073,
                    "p99": 488.449073,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 794.34685,
                    "min": 762.355611,
                    "p50": 779.000635,
                    "p95": 794.34685,
                    "p99": 794.34685,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 233.098185,
                    "min": 201.518442,
                    "p50": 211.862685,
                    "p95": 233.098185,
                    "p99": 233.098185,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 864.173597,
                    "min": 815.133208,
                    "p50": 841.3277459999999,
                    "p95": 864.173597,
                    "p99": 864.173597,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1272.8970359999998,
                    "min": 1229.7716779999998,
                    "p50": 1256.394286,
                    "p95": 1272.8970359999998,
                    "p99": 1272.8970359999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3232.807311,
                    "min": 3073.025437,
                    "p50": 3127.046963,
                    "p95": 3232.807311,
                    "p99": 3232.807311,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 291.386866,
                    "min": 271.93616499999996,
                    "p50": 284.48436499999997,
                    "p95": 291.386866,
                    "p99": 291.386866,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 534.979073,
                    "min": 516.507383,
                    "p50": 524.755871,
                    "p95": 534.979073,
                    "p99": 534.979073,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 474.96961,
                    "min": 433.984067,
                    "p50": 459.366996,
                    "p95": 474.96961,
                    "p99": 474.96961,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 886.877033,
                    "min": 852.54644,
                    "p50": 866.5827079999999,
                    "p95": 886.877033,
                    "p99": 886.877033,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 793.4966549999999,
                    "min": 770.136933,
                    "p50": 777.629371,
                    "p95": 793.4966549999999,
                    "p99": 793.4966549999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1054.8565099999998,
                    "min": 1024.0916499999998,
                    "p50": 1030.27901,
                    "p95": 1054.8565099999998,
                    "p99": 1054.8565099999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1307.483853,
                    "min": 1266.3809529999999,
                    "p50": 1281.9167049999999,
                    "p95": 1307.483853,
                    "p99": 1307.483853,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1126.831649,
                    "min": 1108.769893,
                    "p50": 1113.873377,
                    "p95": 1126.831649,
                    "p99": 1126.831649,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 972.82935,
                    "min": 936.250901,
                    "p50": 952.731965,
                    "p95": 972.82935,
                    "p99": 972.82935,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1747.863732,
                    "min": 1672.7546539999998,
                    "p50": 1691.993548,
                    "p95": 1747.863732,
                    "p99": 1747.863732,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 624.319133,
                    "min": 601.2760559999999,
                    "p50": 616.679218,
                    "p95": 624.319133,
                    "p99": 624.319133,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 387.579388,
                    "min": 350.84810999999996,
                    "p50": 360.729478,
                    "p95": 387.579388,
                    "p99": 387.579388,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1533.092156,
                    "min": 1461.966263,
                    "p50": 1483.728727,
                    "p95": 1533.092156,
                    "p99": 1533.092156,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 712.195293,
                    "min": 682.153136,
                    "p50": 691.835601,
                    "p95": 712.195293,
                    "p99": 712.195293,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1222.9502009999999,
                    "min": 1183.036,
                    "p50": 1198.619849,
                    "p95": 1222.9502009999999,
                    "p99": 1222.9502009999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.650912,
                    "min": 287.428504,
                    "p50": 295.910478,
                    "p95": 313.650912,
                    "p99": 313.650912,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 639.345569,
                    "min": 599.815896,
                    "p50": 617.325286,
                    "p95": 639.345569,
                    "p99": 639.345569,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 868.057607,
                    "min": 844.4136179999999,
                    "p50": 855.749741,
                    "p95": 868.057607,
                    "p99": 868.057607,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1709.4659709999999,
                    "min": 1677.423488,
                    "p50": 1699.973566,
                    "p95": 1709.4659709999999,
                    "p99": 1709.4659709999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 509.266324,
                    "min": 472.56190399999997,
                    "p50": 482.8907,
                    "p95": 509.266324,
                    "p99": 509.266324,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.913228,
                    "min": 226.619791,
                    "p50": 237.55285999999998,
                    "p95": 256.913228,
                    "p99": 256.913228,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.791776,
                    "min": 183.37936399999998,
                    "p50": 193.592414,
                    "p95": 213.791776,
                    "p99": 213.791776,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 548.510123,
                    "min": 517.578302,
                    "p50": 531.5354609999999,
                    "p95": 548.510123,
                    "p99": 548.510123,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1304.250943,
                    "min": 1264.716659,
                    "p50": 1288.943921,
                    "p95": 1304.250943,
                    "p99": 1304.250943,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 790.76405,
                    "min": 742.9049289999999,
                    "p50": 760.9189299999999,
                    "p95": 790.76405,
                    "p99": 790.76405,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 661.429775,
                    "min": 646.008197,
                    "p50": 653.31661,
                    "p95": 661.429775,
                    "p99": 661.429775,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 374.12528,
                    "min": 353.37631,
                    "p50": 365.784028,
                    "p95": 374.12528,
                    "p99": 374.12528,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.675188,
                    "min": 435.00889,
                    "p50": 450.44744499999996,
                    "p95": 478.675188,
                    "p99": 478.675188,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 338.139978,
                    "min": 308.20965,
                    "p50": 320.149828,
                    "p95": 338.139978,
                    "p99": 338.139978,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.837513,
                    "min": 141.494903,
                    "p50": 150.235016,
                    "p95": 156.837513,
                    "p99": 156.837513,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 579.351552,
                    "min": 562.0023219999999,
                    "p50": 569.8237429999999,
                    "p95": 579.351552,
                    "p99": 579.351552,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.096249,
                    "min": 398.958188,
                    "p50": 405.49001899999996,
                    "p95": 435.096249,
                    "p99": 435.096249,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 632.537927,
                    "min": 614.942202,
                    "p50": 620.5283969999999,
                    "p95": 632.537927,
                    "p99": 632.537927,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2008.7521969999998,
                    "min": 1975.4706529999999,
                    "p50": 1996.0481459999999,
                    "p95": 2008.7521969999998,
                    "p99": 2008.7521969999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4042.738648,
                    "min": 3968.177437,
                    "p50": 4013.3717819999997,
                    "p95": 4042.738648,
                    "p99": 4042.738648,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2217.687391,
                    "min": 2184.72732,
                    "p50": 2213.340731,
                    "p95": 2217.687391,
                    "p99": 2217.687391,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5921.580403,
                    "min": 5826.143292,
                    "p50": 5875.861884999999,
                    "p95": 5921.580403,
                    "p99": 5921.580403,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1225.355891,
                    "min": 1207.0661559999999,
                    "p50": 1219.234048,
                    "p95": 1225.355891,
                    "p99": 1225.355891,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1842.068233,
                    "min": 1801.394979,
                    "p50": 1826.3764079999999,
                    "p95": 1842.068233,
                    "p99": 1842.068233,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7857.608337,
                    "min": 7756.066035,
                    "p50": 7797.229783999999,
                    "p95": 7857.608337,
                    "p99": 7857.608337,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1051.677442,
                    "min": 1030.031735,
                    "p50": 1041.645378,
                    "p95": 1051.677442,
                    "p99": 1051.677442,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2673.523388,
                    "min": 2603.9623739999997,
                    "p50": 2654.351905,
                    "p95": 2673.523388,
                    "p99": 2673.523388,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1416.675626,
                    "min": 1387.90409,
                    "p50": 1398.212538,
                    "p95": 1416.675626,
                    "p99": 1416.675626,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 849.094578,
                    "min": 806.527554,
                    "p50": 810.371821,
                    "p95": 849.094578,
                    "p99": 849.094578,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3047.9881729999997,
                    "min": 2995.416385,
                    "p50": 3027.222363,
                    "p95": 3047.9881729999997,
                    "p99": 3047.9881729999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2879.168792,
                    "min": 2813.7881869999997,
                    "p50": 2840.2227519999997,
                    "p95": 2879.168792,
                    "p99": 2879.168792,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3514.167809,
                    "min": 3444.229109,
                    "p50": 3463.1036409999997,
                    "p95": 3514.167809,
                    "p99": 3514.167809,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1627.3622779999998,
                    "min": 1579.5118,
                    "p50": 1595.637996,
                    "p95": 1627.3622779999998,
                    "p99": 1627.3622779999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2401.1538929999997,
                    "min": 2375.117302,
                    "p50": 2395.819019,
                    "p95": 2401.1538929999997,
                    "p99": 2401.1538929999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 738.506234,
                    "min": 696.222527,
                    "p50": 706.401671,
                    "p95": 738.506234,
                    "p99": 738.506234,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 557.239162,
                    "min": 501.802305,
                    "p50": 525.461159,
                    "p95": 557.239162,
                    "p99": 557.239162,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1046.623417,
                    "min": 992.428686,
                    "p50": 1005.197907,
                    "p95": 1046.623417,
                    "p99": 1046.623417,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1511.6870749999998,
                    "min": 1468.556709,
                    "p50": 1490.310064,
                    "p95": 1511.6870749999998,
                    "p99": 1511.6870749999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4916.742884,
                    "min": 4843.324195,
                    "p50": 4870.380663999999,
                    "p95": 4916.742884,
                    "p99": 4916.742884,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2010.545171,
                    "min": 1951.333056,
                    "p50": 1977.130993,
                    "p95": 2010.545171,
                    "p99": 2010.545171,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 587.878467,
                    "min": 553.4738159999999,
                    "p50": 568.644287,
                    "p95": 587.878467,
                    "p99": 587.878467,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.615466,
                    "min": 164.41149099999998,
                    "p50": 174.63744499999999,
                    "p95": 210.615466,
                    "p99": 210.615466,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2476.655297,
                    "min": 2427.590269,
                    "p50": 2469.2665159999997,
                    "p95": 2476.655297,
                    "p99": 2476.655297,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 373.161988,
                    "min": 358.794692,
                    "p50": 363.59271,
                    "p95": 373.161988,
                    "p99": 373.161988,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 430.762112,
                    "min": 406.290305,
                    "p50": 415.583469,
                    "p95": 430.762112,
                    "p99": 430.762112,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 480.773642,
                    "min": 451.25841099999997,
                    "p50": 469.46397099999996,
                    "p95": 480.773642,
                    "p99": 480.773642,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 900.570758,
                    "min": 870.725959,
                    "p50": 880.179632,
                    "p95": 900.570758,
                    "p99": 900.570758,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 284.037948,
                    "min": 263.886216,
                    "p50": 271.97502,
                    "p95": 284.037948,
                    "p99": 284.037948,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 336.395289,
                    "min": 309.79513099999997,
                    "p50": 324.311505,
                    "p95": 336.395289,
                    "p99": 336.395289,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 779.67193,
                    "min": 741.7565099999999,
                    "p50": 755.22641,
                    "p95": 779.67193,
                    "p99": 779.67193,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 622.5695079999999,
                    "min": 603.33877,
                    "p50": 612.5523959999999,
                    "p95": 622.5695079999999,
                    "p99": 622.5695079999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 276.77016,
                    "min": 213.89065499999998,
                    "p50": 222.285114,
                    "p95": 276.77016,
                    "p99": 276.77016,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 675.758036,
                    "min": 649.430699,
                    "p50": 660.3185659999999,
                    "p95": 675.758036,
                    "p99": 675.758036,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2095.011426,
                    "min": 2026.670265,
                    "p50": 2054.0675699999997,
                    "p95": 2095.011426,
                    "p99": 2095.011426,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 854.983071,
                    "min": 824.374029,
                    "p50": 842.34241,
                    "p95": 854.983071,
                    "p99": 854.983071,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 614.292276,
                    "min": 592.796076,
                    "p50": 602.8267609999999,
                    "p95": 614.292276,
                    "p99": 614.292276,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1446.3515539999999,
                    "min": 1398.735422,
                    "p50": 1407.9620639999998,
                    "p95": 1446.3515539999999,
                    "p99": 1446.3515539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 994.5781639999999,
                    "min": 938.795384,
                    "p50": 955.376508,
                    "p95": 994.5781639999999,
                    "p99": 994.5781639999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4695.654944,
                    "min": 4624.761348999999,
                    "p50": 4666.835324,
                    "p95": 4695.654944,
                    "p99": 4695.654944,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1316.158524,
                    "min": 1289.104764,
                    "p50": 1311.899606,
                    "p95": 1316.158524,
                    "p99": 1316.158524,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 760.7216599999999,
                    "min": 723.1211059999999,
                    "p50": 726.331163,
                    "p95": 760.7216599999999,
                    "p99": 760.7216599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1579.1023149999999,
                    "min": 1527.925067,
                    "p50": 1544.723743,
                    "p95": 1579.1023149999999,
                    "p99": 1579.1023149999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3546.5502669999996,
                    "min": 3469.948989,
                    "p50": 3492.5131109999998,
                    "p95": 3546.5502669999996,
                    "p99": 3546.5502669999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1787.9466209999998,
                    "min": 1758.192991,
                    "p50": 1763.076268,
                    "p95": 1787.9466209999998,
                    "p99": 1787.9466209999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2383.329823,
                    "min": 2314.769308,
                    "p50": 2350.629302,
                    "p95": 2383.329823,
                    "p99": 2383.329823,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 388.909317,
                    "min": 364.790774,
                    "p50": 372.31312499999996,
                    "p95": 388.909317,
                    "p99": 388.909317,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1663.86248,
                    "min": 1640.650343,
                    "p50": 1651.6408589999999,
                    "p95": 1663.86248,
                    "p99": 1663.86248,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 520.519243,
                    "min": 482.497688,
                    "p50": 492.39324999999997,
                    "p95": 520.519243,
                    "p99": 520.519243,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1215.7663459999999,
                    "min": 1176.018846,
                    "p50": 1188.650729,
                    "p95": 1215.7663459999999,
                    "p99": 1215.7663459999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1087.506193,
                    "min": 1059.125595,
                    "p50": 1080.044042,
                    "p95": 1087.506193,
                    "p99": 1087.506193,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1774.0774219999998,
                    "min": 1739.452247,
                    "p50": 1766.090593,
                    "p95": 1774.0774219999998,
                    "p99": 1774.0774219999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 511.421678,
                    "min": 479.779159,
                    "p50": 500.79546799999997,
                    "p95": 511.421678,
                    "p99": 511.421678,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1085.4473329999998,
                    "min": 1058.1415259999999,
                    "p50": 1069.508455,
                    "p95": 1085.4473329999998,
                    "p99": 1085.4473329999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1583.756068,
                    "min": 1527.793271,
                    "p50": 1544.75773,
                    "p95": 1583.756068,
                    "p99": 1583.756068,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1198.1656369999998,
                    "min": 1180.36444,
                    "p50": 1183.959308,
                    "p95": 1198.1656369999998,
                    "p99": 1198.1656369999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1344.135227,
                    "min": 1298.570616,
                    "p50": 1312.044774,
                    "p95": 1344.135227,
                    "p99": 1344.135227,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2365.516618,
                    "min": 2326.652975,
                    "p50": 2354.156741,
                    "p95": 2365.516618,
                    "p99": 2365.516618,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3535.674827,
                    "min": 3471.536284,
                    "p50": 3510.518717,
                    "p95": 3535.674827,
                    "p99": 3535.674827,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1435.915315,
                    "min": 1398.680466,
                    "p50": 1420.324648,
                    "p95": 1435.915315,
                    "p99": 1435.915315,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 625.856904,
                    "min": 597.531391,
                    "p50": 616.908946,
                    "p95": 625.856904,
                    "p99": 625.856904,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 392.09082,
                    "min": 366.729947,
                    "p50": 376.036496,
                    "p95": 392.09082,
                    "p99": 392.09082,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 736.677591,
                    "min": 714.777329,
                    "p50": 722.3539969999999,
                    "p95": 736.677591,
                    "p99": 736.677591,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2093.635794,
                    "min": 2040.994178,
                    "p50": 2064.066867,
                    "p95": 2093.635794,
                    "p99": 2093.635794,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 855.6176379999999,
                    "min": 835.1889199999999,
                    "p50": 847.409183,
                    "p95": 855.6176379999999,
                    "p99": 855.6176379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1651.550835,
                    "min": 1637.571976,
                    "p50": 1647.426601,
                    "p95": 1651.550835,
                    "p99": 1651.550835,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 978.7521409999999,
                    "min": 947.567108,
                    "p50": 958.738043,
                    "p95": 978.7521409999999,
                    "p99": 978.7521409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10926.432834,
                    "min": 10754.786774999999,
                    "p50": 10816.764823,
                    "p95": 10926.432834,
                    "p99": 10926.432834,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1574.715542,
                    "min": 1515.1509529999998,
                    "p50": 1541.696773,
                    "p95": 1574.715542,
                    "p99": 1574.715542,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5477.378240999999,
                    "min": 5405.421278,
                    "p50": 5434.793893,
                    "p95": 5477.378240999999,
                    "p99": 5477.378240999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 791.5277699999999,
                    "min": 771.06574,
                    "p50": 785.784142,
                    "p95": 791.5277699999999,
                    "p99": 791.5277699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 487.65135499999997,
                    "min": 451.34732299999996,
                    "p50": 474.147566,
                    "p95": 487.65135499999997,
                    "p99": 487.65135499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1335.4024889999998,
                    "min": 1322.0766449999999,
                    "p50": 1331.8764119999998,
                    "p95": 1335.4024889999998,
                    "p99": 1335.4024889999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4364.7717219999995,
                    "min": 4302.531769,
                    "p50": 4356.42477,
                    "p95": 4364.7717219999995,
                    "p99": 4364.7717219999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1675.077889,
                    "min": 1632.2831689999998,
                    "p50": 1654.2640709999998,
                    "p95": 1675.077889,
                    "p99": 1675.077889,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1453.794979,
                    "min": 1415.508079,
                    "p50": 1438.6985789999999,
                    "p95": 1453.794979,
                    "p99": 1453.794979,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1939.3796989999998,
                    "min": 1903.842508,
                    "p50": 1925.016606,
                    "p95": 1939.3796989999998,
                    "p99": 1939.3796989999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 587.190337,
                    "min": 555.778467,
                    "p50": 572.432375,
                    "p95": 587.190337,
                    "p99": 587.190337,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1235.7578509999998,
                    "min": 1203.518053,
                    "p50": 1225.982104,
                    "p95": 1235.7578509999998,
                    "p99": 1235.7578509999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 358.712872,
                    "min": 339.66455099999996,
                    "p50": 349.59169199999997,
                    "p95": 358.712872,
                    "p99": 358.712872,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 908.550793,
                    "min": 883.583323,
                    "p50": 901.108064,
                    "p95": 908.550793,
                    "p99": 908.550793,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 690.501036,
                    "min": 663.777081,
                    "p50": 673.295668,
                    "p95": 690.501036,
                    "p99": 690.501036,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1034.758587,
                    "min": 991.525671,
                    "p50": 1010.264272,
                    "p95": 1034.758587,
                    "p99": 1034.758587,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1165.572926,
                    "min": 1090.3731269999998,
                    "p50": 1122.723123,
                    "p95": 1165.572926,
                    "p99": 1165.572926,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3298.8067539999997,
                    "min": 3245.1755399999997,
                    "p50": 3275.775646,
                    "p95": 3298.8067539999997,
                    "p99": 3298.8067539999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2208.488469,
                    "min": 2179.285108,
                    "p50": 2195.983108,
                    "p95": 2208.488469,
                    "p99": 2208.488469,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 337.567339,
                    "min": 301.3564,
                    "p50": 308.353274,
                    "p95": 337.567339,
                    "p99": 337.567339,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1941.920786,
                    "min": 1907.2071999999998,
                    "p50": 1927.4222829999999,
                    "p95": 1941.920786,
                    "p99": 1941.920786,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1470.3845689999998,
                    "min": 1437.831304,
                    "p50": 1453.8108359999999,
                    "p95": 1470.3845689999998,
                    "p99": 1470.3845689999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 984.133469,
                    "min": 952.422708,
                    "p50": 980.9890359999999,
                    "p95": 984.133469,
                    "p99": 984.133469,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 513.527411,
                    "min": 488.596275,
                    "p50": 497.007859,
                    "p95": 513.527411,
                    "p99": 513.527411,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4809.923873,
                    "min": 4719.402556,
                    "p50": 4756.580817,
                    "p95": 4809.923873,
                    "p99": 4809.923873,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2424.386324,
                    "min": 2373.679607,
                    "p50": 2386.8288869999997,
                    "p95": 2424.386324,
                    "p99": 2424.386324,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 621.4289229999999,
                    "min": 586.1400659999999,
                    "p50": 594.649622,
                    "p95": 621.4289229999999,
                    "p99": 621.4289229999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 704.6472709999999,
                    "min": 678.298711,
                    "p50": 690.9129849999999,
                    "p95": 704.6472709999999,
                    "p99": 704.6472709999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 420.139103,
                    "min": 396.34025599999995,
                    "p50": 406.084208,
                    "p95": 420.139103,
                    "p99": 420.139103,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 481.902398,
                    "min": 448.173255,
                    "p50": 455.78968599999996,
                    "p95": 481.902398,
                    "p99": 481.902398,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 219.27139799999998,
                    "min": 206.042071,
                    "p50": 209.155195,
                    "p95": 219.27139799999998,
                    "p99": 219.27139799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 869.299345,
                    "min": 840.664996,
                    "p50": 854.559406,
                    "p95": 869.299345,
                    "p99": 869.299345,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 563.0280779999999,
                    "min": 537.708411,
                    "p50": 552.158239,
                    "p95": 563.0280779999999,
                    "p99": 563.0280779999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 755.945978,
                    "min": 731.929616,
                    "p50": 738.9609929999999,
                    "p95": 755.945978,
                    "p99": 755.945978,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 376.38827399999997,
                    "min": 348.85006,
                    "p50": 361.35801,
                    "p95": 376.38827399999997,
                    "p99": 376.38827399999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 666.129543,
                    "min": 627.57146,
                    "p50": 649.9354619999999,
                    "p95": 666.129543,
                    "p99": 666.129543,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 279.409807,
                    "min": 255.254699,
                    "p50": 262.414498,
                    "p95": 279.409807,
                    "p99": 279.409807,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 190.73507999999998,
                    "min": 159.289054,
                    "p50": 173.957675,
                    "p95": 190.73507999999998,
                    "p99": 190.73507999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1958.500975,
                    "min": 1902.5338949999998,
                    "p50": 1924.193026,
                    "p95": 1958.500975,
                    "p99": 1958.500975,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 923.6356609999999,
                    "min": 884.1647529999999,
                    "p50": 894.472043,
                    "p95": 923.6356609999999,
                    "p99": 923.6356609999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2217.9508,
                    "min": 2172.155542,
                    "p50": 2190.326367,
                    "p95": 2217.9508,
                    "p99": 2217.9508,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 789.051872,
                    "min": 770.506585,
                    "p50": 781.5060669999999,
                    "p95": 789.051872,
                    "p99": 789.051872,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 701.745743,
                    "min": 666.53636,
                    "p50": 681.152201,
                    "p95": 701.745743,
                    "p99": 701.745743,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 474.69716999999997,
                    "min": 451.287732,
                    "p50": 462.765184,
                    "p95": 474.69716999999997,
                    "p99": 474.69716999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1586.853646,
                    "min": 1539.319925,
                    "p50": 1543.135937,
                    "p95": 1586.853646,
                    "p99": 1586.853646,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1241.432181,
                    "min": 1202.390484,
                    "p50": 1215.265262,
                    "p95": 1241.432181,
                    "p99": 1241.432181,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3294.25728,
                    "min": 3226.479214,
                    "p50": 3273.377426,
                    "p95": 3294.25728,
                    "p99": 3294.25728,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1034.801179,
                    "min": 991.708886,
                    "p50": 1017.378257,
                    "p95": 1034.801179,
                    "p99": 1034.801179,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10930.388012,
                    "min": 10765.649961,
                    "p50": 10863.088942999999,
                    "p95": 10930.388012,
                    "p99": 10930.388012,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 581.685714,
                    "min": 561.953524,
                    "p50": 573.893389,
                    "p95": 581.685714,
                    "p99": 581.685714,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1457.428148,
                    "min": 1416.495216,
                    "p50": 1426.461496,
                    "p95": 1457.428148,
                    "p99": 1457.428148,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1337.746297,
                    "min": 1321.7204239999999,
                    "p50": 1328.102874,
                    "p95": 1337.746297,
                    "p99": 1337.746297,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4362.179279,
                    "min": 4311.2624989999995,
                    "p50": 4346.042692,
                    "p95": 4362.179279,
                    "p99": 4362.179279,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 368.218071,
                    "min": 339.285842,
                    "p50": 351.848867,
                    "p95": 368.218071,
                    "p99": 368.218071,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1668.911249,
                    "min": 1634.095981,
                    "p50": 1652.306566,
                    "p95": 1668.911249,
                    "p99": 1668.911249,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1124.684207,
                    "min": 1094.62087,
                    "p50": 1113.49983,
                    "p95": 1124.684207,
                    "p99": 1124.684207,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5477.250424,
                    "min": 5372.0221169999995,
                    "p50": 5438.667187999999,
                    "p95": 5477.250424,
                    "p99": 5477.250424,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 668.3832649999999,
                    "min": 644.7167049999999,
                    "p50": 655.711882,
                    "p95": 668.3832649999999,
                    "p99": 668.3832649999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 590.607097,
                    "min": 550.1054379999999,
                    "p50": 563.7434969999999,
                    "p95": 590.607097,
                    "p99": 590.607097,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 857.430131,
                    "min": 820.990182,
                    "p50": 844.428869,
                    "p95": 857.430131,
                    "p99": 857.430131,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 329.923349,
                    "min": 284.59243399999997,
                    "p50": 293.016819,
                    "p95": 329.923349,
                    "p99": 329.923349,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 409.967221,
                    "min": 372.18913,
                    "p50": 380.67244999999997,
                    "p95": 409.967221,
                    "p99": 409.967221,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 768.8716999999999,
                    "min": 733.593834,
                    "p50": 747.732498,
                    "p95": 768.8716999999999,
                    "p99": 768.8716999999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 483.424563,
                    "min": 465.536944,
                    "p50": 469.83356,
                    "p95": 483.424563,
                    "p99": 483.424563,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 919.2360789999999,
                    "min": 902.04775,
                    "p50": 909.0032659999999,
                    "p95": 919.2360789999999,
                    "p99": 919.2360789999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 299.504745,
                    "min": 282.432287,
                    "p50": 292.465729,
                    "p95": 299.504745,
                    "p99": 299.504745,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 752.6817689999999,
                    "min": 712.965419,
                    "p50": 729.629424,
                    "p95": 752.6817689999999,
                    "p99": 752.6817689999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 582.591198,
                    "min": 544.889203,
                    "p50": 567.325369,
                    "p95": 582.591198,
                    "p99": 582.591198,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 650.268335,
                    "min": 628.961188,
                    "p50": 639.9482869999999,
                    "p95": 650.268335,
                    "p99": 650.268335,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 832.171888,
                    "min": 809.154357,
                    "p50": 818.658901,
                    "p95": 832.171888,
                    "p99": 832.171888,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 394.535916,
                    "min": 371.079914,
                    "p50": 390.51564299999995,
                    "p95": 394.535916,
                    "p99": 394.535916,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 473.668699,
                    "min": 452.38910599999997,
                    "p50": 463.565096,
                    "p95": 473.668699,
                    "p99": 473.668699,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 301.44989699999996,
                    "min": 259.970846,
                    "p50": 280.36154799999997,
                    "p95": 301.44989699999996,
                    "p99": 301.44989699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 503.297108,
                    "min": 451.486939,
                    "p50": 461.676916,
                    "p95": 503.297108,
                    "p99": 503.297108,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 633.629876,
                    "min": 579.3671509999999,
                    "p50": 590.257812,
                    "p95": 633.629876,
                    "p99": 633.629876,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 424.23661799999996,
                    "min": 391.43015199999996,
                    "p50": 395.816396,
                    "p95": 424.23661799999996,
                    "p99": 424.23661799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 799.259388,
                    "min": 761.694973,
                    "p50": 776.4597259999999,
                    "p95": 799.259388,
                    "p99": 799.259388,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 225.497974,
                    "min": 202.399858,
                    "p50": 212.45635199999998,
                    "p95": 225.497974,
                    "p99": 225.497974,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 664.386318,
                    "min": 627.7467879999999,
                    "p50": 652.497129,
                    "p95": 664.386318,
                    "p99": 664.386318,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 522.85135,
                    "min": 502.240149,
                    "p50": 515.811818,
                    "p95": 522.85135,
                    "p99": 522.85135,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 336.780378,
                    "min": 325.695701,
                    "p50": 332.25746399999997,
                    "p95": 336.780378,
                    "p99": 336.780378,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 742.754247,
                    "min": 697.445086,
                    "p50": 732.698088,
                    "p95": 742.754247,
                    "p99": 742.754247,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 576.327192,
                    "min": 558.121999,
                    "p50": 573.3844409999999,
                    "p95": 576.327192,
                    "p99": 576.327192,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 804.2764149999999,
                    "min": 748.6872189999999,
                    "p50": 756.660348,
                    "p95": 804.2764149999999,
                    "p99": 804.2764149999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.103928,
                    "min": 199.78158499999998,
                    "p50": 205.30373799999998,
                    "p95": 210.103928,
                    "p99": 210.103928,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 393.807612,
                    "min": 376.31224,
                    "p50": 385.77610699999997,
                    "p95": 393.807612,
                    "p99": 393.807612,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 665.782427,
                    "min": 651.080103,
                    "p50": 660.2745199999999,
                    "p95": 665.782427,
                    "p99": 665.782427,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 303.731385,
                    "min": 291.628724,
                    "p50": 298.43107399999997,
                    "p95": 303.731385,
                    "p99": 303.731385,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 519.473184,
                    "min": 467.129851,
                    "p50": 476.394434,
                    "p95": 519.473184,
                    "p99": 519.473184,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 688.3197389999999,
                    "min": 586.789801,
                    "p50": 606.4666579999999,
                    "p95": 688.3197389999999,
                    "p99": 688.3197389999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 364.803813,
                    "min": 304.836972,
                    "p50": 323.39790899999997,
                    "p95": 364.803813,
                    "p99": 364.803813,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 192.123053,
                    "min": 174.878006,
                    "p50": 184.179855,
                    "p95": 192.123053,
                    "p99": 192.123053,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 630.4817429999999,
                    "min": 561.731633,
                    "p50": 586.616229,
                    "p95": 630.4817429999999,
                    "p99": 630.4817429999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 483.333149,
                    "min": 402.256593,
                    "p50": 445.556329,
                    "p95": 483.333149,
                    "p99": 483.333149,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 446.30429599999997,
                    "min": 341.11554,
                    "p50": 358.197674,
                    "p95": 446.30429599999997,
                    "p99": 446.30429599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 566.904622,
                    "min": 509.655064,
                    "p50": 532.5936419999999,
                    "p95": 566.904622,
                    "p99": 566.904622,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 264.665272,
                    "min": 218.94211299999998,
                    "p50": 245.468436,
                    "p95": 264.665272,
                    "p99": 264.665272,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 177.52519999999998,
                    "min": 137.471111,
                    "p50": 155.352456,
                    "p95": 177.52519999999998,
                    "p99": 177.52519999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 832.450616,
                    "min": 759.6638469999999,
                    "p50": 788.9801219999999,
                    "p95": 832.450616,
                    "p99": 832.450616,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 689.242699,
                    "min": 643.799438,
                    "p50": 662.0330759999999,
                    "p95": 689.242699,
                    "p99": 689.242699,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 904.472401,
                    "min": 815.116172,
                    "p50": 881.810664,
                    "p95": 904.472401,
                    "p99": 904.472401,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 438.084521,
                    "min": 384.001983,
                    "p50": 406.134749,
                    "p95": 438.084521,
                    "p99": 438.084521,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 536.046487,
                    "min": 477.08572699999996,
                    "p50": 516.745496,
                    "p95": 536.046487,
                    "p99": 536.046487,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.898644,
                    "min": 267.063395,
                    "p50": 294.850581,
                    "p95": 309.898644,
                    "p99": 309.898644,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 573.820562,
                    "min": 489.498614,
                    "p50": 535.5411799999999,
                    "p95": 573.820562,
                    "p99": 573.820562,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 255.20694699999999,
                    "min": 180.977712,
                    "p50": 221.902166,
                    "p95": 255.20694699999999,
                    "p99": 255.20694699999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 618.7657439999999,
                    "min": 558.575998,
                    "p50": 580.604077,
                    "p95": 618.7657439999999,
                    "p99": 618.7657439999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 438.045079,
                    "min": 376.43602999999996,
                    "p50": 393.85214299999996,
                    "p95": 438.045079,
                    "p99": 438.045079,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.44573499999998,
                    "min": 160.320247,
                    "p50": 177.16711999999998,
                    "p95": 201.44573499999998,
                    "p99": 201.44573499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 261.342512,
                    "min": 227.196967,
                    "p50": 252.77495499999998,
                    "p95": 261.342512,
                    "p99": 261.342512,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 540.5669819999999,
                    "min": 472.142562,
                    "p50": 499.998831,
                    "p95": 540.5669819999999,
                    "p99": 540.5669819999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 617.024563,
                    "min": 533.399241,
                    "p50": 595.597618,
                    "p95": 617.024563,
                    "p99": 617.024563,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 868.412079,
                    "min": 746.637522,
                    "p50": 802.487672,
                    "p95": 868.412079,
                    "p99": 868.412079,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 357.550615,
                    "min": 254.991016,
                    "p50": 284.12924599999997,
                    "p95": 357.550615,
                    "p99": 357.550615,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 727.033587,
                    "min": 661.518841,
                    "p50": 691.526624,
                    "p95": 727.033587,
                    "p99": 727.033587,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 361.493315,
                    "min": 298.605782,
                    "p50": 322.181385,
                    "p95": 361.493315,
                    "p99": 361.493315,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 453.983431,
                    "min": 402.354014,
                    "p50": 438.29043099999996,
                    "p95": 453.983431,
                    "p99": 453.983431,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 448.238139,
                    "min": 345.911158,
                    "p50": 383.71153699999996,
                    "p95": 448.238139,
                    "p99": 448.238139,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 164.731641,
                    "min": 123.63542899999999,
                    "p50": 137.605845,
                    "p95": 164.731641,
                    "p99": 164.731641,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.73011199999996,
                    "min": 204.51811999999998,
                    "p50": 242.20559799999998,
                    "p95": 260.73011199999996,
                    "p99": 260.73011199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 381.71148,
                    "min": 326.890564,
                    "p50": 347.71027599999996,
                    "p95": 381.71148,
                    "p99": 381.71148,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.78615299999996,
                    "min": 299.97040799999996,
                    "p50": 323.63768999999996,
                    "p95": 345.78615299999996,
                    "p99": 345.78615299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 830.244152,
                    "min": 749.82738,
                    "p50": 770.2262089999999,
                    "p95": 830.244152,
                    "p99": 830.244152,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 722.9963799999999,
                    "min": 629.910717,
                    "p50": 651.027145,
                    "p95": 722.9963799999999,
                    "p99": 722.9963799999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.417048,
                    "min": 130.558097,
                    "p50": 141.018055,
                    "p95": 172.417048,
                    "p99": 172.417048,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 538.1326419999999,
                    "min": 471.956937,
                    "p50": 510.58540999999997,
                    "p95": 538.1326419999999,
                    "p99": 538.1326419999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 479.406865,
                    "min": 419.38035099999996,
                    "p50": 437.408409,
                    "p95": 479.406865,
                    "p99": 479.406865,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 233.763823,
                    "min": 173.559732,
                    "p50": 207.566738,
                    "p95": 233.763823,
                    "p99": 233.763823,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 563.62648,
                    "min": 509.91887599999995,
                    "p50": 527.940848,
                    "p95": 563.62648,
                    "p99": 563.62648,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 454.82628,
                    "min": 384.062011,
                    "p50": 409.08932699999997,
                    "p95": 454.82628,
                    "p99": 454.82628,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 921.3306289999999,
                    "min": 826.288335,
                    "p50": 881.999375,
                    "p95": 921.3306289999999,
                    "p99": 921.3306289999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 625.165987,
                    "min": 568.637164,
                    "p50": 615.018094,
                    "p95": 625.165987,
                    "p99": 625.165987,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 281.10423399999996,
                    "min": 248.491517,
                    "p50": 276.350433,
                    "p95": 281.10423399999996,
                    "p99": 281.10423399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 626.304012,
                    "min": 539.878149,
                    "p50": 567.1932439999999,
                    "p95": 626.304012,
                    "p99": 626.304012,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 926.0559099999999,
                    "min": 822.123216,
                    "p50": 887.1733849999999,
                    "p95": 926.0559099999999,
                    "p99": 926.0559099999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.38024199999998,
                    "min": 180.22466599999998,
                    "p50": 190.90012199999998,
                    "p95": 213.38024199999998,
                    "p99": 213.38024199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 419.459477,
                    "min": 383.26917,
                    "p50": 389.427954,
                    "p95": 419.459477,
                    "p99": 419.459477,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 477.769305,
                    "min": 420.51503499999995,
                    "p50": 442.405419,
                    "p95": 477.769305,
                    "p99": 477.769305,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 535.869325,
                    "min": 466.437726,
                    "p50": 505.574734,
                    "p95": 535.869325,
                    "p99": 535.869325,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 812.133213,
                    "min": 739.3778659999999,
                    "p50": 759.021095,
                    "p95": 812.133213,
                    "p99": 812.133213,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 571.672764,
                    "min": 493.293477,
                    "p50": 526.153472,
                    "p95": 571.672764,
                    "p99": 571.672764,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 624.33681,
                    "min": 543.4677439999999,
                    "p50": 597.217895,
                    "p95": 624.33681,
                    "p99": 624.33681,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.209061,
                    "min": 145.700495,
                    "p50": 152.28868599999998,
                    "p95": 173.209061,
                    "p99": 173.209061,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 316.73105499999997,
                    "min": 257.20584099999996,
                    "p50": 298.410731,
                    "p95": 316.73105499999997,
                    "p99": 316.73105499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 282.41380799999996,
                    "min": 217.371774,
                    "p50": 234.330268,
                    "p95": 282.41380799999996,
                    "p99": 282.41380799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 712.003601,
                    "min": 631.9724689999999,
                    "p50": 668.893872,
                    "p95": 712.003601,
                    "p99": 712.003601,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 374.187997,
                    "min": 334.077325,
                    "p50": 352.725054,
                    "p95": 374.187997,
                    "p99": 374.187997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 655.658748,
                    "min": 584.0226779999999,
                    "p50": 631.593183,
                    "p95": 655.658748,
                    "p99": 655.658748,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.13888,
                    "min": 307.427244,
                    "p50": 322.217381,
                    "p95": 341.13888,
                    "p99": 341.13888,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 253.996729,
                    "min": 220.338001,
                    "p50": 232.210803,
                    "p95": 253.996729,
                    "p99": 253.996729,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 104.50958,
                    "min": 65.95439,
                    "p50": 70.288822,
                    "p95": 104.50958,
                    "p99": 104.50958,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1198.76745,
                    "min": 1164.728044,
                    "p50": 1187.4837969999999,
                    "p95": 1198.76745,
                    "p99": 1198.76745,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 293.314084,
                    "min": 247.53186599999998,
                    "p50": 255.30433,
                    "p95": 293.314084,
                    "p99": 293.314084,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 404.61479299999996,
                    "min": 360.740276,
                    "p50": 370.563834,
                    "p95": 404.61479299999996,
                    "p99": 404.61479299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 156.982335,
                    "min": 134.677643,
                    "p50": 149.392412,
                    "p95": 156.982335,
                    "p99": 156.982335,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 515.585915,
                    "min": 480.55823899999996,
                    "p50": 496.77853999999996,
                    "p95": 515.585915,
                    "p99": 515.585915,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 113.42908399999999,
                    "min": 86.88890099999999,
                    "p50": 102.872142,
                    "p95": 113.42908399999999,
                    "p99": 113.42908399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 133.378074,
                    "min": 109.73098999999999,
                    "p50": 125.60142099999999,
                    "p95": 133.378074,
                    "p99": 133.378074,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.198911,
                    "min": 52.36649,
                    "p50": 53.927233,
                    "p95": 83.198911,
                    "p99": 83.198911,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.744292,
                    "min": 127.36535099999999,
                    "p50": 143.61167899999998,
                    "p95": 170.744292,
                    "p99": 170.744292,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.989146,
                    "min": 99.018496,
                    "p50": 115.162441,
                    "p95": 128.989146,
                    "p99": 128.989146,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 162.40182099999998,
                    "min": 141.823375,
                    "p50": 153.888305,
                    "p95": 162.40182099999998,
                    "p99": 162.40182099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 206.14172,
                    "min": 167.755934,
                    "p50": 173.839398,
                    "p95": 206.14172,
                    "p99": 206.14172,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 195.04035,
                    "min": 155.562228,
                    "p50": 175.119586,
                    "p95": 195.04035,
                    "p99": 195.04035,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 624.229802,
                    "min": 593.906169,
                    "p50": 606.155576,
                    "p95": 624.229802,
                    "p99": 624.229802,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.234804,
                    "min": 76.701754,
                    "p50": 80.156756,
                    "p95": 110.234804,
                    "p99": 110.234804,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 225.16501499999998,
                    "min": 177.991954,
                    "p50": 189.241841,
                    "p95": 225.16501499999998,
                    "p99": 225.16501499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 220.78034499999998,
                    "min": 190.291436,
                    "p50": 198.395358,
                    "p95": 220.78034499999998,
                    "p99": 220.78034499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 401.592634,
                    "min": 379.712254,
                    "p50": 397.40734499999996,
                    "p95": 401.592634,
                    "p99": 401.592634,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.271819,
                    "min": 90.60757699999999,
                    "p50": 104.142439,
                    "p95": 106.271819,
                    "p99": 106.271819,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 525.1186359999999,
                    "min": 502.182117,
                    "p50": 509.39435199999997,
                    "p95": 525.1186359999999,
                    "p99": 525.1186359999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 307.209767,
                    "min": 263.393919,
                    "p50": 282.282531,
                    "p95": 307.209767,
                    "p99": 307.209767,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 222.83897499999998,
                    "min": 187.08097899999999,
                    "p50": 193.79592599999998,
                    "p95": 222.83897499999998,
                    "p99": 222.83897499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 224.675639,
                    "min": 199.89789299999998,
                    "p50": 208.871132,
                    "p95": 224.675639,
                    "p99": 224.675639,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 202.59961299999998,
                    "min": 174.43843099999998,
                    "p50": 186.270899,
                    "p95": 202.59961299999998,
                    "p99": 202.59961299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 237.138761,
                    "min": 228.12863399999998,
                    "p50": 231.56795699999998,
                    "p95": 237.138761,
                    "p99": 237.138761,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.043861,
                    "min": 54.853024999999995,
                    "p50": 55.875603,
                    "p95": 57.043861,
                    "p99": 57.043861,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1263.043043,
                    "min": 1220.129727,
                    "p50": 1235.050926,
                    "p95": 1263.043043,
                    "p99": 1263.043043,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.606741,
                    "min": 66.193238,
                    "p50": 72.831791,
                    "p95": 85.606741,
                    "p99": 85.606741,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 126.244722,
                    "min": 78.412229,
                    "p50": 86.797286,
                    "p95": 126.244722,
                    "p99": 126.244722,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 127.11027299999999,
                    "min": 114.537604,
                    "p50": 116.23288199999999,
                    "p95": 127.11027299999999,
                    "p99": 127.11027299999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 210.716041,
                    "min": 167.03507399999998,
                    "p50": 172.299282,
                    "p95": 210.716041,
                    "p99": 210.716041,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.877612,
                    "min": 126.52269299999999,
                    "p50": 137.432247,
                    "p95": 154.877612,
                    "p99": 154.877612,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 173.25509599999998,
                    "min": 152.169582,
                    "p50": 163.27412099999998,
                    "p95": 173.25509599999998,
                    "p99": 173.25509599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.814819,
                    "min": 102.25138,
                    "p50": 105.730453,
                    "p95": 120.814819,
                    "p99": 120.814819,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 160.42734,
                    "min": 140.04107299999998,
                    "p50": 148.344088,
                    "p95": 160.42734,
                    "p99": 160.42734,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 650.741888,
                    "min": 616.817312,
                    "p50": 627.519682,
                    "p95": 650.741888,
                    "p99": 650.741888,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 208.56105699999998,
                    "min": 174.118459,
                    "p50": 186.17013699999998,
                    "p95": 208.56105699999998,
                    "p99": 208.56105699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1255.033626,
                    "min": 1216.841379,
                    "p50": 1239.591201,
                    "p95": 1255.033626,
                    "p99": 1255.033626,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 224.24928,
                    "min": 188.12823899999998,
                    "p50": 197.85037499999999,
                    "p95": 224.24928,
                    "p99": 224.24928,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 134.680283,
                    "min": 125.872276,
                    "p50": 132.48882,
                    "p95": 134.680283,
                    "p99": 134.680283,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 252.982644,
                    "min": 231.371726,
                    "p50": 239.972999,
                    "p95": 252.982644,
                    "p99": 252.982644,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 293.18073,
                    "min": 258.434527,
                    "p50": 278.34092,
                    "p95": 293.18073,
                    "p99": 293.18073,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.96085199999999,
                    "min": 79.556169,
                    "p50": 85.237617,
                    "p95": 112.96085199999999,
                    "p99": 112.96085199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 161.081032,
                    "min": 137.73783699999998,
                    "p50": 150.37982499999998,
                    "p95": 161.081032,
                    "p99": 161.081032,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.476687,
                    "min": 104.301705,
                    "p50": 116.73638,
                    "p95": 137.476687,
                    "p99": 137.476687,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 233.114057,
                    "min": 197.07150099999998,
                    "p50": 203.59681,
                    "p95": 233.114057,
                    "p99": 233.114057,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 173.85069199999998,
                    "min": 161.48575,
                    "p50": 171.23976199999998,
                    "p95": 173.85069199999998,
                    "p99": 173.85069199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 544.3973639999999,
                    "min": 505.45816599999995,
                    "p50": 518.717916,
                    "p95": 544.3973639999999,
                    "p99": 544.3973639999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 401.64755399999996,
                    "min": 375.955826,
                    "p50": 394.57090999999997,
                    "p95": 401.64755399999996,
                    "p99": 401.64755399999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 184.15529999999998,
                    "min": 149.618921,
                    "p50": 165.059465,
                    "p95": 184.15529999999998,
                    "p99": 184.15529999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 92.178085,
                    "min": 53.217276999999996,
                    "p50": 55.723549999999996,
                    "p95": 92.178085,
                    "p99": 92.178085,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 140.289647,
                    "min": 113.762833,
                    "p50": 115.594245,
                    "p95": 140.289647,
                    "p99": 140.289647,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 76.975169,
                    "min": 64.271035,
                    "p50": 67.470873,
                    "p95": 76.975169,
                    "p99": 76.975169,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 118.07432299999999,
                    "min": 88.72361099999999,
                    "p50": 93.389483,
                    "p95": 118.07432299999999,
                    "p99": 118.07432299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 667.660702,
                    "min": 621.83525,
                    "p50": 630.8412169999999,
                    "p95": 667.660702,
                    "p99": 667.660702,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 201.08781199999999,
                    "min": 151.277503,
                    "p50": 160.72322599999998,
                    "p95": 201.08781199999999,
                    "p99": 201.08781199999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.24678699999998,
                    "min": 103.32565,
                    "p50": 104.571236,
                    "p95": 128.24678699999998,
                    "p99": 128.24678699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.88297899999999,
                    "min": 66.341977,
                    "p50": 76.70035299999999,
                    "p95": 97.88297899999999,
                    "p99": 97.88297899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.754163,
                    "min": 116.544747,
                    "p50": 134.257024,
                    "p95": 143.754163,
                    "p99": 143.754163,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 287.011168,
                    "min": 265.862847,
                    "p50": 273.732536,
                    "p95": 287.011168,
                    "p99": 287.011168,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.103986,
                    "min": 54.398208,
                    "p50": 55.402908,
                    "p95": 61.103986,
                    "p99": 61.103986,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1275.05017,
                    "min": 1232.5297389999998,
                    "p50": 1253.3809529999999,
                    "p95": 1275.05017,
                    "p99": 1275.05017,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 258.44080099999996,
                    "min": 236.189382,
                    "p50": 244.41305499999999,
                    "p95": 258.44080099999996,
                    "p99": 258.44080099999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 126.71153699999999,
                    "min": 78.50626299999999,
                    "p50": 92.206233,
                    "p95": 126.71153699999999,
                    "p99": 126.71153699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 162.496816,
                    "min": 138.948514,
                    "p50": 156.871949,
                    "p95": 162.496816,
                    "p99": 162.496816,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 198.298713,
                    "min": 189.60675999999998,
                    "p50": 191.948037,
                    "p95": 198.298713,
                    "p99": 198.298713,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 115.57568099999999,
                    "min": 90.884062,
                    "p50": 92.179187,
                    "p95": 115.57568099999999,
                    "p99": 115.57568099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 184.525418,
                    "min": 166.35714299999998,
                    "p50": 173.760017,
                    "p95": 184.525418,
                    "p99": 184.525418,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 655.378204,
                    "min": 628.4366749999999,
                    "p50": 635.519789,
                    "p95": 655.378204,
                    "p99": 655.378204,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 406.598936,
                    "min": 389.273716,
                    "p50": 400.624861,
                    "p95": 406.598936,
                    "p99": 406.598936,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 204.24611399999998,
                    "min": 177.040099,
                    "p50": 188.861433,
                    "p95": 204.24611399999998,
                    "p99": 204.24611399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 189.08308699999998,
                    "min": 132.28571399999998,
                    "p50": 150.05821899999998,
                    "p95": 189.08308699999998,
                    "p99": 189.08308699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 226.716232,
                    "min": 202.72929,
                    "p50": 213.30907599999998,
                    "p95": 226.716232,
                    "p99": 226.716232,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 531.832841,
                    "min": 509.848911,
                    "p50": 515.626187,
                    "p95": 531.832841,
                    "p99": 531.832841,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 154.59900399999998,
                    "min": 109.174537,
                    "p50": 113.554942,
                    "p95": 154.59900399999998,
                    "p99": 154.59900399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 227.49740899999998,
                    "min": 182.428181,
                    "p50": 195.545716,
                    "p95": 227.49740899999998,
                    "p99": 227.49740899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 190.237914,
                    "min": 161.089027,
                    "p50": 170.190066,
                    "p95": 190.237914,
                    "p99": 190.237914,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.926772,
                    "min": 92.945653,
                    "p50": 103.256282,
                    "p95": 132.926772,
                    "p99": 132.926772,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 312.94309799999996,
                    "min": 272.22927899999996,
                    "p50": 289.574207,
                    "p95": 312.94309799999996,
                    "p99": 312.94309799999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 79.277587,
                    "min": 68.119518,
                    "p50": 70.247711,
                    "p95": 79.277587,
                    "p99": 79.277587,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 160.720733,
                    "min": 122.322098,
                    "p50": 131.987955,
                    "p95": 160.720733,
                    "p99": 160.720733,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.42789399999998,
                    "min": 143.784931,
                    "p50": 156.763901,
                    "p95": 180.42789399999998,
                    "p99": 180.42789399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 249.03987099999998,
                    "min": 209.096083,
                    "p50": 215.866446,
                    "p95": 249.03987099999998,
                    "p99": 249.03987099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 430.36008999999996,
                    "min": 394.855212,
                    "p50": 407.07734999999997,
                    "p95": 430.36008999999996,
                    "p99": 430.36008999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.969552,
                    "min": 174.76503699999998,
                    "p50": 179.835771,
                    "p95": 211.969552,
                    "p99": 211.969552,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.123463,
                    "min": 134.130666,
                    "p50": 141.811018,
                    "p95": 156.123463,
                    "p99": 156.123463,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 126.82297,
                    "min": 80.392832,
                    "p50": 81.91269299999999,
                    "p95": 126.82297,
                    "p99": 126.82297,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 231.612068,
                    "min": 198.83262499999998,
                    "p50": 207.63566699999998,
                    "p95": 231.612068,
                    "p99": 231.612068,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 259.50206099999997,
                    "min": 238.57497999999998,
                    "p50": 253.921201,
                    "p95": 259.50206099999997,
                    "p99": 259.50206099999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 575.884021,
                    "min": 523.153198,
                    "p50": 536.842523,
                    "p95": 575.884021,
                    "p99": 575.884021,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 685.831158,
                    "min": 658.129615,
                    "p50": 667.45839,
                    "p95": 685.831158,
                    "p99": 685.831158,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1335.446356,
                    "min": 1289.495976,
                    "p50": 1307.30082,
                    "p95": 1335.446356,
                    "p99": 1335.446356,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 95.60441399999999,
                    "min": 57.701772,
                    "p50": 65.910344,
                    "p95": 95.60441399999999,
                    "p99": 95.60441399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 663.437011,
                    "min": 626.0906229999999,
                    "p50": 641.836509,
                    "p95": 663.437011,
                    "p99": 663.437011,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 202.723479,
                    "min": 173.52772099999999,
                    "p50": 184.34940699999999,
                    "p95": 202.723479,
                    "p99": 202.723479,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 158.274735,
                    "min": 140.33077,
                    "p50": 146.631893,
                    "p95": 158.274735,
                    "p99": 158.274735,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 220.95057799999998,
                    "min": 200.076452,
                    "p50": 205.89924499999998,
                    "p95": 220.95057799999998,
                    "p99": 220.95057799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 131.803003,
                    "min": 104.29249399999999,
                    "p50": 117.68812299999999,
                    "p95": 131.803003,
                    "p99": 131.803003,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.13353699999999,
                    "min": 81.155549,
                    "p50": 85.092023,
                    "p95": 96.13353699999999,
                    "p99": 96.13353699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 56.395044,
                    "min": 53.404097,
                    "p50": 54.916846,
                    "p95": 56.395044,
                    "p99": 56.395044,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 201.508543,
                    "min": 153.104251,
                    "p50": 165.256236,
                    "p95": 201.508543,
                    "p99": 201.508543,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 240.96454699999998,
                    "min": 229.634989,
                    "p50": 237.720271,
                    "p95": 240.96454699999998,
                    "p99": 240.96454699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 136.05822799999999,
                    "min": 90.911193,
                    "p50": 104.29127299999999,
                    "p95": 136.05822799999999,
                    "p99": 136.05822799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 137.267945,
                    "min": 116.517839,
                    "p50": 122.732446,
                    "p95": 137.267945,
                    "p99": 137.267945,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.954558,
                    "min": 185.029203,
                    "p50": 199.536181,
                    "p95": 227.954558,
                    "p99": 227.954558,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 554.435873,
                    "min": 502.74490899999995,
                    "p50": 519.173245,
                    "p95": 554.435873,
                    "p99": 554.435873,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 148.691693,
                    "min": 128.243007,
                    "p50": 132.327223,
                    "p95": 148.691693,
                    "p99": 148.691693,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 303.39428399999997,
                    "min": 263.008055,
                    "p50": 272.667194,
                    "p95": 303.39428399999997,
                    "p99": 303.39428399999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 199.948275,
                    "min": 173.791812,
                    "p50": 176.199397,
                    "p95": 199.948275,
                    "p99": 199.948275,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.322976,
                    "min": 66.553692,
                    "p50": 74.29447499999999,
                    "p95": 84.322976,
                    "p99": 84.322976,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 420.461722,
                    "min": 382.412586,
                    "p50": 389.868611,
                    "p95": 420.461722,
                    "p99": 420.461722,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 236.373643,
                    "min": 203.587785,
                    "p50": 212.439135,
                    "p95": 236.373643,
                    "p99": 236.373643,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 192.529014,
                    "min": 157.87066,
                    "p50": 164.944086,
                    "p95": 192.529014,
                    "p99": 192.529014,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.47797299999996,
                    "min": 251.022621,
                    "p50": 266.833041,
                    "p95": 273.47797299999996,
                    "p99": 273.47797299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1001.847362,
                    "min": 956.621995,
                    "p50": 983.212176,
                    "p95": 1001.847362,
                    "p99": 1001.847362,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 668.981782,
                    "min": 624.190708,
                    "p50": 633.336406,
                    "p95": 668.981782,
                    "p99": 668.981782,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 737.76793,
                    "min": 714.2002309999999,
                    "p50": 723.002201,
                    "p95": 737.76793,
                    "p99": 737.76793,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 854.7154469999999,
                    "min": 796.722269,
                    "p50": 846.790206,
                    "p95": 854.7154469999999,
                    "p99": 854.7154469999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 465.455626,
                    "min": 428.810228,
                    "p50": 449.636398,
                    "p95": 465.455626,
                    "p99": 465.455626,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 328.846117,
                    "min": 285.762701,
                    "p50": 303.171972,
                    "p95": 328.846117,
                    "p99": 328.846117,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 439.764609,
                    "min": 383.47461599999997,
                    "p50": 401.325726,
                    "p95": 439.764609,
                    "p99": 439.764609,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 381.699555,
                    "min": 335.733449,
                    "p50": 351.41999799999996,
                    "p95": 381.699555,
                    "p99": 381.699555,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 535.243517,
                    "min": 479.187598,
                    "p50": 498.043361,
                    "p95": 535.243517,
                    "p99": 535.243517,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 542.734429,
                    "min": 516.996388,
                    "p50": 533.960208,
                    "p95": 542.734429,
                    "p99": 542.734429,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 712.737099,
                    "min": 672.435493,
                    "p50": 679.382828,
                    "p95": 712.737099,
                    "p99": 712.737099,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 609.553469,
                    "min": 568.489066,
                    "p50": 590.448931,
                    "p95": 609.553469,
                    "p99": 609.553469,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 569.696721,
                    "min": 532.926683,
                    "p50": 545.942863,
                    "p95": 569.696721,
                    "p99": 569.696721,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 676.7570479999999,
                    "min": 628.645937,
                    "p50": 652.74531,
                    "p95": 676.7570479999999,
                    "p99": 676.7570479999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 761.103395,
                    "min": 662.832012,
                    "p50": 683.603085,
                    "p95": 761.103395,
                    "p99": 761.103395,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 225.47546599999998,
                    "min": 201.15329799999998,
                    "p50": 210.46994999999998,
                    "p95": 225.47546599999998,
                    "p99": 225.47546599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 284.54956599999997,
                    "min": 248.50017599999998,
                    "p50": 269.945458,
                    "p95": 284.54956599999997,
                    "p99": 284.54956599999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 398.762615,
                    "min": 342.36740499999996,
                    "p50": 362.875045,
                    "p95": 398.762615,
                    "p99": 398.762615,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 315.36312699999996,
                    "min": 286.172448,
                    "p50": 301.122454,
                    "p95": 315.36312699999996,
                    "p99": 315.36312699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 533.271851,
                    "min": 492.978463,
                    "p50": 506.762685,
                    "p95": 533.271851,
                    "p99": 533.271851,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.53651399999998,
                    "min": 156.635258,
                    "p50": 163.332641,
                    "p95": 193.53651399999998,
                    "p99": 193.53651399999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 440.965417,
                    "min": 386.513872,
                    "p50": 402.97222,
                    "p95": 440.965417,
                    "p99": 440.965417,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 882.2851089999999,
                    "min": 831.6747009999999,
                    "p50": 861.0322259999999,
                    "p95": 882.2851089999999,
                    "p99": 882.2851089999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1010.3928239999999,
                    "min": 963.5647409999999,
                    "p50": 985.680578,
                    "p95": 1010.3928239999999,
                    "p99": 1010.3928239999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 758.933957,
                    "min": 725.8133419999999,
                    "p50": 742.147894,
                    "p95": 758.933957,
                    "p99": 758.933957,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 456.45045799999997,
                    "min": 425.172168,
                    "p50": 437.85777199999995,
                    "p95": 456.45045799999997,
                    "p99": 456.45045799999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 634.1372799999999,
                    "min": 573.351321,
                    "p50": 587.293011,
                    "p95": 634.1372799999999,
                    "p99": 634.1372799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.238574,
                    "min": 660.216908,
                    "p50": 689.15327,
                    "p95": 705.238574,
                    "p99": 705.238574,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 620.681334,
                    "min": 597.489416,
                    "p50": 609.1552399999999,
                    "p95": 620.681334,
                    "p99": 620.681334,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 723.594627,
                    "min": 683.3694879999999,
                    "p50": 714.34141,
                    "p95": 723.594627,
                    "p99": 723.594627,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 871.117618,
                    "min": 808.84462,
                    "p50": 828.2215769999999,
                    "p95": 871.117618,
                    "p99": 871.117618,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 631.191005,
                    "min": 555.915221,
                    "p50": 581.9649929999999,
                    "p95": 631.191005,
                    "p99": 631.191005,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 559.0478079999999,
                    "min": 522.560123,
                    "p50": 534.4738159999999,
                    "p95": 559.0478079999999,
                    "p99": 559.0478079999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 194.73400099999998,
                    "min": 154.774456,
                    "p50": 169.265623,
                    "p95": 194.73400099999998,
                    "p99": 194.73400099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 971.1235429999999,
                    "min": 933.05502,
                    "p50": 942.5757629999999,
                    "p95": 971.1235429999999,
                    "p99": 971.1235429999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 493.52565799999996,
                    "min": 463.752777,
                    "p50": 481.477236,
                    "p95": 493.52565799999996,
                    "p99": 493.52565799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 466.510185,
                    "min": 422.95392999999996,
                    "p50": 439.884329,
                    "p95": 466.510185,
                    "p99": 466.510185,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.385387,
                    "min": 288.308603,
                    "p50": 307.376801,
                    "p95": 323.385387,
                    "p99": 323.385387,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 396.39265,
                    "min": 368.88453999999996,
                    "p50": 378.476626,
                    "p95": 396.39265,
                    "p99": 396.39265,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 383.306542,
                    "min": 329.887348,
                    "p50": 366.58910199999997,
                    "p95": 383.306542,
                    "p99": 383.306542,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.23262599999998,
                    "min": 202.90397,
                    "p50": 205.510483,
                    "p95": 247.23262599999998,
                    "p99": 247.23262599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.186235,
                    "min": 241.949077,
                    "p50": 251.234841,
                    "p95": 273.186235,
                    "p99": 273.186235,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 694.453273,
                    "min": 661.352706,
                    "p50": 676.127207,
                    "p95": 694.453273,
                    "p99": 694.453273,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 735.322354,
                    "min": 684.26603,
                    "p50": 725.1262059999999,
                    "p95": 735.322354,
                    "p99": 735.322354,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 585.417797,
                    "min": 555.862369,
                    "p50": 575.58517,
                    "p95": 585.417797,
                    "p99": 585.417797,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 888.834001,
                    "min": 789.827145,
                    "p50": 826.4271319999999,
                    "p95": 888.834001,
                    "p99": 888.834001,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 233.115387,
                    "min": 200.50626599999998,
                    "p50": 204.515422,
                    "p95": 233.115387,
                    "p99": 233.115387,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 565.9787689999999,
                    "min": 518.2832089999999,
                    "p50": 533.993253,
                    "p95": 565.9787689999999,
                    "p99": 565.9787689999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 998.449387,
                    "min": 968.403789,
                    "p50": 974.176836,
                    "p95": 998.449387,
                    "p99": 998.449387,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 290.170551,
                    "min": 276.810056,
                    "p50": 286.557254,
                    "p95": 290.170551,
                    "p99": 290.170551,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.614799,
                    "min": 388.857535,
                    "p50": 396.470426,
                    "p95": 415.614799,
                    "p99": 415.614799,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 376.39084099999997,
                    "min": 332.018646,
                    "p50": 346.449464,
                    "p95": 376.39084099999997,
                    "p99": 376.39084099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 255.142359,
                    "min": 239.80415299999999,
                    "p50": 252.54539599999998,
                    "p95": 255.142359,
                    "p99": 255.142359,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 449.27431099999995,
                    "min": 419.555349,
                    "p50": 430.054216,
                    "p95": 449.27431099999995,
                    "p99": 449.27431099999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 491.59905899999995,
                    "min": 473.64633699999996,
                    "p50": 485.65903399999996,
                    "p95": 491.59905899999995,
                    "p99": 491.59905899999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 192.75026599999998,
                    "min": 152.807788,
                    "p50": 159.080814,
                    "p95": 192.75026599999998,
                    "p99": 192.75026599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 651.195064,
                    "min": 610.9520309999999,
                    "p50": 639.1161,
                    "p95": 651.195064,
                    "p99": 651.195064,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1742.1405969999998,
                    "min": 1683.458719,
                    "p50": 1703.6976479999998,
                    "p95": 1742.1405969999998,
                    "p99": 1742.1405969999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1057.811052,
                    "min": 1025.5771359999999,
                    "p50": 1034.606231,
                    "p95": 1057.811052,
                    "p99": 1057.811052,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1285.296032,
                    "min": 1249.4488649999998,
                    "p50": 1268.4492699999998,
                    "p95": 1285.296032,
                    "p99": 1285.296032,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 830.1754239999999,
                    "min": 798.653974,
                    "p50": 813.0296569999999,
                    "p95": 830.1754239999999,
                    "p99": 830.1754239999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 726.477297,
                    "min": 684.213834,
                    "p50": 704.097327,
                    "p95": 726.477297,
                    "p99": 726.477297,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1166.059362,
                    "min": 1129.779751,
                    "p50": 1153.154303,
                    "p95": 1166.059362,
                    "p99": 1166.059362,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 400.535277,
                    "min": 353.49420699999996,
                    "p50": 365.202052,
                    "p95": 400.535277,
                    "p99": 400.535277,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 477.031485,
                    "min": 464.35141799999997,
                    "p50": 470.775079,
                    "p95": 477.031485,
                    "p99": 477.031485,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 931.660769,
                    "min": 887.1277299999999,
                    "p50": 917.7361589999999,
                    "p95": 931.660769,
                    "p99": 931.660769,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 610.317263,
                    "min": 573.0970689999999,
                    "p50": 585.047004,
                    "p95": 610.317263,
                    "p99": 610.317263,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2292.7194179999997,
                    "min": 2240.425758,
                    "p50": 2262.900616,
                    "p95": 2292.7194179999997,
                    "p99": 2292.7194179999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1473.837358,
                    "min": 1361.4089609999999,
                    "p50": 1382.494381,
                    "p95": 1473.837358,
                    "p99": 1473.837358,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2071.258042,
                    "min": 1971.3593959999998,
                    "p50": 2020.802182,
                    "p95": 2071.258042,
                    "p99": 2071.258042,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1624.7292889999999,
                    "min": 1551.2948589999999,
                    "p50": 1594.838791,
                    "p95": 1624.7292889999999,
                    "p99": 1624.7292889999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1499.266248,
                    "min": 1463.608956,
                    "p50": 1493.150756,
                    "p95": 1499.266248,
                    "p99": 1499.266248,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3417.721888,
                    "min": 3334.571712,
                    "p50": 3384.728306,
                    "p95": 3417.721888,
                    "p99": 3417.721888,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1868.0683749999998,
                    "min": 1818.3145929999998,
                    "p50": 1858.253352,
                    "p95": 1868.0683749999998,
                    "p99": 1868.0683749999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1434.249086,
                    "min": 1338.292536,
                    "p50": 1364.740519,
                    "p95": 1434.249086,
                    "p99": 1434.249086,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1634.887988,
                    "min": 1569.633854,
                    "p50": 1592.9783419999999,
                    "p95": 1634.887988,
                    "p99": 1634.887988,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2503.117197,
                    "min": 2430.405097,
                    "p50": 2453.8830009999997,
                    "p95": 2503.117197,
                    "p99": 2503.117197,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2196.173189,
                    "min": 2105.711041,
                    "p50": 2139.439456,
                    "p95": 2196.173189,
                    "p99": 2196.173189,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1499.662437,
                    "min": 1457.1930619999998,
                    "p50": 1472.0203339999998,
                    "p95": 1499.662437,
                    "p99": 1499.662437,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 409.044829,
                    "min": 379.132508,
                    "p50": 392.312767,
                    "p95": 409.044829,
                    "p99": 409.044829,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 532.0708149999999,
                    "min": 502.085987,
                    "p50": 515.098693,
                    "p95": 532.0708149999999,
                    "p99": 532.0708149999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1243.848195,
                    "min": 1224.224747,
                    "p50": 1235.42907,
                    "p95": 1243.848195,
                    "p99": 1243.848195,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 775.822698,
                    "min": 746.609385,
                    "p50": 755.2770009999999,
                    "p95": 775.822698,
                    "p99": 775.822698,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1125.252446,
                    "min": 1093.013086,
                    "p50": 1109.4951389999999,
                    "p95": 1125.252446,
                    "p99": 1125.252446,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 653.8051919999999,
                    "min": 617.439727,
                    "p50": 630.280946,
                    "p95": 653.8051919999999,
                    "p99": 653.8051919999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1738.7304339999998,
                    "min": 1693.7304729999998,
                    "p50": 1725.716083,
                    "p95": 1738.7304339999998,
                    "p99": 1738.7304339999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1001.186576,
                    "min": 979.233301,
                    "p50": 988.5149299999999,
                    "p95": 1001.186576,
                    "p99": 1001.186576,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 958.995498,
                    "min": 860.7924069999999,
                    "p50": 879.7402089999999,
                    "p95": 958.995498,
                    "p99": 958.995498,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1372.183888,
                    "min": 1325.960682,
                    "p50": 1332.837844,
                    "p95": 1372.183888,
                    "p99": 1372.183888,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 558.311832,
                    "min": 535.461046,
                    "p50": 547.75627,
                    "p95": 558.311832,
                    "p99": 558.311832,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1088.218382,
                    "min": 1061.671924,
                    "p50": 1068.548583,
                    "p95": 1088.218382,
                    "p99": 1088.218382,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 950.0356899999999,
                    "min": 927.004456,
                    "p50": 943.49326,
                    "p95": 950.0356899999999,
                    "p99": 950.0356899999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 826.2951929999999,
                    "min": 797.4548199999999,
                    "p50": 808.4138859999999,
                    "p95": 826.2951929999999,
                    "p99": 826.2951929999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1993.550211,
                    "min": 1949.752749,
                    "p50": 1973.7043299999998,
                    "p95": 1993.550211,
                    "p99": 1993.550211,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1732.960055,
                    "min": 1703.4521849999999,
                    "p50": 1715.2031499999998,
                    "p95": 1732.960055,
                    "p99": 1732.960055,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2636.0924219999997,
                    "min": 2599.588373,
                    "p50": 2616.8424489999998,
                    "p95": 2636.0924219999997,
                    "p99": 2636.0924219999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3940.7349809999996,
                    "min": 3905.854179,
                    "p50": 3918.109047,
                    "p95": 3940.7349809999996,
                    "p99": 3940.7349809999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1602.331021,
                    "min": 1570.3861359999999,
                    "p50": 1591.861737,
                    "p95": 1602.331021,
                    "p99": 1602.331021,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 701.297271,
                    "min": 672.5392469999999,
                    "p50": 695.478243,
                    "p95": 701.297271,
                    "p99": 701.297271,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1485.417089,
                    "min": 1450.422384,
                    "p50": 1462.369177,
                    "p95": 1485.417089,
                    "p99": 1485.417089,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 433.835487,
                    "min": 408.89660499999997,
                    "p50": 419.797313,
                    "p95": 433.835487,
                    "p99": 433.835487,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1869.559771,
                    "min": 1828.2053139999998,
                    "p50": 1847.4067759999998,
                    "p95": 1869.559771,
                    "p99": 1869.559771,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2330.856519,
                    "min": 2277.489138,
                    "p50": 2312.857337,
                    "p95": 2330.856519,
                    "p99": 2330.856519,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1215.491927,
                    "min": 1192.208762,
                    "p50": 1206.319277,
                    "p95": 1215.491927,
                    "p99": 1215.491927,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3397.94083,
                    "min": 3351.4630039999997,
                    "p50": 3361.9543919999996,
                    "p95": 3397.94083,
                    "p99": 3397.94083,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 793.6552949999999,
                    "min": 774.9271229999999,
                    "p50": 786.042616,
                    "p95": 793.6552949999999,
                    "p99": 793.6552949999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 540.161477,
                    "min": 519.452822,
                    "p50": 532.806257,
                    "p95": 540.161477,
                    "p99": 540.161477,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1070.212507,
                    "min": 1015.422864,
                    "p50": 1034.150007,
                    "p95": 1070.212507,
                    "p99": 1070.212507,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 388.165627,
                    "min": 352.909202,
                    "p50": 360.92251799999997,
                    "p95": 388.165627,
                    "p99": 388.165627,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1710.171075,
                    "min": 1669.274993,
                    "p50": 1684.1094739999999,
                    "p95": 1710.171075,
                    "p99": 1710.171075,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1308.263625,
                    "min": 1265.067255,
                    "p50": 1283.146352,
                    "p95": 1308.263625,
                    "p99": 1308.263625,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1817.789658,
                    "min": 1181.306077,
                    "p50": 1199.104903,
                    "p95": 1817.789658,
                    "p99": 1817.789658,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 300.367509,
                    "min": 273.766603,
                    "p50": 278.730703,
                    "p95": 300.367509,
                    "p99": 300.367509,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 461.587029,
                    "min": 430.55634499999996,
                    "p50": 443.70342999999997,
                    "p95": 461.587029,
                    "p99": 461.587029,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2219.803462,
                    "min": 1474.517384,
                    "p50": 1499.202214,
                    "p95": 2219.803462,
                    "p99": 2219.803462,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 730.706739,
                    "min": 681.275252,
                    "p50": 692.8400459999999,
                    "p95": 730.706739,
                    "p99": 730.706739,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 969.608707,
                    "min": 934.053132,
                    "p50": 941.105725,
                    "p95": 969.608707,
                    "p99": 969.608707,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 642.8768749999999,
                    "min": 601.911473,
                    "p50": 611.124508,
                    "p95": 642.8768749999999,
                    "p99": 642.8768749999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1131.8528059999999,
                    "min": 1099.968792,
                    "p50": 1114.012176,
                    "p95": 1131.8528059999999,
                    "p99": 1131.8528059999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2551.9606909999998,
                    "min": 2492.780202,
                    "p50": 2540.176359,
                    "p95": 2551.9606909999998,
                    "p99": 2551.9606909999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 4250.845756,
                    "min": 4161.67487,
                    "p50": 4189.491554,
                    "p95": 4250.845756,
                    "p99": 4250.845756,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 883.6723089999999,
                    "min": 849.4630149999999,
                    "p50": 866.576463,
                    "p95": 883.6723089999999,
                    "p99": 883.6723089999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 435.490273,
                    "min": 410.299328,
                    "p50": 416.62190899999996,
                    "p95": 435.490273,
                    "p99": 435.490273,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1169.226453,
                    "min": 1129.459541,
                    "p50": 1140.232914,
                    "p95": 1169.226453,
                    "p99": 1169.226453,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1738.3075589999999,
                    "min": 1685.619264,
                    "p50": 1726.434027,
                    "p95": 1738.3075589999999,
                    "p99": 1738.3075589999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3140.70851,
                    "min": 2800.9732719999997,
                    "p50": 2838.1250489999998,
                    "p95": 3140.70851,
                    "p99": 3140.70851,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2289.769854,
                    "min": 2241.3183,
                    "p50": 2256.5054849999997,
                    "p95": 2289.769854,
                    "p99": 2289.769854,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 500.392202,
                    "min": 465.95827299999996,
                    "p50": 479.593735,
                    "p95": 500.392202,
                    "p99": 500.392202,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1057.29936,
                    "min": 1004.3720569999999,
                    "p50": 1010.4277579999999,
                    "p95": 1057.29936,
                    "p99": 1057.29936,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 382.520647,
                    "min": 353.973073,
                    "p50": 364.93767199999996,
                    "p95": 382.520647,
                    "p99": 382.520647,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 827.787571,
                    "min": 794.61761,
                    "p50": 815.872216,
                    "p95": 827.787571,
                    "p99": 827.787571,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 893.5600509999999,
                    "min": 856.8166239999999,
                    "p50": 863.9696349999999,
                    "p95": 893.5600509999999,
                    "p99": 893.5600509999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 295.354715,
                    "min": 244.71677799999998,
                    "p50": 252.920034,
                    "p95": 295.354715,
                    "p99": 295.354715,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 661.787776,
                    "min": 625.858151,
                    "p50": 638.324073,
                    "p95": 661.787776,
                    "p99": 661.787776,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 721.5831999999999,
                    "min": 686.2770879999999,
                    "p50": 698.4656219999999,
                    "p95": 721.5831999999999,
                    "p99": 721.5831999999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 320.573803,
                    "min": 299.596698,
                    "p50": 311.768684,
                    "p95": 320.573803,
                    "p99": 320.573803,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.47528,
                    "min": 192.365925,
                    "p50": 196.835582,
                    "p95": 214.47528,
                    "p99": 214.47528,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 764.224371,
                    "min": 740.843799,
                    "p50": 756.30104,
                    "p95": 764.224371,
                    "p99": 764.224371,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 592.724526,
                    "min": 577.12677,
                    "p50": 582.986573,
                    "p95": 592.724526,
                    "p99": 592.724526,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 548.382832,
                    "min": 524.682287,
                    "p50": 540.498851,
                    "p95": 548.382832,
                    "p99": 548.382832,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 778.7926739999999,
                    "min": 760.3952969999999,
                    "p50": 768.198353,
                    "p95": 778.7926739999999,
                    "p99": 778.7926739999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1189.235428,
                    "min": 1161.48552,
                    "p50": 1174.171049,
                    "p95": 1189.235428,
                    "p99": 1189.235428,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1027.90313,
                    "min": 1003.7210259999999,
                    "p50": 1018.486057,
                    "p95": 1027.90313,
                    "p99": 1027.90313,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 285.781749,
                    "min": 265.580539,
                    "p50": 276.82843299999996,
                    "p95": 285.781749,
                    "p99": 285.781749,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1825.039503,
                    "min": 1662.282812,
                    "p50": 1694.263543,
                    "p95": 1825.039503,
                    "p99": 1825.039503,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 701.780233,
                    "min": 673.225115,
                    "p50": 683.497153,
                    "p95": 701.780233,
                    "p99": 701.780233,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 471.33347,
                    "min": 424.252298,
                    "p50": 435.664945,
                    "p95": 471.33347,
                    "p99": 471.33347,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 953.08087,
                    "min": 920.68945,
                    "p50": 951.2811859999999,
                    "p95": 953.08087,
                    "p99": 953.08087,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 544.95154,
                    "min": 511.27002,
                    "p50": 521.976512,
                    "p95": 544.95154,
                    "p99": 544.95154,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1479.894169,
                    "min": 1449.68158,
                    "p50": 1467.023268,
                    "p95": 1479.894169,
                    "p99": 1479.894169,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 387.458301,
                    "min": 348.037948,
                    "p50": 354.500199,
                    "p95": 387.458301,
                    "p99": 387.458301,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1290.3005779999999,
                    "min": 1247.695871,
                    "p50": 1263.6504439999999,
                    "p95": 1290.3005779999999,
                    "p99": 1290.3005779999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 631.591873,
                    "min": 593.758886,
                    "p50": 611.287463,
                    "p95": 631.591873,
                    "p99": 631.591873,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1103.761393,
                    "min": 1074.406608,
                    "p50": 1096.821532,
                    "p95": 1103.761393,
                    "p99": 1103.761393,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 884.811292,
                    "min": 840.862412,
                    "p50": 853.354255,
                    "p95": 884.811292,
                    "p99": 884.811292,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 331.888043,
                    "min": 297.075919,
                    "p50": 313.537654,
                    "p95": 331.888043,
                    "p99": 331.888043,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 901.2865929999999,
                    "min": 856.9412,
                    "p50": 875.9685499999999,
                    "p95": 901.2865929999999,
                    "p99": 901.2865929999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 624.366717,
                    "min": 532.348661,
                    "p50": 543.960532,
                    "p95": 624.366717,
                    "p99": 624.366717,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 811.548133,
                    "min": 742.323093,
                    "p50": 763.137614,
                    "p95": 811.548133,
                    "p99": 811.548133,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1216.887125,
                    "min": 1154.432043,
                    "p50": 1179.199989,
                    "p95": 1216.887125,
                    "p99": 1216.887125,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.5000769999999,
                    "min": 639.04378,
                    "p50": 652.214107,
                    "p95": 697.5000769999999,
                    "p99": 697.5000769999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 845.17455,
                    "min": 805.199226,
                    "p50": 819.343129,
                    "p95": 845.17455,
                    "p99": 845.17455,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1768.587344,
                    "min": 1676.632417,
                    "p50": 1738.8813759999998,
                    "p95": 1768.587344,
                    "p99": 1768.587344,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 437.045195,
                    "min": 411.343303,
                    "p50": 423.958286,
                    "p95": 437.045195,
                    "p99": 437.045195,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 215.767336,
                    "min": 185.01303,
                    "p50": 202.397121,
                    "p95": 215.767336,
                    "p99": 215.767336,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 651.529369,
                    "min": 573.810537,
                    "p50": 595.306548,
                    "p95": 651.529369,
                    "p99": 651.529369,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 406.0301,
                    "min": 356.014365,
                    "p50": 379.566305,
                    "p95": 406.0301,
                    "p99": 406.0301,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.961968,
                    "min": 242.788851,
                    "p50": 254.259095,
                    "p95": 267.961968,
                    "p99": 267.961968,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 503.823408,
                    "min": 473.20219699999996,
                    "p50": 491.570671,
                    "p95": 503.823408,
                    "p99": 503.823408,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1082.245541,
                    "min": 1010.5696899999999,
                    "p50": 1053.92031,
                    "p95": 1082.245541,
                    "p99": 1082.245541,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 776.867541,
                    "min": 703.788064,
                    "p50": 718.394735,
                    "p95": 776.867541,
                    "p99": 776.867541,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 787.71289,
                    "min": 763.6980199999999,
                    "p50": 775.5663069999999,
                    "p95": 787.71289,
                    "p99": 787.71289,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 918.253508,
                    "min": 888.958948,
                    "p50": 902.181793,
                    "p95": 918.253508,
                    "p99": 918.253508,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 988.759724,
                    "min": 950.6504669999999,
                    "p50": 963.984879,
                    "p95": 988.759724,
                    "p99": 988.759724,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 621.237924,
                    "min": 571.216327,
                    "p50": 595.573727,
                    "p95": 621.237924,
                    "p99": 621.237924,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 415.270697,
                    "min": 389.946111,
                    "p50": 397.56785099999996,
                    "p95": 415.270697,
                    "p99": 415.270697,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 532.677132,
                    "min": 513.365326,
                    "p50": 521.95907,
                    "p95": 532.677132,
                    "p99": 532.677132,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 287.21000499999997,
                    "min": 271.39313899999996,
                    "p50": 279.655484,
                    "p95": 287.21000499999997,
                    "p99": 287.21000499999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.818692,
                    "min": 327.539659,
                    "p50": 337.059442,
                    "p95": 350.818692,
                    "p99": 350.818692,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 668.9300509999999,
                    "min": 638.843842,
                    "p50": 644.252315,
                    "p95": 668.9300509999999,
                    "p99": 668.9300509999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 495.798882,
                    "min": 453.041155,
                    "p50": 456.14995899999997,
                    "p95": 495.798882,
                    "p99": 495.798882,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1300.8858519999999,
                    "min": 1250.992911,
                    "p50": 1277.836077,
                    "p95": 1300.8858519999999,
                    "p99": 1300.8858519999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 729.787022,
                    "min": 704.70156,
                    "p50": 709.920203,
                    "p95": 729.787022,
                    "p99": 729.787022,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1130.449255,
                    "min": 1112.010987,
                    "p50": 1124.3368619999999,
                    "p95": 1130.449255,
                    "p99": 1130.449255,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.703036,
                    "min": 204.17856,
                    "p50": 213.410544,
                    "p95": 224.703036,
                    "p99": 224.703036,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 843.11073,
                    "min": 824.960259,
                    "p50": 832.8055479999999,
                    "p95": 843.11073,
                    "p99": 843.11073,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 730.155446,
                    "min": 695.59611,
                    "p50": 708.759455,
                    "p95": 730.155446,
                    "p99": 730.155446,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 373.079463,
                    "min": 353.08860999999996,
                    "p50": 363.21063599999997,
                    "p95": 373.079463,
                    "p99": 373.079463,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.26066,
                    "min": 245.376773,
                    "p50": 249.79885,
                    "p95": 267.26066,
                    "p99": 267.26066,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.793035,
                    "min": 185.802518,
                    "p50": 199.398004,
                    "p95": 214.793035,
                    "p99": 214.793035,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 765.232992,
                    "min": 748.469717,
                    "p50": 757.5682059999999,
                    "p95": 765.232992,
                    "p99": 765.232992,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 909.20999,
                    "min": 849.7286029999999,
                    "p50": 876.852054,
                    "p95": 909.20999,
                    "p99": 909.20999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 544.7222489999999,
                    "min": 526.725884,
                    "p50": 540.772574,
                    "p95": 544.7222489999999,
                    "p99": 544.7222489999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1165.918264,
                    "min": 1134.372432,
                    "p50": 1151.617002,
                    "p95": 1165.918264,
                    "p99": 1165.918264,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 621.803222,
                    "min": 581.4654439999999,
                    "p50": 601.740964,
                    "p95": 621.803222,
                    "p99": 621.803222,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 453.161681,
                    "min": 409.255723,
                    "p50": 421.14394599999997,
                    "p95": 453.161681,
                    "p99": 453.161681,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1061.7361039999998,
                    "min": 1002.1089929999999,
                    "p50": 1022.0719039999999,
                    "p95": 1061.7361039999998,
                    "p99": 1061.7361039999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 837.8328359999999,
                    "min": 792.7122019999999,
                    "p50": 825.223835,
                    "p95": 837.8328359999999,
                    "p99": 837.8328359999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 328.318087,
                    "min": 297.64358999999996,
                    "p50": 314.622553,
                    "p95": 328.318087,
                    "p99": 328.318087,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 501.67492899999996,
                    "min": 464.907044,
                    "p50": 475.599203,
                    "p95": 501.67492899999996,
                    "p99": 501.67492899999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1737.814985,
                    "min": 1690.030078,
                    "p50": 1706.54091,
                    "p95": 1737.814985,
                    "p99": 1737.814985,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 670.135916,
                    "min": 629.360945,
                    "p50": 642.8354429999999,
                    "p95": 670.135916,
                    "p99": 670.135916,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2304.528731,
                    "min": 2240.0764289999997,
                    "p50": 2261.8535589999997,
                    "p95": 2304.528731,
                    "p99": 2304.528731,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1164.859684,
                    "min": 1132.3483449999999,
                    "p50": 1144.5650229999999,
                    "p95": 1164.859684,
                    "p99": 1164.859684,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 611.168315,
                    "min": 580.1901829999999,
                    "p50": 599.517331,
                    "p95": 611.168315,
                    "p99": 611.168315,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2316.0528409999997,
                    "min": 2230.353331,
                    "p50": 2268.671226,
                    "p95": 2316.0528409999997,
                    "p99": 2316.0528409999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1654.4414709999999,
                    "min": 1575.666743,
                    "p50": 1596.173353,
                    "p95": 1654.4414709999999,
                    "p99": 1654.4414709999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 713.315389,
                    "min": 685.76677,
                    "p50": 705.127218,
                    "p95": 713.315389,
                    "p99": 713.315389,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1730.517654,
                    "min": 1676.941781,
                    "p50": 1712.593866,
                    "p95": 1730.517654,
                    "p99": 1730.517654,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 848.088881,
                    "min": 809.53852,
                    "p50": 831.8922699999999,
                    "p95": 848.088881,
                    "p99": 848.088881,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1407.284737,
                    "min": 1362.202689,
                    "p50": 1374.911629,
                    "p95": 1407.284737,
                    "p99": 1407.284737,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1045.35664,
                    "min": 1014.231672,
                    "p50": 1033.218251,
                    "p95": 1045.35664,
                    "p99": 1045.35664,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1550.3645549999999,
                    "min": 1475.829581,
                    "p50": 1498.738793,
                    "p95": 1550.3645549999999,
                    "p99": 1550.3645549999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2015.2933779999998,
                    "min": 1964.857163,
                    "p50": 1990.1047259999998,
                    "p95": 2015.2933779999998,
                    "p99": 2015.2933779999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 944.1814099999999,
                    "min": 892.276628,
                    "p50": 929.14802,
                    "p95": 944.1814099999999,
                    "p99": 944.1814099999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1277.409346,
                    "min": 1237.5846569999999,
                    "p50": 1257.5406779999998,
                    "p95": 1277.409346,
                    "p99": 1277.409346,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 395.289501,
                    "min": 354.33529599999997,
                    "p50": 363.184848,
                    "p95": 395.289501,
                    "p99": 395.289501,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 510.899587,
                    "min": 465.72527299999996,
                    "p50": 490.962767,
                    "p95": 510.899587,
                    "p99": 510.899587,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 686.7068019999999,
                    "min": 647.225155,
                    "p50": 664.392327,
                    "p95": 686.7068019999999,
                    "p99": 686.7068019999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 298.666041,
                    "min": 269.867461,
                    "p50": 277.448215,
                    "p95": 298.666041,
                    "p99": 298.666041,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 805.470867,
                    "min": 770.9400899999999,
                    "p50": 783.647298,
                    "p95": 805.470867,
                    "p99": 805.470867,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 930.4906649999999,
                    "min": 896.423113,
                    "p50": 902.357089,
                    "p95": 930.4906649999999,
                    "p99": 930.4906649999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 355.151997,
                    "min": 327.79116799999997,
                    "p50": 340.78630699999997,
                    "p95": 355.151997,
                    "p99": 355.151997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 612.159314,
                    "min": 583.821833,
                    "p50": 585.364012,
                    "p95": 612.159314,
                    "p99": 612.159314,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 537.910625,
                    "min": 518.4735539999999,
                    "p50": 528.426192,
                    "p95": 537.910625,
                    "p99": 537.910625,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 422.59214099999997,
                    "min": 395.018178,
                    "p50": 400.781273,
                    "p95": 422.59214099999997,
                    "p99": 422.59214099999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.60042,
                    "min": 205.68561599999998,
                    "p50": 214.834597,
                    "p95": 256.60042,
                    "p99": 256.60042,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1152.188927,
                    "min": 1110.69992,
                    "p50": 1120.9697039999999,
                    "p95": 1152.188927,
                    "p99": 1152.188927,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 735.2765099999999,
                    "min": 710.356171,
                    "p50": 722.018972,
                    "p95": 735.2765099999999,
                    "p99": 735.2765099999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 846.607303,
                    "min": 836.258261,
                    "p50": 841.9861139999999,
                    "p95": 846.607303,
                    "p99": 846.607303,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1320.0973159999999,
                    "min": 1262.065883,
                    "p50": 1273.2234549999998,
                    "p95": 1320.0973159999999,
                    "p99": 1320.0973159999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 976.9688699999999,
                    "min": 950.434211,
                    "p50": 973.285627,
                    "p95": 976.9688699999999,
                    "p99": 976.9688699999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.087383,
                    "min": 456.341972,
                    "p50": 467.13173,
                    "p95": 477.087383,
                    "p99": 477.087383,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1356.238644,
                    "min": 1308.3735669999999,
                    "p50": 1318.8545139999999,
                    "p95": 1356.238644,
                    "p99": 1356.238644,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 796.038423,
                    "min": 755.2532689999999,
                    "p50": 771.83418,
                    "p95": 796.038423,
                    "p99": 796.038423,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1085.413425,
                    "min": 1063.32938,
                    "p50": 1073.546857,
                    "p95": 1085.413425,
                    "p99": 1085.413425,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1155.736727,
                    "min": 1125.2670679999999,
                    "p50": 1140.412136,
                    "p95": 1155.736727,
                    "p99": 1155.736727,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1529.060951,
                    "min": 1488.470267,
                    "p50": 1511.2066109999998,
                    "p95": 1529.060951,
                    "p99": 1529.060951,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 851.8378349999999,
                    "min": 833.535722,
                    "p50": 839.122635,
                    "p95": 851.8378349999999,
                    "p99": 851.8378349999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 500.211778,
                    "min": 463.23970299999996,
                    "p50": 476.67378099999996,
                    "p95": 500.211778,
                    "p99": 500.211778,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 628.6187289999999,
                    "min": 607.454285,
                    "p50": 618.348398,
                    "p95": 628.6187289999999,
                    "p99": 628.6187289999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1039.007735,
                    "min": 989.2237349999999,
                    "p50": 1002.96034,
                    "p95": 1039.007735,
                    "p99": 1039.007735,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 935.018828,
                    "min": 900.6377759999999,
                    "p50": 918.3707539999999,
                    "p95": 935.018828,
                    "p99": 935.018828,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2251.875105,
                    "min": 2220.286151,
                    "p50": 2239.953369,
                    "p95": 2251.875105,
                    "p99": 2251.875105,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 555.6320039999999,
                    "min": 539.81741,
                    "p50": 546.43407,
                    "p95": 555.6320039999999,
                    "p99": 555.6320039999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.13302999999996,
                    "min": 243.44226999999998,
                    "p50": 251.88285499999998,
                    "p95": 260.13302999999996,
                    "p99": 260.13302999999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 430.017816,
                    "min": 390.37785499999995,
                    "p50": 404.068499,
                    "p95": 430.017816,
                    "p99": 430.017816,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 744.35376,
                    "min": 688.903453,
                    "p50": 699.837464,
                    "p95": 744.35376,
                    "p99": 744.35376,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 351.294913,
                    "min": 314.44383799999997,
                    "p50": 328.226273,
                    "p95": 351.294913,
                    "p99": 351.294913,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1296.2019579999999,
                    "min": 1271.560511,
                    "p50": 1279.383144,
                    "p95": 1296.2019579999999,
                    "p99": 1296.2019579999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 647.7982509999999,
                    "min": 601.826278,
                    "p50": 626.2570479999999,
                    "p95": 647.7982509999999,
                    "p99": 647.7982509999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 293.214776,
                    "min": 267.74764,
                    "p50": 273.987255,
                    "p95": 293.214776,
                    "p99": 293.214776,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.157936,
                    "min": 353.085629,
                    "p50": 357.41085999999996,
                    "p95": 365.157936,
                    "p99": 365.157936,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 900.0996339999999,
                    "min": 852.921843,
                    "p50": 882.088528,
                    "p95": 900.0996339999999,
                    "p99": 900.0996339999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 539.333453,
                    "min": 520.619796,
                    "p50": 530.651306,
                    "p95": 539.333453,
                    "p99": 539.333453,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1723.630849,
                    "min": 1681.8795149999999,
                    "p50": 1703.56717,
                    "p95": 1723.630849,
                    "p99": 1723.630849,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 449.778353,
                    "min": 435.921827,
                    "p50": 445.725894,
                    "p95": 449.778353,
                    "p99": 449.778353,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 957.844708,
                    "min": 931.298493,
                    "p50": 943.7433719999999,
                    "p95": 957.844708,
                    "p99": 957.844708,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 707.6282269999999,
                    "min": 684.365698,
                    "p50": 696.601199,
                    "p95": 707.6282269999999,
                    "p99": 707.6282269999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1049.765553,
                    "min": 1014.044327,
                    "p50": 1030.125354,
                    "p95": 1049.765553,
                    "p99": 1049.765553,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1256.665352,
                    "min": 1104.137495,
                    "p50": 1126.294261,
                    "p95": 1256.665352,
                    "p99": 1256.665352,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1510.334302,
                    "min": 1472.569477,
                    "p50": 1482.566955,
                    "p95": 1510.334302,
                    "p99": 1510.334302,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1227.792731,
                    "min": 1197.833645,
                    "p50": 1206.291239,
                    "p95": 1227.792731,
                    "p99": 1227.792731,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 815.1206679999999,
                    "min": 775.7520519999999,
                    "p50": 781.193714,
                    "p95": 815.1206679999999,
                    "p99": 815.1206679999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.178494,
                    "min": 268.753722,
                    "p50": 271.048793,
                    "p95": 291.178494,
                    "p99": 291.178494,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1000.088849,
                    "min": 959.192456,
                    "p50": 964.273243,
                    "p95": 1000.088849,
                    "p99": 1000.088849,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 736.896118,
                    "min": 711.9504969999999,
                    "p50": 723.8617019999999,
                    "p95": 736.896118,
                    "p99": 736.896118,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 613.396339,
                    "min": 581.641034,
                    "p50": 599.644983,
                    "p95": 613.396339,
                    "p99": 613.396339,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 433.672619,
                    "min": 393.933539,
                    "p50": 402.397366,
                    "p95": 433.672619,
                    "p99": 433.672619,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 239.60636399999999,
                    "min": 206.529574,
                    "p50": 224.681909,
                    "p95": 239.60636399999999,
                    "p99": 239.60636399999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 372.160192,
                    "min": 335.396343,
                    "p50": 342.481389,
                    "p95": 372.160192,
                    "p99": 372.160192,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 914.825262,
                    "min": 901.986541,
                    "p50": 907.129513,
                    "p95": 914.825262,
                    "p99": 914.825262,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1139.2730259999998,
                    "min": 1111.998838,
                    "p50": 1123.592733,
                    "p95": 1139.2730259999998,
                    "p99": 1139.2730259999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 496.575042,
                    "min": 460.443945,
                    "p50": 481.59132,
                    "p95": 496.575042,
                    "p99": 496.575042,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.557012,
                    "min": 652.54356,
                    "p50": 657.5514529999999,
                    "p95": 673.557012,
                    "p99": 673.557012,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1315.384838,
                    "min": 1262.389487,
                    "p50": 1287.877395,
                    "p95": 1315.384838,
                    "p99": 1315.384838,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 801.384069,
                    "min": 770.527071,
                    "p50": 784.071183,
                    "p95": 801.384069,
                    "p99": 801.384069,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 535.834512,
                    "min": 522.4591429999999,
                    "p50": 529.091539,
                    "p95": 535.834512,
                    "p99": 535.834512,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 852.8700299999999,
                    "min": 834.790294,
                    "p50": 843.576384,
                    "p95": 852.8700299999999,
                    "p99": 852.8700299999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2367.8269419999997,
                    "min": 2346.979488,
                    "p50": 2356.693484,
                    "p95": 2367.8269419999997,
                    "p99": 2367.8269419999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1286.582218,
                    "min": 1256.664716,
                    "p50": 1276.617493,
                    "p95": 1286.582218,
                    "p99": 1286.582218,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1605.33788,
                    "min": 1562.1927839999998,
                    "p50": 1596.809135,
                    "p95": 1605.33788,
                    "p99": 1605.33788,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1757.074048,
                    "min": 1733.429258,
                    "p50": 1745.032788,
                    "p95": 1757.074048,
                    "p99": 1757.074048,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2229.091665,
                    "min": 2183.542043,
                    "p50": 2216.6375749999997,
                    "p95": 2229.091665,
                    "p99": 2229.091665,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2072.708511,
                    "min": 2037.522583,
                    "p50": 2054.746906,
                    "p95": 2072.708511,
                    "p99": 2072.708511,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 689.620511,
                    "min": 635.83685,
                    "p50": 654.644937,
                    "p95": 689.620511,
                    "p99": 689.620511,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1488.511855,
                    "min": 1415.553756,
                    "p50": 1456.6697729999999,
                    "p95": 1488.511855,
                    "p99": 1488.511855,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1937.892977,
                    "min": 1872.224162,
                    "p50": 1901.1799139999998,
                    "p95": 1937.892977,
                    "p99": 1937.892977,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2766.316084,
                    "min": 2720.884062,
                    "p50": 2752.657283,
                    "p95": 2766.316084,
                    "p99": 2766.316084,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 821.9642339999999,
                    "min": 801.926687,
                    "p50": 813.8731379999999,
                    "p95": 821.9642339999999,
                    "p99": 821.9642339999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1134.830268,
                    "min": 1101.165112,
                    "p50": 1122.00234,
                    "p95": 1134.830268,
                    "p99": 1134.830268,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 528.924417,
                    "min": 485.47673499999996,
                    "p50": 505.421705,
                    "p95": 528.924417,
                    "p99": 528.924417,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 981.436696,
                    "min": 951.711466,
                    "p50": 967.785047,
                    "p95": 981.436696,
                    "p99": 981.436696,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3184.3617959999997,
                    "min": 3107.7799219999997,
                    "p50": 3147.450328,
                    "p95": 3184.3617959999997,
                    "p99": 3184.3617959999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3134.404401,
                    "min": 3059.530565,
                    "p50": 3089.727513,
                    "p95": 3134.404401,
                    "p99": 3134.404401,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2188.7950029999997,
                    "min": 2135.586241,
                    "p50": 2169.266276,
                    "p95": 2188.7950029999997,
                    "p99": 2188.7950029999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1923.017081,
                    "min": 1848.8735709999999,
                    "p50": 1871.659696,
                    "p95": 1923.017081,
                    "p99": 1923.017081,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1438.769992,
                    "min": 1387.3854569999999,
                    "p50": 1407.454244,
                    "p95": 1438.769992,
                    "p99": 1438.769992,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1282.76031,
                    "min": 1244.13492,
                    "p50": 1264.0365379999998,
                    "p95": 1282.76031,
                    "p99": 1282.76031,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 978.651046,
                    "min": 935.177139,
                    "p50": 965.6546549999999,
                    "p95": 978.651046,
                    "p99": 978.651046,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2052.2562669999998,
                    "min": 1988.550471,
                    "p50": 2012.6440989999999,
                    "p95": 2052.2562669999998,
                    "p99": 2052.2562669999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 653.481466,
                    "min": 623.937178,
                    "p50": 642.057234,
                    "p95": 653.481466,
                    "p99": 653.481466,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1745.7607779999998,
                    "min": 1687.3880339999998,
                    "p50": 1713.9634489999999,
                    "p95": 1745.7607779999998,
                    "p99": 1745.7607779999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 812.810604,
                    "min": 791.769599,
                    "p50": 794.0722129999999,
                    "p95": 812.810604,
                    "p99": 812.810604,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2732.5871119999997,
                    "min": 2698.598467,
                    "p50": 2726.750963,
                    "p95": 2732.5871119999997,
                    "p99": 2732.5871119999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 502.303881,
                    "min": 477.45455999999996,
                    "p50": 496.429985,
                    "p95": 502.303881,
                    "p99": 502.303881,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1127.244385,
                    "min": 1088.891097,
                    "p50": 1110.765022,
                    "p95": 1127.244385,
                    "p99": 1127.244385,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2353.4563789999997,
                    "min": 2303.67409,
                    "p50": 2345.9524699999997,
                    "p95": 2353.4563789999997,
                    "p99": 2353.4563789999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1597.648676,
                    "min": 1536.8943789999998,
                    "p50": 1561.806914,
                    "p95": 1597.648676,
                    "p99": 1597.648676,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1655.7982279999999,
                    "min": 1606.988038,
                    "p50": 1617.248283,
                    "p95": 1655.7982279999999,
                    "p99": 1655.7982279999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 913.1515589999999,
                    "min": 890.18756,
                    "p50": 896.2765039999999,
                    "p95": 913.1515589999999,
                    "p99": 913.1515589999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 796.8408049999999,
                    "min": 751.079739,
                    "p50": 777.477805,
                    "p95": 796.8408049999999,
                    "p99": 796.8408049999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1508.892646,
                    "min": 1471.926955,
                    "p50": 1486.042367,
                    "p95": 1508.892646,
                    "p99": 1508.892646,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2953.491099,
                    "min": 2907.54344,
                    "p50": 2925.9487169999998,
                    "p95": 2953.491099,
                    "p99": 2953.491099,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 626.0084459999999,
                    "min": 597.707289,
                    "p50": 612.577101,
                    "p95": 626.0084459999999,
                    "p99": 626.0084459999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1056.590548,
                    "min": 1035.29343,
                    "p50": 1047.782941,
                    "p95": 1056.590548,
                    "p99": 1056.590548,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 476.44115999999997,
                    "min": 455.22247,
                    "p50": 463.47792499999997,
                    "p95": 476.44115999999997,
                    "p99": 476.44115999999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2240.451455,
                    "min": 2190.9111589999998,
                    "p50": 2208.434388,
                    "p95": 2240.451455,
                    "p99": 2240.451455,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2088.09483,
                    "min": 2034.823639,
                    "p50": 2065.586356,
                    "p95": 2088.09483,
                    "p99": 2088.09483,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1799.490685,
                    "min": 1757.6547289999999,
                    "p50": 1777.241411,
                    "p95": 1799.490685,
                    "p99": 1799.490685,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1962.3600509999999,
                    "min": 1894.024631,
                    "p50": 1917.8607379999999,
                    "p95": 1962.3600509999999,
                    "p99": 1962.3600509999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1366.771923,
                    "min": 1317.8963669999998,
                    "p50": 1348.351266,
                    "p95": 1366.771923,
                    "p99": 1366.771923,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2593.191202,
                    "min": 2529.761857,
                    "p50": 2571.051525,
                    "p95": 2593.191202,
                    "p99": 2593.191202,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1231.455968,
                    "min": 1186.221382,
                    "p50": 1197.0539919999999,
                    "p95": 1231.455968,
                    "p99": 1231.455968,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 986.540387,
                    "min": 911.1770419999999,
                    "p50": 927.215776,
                    "p95": 986.540387,
                    "p99": 986.540387,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 524.084566,
                    "min": 498.892134,
                    "p50": 516.394152,
                    "p95": 524.084566,
                    "p99": 524.084566,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1076.448659,
                    "min": 1047.506888,
                    "p50": 1060.3740269999998,
                    "p95": 1076.448659,
                    "p99": 1076.448659,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1253.1304249999998,
                    "min": 1220.638314,
                    "p50": 1239.25343,
                    "p95": 1253.1304249999998,
                    "p99": 1253.1304249999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 246.185468,
                    "min": 226.585207,
                    "p50": 239.051021,
                    "p95": 246.185468,
                    "p99": 246.185468,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 871.1922969999999,
                    "min": 843.045843,
                    "p50": 850.6491259999999,
                    "p95": 871.1922969999999,
                    "p99": 871.1922969999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 496.47215,
                    "min": 433.742895,
                    "p50": 443.11695299999997,
                    "p95": 496.47215,
                    "p99": 496.47215,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 434.26271599999995,
                    "min": 299.54502099999996,
                    "p50": 313.989414,
                    "p95": 434.26271599999995,
                    "p99": 434.26271599999995,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2102.816315,
                    "min": 2067.620914,
                    "p50": 2083.867394,
                    "p95": 2102.816315,
                    "p99": 2102.816315,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 668.850327,
                    "min": 640.479411,
                    "p50": 647.27644,
                    "p95": 668.850327,
                    "p99": 668.850327,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 797.697684,
                    "min": 773.1753689999999,
                    "p50": 791.171377,
                    "p95": 797.697684,
                    "p99": 797.697684,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1434.8903679999999,
                    "min": 982.76722,
                    "p50": 988.8827749999999,
                    "p95": 1434.8903679999999,
                    "p99": 1434.8903679999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 404.72791,
                    "min": 362.839049,
                    "p50": 372.017537,
                    "p95": 404.72791,
                    "p99": 404.72791,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3515.8041319999998,
                    "min": 3420.582558,
                    "p50": 3478.7775189999998,
                    "p95": 3515.8041319999998,
                    "p99": 3515.8041319999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1508.980605,
                    "min": 1385.858114,
                    "p50": 1447.238379,
                    "p95": 1508.980605,
                    "p99": 1508.980605,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 724.452241,
                    "min": 706.056081,
                    "p50": 713.527829,
                    "p95": 724.452241,
                    "p99": 724.452241,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 603.378822,
                    "min": 565.177704,
                    "p50": 585.683481,
                    "p95": 603.378822,
                    "p99": 603.378822,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2797.2451189999997,
                    "min": 2757.184742,
                    "p50": 2778.333623,
                    "p95": 2797.2451189999997,
                    "p99": 2797.2451189999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1309.997257,
                    "min": 1266.275506,
                    "p50": 1279.4439989999998,
                    "p95": 1309.997257,
                    "p99": 1309.997257,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 418.78071,
                    "min": 396.480686,
                    "p50": 406.826282,
                    "p95": 418.78071,
                    "p99": 418.78071,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 867.954088,
                    "min": 839.7716509999999,
                    "p50": 844.215828,
                    "p95": 867.954088,
                    "p99": 867.954088,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 610.2262129999999,
                    "min": 580.795433,
                    "p50": 595.5391559999999,
                    "p95": 610.2262129999999,
                    "p99": 610.2262129999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 701.35826,
                    "min": 643.759497,
                    "p50": 653.813004,
                    "p95": 701.35826,
                    "p99": 701.35826,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 239.28310399999998,
                    "min": 206.818488,
                    "p50": 214.124945,
                    "p95": 239.28310399999998,
                    "p99": 239.28310399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 732.649738,
                    "min": 707.0105689999999,
                    "p50": 717.1484869999999,
                    "p95": 732.649738,
                    "p99": 732.649738,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 361.02881099999996,
                    "min": 332.837727,
                    "p50": 342.101809,
                    "p95": 361.02881099999996,
                    "p99": 361.02881099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 951.396482,
                    "min": 891.588486,
                    "p50": 907.131683,
                    "p95": 951.396482,
                    "p99": 951.396482,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 540.587092,
                    "min": 517.310742,
                    "p50": 533.8413899999999,
                    "p95": 540.587092,
                    "p99": 540.587092,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1135.498707,
                    "min": 1107.391345,
                    "p50": 1130.088505,
                    "p95": 1135.498707,
                    "p99": 1135.498707,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 801.3707579999999,
                    "min": 760.979613,
                    "p50": 780.3798499999999,
                    "p95": 801.3707579999999,
                    "p99": 801.3707579999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 480.437935,
                    "min": 459.239015,
                    "p50": 468.725329,
                    "p95": 480.437935,
                    "p99": 480.437935,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.85312799999997,
                    "min": 266.129205,
                    "p50": 268.36636999999996,
                    "p95": 288.85312799999997,
                    "p99": 288.85312799999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 998.5734339999999,
                    "min": 966.140773,
                    "p50": 972.664587,
                    "p95": 998.5734339999999,
                    "p99": 998.5734339999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1926.570413,
                    "min": 1893.278546,
                    "p50": 1900.8984839999998,
                    "p95": 1926.570413,
                    "p99": 1926.570413,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 595.562738,
                    "min": 567.7975789999999,
                    "p50": 582.1495249999999,
                    "p95": 595.562738,
                    "p99": 595.562738,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 666.246933,
                    "min": 632.1170609999999,
                    "p50": 649.928225,
                    "p95": 666.246933,
                    "p99": 666.246933,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.17553599999997,
                    "min": 329.44043999999997,
                    "p50": 334.135953,
                    "p95": 349.17553599999997,
                    "p99": 349.17553599999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 539.935847,
                    "min": 508.037876,
                    "p50": 516.875276,
                    "p95": 539.935847,
                    "p99": 539.935847,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 915.910793,
                    "min": 885.468567,
                    "p50": 896.4499159999999,
                    "p95": 915.910793,
                    "p99": 915.910793,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 229.628433,
                    "min": 203.59400499999998,
                    "p50": 217.88240199999998,
                    "p95": 229.628433,
                    "p99": 229.628433,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1913.997842,
                    "min": 1851.8702899999998,
                    "p50": 1881.695855,
                    "p95": 1913.997842,
                    "p99": 1913.997842,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 711.191739,
                    "min": 693.0698729999999,
                    "p50": 706.541556,
                    "p95": 711.191739,
                    "p99": 711.191739,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 845.4580229999999,
                    "min": 813.6159809999999,
                    "p50": 833.0413679999999,
                    "p95": 845.4580229999999,
                    "p99": 845.4580229999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 430.508364,
                    "min": 388.056917,
                    "p50": 396.79470699999996,
                    "p95": 430.508364,
                    "p99": 430.508364,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1129.436692,
                    "min": 1092.773181,
                    "p50": 1104.340822,
                    "p95": 1129.436692,
                    "p99": 1129.436692,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 779.615947,
                    "min": 756.2010789999999,
                    "p50": 768.290098,
                    "p95": 779.615947,
                    "p99": 779.615947,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.19325699999996,
                    "min": 454.084906,
                    "p50": 461.84218899999996,
                    "p95": 474.19325699999996,
                    "p99": 474.19325699999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2537.674888,
                    "min": 2459.927488,
                    "p50": 2505.252321,
                    "p95": 2537.674888,
                    "p99": 2537.674888,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 282.91318,
                    "min": 265.70322699999997,
                    "p50": 274.466237,
                    "p95": 282.91318,
                    "p99": 282.91318,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 979.421375,
                    "min": 942.80331,
                    "p50": 956.014834,
                    "p95": 979.421375,
                    "p99": 979.421375,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1286.3765509999998,
                    "min": 1249.126034,
                    "p50": 1253.767198,
                    "p95": 1286.3765509999998,
                    "p99": 1286.3765509999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1807.895654,
                    "min": 1695.7085319999999,
                    "p50": 1789.856212,
                    "p95": 1807.895654,
                    "p99": 1807.895654,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1291.024708,
                    "min": 1159.071281,
                    "p50": 1260.494864,
                    "p95": 1291.024708,
                    "p99": 1291.024708,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1863.6916079999999,
                    "min": 1826.449199,
                    "p50": 1848.178124,
                    "p95": 1863.6916079999999,
                    "p99": 1863.6916079999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1597.899698,
                    "min": 1567.047435,
                    "p50": 1581.164624,
                    "p95": 1597.899698,
                    "p99": 1597.899698,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1238.9647559999999,
                    "min": 1195.516744,
                    "p50": 1228.164074,
                    "p95": 1238.9647559999999,
                    "p99": 1238.9647559999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1475.939194,
                    "min": 1452.9037329999999,
                    "p50": 1468.4045529999999,
                    "p95": 1475.939194,
                    "p99": 1475.939194,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1711.3759129999999,
                    "min": 1674.0129519999998,
                    "p50": 1699.029622,
                    "p95": 1711.3759129999999,
                    "p99": 1711.3759129999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 397.015761,
                    "min": 389.56879699999996,
                    "p50": 395.42612499999996,
                    "p95": 397.015761,
                    "p99": 397.015761,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 515.964614,
                    "min": 500.802825,
                    "p50": 513.037121,
                    "p95": 515.964614,
                    "p99": 515.964614,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 669.152387,
                    "min": 611.939683,
                    "p50": 639.820641,
                    "p95": 669.152387,
                    "p99": 669.152387,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2544.949495,
                    "min": 2375.000745,
                    "p50": 2438.71359,
                    "p95": 2544.949495,
                    "p99": 2544.949495,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 788.764998,
                    "min": 743.135584,
                    "p50": 748.59241,
                    "p95": 788.764998,
                    "p99": 788.764998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2337.931628,
                    "min": 2116.177296,
                    "p50": 2176.6988069999998,
                    "p95": 2337.931628,
                    "p99": 2337.931628,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1149.5403489999999,
                    "min": 953.869879,
                    "p50": 1019.0375909999999,
                    "p95": 1149.5403489999999,
                    "p99": 1149.5403489999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 953.107549,
                    "min": 849.915713,
                    "p50": 884.248348,
                    "p95": 953.107549,
                    "p99": 953.107549,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 465.91732199999996,
                    "min": 417.37516,
                    "p50": 443.514371,
                    "p95": 465.91732199999996,
                    "p99": 465.91732199999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 464.301272,
                    "min": 411.136289,
                    "p50": 438.388806,
                    "p95": 464.301272,
                    "p99": 464.301272,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 557.177545,
                    "min": 495.09869499999996,
                    "p50": 508.539921,
                    "p95": 557.177545,
                    "p99": 557.177545,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 126.66675599999999,
                    "min": 108.882753,
                    "p50": 116.84051799999999,
                    "p95": 126.66675599999999,
                    "p99": 126.66675599999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 210.655861,
                    "min": 159.586961,
                    "p50": 203.196518,
                    "p95": 210.655861,
                    "p99": 210.655861,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 401.730213,
                    "min": 280.770779,
                    "p50": 326.581228,
                    "p95": 401.730213,
                    "p99": 401.730213,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 106.269069,
                    "min": 67.881604,
                    "p50": 103.39963,
                    "p95": 106.269069,
                    "p99": 106.269069,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 159.69675999999998,
                    "min": 114.677703,
                    "p50": 155.302513,
                    "p95": 159.69675999999998,
                    "p99": 159.69675999999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 177.14756599999998,
                    "min": 161.736053,
                    "p50": 164.642594,
                    "p95": 177.14756599999998,
                    "p99": 177.14756599999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 852.656473,
                    "min": 766.586683,
                    "p50": 798.518481,
                    "p95": 852.656473,
                    "p99": 852.656473,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1018.71744,
                    "min": 929.321031,
                    "p50": 976.733571,
                    "p95": 1018.71744,
                    "p99": 1018.71744,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 225.98318899999998,
                    "min": 196.16776299999998,
                    "p50": 208.244586,
                    "p95": 225.98318899999998,
                    "p99": 225.98318899999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3537.627951,
                    "min": 3366.624491,
                    "p50": 3433.3468319999997,
                    "p95": 3537.627951,
                    "p99": 3537.627951,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 95.605752,
                    "min": 85.058387,
                    "p50": 89.39208599999999,
                    "p95": 95.605752,
                    "p99": 95.605752,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 174.86107099999998,
                    "min": 137.87599699999998,
                    "p50": 150.61843,
                    "p95": 174.86107099999998,
                    "p99": 174.86107099999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1008.84893,
                    "min": 927.368019,
                    "p50": 961.509725,
                    "p95": 1008.84893,
                    "p99": 1008.84893,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 887.730523,
                    "min": 836.236464,
                    "p50": 859.6286319999999,
                    "p95": 887.730523,
                    "p99": 887.730523,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 729.477548,
                    "min": 673.812963,
                    "p50": 714.528545,
                    "p95": 729.477548,
                    "p99": 729.477548,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 831.814217,
                    "min": 742.780071,
                    "p50": 804.5820249999999,
                    "p95": 831.814217,
                    "p99": 831.814217,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 419.309843,
                    "min": 393.07699499999995,
                    "p50": 414.56602499999997,
                    "p95": 419.309843,
                    "p99": 419.309843,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2383.684751,
                    "min": 2164.3502679999997,
                    "p50": 2247.204613,
                    "p95": 2383.684751,
                    "p99": 2383.684751,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1404.139604,
                    "min": 1293.20896,
                    "p50": 1309.760082,
                    "p95": 1404.139604,
                    "p99": 1404.139604,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1024.388534,
                    "min": 958.981329,
                    "p50": 983.724522,
                    "p95": 1024.388534,
                    "p99": 1024.388534,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 975.055788,
                    "min": 886.918647,
                    "p50": 906.364076,
                    "p95": 975.055788,
                    "p99": 975.055788,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 565.7822279999999,
                    "min": 526.884972,
                    "p50": 538.064761,
                    "p95": 565.7822279999999,
                    "p99": 565.7822279999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1615.833036,
                    "min": 1452.09979,
                    "p50": 1493.625638,
                    "p95": 1615.833036,
                    "p99": 1615.833036,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 273.696578,
                    "min": 237.35635,
                    "p50": 255.842399,
                    "p95": 273.696578,
                    "p99": 273.696578,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1220.857644,
                    "min": 1090.930109,
                    "p50": 1124.483847,
                    "p95": 1220.857644,
                    "p99": 1220.857644,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 656.2928509999999,
                    "min": 606.9701779999999,
                    "p50": 617.232935,
                    "p95": 656.2928509999999,
                    "p99": 656.2928509999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 526.901517,
                    "min": 447.363191,
                    "p50": 476.48477599999995,
                    "p95": 526.901517,
                    "p99": 526.901517,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 353.803906,
                    "min": 319.731338,
                    "p50": 333.53482299999996,
                    "p95": 353.803906,
                    "p99": 353.803906,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1119.687804,
                    "min": 1029.755637,
                    "p50": 1048.3570809999999,
                    "p95": 1119.687804,
                    "p99": 1119.687804,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2648.600771,
                    "min": 1964.674707,
                    "p50": 2178.2016289999997,
                    "p95": 2648.600771,
                    "p99": 2648.600771,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 457.43055899999996,
                    "min": 362.781228,
                    "p50": 373.226122,
                    "p95": 457.43055899999996,
                    "p99": 457.43055899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1729.846699,
                    "min": 1380.234015,
                    "p50": 1427.3936059999999,
                    "p95": 1729.846699,
                    "p99": 1729.846699,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1873.9521849999999,
                    "min": 1487.4694769999999,
                    "p50": 1528.521434,
                    "p95": 1873.9521849999999,
                    "p99": 1873.9521849999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 598.041842,
                    "min": 474.13179199999996,
                    "p50": 493.52214499999997,
                    "p95": 598.041842,
                    "p99": 598.041842,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1625.9712789999999,
                    "min": 1247.598391,
                    "p50": 1323.734925,
                    "p95": 1625.9712789999999,
                    "p99": 1625.9712789999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2170.592476,
                    "min": 1704.542624,
                    "p50": 1747.051921,
                    "p95": 2170.592476,
                    "p99": 2170.592476,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 890.688413,
                    "min": 685.315706,
                    "p50": 719.3843459999999,
                    "p95": 890.688413,
                    "p99": 890.688413,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1312.028873,
                    "min": 1029.980646,
                    "p50": 1057.358857,
                    "p95": 1312.028873,
                    "p99": 1312.028873,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1167.39417,
                    "min": 915.259511,
                    "p50": 956.8800239999999,
                    "p95": 1167.39417,
                    "p99": 1167.39417,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2844.650126,
                    "min": 2235.5944759999998,
                    "p50": 2305.954388,
                    "p95": 2844.650126,
                    "p99": 2844.650126,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1446.651269,
                    "min": 1117.976363,
                    "p50": 1176.943141,
                    "p95": 1446.651269,
                    "p99": 1446.651269,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1024.4695669999999,
                    "min": 814.184862,
                    "p50": 826.5646059999999,
                    "p95": 1024.4695669999999,
                    "p99": 1024.4695669999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 737.594713,
                    "min": 585.6252529999999,
                    "p50": 605.75958,
                    "p95": 737.594713,
                    "p99": 737.594713,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2028.897554,
                    "min": 1564.840047,
                    "p50": 1615.528768,
                    "p95": 2028.897554,
                    "p99": 2028.897554,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 137.060411,
                    "min": 104.358047,
                    "p50": 122.12757599999999,
                    "p95": 137.060411,
                    "p99": 137.060411,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 45.398056,
                    "min": 25.565924,
                    "p50": 38.396536,
                    "p95": 45.398056,
                    "p99": 45.398056,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 237.102637,
                    "min": 194.804096,
                    "p50": 221.01343,
                    "p95": 237.102637,
                    "p99": 237.102637,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 481.43623099999996,
                    "min": 454.61855499999996,
                    "p50": 468.672736,
                    "p95": 481.43623099999996,
                    "p99": 481.43623099999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 56.115013999999995,
                    "min": 34.309829,
                    "p50": 51.823225,
                    "p95": 56.115013999999995,
                    "p99": 56.115013999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 58.996449999999996,
                    "min": 30.837334,
                    "p50": 50.863341999999996,
                    "p95": 58.996449999999996,
                    "p99": 58.996449999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 201.898924,
                    "min": 158.285706,
                    "p50": 185.72947499999998,
                    "p95": 201.898924,
                    "p99": 201.898924,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 45.540811,
                    "min": 42.888991,
                    "p50": 44.102868,
                    "p95": 45.540811,
                    "p99": 45.540811,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 40.507439999999995,
                    "min": 26.891772,
                    "p50": 29.271535999999998,
                    "p95": 40.507439999999995,
                    "p99": 40.507439999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 73.434381,
                    "min": 68.304642,
                    "p50": 73.194544,
                    "p95": 73.434381,
                    "p99": 73.434381,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 181.939719,
                    "min": 113.503153,
                    "p50": 129.220025,
                    "p95": 181.939719,
                    "p99": 181.939719,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 38.207454,
                    "min": 26.656067999999998,
                    "p50": 26.94491,
                    "p95": 38.207454,
                    "p99": 38.207454,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 62.535683,
                    "min": 49.367714,
                    "p50": 56.434135999999995,
                    "p95": 62.535683,
                    "p99": 62.535683,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 67.4157,
                    "min": 62.347978999999995,
                    "p50": 63.579102,
                    "p95": 67.4157,
                    "p99": 67.4157,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 53.460381,
                    "min": 45.083152999999996,
                    "p50": 51.562723,
                    "p95": 53.460381,
                    "p99": 53.460381,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 77.61807999999999,
                    "min": 42.264826,
                    "p50": 52.554798999999996,
                    "p95": 77.61807999999999,
                    "p99": 77.61807999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 61.583571,
                    "min": 54.436927,
                    "p50": 56.880328999999996,
                    "p95": 61.583571,
                    "p99": 61.583571,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 56.020711,
                    "min": 49.629584,
                    "p50": 53.294086,
                    "p95": 56.020711,
                    "p99": 56.020711,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 128.27584099999999,
                    "min": 49.225507,
                    "p50": 57.159209999999995,
                    "p95": 128.27584099999999,
                    "p99": 128.27584099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 397.804846,
                    "min": 349.018427,
                    "p50": 378.61211099999997,
                    "p95": 397.804846,
                    "p99": 397.804846,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 226.688921,
                    "min": 189.52670999999998,
                    "p50": 199.173803,
                    "p95": 226.688921,
                    "p99": 226.688921,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 685.937361,
                    "min": 540.746545,
                    "p50": 565.945962,
                    "p95": 685.937361,
                    "p99": 685.937361,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 333.11119099999996,
                    "min": 240.755256,
                    "p50": 289.05339,
                    "p95": 333.11119099999996,
                    "p99": 333.11119099999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 466.14608999999996,
                    "min": 409.747754,
                    "p50": 452.48558599999996,
                    "p95": 466.14608999999996,
                    "p99": 466.14608999999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2241.343774,
                    "min": 1930.230157,
                    "p50": 2094.753197,
                    "p95": 2241.343774,
                    "p99": 2241.343774,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 481.063112,
                    "min": 381.959678,
                    "p50": 433.915105,
                    "p95": 481.063112,
                    "p99": 481.063112,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 585.553005,
                    "min": 477.138174,
                    "p50": 518.370908,
                    "p95": 585.553005,
                    "p99": 585.553005,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 815.665208,
                    "min": 623.96406,
                    "p50": 691.846224,
                    "p95": 815.665208,
                    "p99": 815.665208,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 372.45198899999997,
                    "min": 274.722902,
                    "p50": 307.351627,
                    "p95": 372.45198899999997,
                    "p99": 372.45198899999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1672.6691099999998,
                    "min": 1392.209907,
                    "p50": 1588.620445,
                    "p95": 1672.6691099999998,
                    "p99": 1672.6691099999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 400.75692499999997,
                    "min": 275.272998,
                    "p50": 321.157709,
                    "p95": 400.75692499999997,
                    "p99": 400.75692499999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 539.7076139999999,
                    "min": 415.737374,
                    "p50": 440.97054299999996,
                    "p95": 539.7076139999999,
                    "p99": 539.7076139999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1262.995469,
                    "min": 1052.7882769999999,
                    "p50": 1117.546368,
                    "p95": 1262.995469,
                    "p99": 1262.995469,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 272.82624699999997,
                    "min": 139.33596,
                    "p50": 173.334309,
                    "p95": 272.82624699999997,
                    "p99": 272.82624699999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4134.642344,
                    "min": 3796.1297409999997,
                    "p50": 3971.159597,
                    "p95": 4134.642344,
                    "p99": 4134.642344,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.529672,
                    "min": 126.934508,
                    "p50": 141.03903,
                    "p95": 178.529672,
                    "p99": 178.529672,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 859.5514979999999,
                    "min": 516.762936,
                    "p50": 609.574467,
                    "p95": 859.5514979999999,
                    "p99": 859.5514979999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 927.7779859999999,
                    "min": 733.658143,
                    "p50": 848.9729189999999,
                    "p95": 927.7779859999999,
                    "p99": 927.7779859999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 74.548563,
                    "min": 57.988459,
                    "p50": 70.380691,
                    "p95": 74.548563,
                    "p99": 74.548563,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 96.02311999999999,
                    "min": 80.402954,
                    "p50": 88.129179,
                    "p95": 96.02311999999999,
                    "p99": 96.02311999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.696241,
                    "min": 39.987227999999995,
                    "p50": 44.758672,
                    "p95": 47.696241,
                    "p99": 47.696241,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 76.075784,
                    "min": 62.644672,
                    "p50": 75.09631499999999,
                    "p95": 76.075784,
                    "p99": 76.075784,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 38.613949999999996,
                    "min": 27.052159,
                    "p50": 33.663455,
                    "p95": 38.613949999999996,
                    "p99": 38.613949999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 217.87050299999999,
                    "min": 170.56763999999998,
                    "p50": 188.438245,
                    "p95": 217.87050299999999,
                    "p99": 217.87050299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 154.350915,
                    "min": 96.290538,
                    "p50": 109.19689,
                    "p95": 154.350915,
                    "p99": 154.350915,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.199782,
                    "min": 66.11,
                    "p50": 77.256333,
                    "p95": 132.199782,
                    "p99": 132.199782,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 291.448644,
                    "min": 262.564386,
                    "p50": 266.497639,
                    "p95": 291.448644,
                    "p99": 291.448644,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 64.226338,
                    "min": 54.874044,
                    "p50": 62.189822,
                    "p95": 64.226338,
                    "p99": 64.226338,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 63.956565999999995,
                    "min": 50.96192,
                    "p50": 58.522524,
                    "p95": 63.956565999999995,
                    "p99": 63.956565999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 109.27634099999999,
                    "min": 90.792019,
                    "p50": 97.749758,
                    "p95": 109.27634099999999,
                    "p99": 109.27634099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.135241,
                    "min": 56.690951999999996,
                    "p50": 61.757183999999995,
                    "p95": 72.135241,
                    "p99": 72.135241,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 146.300286,
                    "min": 102.78531199999999,
                    "p50": 114.448729,
                    "p95": 146.300286,
                    "p99": 146.300286,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 563.7736219999999,
                    "min": 498.94449,
                    "p50": 520.391975,
                    "p95": 563.7736219999999,
                    "p99": 563.7736219999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 92.024372,
                    "min": 76.307169,
                    "p50": 90.088234,
                    "p95": 92.024372,
                    "p99": 92.024372,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 300.277262,
                    "min": 222.409637,
                    "p50": 246.21773499999998,
                    "p95": 300.277262,
                    "p99": 300.277262,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 184.54431399999999,
                    "min": 109.721316,
                    "p50": 124.34153099999999,
                    "p95": 184.54431399999999,
                    "p99": 184.54431399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 157.532582,
                    "min": 82.506632,
                    "p50": 92.95955,
                    "p95": 157.532582,
                    "p99": 157.532582,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 73.068246,
                    "min": 47.301651,
                    "p50": 65.304216,
                    "p95": 73.068246,
                    "p99": 73.068246,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.191885,
                    "min": 22.684065,
                    "p50": 26.994203,
                    "p95": 27.191885,
                    "p99": 27.191885,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.075896999999998,
                    "min": 24.051527999999998,
                    "p50": 26.868367,
                    "p95": 27.075896999999998,
                    "p99": 27.075896999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 30.761976999999998,
                    "min": 23.807197,
                    "p50": 26.94172,
                    "p95": 30.761976999999998,
                    "p99": 30.761976999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.244911,
                    "min": 25.769257999999997,
                    "p50": 26.732574,
                    "p95": 27.244911,
                    "p99": 27.244911,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.372733,
                    "min": 25.572775999999998,
                    "p50": 26.865617,
                    "p95": 27.372733,
                    "p99": 27.372733,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.246029999999998,
                    "min": 23.863664,
                    "p50": 26.659947,
                    "p95": 27.246029999999998,
                    "p99": 27.246029999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.496772,
                    "min": 23.678689,
                    "p50": 27.082465,
                    "p95": 28.496772,
                    "p99": 28.496772,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 80.04108,
                    "min": 26.618610999999998,
                    "p50": 27.131175,
                    "p95": 80.04108,
                    "p99": 80.04108,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 81.760648,
                    "min": 26.967281,
                    "p50": 43.417975999999996,
                    "p95": 81.760648,
                    "p99": 81.760648,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.221659,
                    "min": 26.667803,
                    "p50": 27.002668,
                    "p95": 27.221659,
                    "p99": 27.221659,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 41.969803999999996,
                    "min": 26.534775999999997,
                    "p50": 34.867534,
                    "p95": 41.969803999999996,
                    "p99": 41.969803999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.035833,
                    "min": 19.856773999999998,
                    "p50": 26.821482999999997,
                    "p95": 27.035833,
                    "p99": 27.035833,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.771738,
                    "min": 19.140345,
                    "p50": 27.145764999999997,
                    "p95": 27.771738,
                    "p99": 27.771738,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 29.305217,
                    "min": 25.037803,
                    "p50": 26.739751,
                    "p95": 29.305217,
                    "p99": 29.305217,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 104.30623899999999,
                    "min": 74.921964,
                    "p50": 88.641138,
                    "p95": 104.30623899999999,
                    "p99": 104.30623899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.761743,
                    "min": 26.308598,
                    "p50": 27.321876999999997,
                    "p95": 27.761743,
                    "p99": 27.761743,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.411043,
                    "min": 25.259698,
                    "p50": 27.070216,
                    "p95": 27.411043,
                    "p99": 27.411043,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 28.374067999999998,
                    "min": 26.367666999999997,
                    "p50": 27.233824,
                    "p95": 28.374067999999998,
                    "p99": 28.374067999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 368.646037,
                    "min": 330.647802,
                    "p50": 360.37447299999997,
                    "p95": 368.646037,
                    "p99": 368.646037,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.294824,
                    "min": 109.370159,
                    "p50": 141.790584,
                    "p95": 149.294824,
                    "p99": 149.294824,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4394.352127,
                    "min": 3963.778473,
                    "p50": 4271.266883,
                    "p95": 4394.352127,
                    "p99": 4394.352127,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 963.9371239999999,
                    "min": 805.552829,
                    "p50": 842.2468389999999,
                    "p95": 963.9371239999999,
                    "p99": 963.9371239999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 355.009091,
                    "min": 273.95667499999996,
                    "p50": 345.38129399999997,
                    "p95": 355.009091,
                    "p99": 355.009091,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 196.37477199999998,
                    "min": 144.800839,
                    "p50": 181.042793,
                    "p95": 196.37477199999998,
                    "p99": 196.37477199999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.69158,
                    "min": 215.525925,
                    "p50": 257.963392,
                    "p95": 306.69158,
                    "p99": 306.69158,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1297.308168,
                    "min": 1182.84004,
                    "p50": 1214.139165,
                    "p95": 1297.308168,
                    "p99": 1297.308168,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 580.923152,
                    "min": 478.50330599999995,
                    "p50": 537.071868,
                    "p95": 580.923152,
                    "p99": 580.923152,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 539.8013129999999,
                    "min": 448.78387799999996,
                    "p50": 492.413097,
                    "p95": 539.8013129999999,
                    "p99": 539.8013129999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1791.23712,
                    "min": 1458.630881,
                    "p50": 1616.3480439999998,
                    "p95": 1791.23712,
                    "p99": 1791.23712,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2213.3017769999997,
                    "min": 1895.918418,
                    "p50": 2133.6803059999997,
                    "p95": 2213.3017769999997,
                    "p99": 2213.3017769999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 667.3775899999999,
                    "min": 502.804919,
                    "p50": 584.300269,
                    "p95": 667.3775899999999,
                    "p99": 667.3775899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 279.06730899999997,
                    "min": 175.889254,
                    "p50": 214.05110499999998,
                    "p95": 279.06730899999997,
                    "p99": 279.06730899999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 809.76522,
                    "min": 642.660086,
                    "p50": 719.259117,
                    "p95": 809.76522,
                    "p99": 809.76522,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 445.415104,
                    "min": 345.82856999999996,
                    "p50": 381.891423,
                    "p95": 445.415104,
                    "p99": 445.415104,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 601.8877679999999,
                    "min": 475.60065499999996,
                    "p50": 550.018653,
                    "p95": 601.8877679999999,
                    "p99": 601.8877679999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 749.134597,
                    "min": 551.818372,
                    "p50": 676.781992,
                    "p95": 749.134597,
                    "p99": 749.134597,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 362.240542,
                    "min": 311.720167,
                    "p50": 317.32615899999996,
                    "p95": 362.240542,
                    "p99": 362.240542,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1615.664828,
                    "min": 1337.7220949999999,
                    "p50": 1488.5682749999999,
                    "p95": 1615.664828,
                    "p99": 1615.664828,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.404276,
                    "min": 200.057541,
                    "p50": 221.18966799999998,
                    "p95": 322.404276,
                    "p99": 322.404276,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 564.100339,
                    "min": 410.858134,
                    "p50": 471.59857999999997,
                    "p95": 564.100339,
                    "p99": 564.100339,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.4060599999999,
                    "min": 641.092942,
                    "p50": 681.647717,
                    "p95": 705.4060599999999,
                    "p99": 705.4060599999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 305.947213,
                    "min": 222.996464,
                    "p50": 273.45509799999996,
                    "p95": 305.947213,
                    "p99": 305.947213,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 797.379676,
                    "min": 637.059721,
                    "p50": 732.743209,
                    "p95": 797.379676,
                    "p99": 797.379676,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 495.859316,
                    "min": 382.172231,
                    "p50": 453.295997,
                    "p95": 495.859316,
                    "p99": 495.859316,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 960.9559059999999,
                    "min": 786.0752229999999,
                    "p50": 854.1623169999999,
                    "p95": 960.9559059999999,
                    "p99": 960.9559059999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 337.86417,
                    "min": 291.465033,
                    "p50": 297.721771,
                    "p95": 337.86417,
                    "p99": 337.86417,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 576.510755,
                    "min": 464.688221,
                    "p50": 548.872162,
                    "p95": 576.510755,
                    "p99": 576.510755,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2025.703294,
                    "min": 1754.325132,
                    "p50": 1995.835793,
                    "p95": 2025.703294,
                    "p99": 2025.703294,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 680.0256999999999,
                    "min": 500.664567,
                    "p50": 522.360282,
                    "p95": 680.0256999999999,
                    "p99": 680.0256999999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 439.317014,
                    "min": 338.80925099999996,
                    "p50": 419.61655299999995,
                    "p95": 439.317014,
                    "p99": 439.317014,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 714.198706,
                    "min": 547.4450909999999,
                    "p50": 670.53067,
                    "p95": 714.198706,
                    "p99": 714.198706,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.99882499999998,
                    "min": 165.337997,
                    "p50": 169.626896,
                    "p95": 180.99882499999998,
                    "p99": 180.99882499999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 643.6874859999999,
                    "min": 589.218364,
                    "p50": 631.626571,
                    "p95": 643.6874859999999,
                    "p99": 643.6874859999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1025.639649,
                    "min": 891.690385,
                    "p50": 1000.9256439999999,
                    "p95": 1025.639649,
                    "p99": 1025.639649,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2679.847034,
                    "min": 2338.7532619999997,
                    "p50": 2609.56185,
                    "p95": 2679.847034,
                    "p99": 2679.847034,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 489.909044,
                    "min": 337.205491,
                    "p50": 452.67785999999995,
                    "p95": 489.909044,
                    "p99": 489.909044,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 803.042473,
                    "min": 630.442984,
                    "p50": 698.626983,
                    "p95": 803.042473,
                    "p99": 803.042473,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 649.5986839999999,
                    "min": 513.868552,
                    "p50": 542.770488,
                    "p95": 649.5986839999999,
                    "p99": 649.5986839999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1066.151182,
                    "min": 1028.702601,
                    "p50": 1043.207866,
                    "p95": 1066.151182,
                    "p99": 1066.151182,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1325.337425,
                    "min": 930.696976,
                    "p50": 976.998435,
                    "p95": 1325.337425,
                    "p99": 1325.337425,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1308.83468,
                    "min": 1220.486923,
                    "p50": 1268.3658269999999,
                    "p95": 1308.83468,
                    "p99": 1308.83468,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1965.642167,
                    "min": 1543.0139179999999,
                    "p50": 1584.805821,
                    "p95": 1965.642167,
                    "p99": 1965.642167,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1418.3132879999998,
                    "min": 1338.186014,
                    "p50": 1378.733215,
                    "p95": 1418.3132879999998,
                    "p99": 1418.3132879999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1212.5089349999998,
                    "min": 1145.9244509999999,
                    "p50": 1200.151381,
                    "p95": 1212.5089349999998,
                    "p99": 1212.5089349999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2150.372375,
                    "min": 2083.610131,
                    "p50": 2136.1324839999997,
                    "p95": 2150.372375,
                    "p99": 2150.372375,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 807.3725459999999,
                    "min": 743.630626,
                    "p50": 775.409197,
                    "p95": 807.3725459999999,
                    "p99": 807.3725459999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 471.813939,
                    "min": 438.715844,
                    "p50": 461.94861899999995,
                    "p95": 471.813939,
                    "p99": 471.813939,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2019.290657,
                    "min": 1831.307364,
                    "p50": 1914.517075,
                    "p95": 2019.290657,
                    "p99": 2019.290657,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 932.183725,
                    "min": 877.2785769999999,
                    "p50": 907.2409289999999,
                    "p95": 932.183725,
                    "p99": 932.183725,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1614.935745,
                    "min": 1495.103118,
                    "p50": 1570.296339,
                    "p95": 1614.935745,
                    "p99": 1614.935745,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 901.495105,
                    "min": 894.347774,
                    "p50": 900.928637,
                    "p95": 901.495105,
                    "p99": 901.495105,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2042.30792,
                    "min": 2002.826801,
                    "p50": 2036.8254089999998,
                    "p95": 2042.30792,
                    "p99": 2042.30792,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2933.5790279999997,
                    "min": 2848.770179,
                    "p50": 2904.796667,
                    "p95": 2933.5790279999997,
                    "p99": 2933.5790279999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5745.440665,
                    "min": 5640.884768999999,
                    "p50": 5701.136587,
                    "p95": 5745.440665,
                    "p99": 5745.440665,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1601.974851,
                    "min": 1567.3150329999999,
                    "p50": 1591.7759099999998,
                    "p95": 1601.974851,
                    "p99": 1601.974851,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 763.1347939999999,
                    "min": 736.589668,
                    "p50": 745.268281,
                    "p95": 763.1347939999999,
                    "p99": 763.1347939999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 617.269716,
                    "min": 589.6927009999999,
                    "p50": 602.159638,
                    "p95": 617.269716,
                    "p99": 617.269716,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1751.674413,
                    "min": 1708.927115,
                    "p50": 1736.4315199999999,
                    "p95": 1751.674413,
                    "p99": 1751.674413,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4315.464588,
                    "min": 4218.259290999999,
                    "p50": 4281.209396,
                    "p95": 4315.464588,
                    "p99": 4315.464588,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2533.443097,
                    "min": 2488.0250459999997,
                    "p50": 2503.0881839999997,
                    "p95": 2533.443097,
                    "p99": 2533.443097,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2164.341863,
                    "min": 2108.877603,
                    "p50": 2158.428493,
                    "p95": 2164.341863,
                    "p99": 2164.341863,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1176.1333379999999,
                    "min": 1157.048963,
                    "p50": 1172.542618,
                    "p95": 1176.1333379999999,
                    "p99": 1176.1333379999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1472.924055,
                    "min": 1435.9619089999999,
                    "p50": 1455.25472,
                    "p95": 1472.924055,
                    "p99": 1472.924055,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1040.763717,
                    "min": 1016.046739,
                    "p50": 1027.007388,
                    "p95": 1040.763717,
                    "p99": 1040.763717,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 475.06559599999997,
                    "min": 452.98387499999995,
                    "p50": 460.177958,
                    "p95": 475.06559599999997,
                    "p99": 475.06559599999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1887.7071119999998,
                    "min": 1851.252929,
                    "p50": 1875.995541,
                    "p95": 1887.7071119999998,
                    "p99": 1887.7071119999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1329.731082,
                    "min": 1293.387839,
                    "p50": 1314.669627,
                    "p95": 1329.731082,
                    "p99": 1329.731082,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 623.834374,
                    "min": 588.1845529999999,
                    "p50": 613.958036,
                    "p95": 623.834374,
                    "p99": 623.834374,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1906.5412939999999,
                    "min": 1868.2861699999999,
                    "p50": 1901.132604,
                    "p95": 1906.5412939999999,
                    "p99": 1906.5412939999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3858.977151,
                    "min": 3766.262686,
                    "p50": 3814.864714,
                    "p95": 3858.977151,
                    "p99": 3858.977151,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2132.052797,
                    "min": 2080.737294,
                    "p50": 2114.324274,
                    "p95": 2132.052797,
                    "p99": 2132.052797,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5647.207424,
                    "min": 5457.273118,
                    "p50": 5580.515801,
                    "p95": 5647.207424,
                    "p99": 5647.207424,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1205.77451,
                    "min": 1112.639359,
                    "p50": 1155.741888,
                    "p95": 1205.77451,
                    "p99": 1205.77451,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1767.817543,
                    "min": 1678.3998359999998,
                    "p50": 1741.6604989999998,
                    "p95": 1767.817543,
                    "p99": 1767.817543,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7463.712178,
                    "min": 7285.7113899999995,
                    "p50": 7368.361927,
                    "p95": 7463.712178,
                    "p99": 7463.712178,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1022.113309,
                    "min": 944.890951,
                    "p50": 994.307472,
                    "p95": 1022.113309,
                    "p99": 1022.113309,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2533.2140679999998,
                    "min": 2456.820034,
                    "p50": 2504.780508,
                    "p95": 2533.2140679999998,
                    "p99": 2533.2140679999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1365.841498,
                    "min": 1324.081002,
                    "p50": 1340.5523349999999,
                    "p95": 1365.841498,
                    "p99": 1365.841498,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 792.202285,
                    "min": 747.719249,
                    "p50": 767.6886489999999,
                    "p95": 792.202285,
                    "p99": 792.202285,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2918.2678349999996,
                    "min": 2816.194463,
                    "p50": 2865.7461869999997,
                    "p95": 2918.2678349999996,
                    "p99": 2918.2678349999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2711.439685,
                    "min": 2630.827965,
                    "p50": 2701.3299509999997,
                    "p95": 2711.439685,
                    "p99": 2711.439685,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3352.2136219999998,
                    "min": 3241.011646,
                    "p50": 3276.5648039999996,
                    "p95": 3352.2136219999998,
                    "p99": 3352.2136219999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1542.497975,
                    "min": 1475.346188,
                    "p50": 1516.8080069999999,
                    "p95": 1542.497975,
                    "p99": 1542.497975,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2297.918479,
                    "min": 2246.6609,
                    "p50": 2282.893419,
                    "p95": 2297.918479,
                    "p99": 2297.918479,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 203.123458,
                    "min": 157.35807499999999,
                    "p50": 173.852521,
                    "p95": 203.123458,
                    "p99": 203.123458,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 126.622813,
                    "min": 108.895218,
                    "p50": 122.921358,
                    "p95": 126.622813,
                    "p99": 126.622813,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 281.319322,
                    "min": 206.603161,
                    "p50": 242.66933,
                    "p95": 281.319322,
                    "p99": 281.319322,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 366.296089,
                    "min": 284.645828,
                    "p50": 351.731855,
                    "p95": 366.296089,
                    "p99": 366.296089,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1146.592265,
                    "min": 1030.464635,
                    "p50": 1085.386996,
                    "p95": 1146.592265,
                    "p99": 1146.592265,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 536.491372,
                    "min": 398.69007999999997,
                    "p50": 443.19887,
                    "p95": 536.491372,
                    "p99": 536.491372,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.520131,
                    "min": 123.776218,
                    "p50": 137.226065,
                    "p95": 191.520131,
                    "p99": 191.520131,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.111160999999996,
                    "min": 45.520649,
                    "p50": 54.052747,
                    "p95": 60.111160999999996,
                    "p99": 60.111160999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 659.021833,
                    "min": 538.04125,
                    "p50": 571.3903829999999,
                    "p95": 659.021833,
                    "p99": 659.021833,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.304239,
                    "min": 83.612701,
                    "p50": 100.627825,
                    "p95": 140.304239,
                    "p99": 140.304239,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 180.733262,
                    "min": 102.27009,
                    "p50": 140.837091,
                    "p95": 180.733262,
                    "p99": 180.733262,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 137.86455899999999,
                    "min": 98.48051199999999,
                    "p50": 117.327321,
                    "p95": 137.86455899999999,
                    "p99": 137.86455899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 241.040247,
                    "min": 182.9675,
                    "p50": 194.93313999999998,
                    "p95": 241.040247,
                    "p99": 241.040247,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 128.656982,
                    "min": 44.741403,
                    "p50": 83.354123,
                    "p95": 128.656982,
                    "p99": 128.656982,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.24683399999999,
                    "min": 88.070234,
                    "p50": 92.870449,
                    "p95": 109.24683399999999,
                    "p99": 109.24683399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 231.17399799999998,
                    "min": 161.285908,
                    "p50": 182.08144299999998,
                    "p95": 231.17399799999998,
                    "p99": 231.17399799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 269.124896,
                    "min": 115.65431099999999,
                    "p50": 184.265394,
                    "p95": 269.124896,
                    "p99": 269.124896,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 70.111383,
                    "min": 65.823904,
                    "p50": 66.948863,
                    "p95": 70.111383,
                    "p99": 70.111383,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 195.483769,
                    "min": 138.450883,
                    "p50": 161.906559,
                    "p95": 195.483769,
                    "p99": 195.483769,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2827.449971,
                    "min": 2641.714899,
                    "p50": 2676.146774,
                    "p95": 2827.449971,
                    "p99": 2827.449971,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1137.089295,
                    "min": 1076.060198,
                    "p50": 1121.4977219999998,
                    "p95": 1137.089295,
                    "p99": 1137.089295,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 848.745788,
                    "min": 747.879012,
                    "p50": 797.269269,
                    "p95": 848.745788,
                    "p99": 848.745788,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1938.886609,
                    "min": 1807.1182319999998,
                    "p50": 1846.0581479999998,
                    "p95": 1938.886609,
                    "p99": 1938.886609,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1327.764854,
                    "min": 1223.273908,
                    "p50": 1237.4959509999999,
                    "p95": 1327.764854,
                    "p99": 1327.764854,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6372.675633999999,
                    "min": 5971.812449999999,
                    "p50": 6067.824124,
                    "p95": 6372.675633999999,
                    "p99": 6372.675633999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1768.050256,
                    "min": 1650.017019,
                    "p50": 1714.79863,
                    "p95": 1768.050256,
                    "p99": 1768.050256,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 988.3662069999999,
                    "min": 930.29649,
                    "p50": 956.498329,
                    "p95": 988.3662069999999,
                    "p99": 988.3662069999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2116.1778759999997,
                    "min": 1961.4564859999998,
                    "p50": 2011.34384,
                    "p95": 2116.1778759999997,
                    "p99": 2116.1778759999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4840.872348,
                    "min": 4537.319657,
                    "p50": 4569.819158,
                    "p95": 4840.872348,
                    "p99": 4840.872348,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2385.976835,
                    "min": 2262.064288,
                    "p50": 2283.007857,
                    "p95": 2385.976835,
                    "p99": 2385.976835,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3170.697627,
                    "min": 3011.869304,
                    "p50": 3051.582793,
                    "p95": 3170.697627,
                    "p99": 3170.697627,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 521.877383,
                    "min": 471.032653,
                    "p50": 491.506335,
                    "p95": 521.877383,
                    "p99": 521.877383,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2313.97016,
                    "min": 2092.049698,
                    "p50": 2143.301137,
                    "p95": 2313.97016,
                    "p99": 2313.97016,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 683.010531,
                    "min": 632.0827049999999,
                    "p50": 636.313057,
                    "p95": 683.010531,
                    "p99": 683.010531,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1662.2601089999998,
                    "min": 1507.207886,
                    "p50": 1551.5517089999998,
                    "p95": 1662.2601089999998,
                    "p99": 1662.2601089999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1490.996428,
                    "min": 1376.090366,
                    "p50": 1414.764095,
                    "p95": 1490.996428,
                    "p99": 1490.996428,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2393.7331209999998,
                    "min": 2277.835372,
                    "p50": 2313.155619,
                    "p95": 2393.7331209999998,
                    "p99": 2393.7331209999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 696.431776,
                    "min": 626.206495,
                    "p50": 639.3965949999999,
                    "p95": 696.431776,
                    "p99": 696.431776,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1450.7773499999998,
                    "min": 1364.448326,
                    "p50": 1393.555398,
                    "p95": 1450.7773499999998,
                    "p99": 1450.7773499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2114.0411329999997,
                    "min": 1974.3156159999999,
                    "p50": 2033.1980139999998,
                    "p95": 2114.0411329999997,
                    "p99": 2114.0411329999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1622.444704,
                    "min": 1514.922617,
                    "p50": 1561.739588,
                    "p95": 1622.444704,
                    "p99": 1622.444704,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1841.0622329999999,
                    "min": 1661.906346,
                    "p50": 1724.884959,
                    "p95": 1841.0622329999999,
                    "p99": 1841.0622329999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3240.754575,
                    "min": 2997.2658119999996,
                    "p50": 3063.700039,
                    "p95": 3240.754575,
                    "p99": 3240.754575,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4760.8850919999995,
                    "min": 4506.35665,
                    "p50": 4573.466727,
                    "p95": 4760.8850919999995,
                    "p99": 4760.8850919999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1966.0983139999998,
                    "min": 1822.470928,
                    "p50": 1857.376896,
                    "p95": 1966.0983139999998,
                    "p99": 1966.0983139999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 848.3843899999999,
                    "min": 781.252539,
                    "p50": 805.170221,
                    "p95": 848.3843899999999,
                    "p99": 848.3843899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 535.3780929999999,
                    "min": 490.97934,
                    "p50": 495.63010499999996,
                    "p95": 535.3780929999999,
                    "p99": 535.3780929999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1009.568461,
                    "min": 926.049496,
                    "p50": 940.022741,
                    "p95": 1009.568461,
                    "p99": 1009.568461,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2827.4241739999998,
                    "min": 2616.371771,
                    "p50": 2668.440506,
                    "p95": 2827.4241739999998,
                    "p99": 2827.4241739999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1182.183348,
                    "min": 1069.168763,
                    "p50": 1138.309661,
                    "p95": 1182.183348,
                    "p99": 1182.183348,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2264.2655839999998,
                    "min": 2083.56273,
                    "p50": 2140.314268,
                    "p95": 2264.2655839999998,
                    "p99": 2264.2655839999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1301.7759959999999,
                    "min": 1206.510861,
                    "p50": 1234.6111079999998,
                    "p95": 1301.7759959999999,
                    "p99": 1301.7759959999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1442.554425,
                    "min": 1310.1185209999999,
                    "p50": 1351.1589689999998,
                    "p95": 1442.554425,
                    "p99": 1442.554425,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 274.739013,
                    "min": 192.92931199999998,
                    "p50": 204.351565,
                    "p95": 274.739013,
                    "p99": 274.739013,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 771.7995159999999,
                    "min": 663.013916,
                    "p50": 686.640547,
                    "p95": 771.7995159999999,
                    "p99": 771.7995159999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 181.465484,
                    "min": 118.666224,
                    "p50": 125.739314,
                    "p95": 181.465484,
                    "p99": 181.465484,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 116.88299699999999,
                    "min": 60.868598,
                    "p50": 86.491987,
                    "p95": 116.88299699999999,
                    "p99": 116.88299699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.073261,
                    "min": 168.36437999999998,
                    "p50": 180.810823,
                    "p95": 198.073261,
                    "p99": 198.073261,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 574.969702,
                    "min": 498.33878799999997,
                    "p50": 540.68101,
                    "p95": 574.969702,
                    "p99": 574.969702,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 234.12491599999998,
                    "min": 203.79884299999998,
                    "p50": 218.23804299999998,
                    "p95": 234.12491599999998,
                    "p99": 234.12491599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 237.170064,
                    "min": 184.793859,
                    "p50": 193.472041,
                    "p95": 237.170064,
                    "p99": 237.170064,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 311.461653,
                    "min": 222.67528,
                    "p50": 268.999073,
                    "p95": 311.461653,
                    "p99": 311.461653,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 189.554332,
                    "min": 86.906111,
                    "p50": 127.69041899999999,
                    "p95": 189.554332,
                    "p99": 189.554332,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 238.04917899999998,
                    "min": 131.73488,
                    "p50": 162.198881,
                    "p95": 238.04917899999998,
                    "p99": 238.04917899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 95.135368,
                    "min": 37.261055,
                    "p50": 69.710732,
                    "p95": 95.135368,
                    "p99": 95.135368,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 179.847266,
                    "min": 92.25882899999999,
                    "p50": 131.36454799999998,
                    "p95": 179.847266,
                    "p99": 179.847266,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.187564,
                    "min": 70.074254,
                    "p50": 105.254048,
                    "p95": 109.187564,
                    "p99": 109.187564,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 200.22824599999998,
                    "min": 134.914477,
                    "p50": 143.19280799999999,
                    "p95": 200.22824599999998,
                    "p99": 200.22824599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.348584,
                    "min": 147.975982,
                    "p50": 153.827049,
                    "p95": 166.348584,
                    "p99": 166.348584,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 460.15945899999997,
                    "min": 380.683829,
                    "p50": 438.321642,
                    "p95": 460.15945899999997,
                    "p99": 460.15945899999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 347.23208999999997,
                    "min": 246.782266,
                    "p50": 316.788327,
                    "p95": 347.23208999999997,
                    "p99": 347.23208999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.59100799999999,
                    "min": 45.310818999999995,
                    "p50": 81.95503699999999,
                    "p95": 119.59100799999999,
                    "p99": 119.59100799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 421.924418,
                    "min": 318.919334,
                    "p50": 395.184779,
                    "p95": 421.924418,
                    "p99": 421.924418,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 332.527878,
                    "min": 246.96990499999998,
                    "p50": 323.460572,
                    "p95": 332.527878,
                    "p99": 332.527878,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 257.244125,
                    "min": 176.883402,
                    "p50": 200.70126399999998,
                    "p95": 257.244125,
                    "p99": 257.244125,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.793693,
                    "min": 95.369779,
                    "p50": 108.729311,
                    "p95": 182.793693,
                    "p99": 182.793693,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1003.486899,
                    "min": 897.9800439999999,
                    "p50": 943.186956,
                    "p95": 1003.486899,
                    "p99": 1003.486899,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 488.923388,
                    "min": 438.31105299999996,
                    "p50": 466.2741,
                    "p95": 488.923388,
                    "p99": 488.923388,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 202.238611,
                    "min": 103.106366,
                    "p50": 137.654144,
                    "p95": 202.238611,
                    "p99": 202.238611,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 182.34653799999998,
                    "min": 115.969493,
                    "p50": 142.936308,
                    "p95": 182.34653799999998,
                    "p99": 182.34653799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 97.619571,
                    "min": 61.749986,
                    "p50": 91.21564099999999,
                    "p95": 97.619571,
                    "p99": 97.619571,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 175.651311,
                    "min": 64.47178199999999,
                    "p50": 110.93780699999999,
                    "p95": 175.651311,
                    "p99": 175.651311,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 115.193759,
                    "min": 44.496989,
                    "p50": 58.04533,
                    "p95": 115.193759,
                    "p99": 115.193759,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 220.573827,
                    "min": 136.340274,
                    "p50": 206.221063,
                    "p95": 220.573827,
                    "p99": 220.573827,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 149.449905,
                    "min": 95.18357499999999,
                    "p50": 120.33738799999999,
                    "p95": 149.449905,
                    "p99": 149.449905,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 215.906964,
                    "min": 134.03376,
                    "p50": 146.535311,
                    "p95": 215.906964,
                    "p99": 215.906964,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.35447099999999,
                    "min": 53.567332,
                    "p50": 89.468942,
                    "p95": 117.35447099999999,
                    "p99": 117.35447099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 198.728727,
                    "min": 116.217131,
                    "p50": 134.00094199999998,
                    "p95": 198.728727,
                    "p99": 198.728727,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 79.564137,
                    "min": 36.863375999999995,
                    "p50": 69.104975,
                    "p95": 79.564137,
                    "p99": 79.564137,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 53.876912999999995,
                    "min": 42.073096,
                    "p50": 46.646138,
                    "p95": 53.876912999999995,
                    "p99": 53.876912999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 304.47058499999997,
                    "min": 231.63223499999998,
                    "p50": 271.398065,
                    "p95": 304.47058499999997,
                    "p99": 304.47058499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 177.913119,
                    "min": 126.5946,
                    "p50": 131.842073,
                    "p95": 177.913119,
                    "p99": 177.913119,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 396.205331,
                    "min": 261.87474199999997,
                    "p50": 318.795057,
                    "p95": 396.205331,
                    "p99": 396.205331,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 185.37445499999998,
                    "min": 112.46714899999999,
                    "p50": 116.74619,
                    "p95": 185.37445499999998,
                    "p99": 185.37445499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.181468,
                    "min": 88.05729,
                    "p50": 104.159492,
                    "p95": 106.181468,
                    "p99": 106.181468,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 133.855064,
                    "min": 46.490752,
                    "p50": 80.880005,
                    "p95": 133.855064,
                    "p99": 133.855064,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 277.33460199999996,
                    "min": 176.961085,
                    "p50": 198.70775999999998,
                    "p95": 277.33460199999996,
                    "p99": 277.33460199999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 232.81460299999998,
                    "min": 156.61700399999998,
                    "p50": 172.39655199999999,
                    "p95": 232.81460299999998,
                    "p99": 232.81460299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 438.819392,
                    "min": 355.216815,
                    "p50": 404.312007,
                    "p95": 438.819392,
                    "p99": 438.819392,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 227.916915,
                    "min": 129.257956,
                    "p50": 142.47602999999998,
                    "p95": 227.916915,
                    "p99": 227.916915,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1382.995526,
                    "min": 1267.391423,
                    "p50": 1340.169889,
                    "p95": 1382.995526,
                    "p99": 1382.995526,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 131.718186,
                    "min": 86.60846,
                    "p50": 99.611924,
                    "p95": 131.718186,
                    "p99": 131.718186,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 214.308671,
                    "min": 167.105484,
                    "p50": 184.22617599999998,
                    "p95": 214.308671,
                    "p99": 214.308671,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.49282499999998,
                    "min": 165.476223,
                    "p50": 176.035769,
                    "p95": 206.49282499999998,
                    "p99": 206.49282499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 555.071722,
                    "min": 490.422145,
                    "p50": 538.839157,
                    "p95": 555.071722,
                    "p99": 555.071722,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.279912,
                    "min": 36.395162,
                    "p50": 66.963639,
                    "p95": 86.279912,
                    "p99": 86.279912,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 250.478647,
                    "min": 203.981371,
                    "p50": 242.376711,
                    "p95": 250.478647,
                    "p99": 250.478647,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 215.766255,
                    "min": 127.110467,
                    "p50": 156.251817,
                    "p95": 215.766255,
                    "p99": 215.766255,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 720.9112339999999,
                    "min": 655.374633,
                    "p50": 685.2423709999999,
                    "p95": 720.9112339999999,
                    "p99": 720.9112339999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 965.824583,
                    "min": 929.112901,
                    "p50": 947.896632,
                    "p95": 965.824583,
                    "p99": 965.824583,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 825.3315279999999,
                    "min": 798.819661,
                    "p50": 815.18665,
                    "p95": 825.3315279999999,
                    "p99": 825.3315279999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1216.8965269999999,
                    "min": 1198.0291809999999,
                    "p50": 1206.9174739999999,
                    "p95": 1216.8965269999999,
                    "p99": 1216.8965269999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 422.470313,
                    "min": 382.23749699999996,
                    "p50": 419.76945,
                    "p95": 422.470313,
                    "p99": 422.470313,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 556.36077,
                    "min": 523.260148,
                    "p50": 550.24528,
                    "p95": 556.36077,
                    "p99": 556.36077,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1084.023453,
                    "min": 1052.573914,
                    "p50": 1068.6592799999999,
                    "p95": 1084.023453,
                    "p99": 1084.023453,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 686.5061499999999,
                    "min": 666.7671839999999,
                    "p50": 682.625578,
                    "p95": 686.5061499999999,
                    "p99": 686.5061499999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1582.534966,
                    "min": 1493.982254,
                    "p50": 1539.3417009999998,
                    "p95": 1582.534966,
                    "p99": 1582.534966,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 477.61260999999996,
                    "min": 448.391174,
                    "p50": 474.730865,
                    "p95": 477.61260999999996,
                    "p99": 477.61260999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1248.884038,
                    "min": 1177.0029299999999,
                    "p50": 1196.002763,
                    "p95": 1248.884038,
                    "p99": 1248.884038,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 917.159051,
                    "min": 886.578628,
                    "p50": 906.7820089999999,
                    "p95": 917.159051,
                    "p99": 917.159051,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1058.000243,
                    "min": 1028.854513,
                    "p50": 1047.115327,
                    "p95": 1058.000243,
                    "p99": 1058.000243,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1380.614838,
                    "min": 1327.63709,
                    "p50": 1347.699785,
                    "p95": 1380.614838,
                    "p99": 1380.614838,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 625.3135219999999,
                    "min": 594.966713,
                    "p50": 620.5074,
                    "p95": 625.3135219999999,
                    "p99": 625.3135219999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 792.7242729999999,
                    "min": 753.4835989999999,
                    "p50": 763.4311299999999,
                    "p95": 792.7242729999999,
                    "p99": 792.7242729999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1138.476338,
                    "min": 1013.520681,
                    "p50": 1105.832105,
                    "p95": 1138.476338,
                    "p99": 1138.476338,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 2002.0779129999999,
                    "min": 1735.245134,
                    "p50": 1919.977574,
                    "p95": 2002.0779129999999,
                    "p99": 2002.0779129999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2524.2915009999997,
                    "min": 2187.7213659999998,
                    "p50": 2412.400149,
                    "p95": 2524.2915009999997,
                    "p99": 2524.2915009999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1723.676665,
                    "min": 1482.112931,
                    "p50": 1645.0221379999998,
                    "p95": 1723.676665,
                    "p99": 1723.676665,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3373.653749,
                    "min": 2907.041225,
                    "p50": 3219.294292,
                    "p95": 3373.653749,
                    "p99": 3373.653749,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 879.93898,
                    "min": 763.2795199999999,
                    "p50": 840.4222209999999,
                    "p95": 879.93898,
                    "p99": 879.93898,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2857.921813,
                    "min": 2434.496393,
                    "p50": 2695.129203,
                    "p95": 2857.921813,
                    "p99": 2857.921813,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2328.3632159999997,
                    "min": 1947.8174609999999,
                    "p50": 2181.2316149999997,
                    "p95": 2328.3632159999997,
                    "p99": 2328.3632159999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1420.979823,
                    "min": 1261.203853,
                    "p50": 1386.5029479999998,
                    "p95": 1420.979823,
                    "p99": 1420.979823,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3070.341284,
                    "min": 2688.617038,
                    "p50": 3000.641666,
                    "p95": 3070.341284,
                    "p99": 3070.341284,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 832.641546,
                    "min": 815.5747319999999,
                    "p50": 822.785622,
                    "p95": 832.641546,
                    "p99": 832.641546,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1099.801038,
                    "min": 1061.980507,
                    "p50": 1080.51034,
                    "p95": 1099.801038,
                    "p99": 1099.801038,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 306.015015,
                    "min": 265.348579,
                    "p50": 299.917235,
                    "p95": 306.015015,
                    "p99": 306.015015,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 567.91652,
                    "min": 546.875631,
                    "p50": 559.893526,
                    "p95": 567.91652,
                    "p99": 567.91652,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 967.72631,
                    "min": 943.054905,
                    "p50": 955.296562,
                    "p95": 967.72631,
                    "p99": 967.72631,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 438.209589,
                    "min": 421.57487399999997,
                    "p50": 433.99857,
                    "p95": 438.209589,
                    "p99": 438.209589,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 701.266406,
                    "min": 671.780496,
                    "p50": 695.6867669999999,
                    "p95": 701.266406,
                    "p99": 701.266406,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2399.870644,
                    "min": 2067.5621889999998,
                    "p50": 2326.507646,
                    "p95": 2399.870644,
                    "p99": 2399.870644,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1195.6855799999998,
                    "min": 1057.206621,
                    "p50": 1173.051818,
                    "p95": 1195.6855799999998,
                    "p99": 1195.6855799999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 706.182328,
                    "min": 612.832223,
                    "p50": 684.753872,
                    "p95": 706.182328,
                    "p99": 706.182328,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2196.2266609999997,
                    "min": 1905.296989,
                    "p50": 2091.717261,
                    "p95": 2196.2266609999997,
                    "p99": 2196.2266609999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1702.3690259999998,
                    "min": 1457.527318,
                    "p50": 1626.102725,
                    "p95": 1702.3690259999998,
                    "p99": 1702.3690259999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1360.48381,
                    "min": 1201.360449,
                    "p50": 1296.122928,
                    "p95": 1360.48381,
                    "p99": 1360.48381,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2026.3902759999999,
                    "min": 1823.2429049999998,
                    "p50": 1949.158487,
                    "p95": 2026.3902759999999,
                    "p99": 2026.3902759999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 864.6905889999999,
                    "min": 741.8866469999999,
                    "p50": 843.657977,
                    "p95": 864.6905889999999,
                    "p99": 864.6905889999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 539.063905,
                    "min": 473.566333,
                    "p50": 494.468443,
                    "p95": 539.063905,
                    "p99": 539.063905,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2947.1042359999997,
                    "min": 2575.801879,
                    "p50": 2856.711285,
                    "p95": 2947.1042359999997,
                    "p99": 2947.1042359999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2497.747953,
                    "min": 2209.808329,
                    "p50": 2409.544302,
                    "p95": 2497.747953,
                    "p99": 2497.747953,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3347.922349,
                    "min": 2946.9623469999997,
                    "p50": 3202.9766019999997,
                    "p95": 3347.922349,
                    "p99": 3347.922349,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1529.0979,
                    "min": 1358.056501,
                    "p50": 1457.035606,
                    "p95": 1529.0979,
                    "p99": 1529.0979,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1856.586071,
                    "min": 1643.2006529999999,
                    "p50": 1782.988369,
                    "p95": 1856.586071,
                    "p99": 1856.586071,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1033.2646359999999,
                    "min": 878.791894,
                    "p50": 994.2164379999999,
                    "p95": 1033.2646359999999,
                    "p99": 1033.2646359999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2270.2259839999997,
                    "min": 2045.956553,
                    "p50": 2207.463543,
                    "p95": 2270.2259839999997,
                    "p99": 2270.2259839999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 884.596822,
                    "min": 793.4915689999999,
                    "p50": 837.7179699999999,
                    "p95": 884.596822,
                    "p99": 884.596822,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2577.741062,
                    "min": 2321.593366,
                    "p50": 2497.787667,
                    "p95": 2577.741062,
                    "p99": 2577.741062,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1742.3167589999998,
                    "min": 1550.975859,
                    "p50": 1673.4060439999998,
                    "p95": 1742.3167589999998,
                    "p99": 1742.3167589999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 717.8372439999999,
                    "min": 650.578758,
                    "p50": 704.213716,
                    "p95": 717.8372439999999,
                    "p99": 717.8372439999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1059.775658,
                    "min": 950.308848,
                    "p50": 1033.3216129999998,
                    "p95": 1059.775658,
                    "p99": 1059.775658,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2083.9805929999998,
                    "min": 1860.331444,
                    "p50": 2028.9138959999998,
                    "p95": 2083.9805929999998,
                    "p99": 2083.9805929999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2397.569983,
                    "min": 2178.771942,
                    "p50": 2340.31164,
                    "p95": 2397.569983,
                    "p99": 2397.569983,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3404.8631069999997,
                    "min": 3099.913333,
                    "p50": 3346.997182,
                    "p95": 3404.8631069999997,
                    "p99": 3404.8631069999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1227.513148,
                    "min": 1097.1265859999999,
                    "p50": 1180.83936,
                    "p95": 1227.513148,
                    "p99": 1227.513148,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3006.596109,
                    "min": 2701.00717,
                    "p50": 2901.764459,
                    "p95": 3006.596109,
                    "p99": 3006.596109,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1403.914031,
                    "min": 1248.9099609999998,
                    "p50": 1341.3266469999999,
                    "p95": 1403.914031,
                    "p99": 1403.914031,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1912.4513459999998,
                    "min": 1709.463581,
                    "p50": 1842.284815,
                    "p95": 1912.4513459999998,
                    "p99": 1912.4513459999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1547.219593,
                    "min": 1405.904845,
                    "p50": 1521.9544369999999,
                    "p95": 1547.219593,
                    "p99": 1547.219593,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 555.073626,
                    "min": 497.618633,
                    "p50": 529.596369,
                    "p95": 555.073626,
                    "p99": 555.073626,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 886.958946,
                    "min": 751.070116,
                    "p50": 857.3171689999999,
                    "p95": 886.958946,
                    "p99": 886.958946,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1372.984516,
                    "min": 1202.185366,
                    "p50": 1321.905887,
                    "p95": 1372.984516,
                    "p99": 1372.984516,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1203.863097,
                    "min": 1081.594521,
                    "p50": 1158.216973,
                    "p95": 1203.863097,
                    "p99": 1203.863097,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2957.826247,
                    "min": 2612.438812,
                    "p50": 2842.810172,
                    "p95": 2957.826247,
                    "p99": 2957.826247,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2539.5968239999997,
                    "min": 2240.075618,
                    "p50": 2431.4469289999997,
                    "p95": 2539.5968239999997,
                    "p99": 2539.5968239999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 537.0721219999999,
                    "min": 478.72698099999997,
                    "p50": 524.112835,
                    "p95": 537.0721219999999,
                    "p99": 537.0721219999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1877.259284,
                    "min": 1643.165654,
                    "p50": 1824.667217,
                    "p95": 1877.259284,
                    "p99": 1877.259284,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1713.5737219999999,
                    "min": 1497.904897,
                    "p50": 1658.075832,
                    "p95": 1713.5737219999999,
                    "p99": 1713.5737219999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 709.435115,
                    "min": 610.604168,
                    "p50": 686.43471,
                    "p95": 709.435115,
                    "p99": 709.435115,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2042.859149,
                    "min": 1792.2908049999999,
                    "p50": 1956.05368,
                    "p95": 2042.859149,
                    "p99": 2042.859149,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1532.7651799999999,
                    "min": 1356.9943309999999,
                    "p50": 1480.933194,
                    "p95": 1532.7651799999999,
                    "p99": 1532.7651799999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3369.1533369999997,
                    "min": 2953.320393,
                    "p50": 3230.619827,
                    "p95": 3369.1533369999997,
                    "p99": 3369.1533369999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2360.4647959999998,
                    "min": 2091.737514,
                    "p50": 2277.7543419999997,
                    "p95": 2360.4647959999998,
                    "p99": 2360.4647959999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1036.6919619999999,
                    "min": 904.433808,
                    "p50": 988.522572,
                    "p95": 1036.6919619999999,
                    "p99": 1036.6919619999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2205.021116,
                    "min": 1931.8666779999999,
                    "p50": 2113.511008,
                    "p95": 2205.021116,
                    "p99": 2205.021116,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3380.2356369999998,
                    "min": 2925.2005649999996,
                    "p50": 3256.919022,
                    "p95": 3380.2356369999998,
                    "p99": 3380.2356369999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 701.173186,
                    "min": 623.131082,
                    "p50": 667.399415,
                    "p95": 701.173186,
                    "p99": 701.173186,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1532.1559989999998,
                    "min": 1317.134446,
                    "p50": 1460.1727799999999,
                    "p95": 1532.1559989999998,
                    "p99": 1532.1559989999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1703.577033,
                    "min": 1459.93518,
                    "p50": 1625.90166,
                    "p95": 1703.577033,
                    "p99": 1703.577033,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1866.4317429999999,
                    "min": 1648.042831,
                    "p50": 1796.5475649999998,
                    "p95": 1866.4317429999999,
                    "p99": 1866.4317429999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2944.889582,
                    "min": 2595.298444,
                    "p50": 2836.327867,
                    "p95": 2944.889582,
                    "p99": 2944.889582,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2049.268618,
                    "min": 1778.557243,
                    "p50": 1946.679447,
                    "p95": 2049.268618,
                    "p99": 2049.268618,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2193.559582,
                    "min": 1927.0996499999999,
                    "p50": 2136.870304,
                    "p95": 2193.559582,
                    "p99": 2193.559582,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 537.357503,
                    "min": 451.75494399999997,
                    "p50": 524.824837,
                    "p95": 537.357503,
                    "p99": 537.357503,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1034.411737,
                    "min": 921.263018,
                    "p50": 1004.458949,
                    "p95": 1034.411737,
                    "p99": 1034.411737,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 867.127629,
                    "min": 736.061287,
                    "p50": 822.4074509999999,
                    "p95": 867.127629,
                    "p99": 867.127629,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2506.365686,
                    "min": 2223.641569,
                    "p50": 2432.142202,
                    "p95": 2506.365686,
                    "p99": 2506.365686,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1357.547578,
                    "min": 1200.8361129999998,
                    "p50": 1306.551501,
                    "p95": 1357.547578,
                    "p99": 1357.547578,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2354.9538669999997,
                    "min": 2045.30741,
                    "p50": 2255.6005649999997,
                    "p95": 2354.9538669999997,
                    "p99": 2354.9538669999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1198.846996,
                    "min": 1056.173378,
                    "p50": 1150.80385,
                    "p95": 1198.846996,
                    "p99": 1198.846996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 851.658863,
                    "min": 759.163773,
                    "p50": 804.087411,
                    "p95": 851.658863,
                    "p99": 851.658863,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 238.917149,
                    "min": 190.229628,
                    "p50": 207.896358,
                    "p95": 238.917149,
                    "p99": 238.917149,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4466.033002,
                    "min": 3990.798477,
                    "p50": 4290.048121,
                    "p95": 4466.033002,
                    "p99": 4466.033002,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 933.4803049999999,
                    "min": 815.409914,
                    "p50": 902.56125,
                    "p95": 933.4803049999999,
                    "p99": 933.4803049999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1375.4805529999999,
                    "min": 1216.761299,
                    "p50": 1316.110661,
                    "p95": 1375.4805529999999,
                    "p99": 1375.4805529999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 479.87780699999996,
                    "min": 436.592067,
                    "p50": 452.989672,
                    "p95": 479.87780699999996,
                    "p99": 479.87780699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1810.7065049999999,
                    "min": 1619.3613839999998,
                    "p50": 1742.8111299999998,
                    "p95": 1810.7065049999999,
                    "p99": 1810.7065049999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.714361,
                    "min": 256.088485,
                    "p50": 295.691674,
                    "p95": 306.714361,
                    "p99": 306.714361,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.969968,
                    "min": 324.625323,
                    "p50": 373.383489,
                    "p95": 394.969968,
                    "p99": 394.969968,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.109706,
                    "min": 127.49702699999999,
                    "p50": 168.63803199999998,
                    "p95": 172.109706,
                    "p99": 172.109706,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 445.14424099999997,
                    "min": 391.904139,
                    "p50": 424.478371,
                    "p95": 445.14424099999997,
                    "p99": 445.14424099999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 350.138219,
                    "min": 318.731972,
                    "p50": 328.67037899999997,
                    "p95": 350.138219,
                    "p99": 350.138219,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.4781859999999,
                    "min": 465.89572,
                    "p50": 509.50784799999997,
                    "p95": 525.4781859999999,
                    "p99": 525.4781859999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 615.277171,
                    "min": 559.95341,
                    "p50": 600.094832,
                    "p95": 615.277171,
                    "p99": 615.277171,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 577.045561,
                    "min": 513.235685,
                    "p50": 534.6409189999999,
                    "p95": 577.045561,
                    "p99": 577.045561,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2268.57957,
                    "min": 2021.844251,
                    "p50": 2200.461859,
                    "p95": 2268.57957,
                    "p99": 2268.57957,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.659536,
                    "min": 206.61988599999998,
                    "p50": 257.990047,
                    "p95": 260.659536,
                    "p99": 260.659536,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 671.0671699999999,
                    "min": 603.586854,
                    "p50": 633.863853,
                    "p95": 671.0671699999999,
                    "p99": 671.0671699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 712.7424669999999,
                    "min": 644.465431,
                    "p50": 675.739649,
                    "p95": 712.7424669999999,
                    "p99": 712.7424669999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1050.500082,
                    "min": 1006.5736459999999,
                    "p50": 1032.8935219999998,
                    "p95": 1050.500082,
                    "p99": 1050.500082,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 242.93679799999998,
                    "min": 202.447893,
                    "p50": 237.774776,
                    "p95": 242.93679799999998,
                    "p99": 242.93679799999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1403.972299,
                    "min": 1349.567485,
                    "p50": 1363.055553,
                    "p95": 1403.972299,
                    "p99": 1403.972299,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 717.96777,
                    "min": 686.808363,
                    "p50": 700.716775,
                    "p95": 717.96777,
                    "p99": 717.96777,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 513.608915,
                    "min": 487.09475999999995,
                    "p50": 501.52941799999996,
                    "p95": 513.608915,
                    "p99": 513.608915,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 552.312062,
                    "min": 518.733652,
                    "p50": 533.5609939999999,
                    "p95": 552.312062,
                    "p99": 552.312062,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 484.34664999999995,
                    "min": 449.70653699999997,
                    "p50": 472.759732,
                    "p95": 484.34664999999995,
                    "p99": 484.34664999999995,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 639.138816,
                    "min": 607.26058,
                    "p50": 619.391983,
                    "p95": 639.138816,
                    "p99": 639.138816,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.09223,
                    "min": 102.370108,
                    "p50": 138.109217,
                    "p95": 143.09223,
                    "p99": 143.09223,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3478.573214,
                    "min": 3272.655366,
                    "p50": 3367.4341219999997,
                    "p95": 3478.573214,
                    "p99": 3478.573214,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 175.031811,
                    "min": 166.421999,
                    "p50": 172.334533,
                    "p95": 175.031811,
                    "p99": 175.031811,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 210.11811899999998,
                    "min": 195.64821999999998,
                    "p50": 205.541531,
                    "p95": 210.11811899999998,
                    "p99": 210.11811899999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 313.146885,
                    "min": 300.40206,
                    "p50": 306.644527,
                    "p95": 313.146885,
                    "p99": 313.146885,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 451.359946,
                    "min": 424.751663,
                    "p50": 441.764464,
                    "p95": 451.359946,
                    "p99": 451.359946,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 339.841954,
                    "min": 321.667374,
                    "p50": 332.570061,
                    "p95": 339.841954,
                    "p99": 339.841954,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 409.897113,
                    "min": 392.24981099999997,
                    "p50": 399.839655,
                    "p95": 409.897113,
                    "p99": 409.897113,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 276.988828,
                    "min": 262.73260899999997,
                    "p50": 269.611614,
                    "p95": 276.988828,
                    "p99": 276.988828,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 378.458278,
                    "min": 331.339584,
                    "p50": 369.20248399999997,
                    "p95": 378.458278,
                    "p99": 378.458278,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1745.681286,
                    "min": 1646.99617,
                    "p50": 1726.8530349999999,
                    "p95": 1745.681286,
                    "p99": 1745.681286,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 613.292844,
                    "min": 550.666661,
                    "p50": 592.006988,
                    "p95": 613.292844,
                    "p99": 613.292844,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4437.2833089999995,
                    "min": 3955.021167,
                    "p50": 4267.312320999999,
                    "p95": 4437.2833089999995,
                    "p99": 4437.2833089999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 648.662685,
                    "min": 590.333752,
                    "p50": 611.868069,
                    "p95": 648.662685,
                    "p99": 648.662685,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 441.16809,
                    "min": 381.354607,
                    "p50": 405.76575499999996,
                    "p95": 441.16809,
                    "p99": 441.16809,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 815.359157,
                    "min": 725.06864,
                    "p50": 789.539236,
                    "p95": 815.359157,
                    "p99": 815.359157,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 905.426485,
                    "min": 826.0040339999999,
                    "p50": 885.414963,
                    "p95": 905.426485,
                    "p99": 905.426485,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 262.121645,
                    "min": 216.112868,
                    "p50": 241.78012199999998,
                    "p95": 262.121645,
                    "p99": 262.121645,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 480.057143,
                    "min": 431.720852,
                    "p50": 464.36823,
                    "p95": 480.057143,
                    "p99": 480.057143,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.50956299999996,
                    "min": 277.407743,
                    "p50": 333.987394,
                    "p95": 348.50956299999996,
                    "p99": 348.50956299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 701.347658,
                    "min": 621.7390829999999,
                    "p50": 662.989936,
                    "p95": 701.347658,
                    "p99": 701.347658,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 570.7770019999999,
                    "min": 514.6824,
                    "p50": 550.688712,
                    "p95": 570.7770019999999,
                    "p99": 570.7770019999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1814.0323569999998,
                    "min": 1614.045524,
                    "p50": 1755.4654879999998,
                    "p95": 1814.0323569999998,
                    "p99": 1814.0323569999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1355.8554219999999,
                    "min": 1223.966318,
                    "p50": 1314.292119,
                    "p95": 1355.8554219999999,
                    "p99": 1355.8554219999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 521.831416,
                    "min": 445.67807899999997,
                    "p50": 514.088442,
                    "p95": 521.831416,
                    "p99": 521.831416,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.62552599999998,
                    "min": 123.72661599999999,
                    "p50": 167.72285599999998,
                    "p95": 172.62552599999998,
                    "p99": 172.62552599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.83271199999996,
                    "min": 355.41165,
                    "p50": 378.650666,
                    "p95": 394.83271199999996,
                    "p99": 394.83271199999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 218.51007299999998,
                    "min": 197.114896,
                    "p50": 205.551967,
                    "p95": 218.51007299999998,
                    "p99": 218.51007299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.367408,
                    "min": 278.094669,
                    "p50": 295.336432,
                    "p95": 309.367408,
                    "p99": 309.367408,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2274.1108719999997,
                    "min": 2028.407953,
                    "p50": 2169.434089,
                    "p95": 2274.1108719999997,
                    "p99": 2274.1108719999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 442.90317899999997,
                    "min": 419.504189,
                    "p50": 435.028536,
                    "p95": 442.90317899999997,
                    "p99": 442.90317899999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 296.77007499999996,
                    "min": 243.11934,
                    "p50": 292.015039,
                    "p95": 296.77007499999996,
                    "p99": 296.77007499999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 190.852243,
                    "min": 170.85127599999998,
                    "p50": 182.474471,
                    "p95": 190.852243,
                    "p99": 190.852243,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 331.566888,
                    "min": 301.903738,
                    "p50": 327.973218,
                    "p95": 331.566888,
                    "p99": 331.566888,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 776.54822,
                    "min": 724.424621,
                    "p50": 752.155625,
                    "p95": 776.54822,
                    "p99": 776.54822,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.048067,
                    "min": 107.569364,
                    "p50": 145.801348,
                    "p95": 150.048067,
                    "p99": 150.048067,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3736.952046,
                    "min": 3528.0820999999996,
                    "p50": 3615.6997509999997,
                    "p95": 3736.952046,
                    "p99": 3736.952046,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 675.770949,
                    "min": 641.829449,
                    "p50": 666.091087,
                    "p95": 675.770949,
                    "p99": 675.770949,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.60877399999998,
                    "min": 202.12782099999998,
                    "p50": 216.965624,
                    "p95": 223.60877399999998,
                    "p99": 223.60877399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 407.704485,
                    "min": 388.12825,
                    "p50": 397.684853,
                    "p95": 407.704485,
                    "p99": 407.704485,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 546.41003,
                    "min": 529.203947,
                    "p50": 540.9123999999999,
                    "p95": 546.41003,
                    "p99": 546.41003,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 261.508383,
                    "min": 242.159098,
                    "p50": 256.47076,
                    "p95": 261.508383,
                    "p99": 261.508383,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 481.676673,
                    "min": 462.779178,
                    "p50": 467.471755,
                    "p95": 481.676673,
                    "p99": 481.676673,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1866.448208,
                    "min": 1782.1691799999999,
                    "p50": 1823.133094,
                    "p95": 1866.448208,
                    "p99": 1866.448208,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1146.3828859999999,
                    "min": 1076.388346,
                    "p50": 1122.235502,
                    "p95": 1146.3828859999999,
                    "p99": 1146.3828859999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 517.216906,
                    "min": 494.721972,
                    "p50": 500.45361099999997,
                    "p95": 517.216906,
                    "p99": 517.216906,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 372.09171499999997,
                    "min": 340.055441,
                    "p50": 360.499469,
                    "p95": 372.09171499999997,
                    "p99": 372.09171499999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 598.0209159999999,
                    "min": 563.344667,
                    "p50": 579.803406,
                    "p95": 598.0209159999999,
                    "p99": 598.0209159999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1507.077573,
                    "min": 1426.7748649999999,
                    "p50": 1453.960991,
                    "p95": 1507.077573,
                    "p99": 1507.077573,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 351.88979,
                    "min": 313.84072699999996,
                    "p50": 338.44118,
                    "p95": 351.88979,
                    "p99": 351.88979,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 617.689885,
                    "min": 562.555265,
                    "p50": 601.007251,
                    "p95": 617.689885,
                    "p99": 617.689885,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 531.582047,
                    "min": 483.12278699999996,
                    "p50": 501.48423199999996,
                    "p95": 531.582047,
                    "p99": 531.582047,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.32759799999997,
                    "min": 284.693788,
                    "p50": 294.086841,
                    "p95": 309.32759799999997,
                    "p99": 309.32759799999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 941.045859,
                    "min": 838.139138,
                    "p50": 903.177101,
                    "p95": 941.045859,
                    "p99": 941.045859,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.06115599999998,
                    "min": 202.551389,
                    "p50": 205.26241,
                    "p95": 215.06115599999998,
                    "p99": 215.06115599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 393.82784899999996,
                    "min": 369.23650699999996,
                    "p50": 378.103817,
                    "p95": 393.82784899999996,
                    "p99": 393.82784899999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 485.122634,
                    "min": 415.406344,
                    "p50": 464.05754099999996,
                    "p95": 485.122634,
                    "p99": 485.122634,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 700.8003219999999,
                    "min": 648.034079,
                    "p50": 693.2177819999999,
                    "p95": 700.8003219999999,
                    "p99": 700.8003219999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1381.687483,
                    "min": 1277.4584949999999,
                    "p50": 1336.430915,
                    "p95": 1381.687483,
                    "p99": 1381.687483,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 573.075661,
                    "min": 529.092567,
                    "p50": 561.126725,
                    "p95": 573.075661,
                    "p99": 573.075661,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 440.41844699999996,
                    "min": 403.007588,
                    "p50": 420.098925,
                    "p95": 440.41844699999996,
                    "p99": 440.41844699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 262.756129,
                    "min": 226.304417,
                    "p50": 249.49796899999998,
                    "p95": 262.756129,
                    "p99": 262.756129,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 658.24397,
                    "min": 615.7088669999999,
                    "p50": 653.869231,
                    "p95": 658.24397,
                    "p99": 658.24397,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 809.13549,
                    "min": 757.815356,
                    "p50": 773.539272,
                    "p95": 809.13549,
                    "p99": 809.13549,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1806.240808,
                    "min": 1684.4523299999998,
                    "p50": 1768.4977039999999,
                    "p95": 1806.240808,
                    "p99": 1806.240808,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2279.562053,
                    "min": 2068.23026,
                    "p50": 2189.265548,
                    "p95": 2279.562053,
                    "p99": 2279.562053,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4531.0527489999995,
                    "min": 4135.016737,
                    "p50": 4354.953938,
                    "p95": 4531.0527489999995,
                    "p99": 4531.0527489999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.181921,
                    "min": 133.354389,
                    "p50": 166.507376,
                    "p95": 173.181921,
                    "p99": 173.181921,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2235.17087,
                    "min": 1997.9855799999998,
                    "p50": 2151.591022,
                    "p95": 2235.17087,
                    "p99": 2235.17087,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 612.123066,
                    "min": 551.5758559999999,
                    "p50": 582.497721,
                    "p95": 612.123066,
                    "p99": 612.123066,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 483.01372,
                    "min": 433.419648,
                    "p50": 448.849207,
                    "p95": 483.01372,
                    "p99": 483.01372,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 698.569273,
                    "min": 589.822408,
                    "p50": 650.476185,
                    "p95": 698.569273,
                    "p99": 698.569273,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.786951,
                    "min": 276.17721,
                    "p50": 322.913576,
                    "p95": 346.786951,
                    "p99": 346.786951,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.013985,
                    "min": 233.60712199999998,
                    "p50": 241.639039,
                    "p95": 261.013985,
                    "p99": 261.013985,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 167.893152,
                    "min": 147.66719,
                    "p50": 159.513638,
                    "p95": 167.893152,
                    "p99": 167.893152,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 521.047527,
                    "min": 470.76724199999995,
                    "p50": 496.588122,
                    "p95": 521.047527,
                    "p99": 521.047527,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 805.963947,
                    "min": 700.699803,
                    "p50": 792.337911,
                    "p95": 805.963947,
                    "p99": 805.963947,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 305.232242,
                    "min": 272.50198,
                    "p50": 283.43564599999996,
                    "p95": 305.232242,
                    "p99": 305.232242,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.638578,
                    "min": 354.622692,
                    "p50": 382.47283899999996,
                    "p95": 394.638578,
                    "p99": 394.638578,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 662.0929249999999,
                    "min": 587.697715,
                    "p50": 628.714011,
                    "p95": 662.0929249999999,
                    "p99": 662.0929249999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1783.789327,
                    "min": 1607.698856,
                    "p50": 1731.9639359999999,
                    "p95": 1783.789327,
                    "p99": 1783.789327,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 430.451963,
                    "min": 376.05247599999996,
                    "p50": 410.055144,
                    "p95": 430.451963,
                    "p99": 430.451963,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 936.7791169999999,
                    "min": 832.339875,
                    "p50": 897.5825609999999,
                    "p95": 936.7791169999999,
                    "p99": 936.7791169999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 592.4837269999999,
                    "min": 515.294816,
                    "p50": 538.004524,
                    "p95": 592.4837269999999,
                    "p99": 592.4837269999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 219.679839,
                    "min": 197.667668,
                    "p50": 209.73541999999998,
                    "p95": 219.679839,
                    "p99": 219.679839,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1382.59133,
                    "min": 1229.1860789999998,
                    "p50": 1312.155692,
                    "p95": 1382.59133,
                    "p99": 1382.59133,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 824.763382,
                    "min": 724.456048,
                    "p50": 802.4758469999999,
                    "p95": 824.763382,
                    "p99": 824.763382,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 629.266745,
                    "min": 530.192358,
                    "p50": 604.698708,
                    "p95": 629.266745,
                    "p99": 629.266745,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1017.073769,
                    "min": 889.776887,
                    "p50": 983.700655,
                    "p95": 1017.073769,
                    "p99": 1017.073769,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3961.650435,
                    "min": 3454.244984,
                    "p50": 3826.6033049999996,
                    "p95": 3961.650435,
                    "p99": 3961.650435,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2582.6272959999997,
                    "min": 2266.258176,
                    "p50": 2497.218637,
                    "p95": 2582.6272959999997,
                    "p99": 2582.6272959999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2961.625306,
                    "min": 2616.9760929999998,
                    "p50": 2871.557839,
                    "p95": 2961.625306,
                    "p99": 2961.625306,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3452.539895,
                    "min": 3063.213304,
                    "p50": 3345.496635,
                    "p95": 3452.539895,
                    "p99": 3452.539895,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1797.647673,
                    "min": 1599.011393,
                    "p50": 1718.821859,
                    "p95": 1797.647673,
                    "p99": 1797.647673,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1222.5847899999999,
                    "min": 1078.274079,
                    "p50": 1173.790593,
                    "p95": 1222.5847899999999,
                    "p99": 1222.5847899999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1627.963649,
                    "min": 1415.82227,
                    "p50": 1564.7191249999998,
                    "p95": 1627.963649,
                    "p99": 1627.963649,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1420.728415,
                    "min": 1236.698142,
                    "p50": 1332.221991,
                    "p95": 1420.728415,
                    "p99": 1420.728415,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2006.454963,
                    "min": 1771.249179,
                    "p50": 1962.8402899999999,
                    "p95": 2006.454963,
                    "p99": 2006.454963,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2213.207543,
                    "min": 1913.418234,
                    "p50": 2137.0821419999997,
                    "p95": 2213.207543,
                    "p99": 2213.207543,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2761.3660059999997,
                    "min": 2455.155057,
                    "p50": 2675.614071,
                    "p95": 2761.3660059999997,
                    "p99": 2761.3660059999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2382.970562,
                    "min": 2108.8343999999997,
                    "p50": 2314.361652,
                    "p95": 2382.970562,
                    "p99": 2382.970562,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2187.59256,
                    "min": 1927.940582,
                    "p50": 2143.005459,
                    "p95": 2187.59256,
                    "p99": 2187.59256,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2587.91254,
                    "min": 2226.7893919999997,
                    "p50": 2504.432649,
                    "p95": 2587.91254,
                    "p99": 2587.91254,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2781.9417359999998,
                    "min": 2426.544779,
                    "p50": 2697.18158,
                    "p95": 2781.9417359999998,
                    "p99": 2781.9417359999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 825.339017,
                    "min": 717.446959,
                    "p50": 814.808313,
                    "p95": 825.339017,
                    "p99": 825.339017,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1023.5239029999999,
                    "min": 885.509658,
                    "p50": 989.516677,
                    "p95": 1023.5239029999999,
                    "p99": 1023.5239029999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1410.701065,
                    "min": 1209.304392,
                    "p50": 1363.8744339999998,
                    "p95": 1410.701065,
                    "p99": 1410.701065,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1217.991571,
                    "min": 1042.266197,
                    "p50": 1177.627816,
                    "p95": 1217.991571,
                    "p99": 1217.991571,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1996.373559,
                    "min": 1794.3283509999999,
                    "p50": 1951.1739679999998,
                    "p95": 1996.373559,
                    "p99": 1996.373559,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 629.9581969999999,
                    "min": 541.889588,
                    "p50": 605.780161,
                    "p95": 629.9581969999999,
                    "p99": 629.9581969999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1610.046611,
                    "min": 1410.7794999999999,
                    "p50": 1568.571541,
                    "p95": 1610.046611,
                    "p99": 1610.046611,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3480.443679,
                    "min": 3051.2817729999997,
                    "p50": 3382.582611,
                    "p95": 3480.443679,
                    "p99": 3480.443679,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4014.2581959999998,
                    "min": 3449.058016,
                    "p50": 3829.099843,
                    "p95": 4014.2581959999998,
                    "p99": 4014.2581959999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2992.6233629999997,
                    "min": 2614.3056079999997,
                    "p50": 2893.798819,
                    "p95": 2992.6233629999997,
                    "p99": 2992.6233629999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1800.746979,
                    "min": 1585.677598,
                    "p50": 1738.7134859999999,
                    "p95": 1800.746979,
                    "p99": 1800.746979,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2395.160174,
                    "min": 2105.7097,
                    "p50": 2304.485063,
                    "p95": 2395.160174,
                    "p99": 2395.160174,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2653.41081,
                    "min": 2308.188356,
                    "p50": 2564.248992,
                    "p95": 2653.41081,
                    "p99": 2653.41081,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2449.384452,
                    "min": 2175.388246,
                    "p50": 2361.4893739999998,
                    "p95": 2449.384452,
                    "p99": 2449.384452,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2849.169899,
                    "min": 2483.691675,
                    "p50": 2739.5366489999997,
                    "p95": 2849.169899,
                    "p99": 2849.169899,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3314.44758,
                    "min": 2923.34982,
                    "p50": 3200.657586,
                    "p95": 3314.44758,
                    "p99": 3314.44758,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2311.9932639999997,
                    "min": 1998.4567929999998,
                    "p50": 2202.5060989999997,
                    "p95": 2311.9932639999997,
                    "p99": 2311.9932639999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2099.768418,
                    "min": 1827.606292,
                    "p50": 2011.6114989999999,
                    "p95": 2099.768418,
                    "p99": 2099.768418,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 601.54094,
                    "min": 499.09349699999996,
                    "p50": 566.181152,
                    "p95": 601.54094,
                    "p99": 601.54094,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3785.753627,
                    "min": 3297.0968209999996,
                    "p50": 3639.251312,
                    "p95": 3785.753627,
                    "p99": 3785.753627,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1917.183401,
                    "min": 1670.51513,
                    "p50": 1850.097673,
                    "p95": 1917.183401,
                    "p99": 1917.183401,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1722.817722,
                    "min": 1474.250106,
                    "p50": 1669.533037,
                    "p95": 1722.817722,
                    "p99": 1722.817722,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1157.526792,
                    "min": 1007.1442219999999,
                    "p50": 1102.3215639999999,
                    "p95": 1157.526792,
                    "p99": 1157.526792,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1537.27975,
                    "min": 1313.112027,
                    "p50": 1497.2875259999998,
                    "p95": 1537.27975,
                    "p99": 1537.27975,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1342.560832,
                    "min": 1191.360986,
                    "p50": 1296.853058,
                    "p95": 1342.560832,
                    "p99": 1342.560832,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 783.912466,
                    "min": 693.8993949999999,
                    "p50": 762.610064,
                    "p95": 783.912466,
                    "p99": 783.912466,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 981.658921,
                    "min": 855.2159409999999,
                    "p50": 930.2009079999999,
                    "p95": 981.658921,
                    "p99": 981.658921,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2769.09127,
                    "min": 2419.088281,
                    "p50": 2682.979902,
                    "p95": 2769.09127,
                    "p99": 2769.09127,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3001.444424,
                    "min": 2620.543838,
                    "p50": 2881.3534879999997,
                    "p95": 3001.444424,
                    "p99": 3001.444424,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2389.2580479999997,
                    "min": 2099.2000319999997,
                    "p50": 2306.4448789999997,
                    "p95": 2389.2580479999997,
                    "p99": 2389.2580479999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3479.064211,
                    "min": 3029.685185,
                    "p50": 3335.967527,
                    "p95": 3479.064211,
                    "p99": 3479.064211,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 825.985329,
                    "min": 716.6742429999999,
                    "p50": 775.189442,
                    "p95": 825.985329,
                    "p99": 825.985329,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2203.051654,
                    "min": 1935.2315629999998,
                    "p50": 2096.308604,
                    "p95": 2203.051654,
                    "p99": 2203.051654,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3969.8298539999996,
                    "min": 3489.414659,
                    "p50": 3817.5433749999997,
                    "p95": 3969.8298539999996,
                    "p99": 3969.8298539999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1206.6617469999999,
                    "min": 1054.4909129999999,
                    "p50": 1177.779572,
                    "p95": 1206.6617469999999,
                    "p99": 1206.6617469999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1614.998715,
                    "min": 1412.9154839999999,
                    "p50": 1571.6198239999999,
                    "p95": 1614.998715,
                    "p99": 1614.998715,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1418.954313,
                    "min": 1247.651404,
                    "p50": 1372.50283,
                    "p95": 1418.954313,
                    "p99": 1418.954313,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1021.270633,
                    "min": 870.649684,
                    "p50": 982.0824269999999,
                    "p95": 1021.270633,
                    "p99": 1021.270633,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1801.877489,
                    "min": 1557.99526,
                    "p50": 1723.7634759999999,
                    "p95": 1801.877489,
                    "p99": 1801.877489,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1998.2766609999999,
                    "min": 1759.1175079999998,
                    "p50": 1920.807539,
                    "p95": 1998.2766609999999,
                    "p99": 1998.2766609999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 622.974662,
                    "min": 553.552915,
                    "p50": 607.6062939999999,
                    "p95": 622.974662,
                    "p99": 622.974662,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2576.0964519999998,
                    "min": 2271.904677,
                    "p50": 2516.784307,
                    "p95": 2576.0964519999998,
                    "p99": 2576.0964519999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1599.381533,
                    "min": 1535.560158,
                    "p50": 1568.333022,
                    "p95": 1599.381533,
                    "p99": 1599.381533,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 975.8153699999999,
                    "min": 905.8485999999999,
                    "p50": 971.2834829999999,
                    "p95": 975.8153699999999,
                    "p99": 975.8153699999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1168.744604,
                    "min": 1118.6977769999999,
                    "p50": 1151.377952,
                    "p95": 1168.744604,
                    "p99": 1168.744604,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 758.438506,
                    "min": 725.182953,
                    "p50": 748.64859,
                    "p95": 758.438506,
                    "p99": 758.438506,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 654.166146,
                    "min": 615.1309749999999,
                    "p50": 645.429371,
                    "p95": 654.166146,
                    "p99": 654.166146,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1083.0387879999998,
                    "min": 1008.1102559999999,
                    "p50": 1048.827335,
                    "p95": 1083.0387879999998,
                    "p99": 1083.0387879999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 348.42749799999996,
                    "min": 331.514975,
                    "p50": 341.877904,
                    "p95": 348.42749799999996,
                    "p99": 348.42749799999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 450.312622,
                    "min": 428.213013,
                    "p50": 439.608371,
                    "p95": 450.312622,
                    "p99": 450.312622,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 854.908948,
                    "min": 798.915274,
                    "p50": 841.1936599999999,
                    "p95": 854.908948,
                    "p99": 854.908948,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 571.997896,
                    "min": 528.476802,
                    "p50": 542.8385529999999,
                    "p95": 571.997896,
                    "p99": 571.997896,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2088.146194,
                    "min": 2005.6295579999999,
                    "p50": 2048.841191,
                    "p95": 2088.146194,
                    "p99": 2088.146194,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1259.536012,
                    "min": 1201.895871,
                    "p50": 1229.974142,
                    "p95": 1259.536012,
                    "p99": 1259.536012,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1867.4647699999998,
                    "min": 1752.4595829999998,
                    "p50": 1793.898141,
                    "p95": 1867.4647699999998,
                    "p99": 1867.4647699999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1466.597968,
                    "min": 1406.142854,
                    "p50": 1431.97892,
                    "p95": 1466.597968,
                    "p99": 1466.597968,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1359.541037,
                    "min": 1311.863101,
                    "p50": 1337.254437,
                    "p95": 1359.541037,
                    "p99": 1359.541037,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3093.619772,
                    "min": 3009.2635069999997,
                    "p50": 3044.091607,
                    "p95": 3093.619772,
                    "p99": 3093.619772,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2172.7270049999997,
                    "min": 1890.4534689999998,
                    "p50": 2067.0231089999997,
                    "p95": 2172.7270049999997,
                    "p99": 2172.7270049999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1686.243796,
                    "min": 1377.869532,
                    "p50": 1571.834889,
                    "p95": 1686.243796,
                    "p99": 1686.243796,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1969.1827099999998,
                    "min": 1626.697395,
                    "p50": 1857.674836,
                    "p95": 1969.1827099999998,
                    "p99": 1969.1827099999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3018.581429,
                    "min": 2486.1847119999998,
                    "p50": 2855.798816,
                    "p95": 3018.581429,
                    "p99": 3018.581429,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2651.185196,
                    "min": 2173.1240479999997,
                    "p50": 2491.635057,
                    "p95": 2651.185196,
                    "p99": 2651.185196,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1833.212486,
                    "min": 1497.557309,
                    "p50": 1720.578934,
                    "p95": 1833.212486,
                    "p99": 1833.212486,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 477.413484,
                    "min": 409.07511,
                    "p50": 456.04533799999996,
                    "p95": 477.413484,
                    "p99": 477.413484,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 625.146899,
                    "min": 493.383453,
                    "p50": 605.4113669999999,
                    "p95": 625.146899,
                    "p99": 625.146899,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1517.23693,
                    "min": 1277.1803149999998,
                    "p50": 1442.770536,
                    "p95": 1517.23693,
                    "p99": 1517.23693,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 922.559125,
                    "min": 769.238422,
                    "p50": 883.490829,
                    "p95": 922.559125,
                    "p99": 922.559125,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1373.4547619999998,
                    "min": 1145.4511989999999,
                    "p50": 1305.961661,
                    "p95": 1373.4547619999998,
                    "p99": 1373.4547619999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 788.4068709999999,
                    "min": 644.550113,
                    "p50": 747.8590049999999,
                    "p95": 788.4068709999999,
                    "p99": 788.4068709999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2126.612322,
                    "min": 1735.7378079999999,
                    "p50": 2039.3196289999998,
                    "p95": 2126.612322,
                    "p99": 2126.612322,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1227.9255719999999,
                    "min": 1023.946022,
                    "p50": 1169.63805,
                    "p95": 1227.9255719999999,
                    "p99": 1227.9255719999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1085.02944,
                    "min": 885.366728,
                    "p50": 1029.212667,
                    "p95": 1085.02944,
                    "p99": 1085.02944,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1313.578742,
                    "min": 1185.234503,
                    "p50": 1256.777276,
                    "p95": 1313.578742,
                    "p99": 1313.578742,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 553.835659,
                    "min": 483.76692399999996,
                    "p50": 517.866117,
                    "p95": 553.835659,
                    "p99": 553.835659,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1045.7994509999999,
                    "min": 957.131902,
                    "p50": 1013.5246559999999,
                    "p95": 1045.7994509999999,
                    "p99": 1045.7994509999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 918.4550049999999,
                    "min": 833.9849449999999,
                    "p50": 877.0520349999999,
                    "p95": 918.4550049999999,
                    "p99": 918.4550049999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 793.6818589999999,
                    "min": 728.3055529999999,
                    "p50": 759.752306,
                    "p95": 793.6818589999999,
                    "p99": 793.6818589999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1935.246615,
                    "min": 1771.408764,
                    "p50": 1853.6710779999999,
                    "p95": 1935.246615,
                    "p99": 1935.246615,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1680.577053,
                    "min": 1520.2202809999999,
                    "p50": 1627.907829,
                    "p95": 1680.577053,
                    "p99": 1680.577053,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2564.134708,
                    "min": 2334.386619,
                    "p50": 2468.322201,
                    "p95": 2564.134708,
                    "p99": 2564.134708,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3944.255392,
                    "min": 3463.4770249999997,
                    "p50": 3707.469565,
                    "p95": 3944.255392,
                    "p99": 3944.255392,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1563.3855589999998,
                    "min": 1408.7374399999999,
                    "p50": 1493.9476069999998,
                    "p95": 1563.3855589999998,
                    "p99": 1563.3855589999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 673.103758,
                    "min": 607.7297619999999,
                    "p50": 652.369371,
                    "p95": 673.103758,
                    "p99": 673.103758,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1442.2114239999999,
                    "min": 1283.817038,
                    "p50": 1379.717293,
                    "p95": 1442.2114239999999,
                    "p99": 1442.2114239999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 426.767967,
                    "min": 386.44732799999997,
                    "p50": 406.14802499999996,
                    "p95": 426.767967,
                    "p99": 426.767967,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1835.645519,
                    "min": 1651.5418319999999,
                    "p50": 1734.1873919999998,
                    "p95": 1835.645519,
                    "p99": 1835.645519,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2280.566055,
                    "min": 2059.366274,
                    "p50": 2182.942243,
                    "p95": 2280.566055,
                    "p99": 2280.566055,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1212.2235429999998,
                    "min": 1076.595625,
                    "p50": 1123.891839,
                    "p95": 1212.2235429999998,
                    "p99": 1212.2235429999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2388.385288,
                    "min": 2287.609378,
                    "p50": 2329.506477,
                    "p95": 2388.385288,
                    "p99": 2388.385288,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 566.1426789999999,
                    "min": 542.912778,
                    "p50": 555.030859,
                    "p95": 566.1426789999999,
                    "p99": 566.1426789999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 393.28534099999996,
                    "min": 342.52126599999997,
                    "p50": 382.057392,
                    "p95": 393.28534099999996,
                    "p99": 393.28534099999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 743.3702959999999,
                    "min": 697.261347,
                    "p50": 729.7503839999999,
                    "p95": 743.3702959999999,
                    "p99": 743.3702959999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.284924,
                    "min": 244.92990899999998,
                    "p50": 265.22605699999997,
                    "p95": 271.284924,
                    "p99": 271.284924,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1201.056468,
                    "min": 1138.239096,
                    "p50": 1189.8035559999998,
                    "p95": 1201.056468,
                    "p99": 1201.056468,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 922.5805439999999,
                    "min": 858.9235,
                    "p50": 896.4628399999999,
                    "p95": 922.5805439999999,
                    "p99": 922.5805439999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 856.284409,
                    "min": 806.318282,
                    "p50": 832.4411389999999,
                    "p95": 856.284409,
                    "p99": 856.284409,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.72114499999998,
                    "min": 175.28961999999999,
                    "p50": 208.776899,
                    "p95": 214.72114499999998,
                    "p99": 214.72114499999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 330.616854,
                    "min": 308.108245,
                    "p50": 326.000024,
                    "p95": 330.616854,
                    "p99": 330.616854,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1048.6449,
                    "min": 1013.623247,
                    "p50": 1042.305317,
                    "p95": 1048.6449,
                    "p99": 1048.6449,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 502.628769,
                    "min": 463.32845,
                    "p50": 496.950118,
                    "p95": 502.628769,
                    "p99": 502.628769,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.874745,
                    "min": 646.140211,
                    "p50": 667.1712239999999,
                    "p95": 697.874745,
                    "p99": 697.874745,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 443.506874,
                    "min": 429.50845999999996,
                    "p50": 439.547514,
                    "p95": 443.506874,
                    "p99": 443.506874,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 790.707424,
                    "min": 764.660264,
                    "p50": 785.2745209999999,
                    "p95": 790.707424,
                    "p99": 790.707424,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1773.3514149999999,
                    "min": 1714.262245,
                    "p50": 1757.2846769999999,
                    "p95": 1773.3514149999999,
                    "p99": 1773.3514149999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2932.8060229999996,
                    "min": 2843.48412,
                    "p50": 2905.774794,
                    "p95": 2932.8060229999996,
                    "p99": 2932.8060229999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 627.864296,
                    "min": 571.1500229999999,
                    "p50": 606.7375579999999,
                    "p95": 627.864296,
                    "p99": 627.864296,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 466.854634,
                    "min": 450.512268,
                    "p50": 460.93098599999996,
                    "p95": 466.854634,
                    "p99": 466.854634,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1251.884075,
                    "min": 1209.0163619999998,
                    "p50": 1239.4555169999999,
                    "p95": 1251.884075,
                    "p99": 1251.884075,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1863.5137459999999,
                    "min": 1788.078837,
                    "p50": 1854.0682,
                    "p95": 1863.5137459999999,
                    "p99": 1863.5137459999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3081.613499,
                    "min": 2930.811449,
                    "p50": 3063.1054289999997,
                    "p95": 3081.613499,
                    "p99": 3081.613499,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2535.493051,
                    "min": 2390.85054,
                    "p50": 2458.207622,
                    "p95": 2535.493051,
                    "p99": 2535.493051,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 525.64404,
                    "min": 486.52791299999996,
                    "p50": 522.041436,
                    "p95": 525.64404,
                    "p99": 525.64404,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1200.684313,
                    "min": 1057.462922,
                    "p50": 1092.008011,
                    "p95": 1200.684313,
                    "p99": 1200.684313,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 408.921672,
                    "min": 371.33505399999996,
                    "p50": 403.295887,
                    "p95": 408.921672,
                    "p99": 408.921672,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 892.7512449999999,
                    "min": 855.316428,
                    "p50": 876.5965779999999,
                    "p95": 892.7512449999999,
                    "p99": 892.7512449999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 961.0262459999999,
                    "min": 915.2748039999999,
                    "p50": 946.420501,
                    "p95": 961.0262459999999,
                    "p99": 961.0262459999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.54902999999996,
                    "min": 262.526776,
                    "p50": 278.420457,
                    "p95": 288.54902999999996,
                    "p99": 288.54902999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 740.228471,
                    "min": 678.898164,
                    "p50": 707.7205389999999,
                    "p95": 740.228471,
                    "p99": 740.228471,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 770.11524,
                    "min": 746.308818,
                    "p50": 752.581026,
                    "p95": 770.11524,
                    "p99": 770.11524,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.558604,
                    "min": 325.72982099999996,
                    "p50": 343.361332,
                    "p95": 345.558604,
                    "p99": 345.558604,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.06056199999998,
                    "min": 203.793717,
                    "p50": 218.77319899999998,
                    "p95": 221.06056199999998,
                    "p99": 221.06056199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 830.465324,
                    "min": 799.376759,
                    "p50": 820.7768649999999,
                    "p95": 830.465324,
                    "p99": 830.465324,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 649.973226,
                    "min": 609.192533,
                    "p50": 635.960097,
                    "p95": 649.973226,
                    "p99": 649.973226,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 585.7295889999999,
                    "min": 565.5815259999999,
                    "p50": 580.8407559999999,
                    "p95": 585.7295889999999,
                    "p99": 585.7295889999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 971.802771,
                    "min": 920.6945579999999,
                    "p50": 948.127134,
                    "p95": 971.802771,
                    "p99": 971.802771,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1486.585046,
                    "min": 1438.5061739999999,
                    "p50": 1453.967845,
                    "p95": 1486.585046,
                    "p99": 1486.585046,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1291.554928,
                    "min": 1251.480959,
                    "p50": 1266.307341,
                    "p95": 1291.554928,
                    "p99": 1291.554928,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 352.044068,
                    "min": 335.082383,
                    "p50": 344.615888,
                    "p95": 352.044068,
                    "p99": 352.044068,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2133.0924139999997,
                    "min": 2050.640594,
                    "p50": 2072.674207,
                    "p95": 2133.0924139999997,
                    "p99": 2133.0924139999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 873.065082,
                    "min": 837.0087279999999,
                    "p50": 854.7815929999999,
                    "p95": 873.065082,
                    "p99": 873.065082,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 563.109008,
                    "min": 531.550438,
                    "p50": 551.639813,
                    "p95": 563.109008,
                    "p99": 563.109008,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1190.717605,
                    "min": 1150.371509,
                    "p50": 1166.711135,
                    "p95": 1190.717605,
                    "p99": 1190.717605,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 666.15256,
                    "min": 640.827097,
                    "p50": 650.866666,
                    "p95": 666.15256,
                    "p99": 666.15256,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1869.08703,
                    "min": 1797.5471049999999,
                    "p50": 1834.076949,
                    "p95": 1869.08703,
                    "p99": 1869.08703,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 457.90394399999997,
                    "min": 436.068014,
                    "p50": 446.379465,
                    "p95": 457.90394399999997,
                    "p99": 457.90394399999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1600.156591,
                    "min": 1541.7162879999998,
                    "p50": 1576.175245,
                    "p95": 1600.156591,
                    "p99": 1600.156591,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 767.3532749999999,
                    "min": 749.896177,
                    "p50": 755.455425,
                    "p95": 767.3532749999999,
                    "p99": 767.3532749999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1386.588431,
                    "min": 1362.97479,
                    "p50": 1374.175802,
                    "p95": 1386.588431,
                    "p99": 1386.588431,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1073.260068,
                    "min": 1054.807895,
                    "p50": 1061.382639,
                    "p95": 1073.260068,
                    "p99": 1073.260068,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 683.573133,
                    "min": 619.079671,
                    "p50": 634.023662,
                    "p95": 683.573133,
                    "p99": 683.573133,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1891.038804,
                    "min": 1666.0316819999998,
                    "p50": 1875.565161,
                    "p95": 1891.038804,
                    "p99": 1891.038804,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1164.8814499999999,
                    "min": 1013.777341,
                    "p50": 1138.1576189999998,
                    "p95": 1164.8814499999999,
                    "p99": 1164.8814499999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1658.476639,
                    "min": 1462.787719,
                    "p50": 1623.6725079999999,
                    "p95": 1658.476639,
                    "p99": 1658.476639,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2537.811183,
                    "min": 2226.031666,
                    "p50": 2486.9029689999998,
                    "p95": 2537.811183,
                    "p99": 2537.811183,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1394.566322,
                    "min": 1240.908749,
                    "p50": 1375.7759369999999,
                    "p95": 1394.566322,
                    "p99": 1394.566322,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1775.875216,
                    "min": 1582.581173,
                    "p50": 1734.353993,
                    "p95": 1775.875216,
                    "p99": 1775.875216,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3773.214372,
                    "min": 3309.7220589999997,
                    "p50": 3715.7640739999997,
                    "p95": 3773.214372,
                    "p99": 3773.214372,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 928.934766,
                    "min": 803.0105649999999,
                    "p50": 896.387391,
                    "p95": 928.934766,
                    "p99": 928.934766,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 418.10630799999996,
                    "min": 362.98330899999996,
                    "p50": 394.99242399999997,
                    "p95": 418.10630799999996,
                    "p99": 418.10630799999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1289.4846189999998,
                    "min": 1136.134613,
                    "p50": 1265.163633,
                    "p95": 1289.4846189999998,
                    "p99": 1289.4846189999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 784.867339,
                    "min": 687.509654,
                    "p50": 770.700106,
                    "p95": 784.867339,
                    "p99": 784.867339,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 542.865727,
                    "min": 474.806361,
                    "p50": 525.111227,
                    "p95": 542.865727,
                    "p99": 542.865727,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1032.60039,
                    "min": 919.746002,
                    "p50": 1015.759873,
                    "p95": 1032.60039,
                    "p99": 1032.60039,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2224.81562,
                    "min": 1945.672439,
                    "p50": 2185.722976,
                    "p95": 2224.81562,
                    "p99": 2224.81562,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1547.473326,
                    "min": 1350.2628479999998,
                    "p50": 1496.5915559999999,
                    "p95": 1547.473326,
                    "p99": 1547.473326,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1393.960429,
                    "min": 1369.576906,
                    "p50": 1389.142332,
                    "p95": 1393.960429,
                    "p99": 1393.960429,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1647.214127,
                    "min": 1605.2923489999998,
                    "p50": 1622.4182999999998,
                    "p95": 1647.214127,
                    "p99": 1647.214127,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1756.364094,
                    "min": 1717.254905,
                    "p50": 1737.164301,
                    "p95": 1756.364094,
                    "p99": 1756.364094,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1069.726322,
                    "min": 1040.267148,
                    "p50": 1061.497934,
                    "p95": 1069.726322,
                    "p99": 1069.726322,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 731.357719,
                    "min": 682.3286919999999,
                    "p50": 711.85082,
                    "p95": 731.357719,
                    "p99": 731.357719,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 950.389544,
                    "min": 925.422651,
                    "p50": 941.23349,
                    "p95": 950.389544,
                    "p99": 950.389544,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 497.391591,
                    "min": 477.500791,
                    "p50": 493.18907099999996,
                    "p95": 497.391591,
                    "p99": 497.391591,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 613.566274,
                    "min": 600.893188,
                    "p50": 607.194834,
                    "p95": 613.566274,
                    "p99": 613.566274,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1197.9693479999999,
                    "min": 1153.2886859999999,
                    "p50": 1174.6491429999999,
                    "p95": 1197.9693479999999,
                    "p99": 1197.9693479999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 839.980183,
                    "min": 818.2353519999999,
                    "p50": 831.527842,
                    "p95": 839.980183,
                    "p99": 839.980183,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2322.620943,
                    "min": 2275.8267299999998,
                    "p50": 2294.1752349999997,
                    "p95": 2322.620943,
                    "p99": 2322.620943,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1327.974356,
                    "min": 1260.517495,
                    "p50": 1283.24809,
                    "p95": 1327.974356,
                    "p99": 1327.974356,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2063.136598,
                    "min": 1990.2411639999998,
                    "p50": 2041.8109579999998,
                    "p95": 2063.136598,
                    "p99": 2063.136598,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 385.157806,
                    "min": 371.54074499999996,
                    "p50": 377.433286,
                    "p95": 385.157806,
                    "p99": 385.157806,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1534.1340109999999,
                    "min": 1494.076361,
                    "p50": 1515.663801,
                    "p95": 1534.1340109999999,
                    "p99": 1534.1340109999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1001.435083,
                    "min": 956.0821119999999,
                    "p50": 981.1763599999999,
                    "p95": 1001.435083,
                    "p99": 1001.435083,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 517.0812609999999,
                    "min": 481.07219899999996,
                    "p50": 503.28777199999996,
                    "p95": 517.0812609999999,
                    "p99": 517.0812609999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 360.66904,
                    "min": 328.939144,
                    "p50": 351.262426,
                    "p95": 360.66904,
                    "p99": 360.66904,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 275.784715,
                    "min": 235.79941,
                    "p50": 274.740506,
                    "p95": 275.784715,
                    "p99": 275.784715,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1064.398557,
                    "min": 1037.52088,
                    "p50": 1045.010083,
                    "p95": 1064.398557,
                    "p99": 1064.398557,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1223.6998939999999,
                    "min": 1193.146274,
                    "p50": 1199.0978519999999,
                    "p95": 1223.6998939999999,
                    "p99": 1223.6998939999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 751.0475849999999,
                    "min": 702.1235399999999,
                    "p50": 734.473525,
                    "p95": 751.0475849999999,
                    "p99": 751.0475849999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1617.1633649999999,
                    "min": 1578.0679579999999,
                    "p50": 1581.1714829999999,
                    "p95": 1617.1633649999999,
                    "p99": 1617.1633649999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 826.834884,
                    "min": 788.125762,
                    "p50": 812.048203,
                    "p95": 826.834884,
                    "p99": 826.834884,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 591.207826,
                    "min": 574.217888,
                    "p50": 582.6658269999999,
                    "p95": 591.207826,
                    "p99": 591.207826,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1418.702618,
                    "min": 1382.270264,
                    "p50": 1392.365034,
                    "p95": 1418.702618,
                    "p99": 1418.702618,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1160.5911999999998,
                    "min": 1082.661059,
                    "p50": 1121.776656,
                    "p95": 1160.5911999999998,
                    "p99": 1160.5911999999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 429.267271,
                    "min": 401.615273,
                    "p50": 425.10432499999996,
                    "p95": 429.267271,
                    "p99": 429.267271,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 671.361409,
                    "min": 650.595408,
                    "p50": 657.247995,
                    "p95": 671.361409,
                    "p99": 671.361409,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2406.481361,
                    "min": 2342.940156,
                    "p50": 2382.018204,
                    "p95": 2406.481361,
                    "p99": 2406.481361,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 906.831903,
                    "min": 861.030304,
                    "p50": 895.31449,
                    "p95": 906.831903,
                    "p99": 906.831903,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3185.180571,
                    "min": 3129.194396,
                    "p50": 3137.874767,
                    "p95": 3185.180571,
                    "p99": 3185.180571,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1053.860115,
                    "min": 1016.6707879999999,
                    "p50": 1040.282949,
                    "p95": 1053.860115,
                    "p99": 1053.860115,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 546.989423,
                    "min": 502.664543,
                    "p50": 540.419664,
                    "p95": 546.989423,
                    "p99": 546.989423,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2069.7638859999997,
                    "min": 2009.871872,
                    "p50": 2054.228739,
                    "p95": 2069.7638859999997,
                    "p99": 2069.7638859999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1462.578026,
                    "min": 1415.048431,
                    "p50": 1443.471046,
                    "p95": 1462.578026,
                    "p99": 1462.578026,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 653.629226,
                    "min": 619.03346,
                    "p50": 642.6318279999999,
                    "p95": 653.629226,
                    "p99": 653.629226,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1558.015766,
                    "min": 1528.6123189999998,
                    "p50": 1549.355067,
                    "p95": 1558.015766,
                    "p99": 1558.015766,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 750.968,
                    "min": 730.035564,
                    "p50": 740.0097979999999,
                    "p95": 750.968,
                    "p99": 750.968,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1264.872404,
                    "min": 1209.471123,
                    "p50": 1248.008908,
                    "p95": 1264.872404,
                    "p99": 1264.872404,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 962.723223,
                    "min": 917.59224,
                    "p50": 937.7052239999999,
                    "p95": 962.723223,
                    "p99": 962.723223,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1371.252102,
                    "min": 1324.359761,
                    "p50": 1353.294245,
                    "p95": 1371.252102,
                    "p99": 1371.252102,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1833.531172,
                    "min": 1766.5292749999999,
                    "p50": 1810.42771,
                    "p95": 1833.531172,
                    "p99": 1833.531172,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 851.462986,
                    "min": 813.989097,
                    "p50": 845.394134,
                    "p95": 851.462986,
                    "p99": 851.462986,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1163.373138,
                    "min": 1121.489403,
                    "p50": 1144.9686259999999,
                    "p95": 1163.373138,
                    "p99": 1163.373138,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 344.75064,
                    "min": 314.57658,
                    "p50": 340.44003699999996,
                    "p95": 344.75064,
                    "p99": 344.75064,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 444.937051,
                    "min": 411.72188,
                    "p50": 441.50888299999997,
                    "p95": 444.937051,
                    "p99": 444.937051,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1405.161873,
                    "min": 1338.820907,
                    "p50": 1383.1933999999999,
                    "p95": 1405.161873,
                    "p99": 1405.161873,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 581.7976729999999,
                    "min": 552.0250639999999,
                    "p50": 571.573239,
                    "p95": 581.7976729999999,
                    "p99": 581.7976729999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1663.210621,
                    "min": 1587.0892509999999,
                    "p50": 1644.5598559999999,
                    "p95": 1663.210621,
                    "p99": 1663.210621,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1947.0555029999998,
                    "min": 1857.553551,
                    "p50": 1900.314905,
                    "p95": 1947.0555029999998,
                    "p99": 1947.0555029999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 712.09429,
                    "min": 698.053128,
                    "p50": 708.9076359999999,
                    "p95": 712.09429,
                    "p99": 712.09429,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1253.478685,
                    "min": 1220.471677,
                    "p50": 1230.502059,
                    "p95": 1253.478685,
                    "p99": 1253.478685,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1106.9267929999999,
                    "min": 1089.212405,
                    "p50": 1106.016312,
                    "p95": 1106.9267929999999,
                    "p99": 1106.9267929999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 853.596421,
                    "min": 830.711021,
                    "p50": 841.132901,
                    "p95": 853.596421,
                    "p99": 853.596421,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 444.366586,
                    "min": 406.32035199999996,
                    "p50": 437.900014,
                    "p95": 444.366586,
                    "p99": 444.366586,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2410.672536,
                    "min": 2346.337195,
                    "p50": 2382.929879,
                    "p95": 2410.672536,
                    "p99": 2410.672536,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1520.532277,
                    "min": 1478.207105,
                    "p50": 1513.7181799999998,
                    "p95": 1520.532277,
                    "p99": 1520.532277,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1798.16393,
                    "min": 1743.532115,
                    "p50": 1776.363909,
                    "p95": 1798.16393,
                    "p99": 1798.16393,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2732.760399,
                    "min": 2685.1893609999997,
                    "p50": 2725.884769,
                    "p95": 2732.760399,
                    "p99": 2732.760399,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2067.1510279999998,
                    "min": 2007.916548,
                    "p50": 2040.5040999999999,
                    "p95": 2067.1510279999998,
                    "p99": 2067.1510279999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 987.5284919999999,
                    "min": 967.131988,
                    "p50": 979.211826,
                    "p95": 987.5284919999999,
                    "p99": 987.5284919999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1855.083788,
                    "min": 1791.2014709999999,
                    "p50": 1799.06179,
                    "p95": 1855.083788,
                    "p99": 1855.083788,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1080.012401,
                    "min": 1029.522798,
                    "p50": 1055.784277,
                    "p95": 1080.012401,
                    "p99": 1080.012401,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1479.0640409999999,
                    "min": 1419.5525,
                    "p50": 1464.633392,
                    "p95": 1479.0640409999999,
                    "p99": 1479.0640409999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1578.290186,
                    "min": 1514.203996,
                    "p50": 1571.8027029999998,
                    "p95": 1578.290186,
                    "p99": 1578.290186,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2102.5983459999998,
                    "min": 2033.0655669999999,
                    "p50": 2087.7357779999998,
                    "p95": 2102.5983459999998,
                    "p99": 2102.5983459999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1185.536689,
                    "min": 1141.8184569999999,
                    "p50": 1160.610038,
                    "p95": 1185.536689,
                    "p99": 1185.536689,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 659.297909,
                    "min": 640.198894,
                    "p50": 644.665623,
                    "p95": 659.297909,
                    "p99": 659.297909,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 858.8702969999999,
                    "min": 842.9105129999999,
                    "p50": 854.4744539999999,
                    "p95": 858.8702969999999,
                    "p99": 858.8702969999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1380.677496,
                    "min": 1338.656597,
                    "p50": 1367.951088,
                    "p95": 1380.677496,
                    "p99": 1380.677496,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1296.923538,
                    "min": 1231.757065,
                    "p50": 1262.06295,
                    "p95": 1296.923538,
                    "p99": 1296.923538,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3147.847116,
                    "min": 3064.87423,
                    "p50": 3094.080011,
                    "p95": 3147.847116,
                    "p99": 3147.847116,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 759.086772,
                    "min": 726.9928219999999,
                    "p50": 750.293551,
                    "p95": 759.086772,
                    "p99": 759.086772,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 346.92098999999996,
                    "min": 307.910211,
                    "p50": 339.938891,
                    "p95": 346.92098999999996,
                    "p99": 346.92098999999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 554.597162,
                    "min": 522.05158,
                    "p50": 544.458216,
                    "p95": 554.597162,
                    "p99": 554.597162,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1000.319952,
                    "min": 937.7237359999999,
                    "p50": 951.4739989999999,
                    "p95": 1000.319952,
                    "p99": 1000.319952,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 457.49834699999997,
                    "min": 409.739081,
                    "p50": 448.23896299999996,
                    "p95": 457.49834699999997,
                    "p99": 457.49834699999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1569.139544,
                    "min": 1516.8915279999999,
                    "p50": 1537.9989799999998,
                    "p95": 1569.139544,
                    "p99": 1569.139544,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 759.597627,
                    "min": 742.376176,
                    "p50": 749.3849289999999,
                    "p95": 759.597627,
                    "p99": 759.597627,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 347.605072,
                    "min": 337.86506399999996,
                    "p50": 339.47252399999996,
                    "p95": 347.605072,
                    "p99": 347.605072,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 448.648443,
                    "min": 437.16948499999995,
                    "p50": 441.057167,
                    "p95": 448.648443,
                    "p99": 448.648443,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1076.0670149999999,
                    "min": 1033.110334,
                    "p50": 1052.5901489999999,
                    "p95": 1076.0670149999999,
                    "p99": 1076.0670149999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 655.0376279999999,
                    "min": 624.105334,
                    "p50": 645.934003,
                    "p95": 655.0376279999999,
                    "p99": 655.0376279999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2104.694209,
                    "min": 2040.753505,
                    "p50": 2057.68443,
                    "p95": 2104.694209,
                    "p99": 2104.694209,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 549.55156,
                    "min": 524.407167,
                    "p50": 540.122589,
                    "p95": 549.55156,
                    "p99": 549.55156,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1174.797275,
                    "min": 1130.3914949999998,
                    "p50": 1150.715044,
                    "p95": 1174.797275,
                    "p99": 1174.797275,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 860.981335,
                    "min": 835.188349,
                    "p50": 845.576424,
                    "p95": 860.981335,
                    "p99": 860.981335,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1267.597712,
                    "min": 1218.909127,
                    "p50": 1254.638968,
                    "p95": 1267.597712,
                    "p99": 1267.597712,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1392.5623329999999,
                    "min": 1327.043232,
                    "p50": 1349.3936079999999,
                    "p95": 1392.5623329999999,
                    "p99": 1392.5623329999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1833.344416,
                    "min": 1771.274396,
                    "p50": 1808.2318209999999,
                    "p95": 1833.344416,
                    "p99": 1833.344416,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1470.921189,
                    "min": 1432.036198,
                    "p50": 1455.8149779999999,
                    "p95": 1470.921189,
                    "p99": 1470.921189,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 963.024016,
                    "min": 933.383925,
                    "p50": 947.0703589999999,
                    "p95": 963.024016,
                    "p99": 963.024016,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 545.6504649999999,
                    "min": 525.597671,
                    "p50": 536.394677,
                    "p95": 545.6504649999999,
                    "p99": 545.6504649999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1927.9793989999998,
                    "min": 1831.3481949999998,
                    "p50": 1911.89716,
                    "p95": 1927.9793989999998,
                    "p99": 1927.9793989999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1412.343153,
                    "min": 1371.1369049999998,
                    "p50": 1403.517733,
                    "p95": 1412.343153,
                    "p99": 1412.343153,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1161.256537,
                    "min": 1122.1572429999999,
                    "p50": 1142.692475,
                    "p95": 1161.256537,
                    "p99": 1161.256537,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 786.784148,
                    "min": 744.792276,
                    "p50": 778.5185359999999,
                    "p95": 786.784148,
                    "p99": 786.784148,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 417.32649899999996,
                    "min": 369.028327,
                    "p50": 407.52631199999996,
                    "p95": 417.32649899999996,
                    "p99": 417.32649899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 667.916464,
                    "min": 617.832448,
                    "p50": 658.8186479999999,
                    "p95": 667.916464,
                    "p99": 667.916464,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1799.7170489999999,
                    "min": 1727.299963,
                    "p50": 1780.9639559999998,
                    "p95": 1799.7170489999999,
                    "p99": 1799.7170489999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2233.251956,
                    "min": 2175.019589,
                    "p50": 2189.2573749999997,
                    "p95": 2233.251956,
                    "p99": 2233.251956,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 916.332357,
                    "min": 885.173449,
                    "p50": 902.4512679999999,
                    "p95": 916.332357,
                    "p99": 916.332357,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1287.0139359999998,
                    "min": 1259.787179,
                    "p50": 1279.839051,
                    "p95": 1287.0139359999998,
                    "p99": 1287.0139359999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2596.34823,
                    "min": 2484.454823,
                    "p50": 2515.087106,
                    "p95": 2596.34823,
                    "p99": 2596.34823,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1536.003831,
                    "min": 1486.055738,
                    "p50": 1519.657184,
                    "p95": 1536.003831,
                    "p99": 1536.003831,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1039.244134,
                    "min": 986.69747,
                    "p50": 1027.261503,
                    "p95": 1039.244134,
                    "p99": 1039.244134,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1676.7348029999998,
                    "min": 1609.1252829999999,
                    "p50": 1656.161797,
                    "p95": 1676.7348029999998,
                    "p99": 1676.7348029999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2567.9418689999998,
                    "min": 2431.827919,
                    "p50": 2479.783648,
                    "p95": 2567.9418689999998,
                    "p99": 2567.9418689999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1364.688604,
                    "min": 1302.582888,
                    "p50": 1336.5062639999999,
                    "p95": 1364.688604,
                    "p99": 1364.688604,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1704.0443989999999,
                    "min": 1620.885519,
                    "p50": 1646.0432329999999,
                    "p95": 1704.0443989999999,
                    "p99": 1704.0443989999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1878.681286,
                    "min": 1793.236111,
                    "p50": 1816.5908969999998,
                    "p95": 1878.681286,
                    "p99": 1878.681286,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2367.361406,
                    "min": 2270.642006,
                    "p50": 2307.087598,
                    "p95": 2367.361406,
                    "p99": 2367.361406,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2188.6436009999998,
                    "min": 2122.470121,
                    "p50": 2150.258289,
                    "p95": 2188.6436009999998,
                    "p99": 2188.6436009999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 699.6012079999999,
                    "min": 678.4842649999999,
                    "p50": 685.441914,
                    "p95": 699.6012079999999,
                    "p99": 699.6012079999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1535.0940659999999,
                    "min": 1469.799204,
                    "p50": 1502.4498099999998,
                    "p95": 1535.0940659999999,
                    "p99": 1535.0940659999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2037.521509,
                    "min": 1935.6867869999999,
                    "p50": 1978.411251,
                    "p95": 2037.521509,
                    "p99": 2037.521509,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2935.9484869999997,
                    "min": 2826.26231,
                    "p50": 2895.195414,
                    "p95": 2935.9484869999997,
                    "p99": 2935.9484869999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 865.801147,
                    "min": 806.625491,
                    "p50": 855.7896169999999,
                    "p95": 865.801147,
                    "p99": 865.801147,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1192.1765599999999,
                    "min": 1149.695496,
                    "p50": 1170.097084,
                    "p95": 1192.1765599999999,
                    "p99": 1192.1765599999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 534.742033,
                    "min": 490.007412,
                    "p50": 522.076603,
                    "p95": 534.742033,
                    "p99": 534.742033,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1026.266094,
                    "min": 977.06417,
                    "p50": 1007.696641,
                    "p95": 1026.266094,
                    "p99": 1026.266094,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3353.088931,
                    "min": 3225.500254,
                    "p50": 3254.46981,
                    "p95": 3353.088931,
                    "p99": 3353.088931,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3403.642556,
                    "min": 3261.077426,
                    "p50": 3302.879062,
                    "p95": 3403.642556,
                    "p99": 3403.642556,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2421.7066219999997,
                    "min": 2287.501354,
                    "p50": 2325.908991,
                    "p95": 2421.7066219999997,
                    "p99": 2421.7066219999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2063.230861,
                    "min": 1971.0985039999998,
                    "p50": 2002.701699,
                    "p95": 2063.230861,
                    "p99": 2063.230861,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1535.194735,
                    "min": 1488.38807,
                    "p50": 1511.8336769999999,
                    "p95": 1535.194735,
                    "p99": 1535.194735,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1369.669784,
                    "min": 1309.9170669999999,
                    "p50": 1328.495222,
                    "p95": 1369.669784,
                    "p99": 1369.669784,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1032.611379,
                    "min": 984.2478739999999,
                    "p50": 1018.611178,
                    "p95": 1032.611379,
                    "p99": 1032.611379,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2179.233319,
                    "min": 2127.4821039999997,
                    "p50": 2163.994427,
                    "p95": 2179.233319,
                    "p99": 2179.233319,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 704.857524,
                    "min": 684.146206,
                    "p50": 693.481369,
                    "p95": 704.857524,
                    "p99": 704.857524,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1849.073573,
                    "min": 1814.053209,
                    "p50": 1846.648006,
                    "p95": 1849.073573,
                    "p99": 1849.073573,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 875.5951349999999,
                    "min": 842.063374,
                    "p50": 858.250061,
                    "p95": 875.5951349999999,
                    "p99": 875.5951349999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2955.445815,
                    "min": 2866.649388,
                    "p50": 2900.528378,
                    "p95": 2955.445815,
                    "p99": 2955.445815,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 534.467274,
                    "min": 516.106584,
                    "p50": 523.540472,
                    "p95": 534.467274,
                    "p99": 534.467274,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1203.8837999999998,
                    "min": 1143.1693189999999,
                    "p50": 1176.955197,
                    "p95": 1203.8837999999998,
                    "p99": 1203.8837999999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2526.0722149999997,
                    "min": 2433.58371,
                    "p50": 2469.073335,
                    "p95": 2526.0722149999997,
                    "p99": 2526.0722149999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1702.1181569999999,
                    "min": 1623.226934,
                    "p50": 1667.3913029999999,
                    "p95": 1702.1181569999999,
                    "p99": 1702.1181569999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1894.753104,
                    "min": 1815.990722,
                    "p50": 1858.0630999999998,
                    "p95": 1894.753104,
                    "p99": 1894.753104,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1033.6577479999999,
                    "min": 1012.4912569999999,
                    "p50": 1021.108759,
                    "p95": 1033.6577479999999,
                    "p99": 1033.6577479999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 875.2414319999999,
                    "min": 840.8780879999999,
                    "p50": 856.549671,
                    "p95": 875.2414319999999,
                    "p99": 875.2414319999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1746.919672,
                    "min": 1666.226347,
                    "p50": 1692.170915,
                    "p95": 1746.919672,
                    "p99": 1746.919672,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3397.0030469999997,
                    "min": 3298.9532059999997,
                    "p50": 3365.110691,
                    "p95": 3397.0030469999997,
                    "p99": 3397.0030469999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 703.837902,
                    "min": 681.026625,
                    "p50": 700.699621,
                    "p95": 703.837902,
                    "p99": 703.837902,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1208.011027,
                    "min": 1172.311133,
                    "p50": 1197.473922,
                    "p95": 1208.011027,
                    "p99": 1208.011027,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 539.763108,
                    "min": 517.413809,
                    "p50": 528.64854,
                    "p95": 539.763108,
                    "p99": 539.763108,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2540.391299,
                    "min": 2482.8589509999997,
                    "p50": 2530.358201,
                    "p95": 2540.391299,
                    "p99": 2540.391299,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2416.969047,
                    "min": 2310.795357,
                    "p50": 2365.0352519999997,
                    "p95": 2416.969047,
                    "p99": 2416.969047,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2066.726838,
                    "min": 1964.4924629999998,
                    "p50": 2017.6587009999998,
                    "p95": 2066.726838,
                    "p99": 2066.726838,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2244.665845,
                    "min": 2161.358238,
                    "p50": 2190.162762,
                    "p95": 2244.665845,
                    "p99": 2244.665845,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1552.19992,
                    "min": 1477.7935089999999,
                    "p50": 1512.465039,
                    "p95": 1552.19992,
                    "p99": 1552.19992,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2982.23897,
                    "min": 2897.0278129999997,
                    "p50": 2916.8117899999997,
                    "p95": 2982.23897,
                    "p99": 2982.23897,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1384.91896,
                    "min": 1330.012644,
                    "p50": 1351.852038,
                    "p95": 1384.91896,
                    "p99": 1384.91896,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 815.311015,
                    "min": 775.014149,
                    "p50": 802.555021,
                    "p95": 815.311015,
                    "p99": 815.311015,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.283368,
                    "min": 438.430949,
                    "p50": 453.835017,
                    "p95": 477.283368,
                    "p99": 477.283368,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 938.0055729999999,
                    "min": 909.382125,
                    "p50": 918.9267259999999,
                    "p95": 938.0055729999999,
                    "p99": 938.0055729999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1087.213239,
                    "min": 1055.658774,
                    "p50": 1073.718148,
                    "p95": 1087.213239,
                    "p99": 1087.213239,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.40000799999999,
                    "min": 207.48033099999998,
                    "p50": 216.31885499999999,
                    "p95": 222.40000799999999,
                    "p99": 222.40000799999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 755.9314049999999,
                    "min": 716.7266589999999,
                    "p50": 746.724192,
                    "p95": 755.9314049999999,
                    "p99": 755.9314049999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 395.82419699999997,
                    "min": 385.93821499999996,
                    "p50": 390.569904,
                    "p95": 395.82419699999997,
                    "p99": 395.82419699999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 275.969073,
                    "min": 241.141773,
                    "p50": 274.584289,
                    "p95": 275.969073,
                    "p99": 275.969073,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1830.568098,
                    "min": 1783.6820539999999,
                    "p50": 1811.6438449999998,
                    "p95": 1830.568098,
                    "p99": 1830.568098,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 632.6550129999999,
                    "min": 549.6908169999999,
                    "p50": 570.889938,
                    "p95": 632.6550129999999,
                    "p99": 632.6550129999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.1666339999999,
                    "min": 668.959329,
                    "p50": 692.231945,
                    "p95": 697.1666339999999,
                    "p99": 697.1666339999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 876.2051829999999,
                    "min": 835.017689,
                    "p50": 862.890889,
                    "p95": 876.2051829999999,
                    "p99": 876.2051829999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 336.36829,
                    "min": 299.490969,
                    "p50": 326.748024,
                    "p95": 336.36829,
                    "p99": 336.36829,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3031.215553,
                    "min": 2967.767668,
                    "p50": 2989.959575,
                    "p95": 3031.215553,
                    "p99": 3031.215553,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1231.491302,
                    "min": 1190.100909,
                    "p50": 1224.044557,
                    "p95": 1231.491302,
                    "p99": 1231.491302,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 635.505852,
                    "min": 611.002304,
                    "p50": 627.310988,
                    "p95": 635.505852,
                    "p99": 635.505852,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 513.0575299999999,
                    "min": 498.65640399999995,
                    "p50": 510.080674,
                    "p95": 513.0575299999999,
                    "p99": 513.0575299999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2435.052601,
                    "min": 2357.2577819999997,
                    "p50": 2403.987591,
                    "p95": 2435.052601,
                    "p99": 2435.052601,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2715.046516,
                    "min": 2657.3319149999998,
                    "p50": 2694.2768459999998,
                    "p95": 2715.046516,
                    "p99": 2715.046516,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 852.183948,
                    "min": 837.484217,
                    "p50": 844.2745299999999,
                    "p95": 852.183948,
                    "p99": 852.183948,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1792.7640649999998,
                    "min": 1754.3186409999998,
                    "p50": 1783.6722,
                    "p95": 1792.7640649999998,
                    "p99": 1792.7640649999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1251.414382,
                    "min": 1214.380041,
                    "p50": 1244.198386,
                    "p95": 1251.414382,
                    "p99": 1251.414382,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1387.065363,
                    "min": 1362.377603,
                    "p50": 1374.051583,
                    "p95": 1387.065363,
                    "p99": 1387.065363,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 443.28914799999995,
                    "min": 426.781748,
                    "p50": 441.12925099999995,
                    "p95": 443.28914799999995,
                    "p99": 443.28914799999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1521.2109819999998,
                    "min": 1490.2329089999998,
                    "p50": 1510.7323259999998,
                    "p95": 1521.2109819999998,
                    "p99": 1521.2109819999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 722.9528839999999,
                    "min": 699.3384649999999,
                    "p50": 706.553465,
                    "p95": 722.9528839999999,
                    "p99": 722.9528839999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1936.657354,
                    "min": 1878.5389969999999,
                    "p50": 1904.8153639999998,
                    "p95": 1936.657354,
                    "p99": 1936.657354,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1122.173448,
                    "min": 1092.354218,
                    "p50": 1109.953512,
                    "p95": 1122.173448,
                    "p99": 1122.173448,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2414.629849,
                    "min": 2324.228221,
                    "p50": 2381.4032239999997,
                    "p95": 2414.629849,
                    "p99": 2414.629849,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1675.7032239999999,
                    "min": 1600.7680369999998,
                    "p50": 1648.1959279999999,
                    "p95": 1675.7032239999999,
                    "p99": 1675.7032239999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 988.108069,
                    "min": 966.616217,
                    "p50": 973.010716,
                    "p95": 988.108069,
                    "p99": 988.108069,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 578.4187479999999,
                    "min": 558.772462,
                    "p50": 568.6500599999999,
                    "p95": 578.4187479999999,
                    "p99": 578.4187479999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2066.1014179999997,
                    "min": 2026.757332,
                    "p50": 2047.990378,
                    "p95": 2066.1014179999997,
                    "p99": 2066.1014179999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4079.141902,
                    "min": 4008.0007379999997,
                    "p50": 4055.110839,
                    "p95": 4079.141902,
                    "p99": 4079.141902,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 919.1629469999999,
                    "min": 864.654041,
                    "p50": 909.243246,
                    "p95": 919.1629469999999,
                    "p99": 919.1629469999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1030.701209,
                    "min": 992.87151,
                    "p50": 1014.121941,
                    "p95": 1030.701209,
                    "p99": 1030.701209,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 532.906018,
                    "min": 496.80403099999995,
                    "p50": 524.174544,
                    "p95": 532.906018,
                    "p99": 532.906018,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 826.181609,
                    "min": 795.8254939999999,
                    "p50": 814.141754,
                    "p95": 826.181609,
                    "p99": 826.181609,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1422.655064,
                    "min": 1368.372233,
                    "p50": 1403.653889,
                    "p95": 1422.655064,
                    "p99": 1422.655064,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 330.476593,
                    "min": 321.522862,
                    "p50": 325.41952399999997,
                    "p95": 330.476593,
                    "p99": 330.476593,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3007.8186189999997,
                    "min": 2924.0410119999997,
                    "p50": 2952.5609689999997,
                    "p95": 3007.8186189999997,
                    "p99": 3007.8186189999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1117.193198,
                    "min": 1089.715503,
                    "p50": 1102.680705,
                    "p95": 1117.193198,
                    "p99": 1117.193198,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1317.9386279999999,
                    "min": 1266.928247,
                    "p50": 1301.565185,
                    "p95": 1317.9386279999999,
                    "p99": 1317.9386279999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 626.2301689999999,
                    "min": 587.877873,
                    "p50": 618.039752,
                    "p95": 626.2301689999999,
                    "p99": 626.2301689999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1772.685129,
                    "min": 1731.283784,
                    "p50": 1752.7240909999998,
                    "p95": 1772.685129,
                    "p99": 1772.685129,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1223.6088379999999,
                    "min": 1189.837053,
                    "p50": 1204.0874609999998,
                    "p95": 1223.6088379999999,
                    "p99": 1223.6088379999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 731.0834639999999,
                    "min": 701.556691,
                    "p50": 724.6730809999999,
                    "p95": 731.0834639999999,
                    "p99": 731.0834639999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4000.4912809999996,
                    "min": 3899.470641,
                    "p50": 3919.750368,
                    "p95": 4000.4912809999996,
                    "p99": 4000.4912809999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 429.071598,
                    "min": 391.481905,
                    "p50": 425.66205099999996,
                    "p95": 429.071598,
                    "p99": 429.071598,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1513.1452749999999,
                    "min": 1486.9482189999999,
                    "p50": 1504.4323299999999,
                    "p95": 1513.1452749999999,
                    "p99": 1513.1452749999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1996.753853,
                    "min": 1936.489954,
                    "p50": 1977.4313929999998,
                    "p95": 1996.753853,
                    "p99": 1996.753853,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom16KBytes",
        "RipemdFrom8Bytes",
        "RipemdFrom1024Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}